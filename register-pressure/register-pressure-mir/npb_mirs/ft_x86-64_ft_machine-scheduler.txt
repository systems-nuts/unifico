Before MISched:
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-3: size=8, align=16, fixed, at location [SP+24]
  fi#-2: size=8, align=8, fixed, at location [SP+16]
  fi#-1: size=8, align=16, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=4, align=4, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=8, align=8, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: dead
  fi#7: dead
  fi#8: dead
  fi#9: size=4, align=4, at location [SP+8]
  fi#10: size=4, align=4, at location [SP+8]
  fi#11: size=4, align=4, at location [SP+8]
  fi#12: size=4, align=4, at location [SP+8]
  fi#13: size=4, align=4, at location [SP+8]
  fi#14: size=4, align=4, at location [SP+8]
  fi#15: size=4, align=4, at location [SP+8]
  fi#16: size=4, align=4, at location [SP+8]
Function Live Ins: $edi in %2, $esi in %3, $edx in %4, $ecx in %5, $r8 in %6, $r9 in %7

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $edi, $esi, $edx, $ecx, $r8, $r9
  %7:gr64 = COPY $r9
  %6:gr64 = COPY $r8
  %5:gr32 = COPY $ecx
  %4:gr32 = COPY $edx
  undef %1.sub_32bit:gr64_with_sub_8bit = COPY $esi
  %2:gr32 = COPY $edi
  MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
  MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
  MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
  MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
  MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
  MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
  undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
  %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !90; fft3d.c:151:9
  JMP_1 %bb.1, debug-location !90; fft3d.c:151:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
  $edi = MOV32ri 3, debug-location !91; fft3d.c:152:9
  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !91; fft3d.c:152:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
  PCN_STACKMAP 0, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !91 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:152:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x40000000), %bb.4(0x40000000); %bb.3(50.00%), %bb.4(50.00%)

  $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
  $edx = MOV32r0 implicit-def dead $eflags, debug-location !93; fft3d.c:154:26
  IDIV32m %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit killed $eax, implicit $edx, debug-location !93 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:26
  %13:gr32 = COPY killed $eax, debug-location !93; fft3d.c:154:26
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %13:gr32, debug-location !94 :: (store 4 into @fftblock); fft3d.c:154:14
  CMP32ri8 %13:gr32, 32, implicit-def $eflags, debug-location !97; fft3d.c:155:18
  JCC_1 %bb.4, 12, implicit killed $eflags, debug-location !98; fft3d.c:155:9
  JMP_1 %bb.3, debug-location !98; fft3d.c:155:9

bb.3.if.then3:
; predecessors: %bb.2
  successors: %bb.4(0x80000000); %bb.4(100.00%)

  %15:gr32 = MOV32ri 32
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %15:gr32, debug-location !99 :: (store 4 into @fftblock); fft3d.c:156:18

bb.4.if.end4:
; predecessors: %bb.2, %bb.3
  successors: %bb.5(0x50000000), %bb.6(0x30000000); %bb.5(62.50%), %bb.6(37.50%)

  %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
  %17:gr32 = nsw INC32r %17:gr32(tied-def 0), implicit-def dead $eflags, debug-location !102; fft3d.c:157:21
  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %17:gr32, debug-location !103 :: (store 4 into %ir.blkp); fft3d.c:157:10
  %18:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !104 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:158:17
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
  $edi = COPY %18:gr32, debug-location !105; fft3d.c:158:11
  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !105; fft3d.c:158:11
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !106; fft3d.c:158:9
  PCN_STACKMAP 1, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %18:gr32, implicit-def dead early-clobber $r11, debug-location !106 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:158:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !106; fft3d.c:158:9
  %19:gr32 = COPY killed $eax, debug-location !105; fft3d.c:158:11
  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %19:gr32, debug-location !106 :: (store 4 into %ir.log); fft3d.c:158:9
  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !107 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  JCC_1 %bb.6, 4, implicit killed $eflags, debug-location !109; fft3d.c:159:9
  JMP_1 %bb.5, debug-location !109; fft3d.c:159:9

bb.5.if.then7:
; predecessors: %bb.4
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
  $edi = MOV32ri 7, debug-location !110; fft3d.c:160:9
  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !110; fft3d.c:160:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
  PCN_STACKMAP 2, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !110 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:160:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9

bb.6.if.end8:
; predecessors: %bb.4, %bb.5
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
  %223:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  %225:gr64 = COPY %0:gr64_with_sub_8bit
  %225:gr64 = nuw IMUL64rr %225:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

bb.7.for.cond:
; predecessors: %bb.6, %bb.25
  successors: %bb.8(0x7c000000), %bb.26(0x04000000); %bb.8(96.88%), %bb.26(3.12%)

  %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  CMP32rm %21:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !117 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:19
  JCC_1 %bb.26, 13, implicit killed $eflags, debug-location !118; fft3d.c:161:5
  JMP_1 %bb.8, debug-location !118; fft3d.c:161:5

bb.8.for.body:
; predecessors: %bb.7
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !119 :: (store 4 into %ir.bls); fft3d.c:162:18

bb.9.for.cond10:
; predecessors: %bb.8, %bb.24
  successors: %bb.10(0x7c000000), %bb.25(0x04000000); %bb.10(96.88%), %bb.25(3.12%)

  %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  CMP32rm %160:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !126 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:27
  JCC_1 %bb.25, 13, implicit killed $eflags, debug-location !127; fft3d.c:162:9
  JMP_1 %bb.10, debug-location !127; fft3d.c:162:9

bb.10.for.body12:
; predecessors: %bb.9
  successors: %bb.11(0x40000000), %bb.12(0x40000000); %bb.11(50.00%), %bb.12(50.00%)

  undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  undef %164.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !130 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  %168:gr32 = LEA64_32r %166:gr64_with_sub_8bit, 1, %164:gr64_nosp, -1, $noreg, debug-location !132; fft3d.c:163:34
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %168:gr32, debug-location !133 :: (store 4 into %ir.ble); fft3d.c:163:17
  CMP32rm %168:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !137 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:21
  JCC_1 %bb.12, 14, implicit killed $eflags, debug-location !138; fft3d.c:164:17
  JMP_1 %bb.11, debug-location !138; fft3d.c:164:17

bb.11.if.then15:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  %171:gr32 = DEC32r %171:gr32(tied-def 0), implicit-def dead $eflags, debug-location !140; fft3d.c:165:26
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %171:gr32, debug-location !141 :: (store 4 into %ir.ble); fft3d.c:165:21

bb.12.if.end17:
; predecessors: %bb.10, %bb.11
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  %173:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !144 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  %175:gr32 = nsw SUB32rr %175:gr32(tied-def 0), %173:gr32, implicit-def dead $eflags, debug-location !145; fft3d.c:166:23
  %175:gr32 = nsw INC32r %175:gr32(tied-def 0), implicit-def dead $eflags, debug-location !146; fft3d.c:166:29
  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %175:gr32, debug-location !147 :: (store 4 into %ir.len); fft3d.c:166:17
  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %173:gr32, debug-location !150 :: (store 4 into %ir.j); fft3d.c:167:20

bb.13.for.cond20:
; predecessors: %bb.12, %bb.17
  successors: %bb.14(0x7c000000), %bb.18(0x04000000); %bb.14(96.88%), %bb.18(3.12%)

  %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  CMP32rm %176:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !155 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:29
  JCC_1 %bb.18, 15, implicit killed $eflags, debug-location !156; fft3d.c:167:13
  JMP_1 %bb.14, debug-location !156; fft3d.c:167:13

bb.14.for.body22:
; predecessors: %bb.13
  successors: %bb.15(0x80000000); %bb.15(100.00%)

  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !157 :: (store 4 into %ir.i); fft3d.c:168:24

bb.15.for.cond23:
; predecessors: %bb.14, %bb.16
  successors: %bb.16(0x7c000000), %bb.17(0x04000000); %bb.16(96.88%), %bb.17(3.12%)

  %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  CMP32rm %212:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !164 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:31
  JCC_1 %bb.17, 13, implicit killed $eflags, debug-location !165; fft3d.c:168:17
  JMP_1 %bb.16, debug-location !165; fft3d.c:168:17

bb.16.for.body25:
; predecessors: %bb.15
  successors: %bb.15(0x80000000); %bb.15(100.00%)

  %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
  %235:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
  %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
  %237:gr64_nosp = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !171 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  %220:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
  %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
  %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
  %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
  %227:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !176 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
  %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
  MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38
  JMP_1 %bb.15, debug-location !180; fft3d.c:168:17

bb.17.for.end:
; predecessors: %bb.15
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !183 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  JMP_1 %bb.13, debug-location !184; fft3d.c:167:13

bb.18.for.end37:
; predecessors: %bb.13
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  %179:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !188 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  %180:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !189 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  %181:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !190 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  %182:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !191 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  %183:gr64 = MOV64rm %fixed-stack.2, 1, $noreg, 0, $noreg, debug-location !192 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
  MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
  $edi = COPY %178:gr32, debug-location !193; fft3d.c:172:13
  $esi = COPY %179:gr32, debug-location !193; fft3d.c:172:13
  $edx = COPY %180:gr32, debug-location !193; fft3d.c:172:13
  $ecx = COPY %181:gr32, debug-location !193; fft3d.c:172:13
  $r8d = COPY %182:gr32, debug-location !193; fft3d.c:172:13
  $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !193; fft3d.c:172:13
  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !193; fft3d.c:172:13
  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !194; fft3d.c:173:22
  PCN_STACKMAP 3, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %178:gr32, %179:gr32, %180:gr32, %181:gr32, %182:gr32, %183:gr64, implicit-def dead early-clobber $r11, debug-location !194 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:173:22
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !194; fft3d.c:173:22
  %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %186:gr32, debug-location !196 :: (store 4 into %ir.j); fft3d.c:173:20

bb.19.for.cond38:
; predecessors: %bb.18, %bb.23
  successors: %bb.20(0x7c000000), %bb.24(0x04000000); %bb.20(96.88%), %bb.24(3.12%)

  %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  CMP32rm %187:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !201 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:29
  JCC_1 %bb.24, 15, implicit killed $eflags, debug-location !202; fft3d.c:173:13
  JMP_1 %bb.20, debug-location !202; fft3d.c:173:13

bb.20.for.body40:
; predecessors: %bb.19
  successors: %bb.21(0x80000000); %bb.21(100.00%)

  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !203 :: (store 4 into %ir.i); fft3d.c:174:24

bb.21.for.cond41:
; predecessors: %bb.20, %bb.22
  successors: %bb.22(0x7c000000), %bb.23(0x04000000); %bb.22(96.88%), %bb.23(3.12%)

  %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  CMP32rm %190:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !210 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:31
  JCC_1 %bb.23, 13, implicit killed $eflags, debug-location !211; fft3d.c:174:17
  JMP_1 %bb.22, debug-location !211; fft3d.c:174:17

bb.22.for.body43:
; predecessors: %bb.21
  successors: %bb.21(0x80000000); %bb.21(100.00%)

  %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  %197:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !215 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %202:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !216 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  %238:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
  %207:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
  %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
  %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
  %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
  %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !225 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  JMP_1 %bb.21, debug-location !226; fft3d.c:174:17

bb.23.for.end57:
; predecessors: %bb.21
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !229 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  JMP_1 %bb.19, debug-location !230; fft3d.c:173:13

bb.24.for.end60:
; predecessors: %bb.19
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %189:gr32, implicit-def dead $eflags, debug-location !234 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  JMP_1 %bb.9, debug-location !235; fft3d.c:162:9

bb.25.for.end63:
; predecessors: %bb.9
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !238 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  JMP_1 %bb.7, debug-location !239; fft3d.c:161:5

bb.26.for.end66:
; predecessors: %bb.7
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !242 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  JCC_1 %bb.28, 4, implicit killed $eflags, debug-location !244; fft3d.c:180:9
  JMP_1 %bb.27, debug-location !244; fft3d.c:180:9

bb.27.if.then68:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
  $edi = MOV32ri 7, debug-location !245; fft3d.c:181:9
  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !245; fft3d.c:181:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
  PCN_STACKMAP 4, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !245 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:181:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9

bb.28.if.end69:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x40000000), %bb.30(0x40000000); %bb.29(50.00%), %bb.30(50.00%)

  $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
  $edx = MOV32r0 implicit-def dead $eflags, debug-location !247; fft3d.c:183:26
  IDIV32m %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit killed $eax, implicit $edx, debug-location !247 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:26
  %26:gr32 = COPY killed $eax, debug-location !247; fft3d.c:183:26
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %26:gr32, debug-location !248 :: (store 4 into @fftblock); fft3d.c:183:14
  CMP32ri8 %26:gr32, 32, implicit-def $eflags, debug-location !251; fft3d.c:184:18
  JCC_1 %bb.30, 12, implicit killed $eflags, debug-location !252; fft3d.c:184:9
  JMP_1 %bb.29, debug-location !252; fft3d.c:184:9

bb.29.if.then72:
; predecessors: %bb.28
  successors: %bb.30(0x80000000); %bb.30(100.00%)

  %28:gr32 = MOV32ri 32
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %28:gr32, debug-location !253 :: (store 4 into @fftblock); fft3d.c:185:18

bb.30.if.end73:
; predecessors: %bb.28, %bb.29
  successors: %bb.31(0x50000000), %bb.32(0x30000000); %bb.31(62.50%), %bb.32(37.50%)

  %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
  %30:gr32 = nsw INC32r %30:gr32(tied-def 0), implicit-def dead $eflags, debug-location !256; fft3d.c:186:21
  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %30:gr32, debug-location !257 :: (store 4 into %ir.blkp); fft3d.c:186:10
  %31:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !258 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:187:17
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
  $edi = COPY %31:gr32, debug-location !259; fft3d.c:187:11
  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !259; fft3d.c:187:11
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !260; fft3d.c:187:9
  PCN_STACKMAP 5, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %31:gr32, implicit-def dead early-clobber $r11, debug-location !260 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:187:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !260; fft3d.c:187:9
  %32:gr32 = COPY killed $eax, debug-location !259; fft3d.c:187:11
  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %32:gr32, debug-location !260 :: (store 4 into %ir.log); fft3d.c:187:9
  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  JCC_1 %bb.32, 4, implicit killed $eflags, debug-location !263; fft3d.c:188:9
  JMP_1 %bb.31, debug-location !263; fft3d.c:188:9

bb.31.if.then77:
; predecessors: %bb.30
  successors: %bb.32(0x80000000); %bb.32(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
  $edi = MOV32ri 8, debug-location !264; fft3d.c:189:9
  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !264; fft3d.c:189:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
  PCN_STACKMAP 6, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !264 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:189:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9

bb.32.if.end78:
; predecessors: %bb.30, %bb.31
  successors: %bb.33(0x80000000); %bb.33(100.00%)

  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
  %150:gr64 = COPY %0:gr64_with_sub_8bit
  %150:gr64 = nuw IMUL64rr %150:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

bb.33.for.cond79:
; predecessors: %bb.32, %bb.39
  successors: %bb.34(0x7c000000), %bb.40(0x04000000); %bb.34(96.88%), %bb.40(3.12%)

  %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  CMP32rm %34:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !271 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:19
  JCC_1 %bb.40, 13, implicit killed $eflags, debug-location !272; fft3d.c:190:5
  JMP_1 %bb.34, debug-location !272; fft3d.c:190:5

bb.34.for.body81:
; predecessors: %bb.33
  successors: %bb.35(0x80000000); %bb.35(100.00%)

  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !273 :: (store 4 into %ir.bls); fft3d.c:191:18

bb.35.for.cond82:
; predecessors: %bb.34, %bb.38
  successors: %bb.36(0x7c000000), %bb.39(0x04000000); %bb.36(96.88%), %bb.39(3.12%)

  %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  CMP32rm %129:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !280 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:27
  JCC_1 %bb.39, 13, implicit killed $eflags, debug-location !281; fft3d.c:191:9
  JMP_1 %bb.36, debug-location !281; fft3d.c:191:9

bb.36.for.body84:
; predecessors: %bb.35
  successors: %bb.37(0x40000000), %bb.38(0x40000000); %bb.37(50.00%), %bb.38(50.00%)

  undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  undef %133.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !284 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  %137:gr32 = LEA64_32r %135:gr64_with_sub_8bit, 1, %133:gr64_nosp, -1, $noreg, debug-location !286; fft3d.c:192:34
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %137:gr32, debug-location !287 :: (store 4 into %ir.ble); fft3d.c:192:17
  CMP32rm %137:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !291 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:21
  JCC_1 %bb.38, 14, implicit killed $eflags, debug-location !292; fft3d.c:193:17
  JMP_1 %bb.37, debug-location !292; fft3d.c:193:17

bb.37.if.then88:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  %140:gr32 = DEC32r %140:gr32(tied-def 0), implicit-def dead $eflags, debug-location !294; fft3d.c:194:26
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %140:gr32, debug-location !295 :: (store 4 into %ir.ble); fft3d.c:194:21

bb.38.if.end90:
; predecessors: %bb.36, %bb.37
  successors: %bb.35(0x80000000); %bb.35(100.00%)

  %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
  %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
  %144:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !302 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  %145:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !303 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  %146:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !305 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  %148:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !306 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
  %152:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !309 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  %156:gr64 = MOVSX64rm32 %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !310 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  %157:gr64 = MOV64rm %fixed-stack.1, 1, $noreg, 0, $noreg, debug-location !312 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
  MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
  $edi = COPY %144:gr32, debug-location !313; fft3d.c:196:13
  $esi = COPY %145:gr32, debug-location !313; fft3d.c:196:13
  $edx = COPY %143:gr32, debug-location !313; fft3d.c:196:13
  $ecx = COPY %146:gr32, debug-location !313; fft3d.c:196:13
  $r8d = COPY %148:gr32, debug-location !313; fft3d.c:196:13
  $r9 = COPY %156:gr64, debug-location !313; fft3d.c:196:13
  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !313; fft3d.c:196:13
  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !314; fft3d.c:197:9
  PCN_STACKMAP 7, 0, %148:gr32, %156:gr64, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %144:gr32, %145:gr32, %143:gr32, %146:gr32, %156:gr64, %157:gr64, implicit-def dead early-clobber $r11, debug-location !314 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:197:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !314; fft3d.c:197:9
  %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %159:gr32, implicit-def dead $eflags, debug-location !316 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  JMP_1 %bb.35, debug-location !317; fft3d.c:191:9

bb.39.for.end101:
; predecessors: %bb.35
  successors: %bb.33(0x80000000); %bb.33(100.00%)

  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !320 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  JMP_1 %bb.33, debug-location !321; fft3d.c:190:5

bb.40.for.end104:
; predecessors: %bb.33
  successors: %bb.41(0x50000000), %bb.42(0x30000000); %bb.41(62.50%), %bb.42(37.50%)

  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !324 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  JCC_1 %bb.42, 4, implicit killed $eflags, debug-location !326; fft3d.c:199:9
  JMP_1 %bb.41, debug-location !326; fft3d.c:199:9

bb.41.if.then106:
; predecessors: %bb.40
  successors: %bb.42(0x80000000); %bb.42(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
  $edi = MOV32ri 8, debug-location !327; fft3d.c:200:9
  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !327; fft3d.c:200:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
  PCN_STACKMAP 8, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !327 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:200:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9

bb.42.if.end107:
; predecessors: %bb.40, %bb.41
  successors: %bb.43(0x40000000), %bb.44(0x40000000); %bb.43(50.00%), %bb.44(50.00%)

  $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
  $edx = MOV32r0 implicit-def dead $eflags, debug-location !329; fft3d.c:202:26
  IDIV32m %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit killed $eax, implicit $edx, debug-location !329 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:26
  %39:gr32 = COPY killed $eax, debug-location !329; fft3d.c:202:26
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %39:gr32, debug-location !330 :: (store 4 into @fftblock); fft3d.c:202:14
  CMP32ri8 %39:gr32, 32, implicit-def $eflags, debug-location !333; fft3d.c:203:18
  JCC_1 %bb.44, 12, implicit killed $eflags, debug-location !334; fft3d.c:203:9
  JMP_1 %bb.43, debug-location !334; fft3d.c:203:9

bb.43.if.then110:
; predecessors: %bb.42
  successors: %bb.44(0x80000000); %bb.44(100.00%)

  %41:gr32 = MOV32ri 32
  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %41:gr32, debug-location !335 :: (store 4 into @fftblock); fft3d.c:204:18

bb.44.if.end111:
; predecessors: %bb.42, %bb.43
  successors: %bb.45(0x50000000), %bb.46(0x30000000); %bb.45(62.50%), %bb.46(37.50%)

  %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
  %43:gr32 = nsw INC32r %43:gr32(tied-def 0), implicit-def dead $eflags, debug-location !338; fft3d.c:205:21
  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %43:gr32, debug-location !339 :: (store 4 into %ir.blkp); fft3d.c:205:10
  %44:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !340 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:206:17
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
  $edi = COPY %44:gr32, debug-location !341; fft3d.c:206:11
  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !341; fft3d.c:206:11
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !342; fft3d.c:206:9
  PCN_STACKMAP 9, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %44:gr32, implicit-def dead early-clobber $r11, debug-location !342 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:206:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !342; fft3d.c:206:9
  %45:gr32 = COPY killed $eax, debug-location !341; fft3d.c:206:11
  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %45:gr32, debug-location !342 :: (store 4 into %ir.log); fft3d.c:206:9
  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !343 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  JCC_1 %bb.46, 4, implicit killed $eflags, debug-location !345; fft3d.c:207:9
  JMP_1 %bb.45, debug-location !345; fft3d.c:207:9

bb.45.if.then115:
; predecessors: %bb.44
  successors: %bb.46(0x80000000); %bb.46(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
  $edi = MOV32ri 9, debug-location !346; fft3d.c:208:9
  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !346; fft3d.c:208:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
  PCN_STACKMAP 10, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !346 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:208:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9

bb.46.if.end116:
; predecessors: %bb.44, %bb.45
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
  %117:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  %118:gr64 = COPY %0:gr64_with_sub_8bit
  %118:gr64 = nuw IMUL64rr %118:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

bb.47.for.cond117:
; predecessors: %bb.46, %bb.65
  successors: %bb.48(0x7c000000), %bb.66(0x04000000); %bb.48(96.88%), %bb.66(3.12%)

  %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  CMP32rm %47:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !353 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:19
  JCC_1 %bb.66, 13, implicit killed $eflags, debug-location !354; fft3d.c:209:5
  JMP_1 %bb.48, debug-location !354; fft3d.c:209:5

bb.48.for.body119:
; predecessors: %bb.47
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !355 :: (store 4 into %ir.bls); fft3d.c:210:18

bb.49.for.cond120:
; predecessors: %bb.48, %bb.64
  successors: %bb.50(0x7c000000), %bb.65(0x04000000); %bb.50(96.88%), %bb.65(3.12%)

  %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  CMP32rm %51:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !362 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:27
  JCC_1 %bb.65, 13, implicit killed $eflags, debug-location !363; fft3d.c:210:9
  JMP_1 %bb.50, debug-location !363; fft3d.c:210:9

bb.50.for.body122:
; predecessors: %bb.49
  successors: %bb.51(0x40000000), %bb.52(0x40000000); %bb.51(50.00%), %bb.52(50.00%)

  undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  undef %55.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !366 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  %59:gr32 = LEA64_32r %57:gr64_with_sub_8bit, 1, %55:gr64_nosp, -1, $noreg, debug-location !368; fft3d.c:211:34
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %59:gr32, debug-location !369 :: (store 4 into %ir.ble); fft3d.c:211:17
  CMP32rm %59:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !373 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:21
  JCC_1 %bb.52, 14, implicit killed $eflags, debug-location !374; fft3d.c:212:17
  JMP_1 %bb.51, debug-location !374; fft3d.c:212:17

bb.51.if.then126:
; predecessors: %bb.50
  successors: %bb.52(0x80000000); %bb.52(100.00%)

  %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  %62:gr32 = DEC32r %62:gr32(tied-def 0), implicit-def dead $eflags, debug-location !376; fft3d.c:213:26
  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %62:gr32, debug-location !377 :: (store 4 into %ir.ble); fft3d.c:213:21

bb.52.if.end128:
; predecessors: %bb.50, %bb.51
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  %65:gr32 = nsw SUB32rm %65:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !381 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:23
  %65:gr32 = nsw INC32r %65:gr32(tied-def 0), implicit-def dead $eflags, debug-location !382; fft3d.c:214:29
  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %65:gr32, debug-location !383 :: (store 4 into %ir.len); fft3d.c:214:17
  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !384 :: (store 4 into %ir.i); fft3d.c:215:20

bb.53.for.cond131:
; predecessors: %bb.52, %bb.57
  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

  %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  CMP32rm %66:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !390 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:27
  JCC_1 %bb.58, 13, implicit killed $eflags, debug-location !391; fft3d.c:215:13
  JMP_1 %bb.54, debug-location !391; fft3d.c:215:13

bb.54.for.body133:
; predecessors: %bb.53
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %105:gr32, debug-location !395 :: (store 4 into %ir.j); fft3d.c:216:24

bb.55.for.cond134:
; predecessors: %bb.54, %bb.56
  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

  %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  CMP32rm %106:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !400 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:33
  JCC_1 %bb.57, 15, implicit killed $eflags, debug-location !401; fft3d.c:216:17
  JMP_1 %bb.56, debug-location !401; fft3d.c:216:17

bb.56.for.body136:
; predecessors: %bb.55
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
  %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
  %120:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !407 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  %114:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
  %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
  %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
  %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
  %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  %124:gr64_nosp = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !413 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
  %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42
  JMP_1 %bb.55, debug-location !416; fft3d.c:216:17

bb.57.for.end150:
; predecessors: %bb.55
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !419 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  JMP_1 %bb.53, debug-location !420; fft3d.c:215:13

bb.58.for.end153:
; predecessors: %bb.53
  successors: %bb.59(0x80000000); %bb.59(100.00%)

  %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  %69:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !424 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  %70:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !425 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  %71:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !426 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  %72:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !427 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  %73:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !428 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
  MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
  $edi = COPY %68:gr32, debug-location !429; fft3d.c:220:13
  $esi = COPY %69:gr32, debug-location !429; fft3d.c:220:13
  $edx = COPY %70:gr32, debug-location !429; fft3d.c:220:13
  $ecx = COPY %71:gr32, debug-location !429; fft3d.c:220:13
  $r8d = COPY %72:gr32, debug-location !429; fft3d.c:220:13
  $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !429; fft3d.c:220:13
  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !429; fft3d.c:220:13
  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !430; fft3d.c:221:20
  PCN_STACKMAP 11, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %68:gr32, %69:gr32, %70:gr32, %71:gr32, %72:gr32, %73:gr64, implicit-def dead early-clobber $r11, debug-location !430 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:221:20
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !430; fft3d.c:221:20
  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !430 :: (store 4 into %ir.i); fft3d.c:221:20

bb.59.for.cond154:
; predecessors: %bb.58, %bb.63
  successors: %bb.60(0x7c000000), %bb.64(0x04000000); %bb.60(96.88%), %bb.64(3.12%)

  %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  %78:gr32 = DEC32r %78:gr32(tied-def 0), implicit-def dead $eflags, debug-location !436; fft3d.c:221:33
  CMP32mr %stack.9.i, 1, $noreg, 0, $noreg, %78:gr32, implicit-def $eflags, debug-location !437 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:27
  JCC_1 %bb.64, 15, implicit killed $eflags, debug-location !438; fft3d.c:221:13
  JMP_1 %bb.60, debug-location !438; fft3d.c:221:13

bb.60.for.body157:
; predecessors: %bb.59
  successors: %bb.61(0x80000000); %bb.61(100.00%)

  %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %81:gr32, debug-location !442 :: (store 4 into %ir.j); fft3d.c:222:24

bb.61.for.cond158:
; predecessors: %bb.60, %bb.62
  successors: %bb.62(0x7c000000), %bb.63(0x04000000); %bb.62(96.88%), %bb.63(3.12%)

  %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  CMP32rm %82:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !447 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:33
  JCC_1 %bb.63, 15, implicit killed $eflags, debug-location !448; fft3d.c:222:17
  JMP_1 %bb.62, debug-location !448; fft3d.c:222:17

bb.62.for.body160:
; predecessors: %bb.61
  successors: %bb.61(0x80000000); %bb.61(100.00%)

  %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  %85:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !451 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  %88:gr64 = MOVSX64rm32 %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !452 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
  %89:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !454 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  %94:gr64_nosp = MOVSX64rm32 %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !455 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  %91:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !456 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
  %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
  %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
  %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
  %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
  %243:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
  %100:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
  %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
  %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
  %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
  %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !469 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  JMP_1 %bb.61, debug-location !470; fft3d.c:222:17

bb.63.for.end175:
; predecessors: %bb.61
  successors: %bb.59(0x80000000); %bb.59(100.00%)

  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !473 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  JMP_1 %bb.59, debug-location !474; fft3d.c:221:13

bb.64.for.end178:
; predecessors: %bb.59
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %80:gr32, implicit-def dead $eflags, debug-location !478 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  JMP_1 %bb.49, debug-location !479; fft3d.c:210:9

bb.65.for.end181:
; predecessors: %bb.49
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !482 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  JMP_1 %bb.47, debug-location !483; fft3d.c:209:5

bb.66.for.end184:
; predecessors: %bb.47
  successors: %bb.67(0x50000000), %bb.68(0x30000000); %bb.67(62.50%), %bb.68(37.50%)

  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !486 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  JCC_1 %bb.68, 4, implicit killed $eflags, debug-location !488; fft3d.c:229:9
  JMP_1 %bb.67, debug-location !488; fft3d.c:229:9

bb.67.if.then186:
; predecessors: %bb.66
  successors: %bb.68(0x80000000); %bb.68(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
  $edi = MOV32ri 9, debug-location !489; fft3d.c:230:9
  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !489; fft3d.c:230:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
  PCN_STACKMAP 12, 0, implicit-def dead early-clobber $r11, debug-location !489; fft3d.c:230:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9

bb.68.if.end187:
; predecessors: %bb.66, %bb.67
  successors: %bb.69(0x50000000), %bb.70(0x30000000); %bb.69(62.50%), %bb.70(37.50%)

  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !490 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  JCC_1 %bb.70, 4, implicit killed $eflags, debug-location !492; fft3d.c:231:9
  JMP_1 %bb.69, debug-location !492; fft3d.c:231:9

bb.69.if.then189:
; predecessors: %bb.68
  successors: %bb.70(0x80000000); %bb.70(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
  $edi = MOV32ri 3, debug-location !493; fft3d.c:232:9
  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !493; fft3d.c:232:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
  PCN_STACKMAP 13, 0, implicit-def dead early-clobber $r11, debug-location !493; fft3d.c:232:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9

bb.70.if.end190:
; predecessors: %bb.68, %bb.69

  RET 0, debug-location !494; fft3d.c:233:1

# End machine code for function fftXYZ.

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: %7:gr64 = COPY $r9
    To: JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !90; fft3d.c:151:9
 RegionInstrs: 15
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=12
Live In: DIL DIH HDI SIL SIH HSI DH DL HDX CH CL HCX R8B R8BH R8WH R9B R9BH R9WH 
Live Out: %1 %0 
Live Thru: 
  LiveReg: %1
  LiveReg: %0
Top Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=8
Bottom Pressure:
GR16=4
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %7:gr64 = COPY $r9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(11): Data Latency=0 Reg=%7
  Pressure Diff      : GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1    GR32temp+GR64_TC 1    GR8+GR32temp 1    GR16 -1
  Single Issue       : false;
SU(1):   %6:gr64 = COPY $r8
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(10): Data Latency=0 Reg=%6
  Pressure Diff      : GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1    GR32temp+GR64_TC 1    GR8+GR32temp 1    GR16 -1
  Single Issue       : false;
SU(2):   %5:gr32 = COPY $ecx
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(9): Data Latency=0 Reg=%5
  Pressure Diff      : GR32_BSI 2    GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 2    GR32_TC 2    GR32_BPSP+GR32_TC 2    GR64_NOREX 2    GR64_TCW64 2    GR32_BPSP+GR64_TCW64 2    GR8 2    GR8+GR32_DIBP 2    GR8+GR32_BSI 2    GR64_TC+GR64_TCW64 2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 2    GR8+GR64_NOREX 2    GR32temp 2
  Single Issue       : false;
SU(3):   %4:gr32 = COPY $edx
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(12): Data Latency=0 Reg=%4
    SU(8): Data Latency=0 Reg=%4
  Pressure Diff      : GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 2    GR32_TC 2    GR32_BPSP+GR32_TC 2    GR64_NOREX 2    GR64_TCW64 2    GR32_BPSP+GR64_TCW64 2    GR8 2    GR8+GR32_DIBP 2    GR8+GR32_BSI 2    GR64_TC+GR64_TCW64 2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 2    GR8+GR64_NOREX 2    GR32temp 2    GR32temp+GR32_DIBP 2
  Single Issue       : false;
SU(4):   undef %1.sub_32bit:gr64_with_sub_8bit = COPY $esi
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 4
  Successors:
    SU(13): Data Latency=0 Reg=%1
    SU(7): Data Latency=0 Reg=%1
    SU(13): Out  Latency=0
  Pressure Diff      : GR32_BSI 1    GR32_SIDI 1    GR32_DIBP+GR32_SIDI 1    GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 1    GR64_NOREX 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1
  Single Issue       : false;
SU(5):   %2:gr32 = COPY $edi
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%2
  Pressure Diff      : GR32_BPSP 1    GR32_SIDI 1    GR32_DIBP+GR32_SIDI 1    GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR64_NOREX 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1
  Single Issue       : false;
SU(6):   MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%2
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(4): Data Latency=0 Reg=%1
  Successors:
    SU(13): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%4
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(9):   MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%5
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%6
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%7
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(12):   undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%4
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(7): Anti Latency=0
    SU(4): Data Latency=0 Reg=%1
    SU(4): Out  Latency=0
  Successors:
    SU(14): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(13): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !90; fft3d.c:151:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(14): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 11 10 9 8 6 14 
  Cand SU(12) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
Bottom Pressure:
GR16=4
  Ready @4c
  BotQ.A BotLatency SU(14) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 11 10 9 8 6 13 
  Cand SU(12) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
Bottom Pressure:
GR16=4
  LiveReg: %1
  UpdateRegP: SU(7) MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
              to 
  UpdateRegP: SU(13) %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
              to GR16 -2
  Ready @4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 11 10 9 8 6 7 
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
Bottom Pressure:
GR16=4
  LiveReg: %4
  UpdateRegP: SU(8) MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
              to 
  UpdateRegP: SU(12) undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
              to GR16 -2
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 11 10 9 8 6 
  Cand SU(7) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
Bottom Pressure:
GR16=6
  LiveReg: %7
  UpdateRegP: SU(11) MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
              to 
  Ready @0c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 10 9 8 0 
  Cand SU(7) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(10) MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
Bottom Pressure:
GR16=8
  LiveReg: %6
  UpdateRegP: SU(10) MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
              to 
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 0 9 8 1 
  Cand SU(7) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(9) MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
Bottom Pressure:
GR16=10
  LiveReg: %5
  UpdateRegP: SU(9) MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
              to 
  Ready @1c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 0 1 8 2 
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(8) MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
Bottom Pressure:
GR16=10
  Ready @1c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 0 1 2 3 
  Cand SU(7) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(7) MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
Bottom Pressure:
GR16=10
  Ready @4c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 6 0 1 2 4 
  Cand SU(3) ORDER                              
  Cand SU(6) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(6) MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
Bottom Pressure:
GR16=12
  LiveReg: %2
  UpdateRegP: SU(6) MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
              to 
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 0 1 2 5 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %2:gr32 = COPY $edi
Bottom Pressure:
GR32_BPSP=1
GR32_SIDI=1
GR32_DIBP+GR32_SIDI=1
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR64_NOREX=1
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR64_TC+GR64_TCW64=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR32temp=1
GR32temp+GR32_DIBP=1
GR64_TC=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR32temp+GR64_TC=1
GR8+GR32temp=1
GR16=11
  GR32_BPSP: 1 <= 2(+ 0 livethru)
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 0 1 2 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) undef %1.sub_32bit:gr64_with_sub_8bit = COPY $esi
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=1
GR8_ABCD_L+GR32_BSI=1
GR8_NOREX=1
GR64_NOREX=2
GR8=2
GR8+GR32_DIBP=2
GR8+GR32_BSI=2
GR64_TC+GR64_TCW64=2
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=2
GR8+GR64_NOREX=2
GR32temp=2
GR32temp+GR32_DIBP=2
GR64_TC=2
GR8+GR64_TCW64=2
GR8+GR64_TC=2
GR32temp+GR64_TC=2
GR8+GR32temp=2
GR16=10
  GR32_DIBP+GR32_SIDI: 2 <= 4(+ 0 livethru)
  Ready @4c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 0 1 
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %4:gr32 = COPY $edx
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=2
GR8_ABCD_L+GR32_BSI=2
GR8_NOREX=3
GR32_TC=2
GR32_BPSP+GR32_TC=2
GR64_NOREX=4
GR64_TCW64=2
GR32_BPSP+GR64_TCW64=2
GR8=4
GR8+GR32_DIBP=4
GR8+GR32_BSI=4
GR64_TC+GR64_TCW64=4
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=4
GR8+GR64_NOREX=4
GR32temp=4
GR32temp+GR32_DIBP=4
GR64_TC=4
GR8+GR64_TCW64=4
GR8+GR64_TC=4
GR32temp+GR64_TC=4
GR8+GR32temp=4
GR16=10
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 0 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %5:gr32 = COPY $ecx
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=4
GR32_BPSP+GR64_TCW64=4
GR8=6
GR8+GR32_DIBP=6
GR8+GR32_BSI=6
GR64_TC+GR64_TCW64=6
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=6
GR8+GR64_NOREX=6
GR32temp=6
GR32temp+GR32_DIBP=6
GR64_TC=6
GR8+GR64_TCW64=6
GR8+GR64_TC=6
GR32temp+GR64_TC=6
GR8+GR32temp=6
GR16=10
  GR8_NOREX: 5 <= 6(+ 0 livethru)
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %6:gr64 = COPY $r8
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=5
GR32_BPSP+GR64_TCW64=5
GR8=7
GR8+GR32_DIBP=7
GR8+GR32_BSI=7
GR64_TC+GR64_TCW64=7
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=7
GR8+GR64_NOREX=7
GR32temp=7
GR32temp+GR32_DIBP=7
GR64_TC=7
GR8+GR64_TCW64=7
GR8+GR64_TC=7
GR32temp+GR64_TC=7
GR8+GR32temp=7
GR16=9
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %7:gr64 = COPY $r9
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=8
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %7:gr64 = COPY $r9
SU(1):   %6:gr64 = COPY $r8
SU(2):   %5:gr32 = COPY $ecx
SU(3):   %4:gr32 = COPY $edx
SU(4):   undef %1.sub_32bit:gr64_with_sub_8bit = COPY $esi
SU(5):   %2:gr32 = COPY $edi
SU(6):   MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
SU(7):   MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
SU(8):   MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
SU(9):   MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
SU(10):   MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
SU(11):   MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
SU(12):   undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
SU(13):   %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
SU(14):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
    To: JCC_1 %bb.4, 12, implicit killed $eflags, debug-location !98; fft3d.c:155:9
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
Global memory object and new barrier chain: SU(2).
SU(0):   $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$eax
  Single Issue       : false;
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !93; fft3d.c:154:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$edx
    SU(5): Out  Latency=0
  Single Issue       : false;
SU(2):   IDIV32m %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit killed $eax, implicit $edx, debug-location !93 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:26
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
    SU(1): Out  Latency=0
    SU(1): Data Latency=1 Reg=$edx
    SU(0): Out  Latency=0
    SU(0): Data Latency=1 Reg=$eax
  Successors:
    SU(3): Data Latency=4 Reg=$eax
    SU(5): Out  Latency=0
    SU(4): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(3):   %13:gr32 = COPY killed $eax, debug-location !93; fft3d.c:154:26
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$eax
  Successors:
    SU(5): Data Latency=0 Reg=%13
    SU(4): Data Latency=0 Reg=%13
  Single Issue       : false;
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %13:gr32, debug-location !94 :: (store 4 into @fftblock); fft3d.c:154:14
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%13
    SU(2): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(5):   CMP32ri8 %13:gr32, 32, implicit-def $eflags, debug-location !97; fft3d.c:155:18
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(3): Data Latency=0 Reg=%13
    SU(2): Out  Latency=0
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.4, 12, implicit killed $eflags, debug-location !98; fft3d.c:155:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) CMP32ri8 %13:gr32, 32, implicit-def $eflags, debug-location !97; fft3d.c:155:18
  Ready @1c
  BotQ.A TopLatency SU(5) 5c
  BotQ.A BotLatency SU(5) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %13:gr32, debug-location !94 :: (store 4 into @fftblock); fft3d.c:154:14
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %13:gr32 = COPY killed $eax, debug-location !93; fft3d.c:154:26
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) IDIV32m %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit killed $eax, implicit $edx, debug-location !93 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:26
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
  Rescheduling physreg copy SU(3):   %13:gr32 = COPY killed $eax, debug-location !93; fft3d.c:154:26
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) $edx = MOV32r0 implicit-def dead $eflags, debug-location !93; fft3d.c:154:26
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
  Ready @6c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !93; fft3d.c:154:26
SU(2):   IDIV32m %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !93 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:26
SU(3):   %13:gr32 = COPY $eax, debug-location !93; fft3d.c:154:26
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %13:gr32, debug-location !94 :: (store 4 into @fftblock); fft3d.c:154:14
SU(5):   CMP32ri8 %13:gr32, 32, implicit-def $eflags, debug-location !97; fft3d.c:155:18

********** MI Scheduling **********
fftXYZ:%bb.3 if.then3
  From: %15:gr32 = MOV32ri 32
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %15:gr32 = MOV32ri 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%15
  Single Issue       : false;
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %15:gr32, debug-location !99 :: (store 4 into @fftblock); fft3d.c:156:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%15
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %15:gr32, debug-location !99 :: (store 4 into @fftblock); fft3d.c:156:18
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %15:gr32 = MOV32ri 32
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %15:gr32 = MOV32ri 32
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %15:gr32, debug-location !99 :: (store 4 into @fftblock); fft3d.c:156:18

********** MI Scheduling **********
fftXYZ:%bb.4 if.end4
  From: %19:gr32 = COPY $eax, debug-location !105; fft3d.c:158:11
    To: JCC_1 %bb.6, 4, implicit killed $eflags, debug-location !109; fft3d.c:159:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %19:gr32 = COPY $eax, debug-location !105; fft3d.c:158:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%19
  Single Issue       : false;
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %19:gr32, debug-location !106 :: (store 4 into %ir.log); fft3d.c:158:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%19
  Single Issue       : false;
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !107 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.6, 4, implicit killed $eflags, debug-location !109; fft3d.c:159:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !107 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %19:gr32, debug-location !106 :: (store 4 into %ir.log); fft3d.c:158:9
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %19:gr32 = COPY $eax, debug-location !105; fft3d.c:158:11
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %19:gr32 = COPY $eax, debug-location !105; fft3d.c:158:11
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %19:gr32, debug-location !106 :: (store 4 into %ir.log); fft3d.c:158:9
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !107 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9

********** MI Scheduling **********
fftXYZ:%bb.4 if.end4
  From: %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%17
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %17:gr32 = nsw INC32r %17:gr32(tied-def 0), implicit-def dead $eflags, debug-location !102; fft3d.c:157:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%17
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%17
  Single Issue       : false;
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %17:gr32, debug-location !103 :: (store 4 into %ir.blkp); fft3d.c:157:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%17
  Single Issue       : false;
SU(3):   %18:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !104 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:158:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %18:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !104 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:158:17
  Ready @3c
  BotQ.A BotLatency SU(3) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %17:gr32, debug-location !103 :: (store 4 into %ir.blkp); fft3d.c:157:10
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %17:gr32 = nsw INC32r %17:gr32(tied-def 0), implicit-def dead $eflags, debug-location !102; fft3d.c:157:21
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
SU(1):   %17:gr32 = nsw INC32r %17:gr32(tied-def 0), implicit-def dead $eflags, debug-location !102; fft3d.c:157:21
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %17:gr32, debug-location !103 :: (store 4 into %ir.blkp); fft3d.c:157:10
SU(3):   %18:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !104 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:158:17

********** MI Scheduling **********
fftXYZ:%bb.6 if.end8
  From: MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
    To: End RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %223:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %225:gr64 = COPY %0:gr64_with_sub_8bit
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(3): Data Latency=0 Reg=%225
    SU(3): Out  Latency=0
  Single Issue       : false;
SU(3):   %225:gr64 = nuw IMUL64rr %225:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%225
    SU(2): Out  Latency=0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 1 0 
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %225:gr64 = nuw IMUL64rr %225:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %225:gr64 = COPY %0:gr64_with_sub_8bit
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %223:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
SU(1):   %223:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
SU(2):   %225:gr64 = COPY %0:gr64_with_sub_8bit
SU(3):   %225:gr64 = nuw IMUL64rr %225:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

********** MI Scheduling **********
fftXYZ:%bb.7 for.cond
  From: %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
    To: JCC_1 %bb.26, 13, implicit killed $eflags, debug-location !118; fft3d.c:161:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%21
  Single Issue       : false;
SU(1):   CMP32rm %21:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !117 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%21
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.26, 13, implicit killed $eflags, debug-location !118; fft3d.c:161:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %21:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !117 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:19
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
SU(1):   CMP32rm %21:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !117 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:19

********** MI Scheduling **********
fftXYZ:%bb.9 for.cond10
  From: %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
    To: JCC_1 %bb.25, 13, implicit killed $eflags, debug-location !127; fft3d.c:162:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%160
  Single Issue       : false;
SU(1):   CMP32rm %160:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !126 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%160
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.25, 13, implicit killed $eflags, debug-location !127; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %160:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !126 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:27
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
SU(1):   CMP32rm %160:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !126 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:27

********** MI Scheduling **********
fftXYZ:%bb.10 for.body12
  From: undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
    To: JCC_1 %bb.12, 14, implicit killed $eflags, debug-location !138; fft3d.c:164:17
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%166
  Single Issue       : false;
SU(1):   undef %164.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !130 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%164
  Single Issue       : false;
SU(2):   %168:gr32 = LEA64_32r %166:gr64_with_sub_8bit, 1, %164:gr64_nosp, -1, $noreg, debug-location !132; fft3d.c:163:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(1): Data Latency=4 Reg=%164
    SU(0): Data Latency=4 Reg=%166
  Successors:
    SU(4): Data Latency=1 Reg=%168
    SU(3): Data Latency=1 Reg=%168
  Single Issue       : false;
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %168:gr32, debug-location !133 :: (store 4 into %ir.ble); fft3d.c:163:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%168
  Single Issue       : false;
SU(4):   CMP32rm %168:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !137 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%168
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.12, 14, implicit killed $eflags, debug-location !138; fft3d.c:164:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) CMP32rm %168:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !137 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:21
  Ready @4c
  BotQ.A TopLatency SU(4) 5c
  BotQ.A BotLatency SU(4) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %168:gr32, debug-location !133 :: (store 4 into %ir.ble); fft3d.c:163:17
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %168:gr32 = LEA64_32r %166:gr64_with_sub_8bit, 1, %164:gr64_nosp, -1, $noreg, debug-location !132; fft3d.c:163:34
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) undef %164.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !130 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  Ready @9c
  BotQ.A BotLatency SU(1) 9c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  Ready @9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
SU(1):   undef %164.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !130 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
SU(2):   %168:gr32 = LEA64_32r %166:gr64_with_sub_8bit, 1, %164:gr64_nosp, -1, $noreg, debug-location !132; fft3d.c:163:34
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %168:gr32, debug-location !133 :: (store 4 into %ir.ble); fft3d.c:163:17
SU(4):   CMP32rm %168:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !137 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:21

********** MI Scheduling **********
fftXYZ:%bb.11 if.then15
  From: %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%171
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %171:gr32 = DEC32r %171:gr32(tied-def 0), implicit-def dead $eflags, debug-location !140; fft3d.c:165:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%171
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%171
  Single Issue       : false;
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %171:gr32, debug-location !141 :: (store 4 into %ir.ble); fft3d.c:165:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%171
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %171:gr32, debug-location !141 :: (store 4 into %ir.ble); fft3d.c:165:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %171:gr32 = DEC32r %171:gr32(tied-def 0), implicit-def dead $eflags, debug-location !140; fft3d.c:165:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
SU(1):   %171:gr32 = DEC32r %171:gr32(tied-def 0), implicit-def dead $eflags, debug-location !140; fft3d.c:165:26
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %171:gr32, debug-location !141 :: (store 4 into %ir.ble); fft3d.c:165:21

********** MI Scheduling **********
fftXYZ:%bb.12 if.end17
  From: %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
    To: End RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%175
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(1):   %173:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !144 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Data Latency=4 Reg=%173
    SU(2): Data Latency=4 Reg=%173
  Single Issue       : false;
SU(2):   %175:gr32 = nsw SUB32rr %175:gr32(tied-def 0), %173:gr32, implicit-def dead $eflags, debug-location !145; fft3d.c:166:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%173
    SU(0): Data Latency=4 Reg=%175
    SU(0): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%175
    SU(3): Out  Latency=0
  Single Issue       : false;
SU(3):   %175:gr32 = nsw INC32r %175:gr32(tied-def 0), implicit-def dead $eflags, debug-location !146; fft3d.c:166:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%175
    SU(2): Out  Latency=0
  Successors:
    SU(4): Data Latency=1 Reg=%175
  Single Issue       : false;
SU(4):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %175:gr32, debug-location !147 :: (store 4 into %ir.len); fft3d.c:166:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%175
  Single Issue       : false;
SU(5):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %173:gr32, debug-location !150 :: (store 4 into %ir.j); fft3d.c:167:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%173
  Single Issue       : false;
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %173:gr32, debug-location !150 :: (store 4 into %ir.j); fft3d.c:167:20
  Ready @0c
  BotQ.A TopLatency SU(5) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %175:gr32, debug-location !147 :: (store 4 into %ir.len); fft3d.c:166:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %175:gr32 = nsw INC32r %175:gr32(tied-def 0), implicit-def dead $eflags, debug-location !146; fft3d.c:166:29
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %175:gr32 = nsw SUB32rr %175:gr32(tied-def 0), %173:gr32, implicit-def dead $eflags, debug-location !145; fft3d.c:166:23
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %173:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !144 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  Ready @6c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
SU(1):   %173:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !144 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
SU(2):   %175:gr32 = nsw SUB32rr %175:gr32(tied-def 0), %173:gr32, implicit-def dead $eflags, debug-location !145; fft3d.c:166:23
SU(3):   %175:gr32 = nsw INC32r %175:gr32(tied-def 0), implicit-def dead $eflags, debug-location !146; fft3d.c:166:29
SU(4):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %175:gr32, debug-location !147 :: (store 4 into %ir.len); fft3d.c:166:17
SU(5):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %173:gr32, debug-location !150 :: (store 4 into %ir.j); fft3d.c:167:20

********** MI Scheduling **********
fftXYZ:%bb.13 for.cond20
  From: %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
    To: JCC_1 %bb.18, 15, implicit killed $eflags, debug-location !156; fft3d.c:167:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%176
  Single Issue       : false;
SU(1):   CMP32rm %176:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !155 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%176
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.18, 15, implicit killed $eflags, debug-location !156; fft3d.c:167:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %176:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !155 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:29
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
SU(1):   CMP32rm %176:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !155 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:29

********** MI Scheduling **********
fftXYZ:%bb.15 for.cond23
  From: %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
    To: JCC_1 %bb.17, 13, implicit killed $eflags, debug-location !165; fft3d.c:168:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%212
  Single Issue       : false;
SU(1):   CMP32rm %212:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !164 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%212
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.17, 13, implicit killed $eflags, debug-location !165; fft3d.c:168:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %212:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !164 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:31
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
SU(1):   CMP32rm %212:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !164 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:31

********** MI Scheduling **********
fftXYZ:%bb.16 for.body25
  From: %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
    To: JMP_1 %bb.15, debug-location !180; fft3d.c:168:17
 RegionInstrs: 23
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=1
FR32X=1
GR16=14
Live In: %223 %1 %225 
Live Out: %223 %1 %225 
Live Thru: GR16=6
  LiveReg: %223
  UpdateRegP: SU(20) MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %1
  UpdateRegP: SU(14) %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to 
  LiveReg: %225
  UpdateRegP: SU(11) %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to 
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
Constraining copy SU(17)
  Local use SU(21) -> SU(17)
  Local use SU(6) -> SU(17)
SU(0):   %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(14): Data Latency=4 Reg=%230
    SU(2): Data Latency=4 Reg=%230
    SU(14): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %235:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(3): Data Latency=4 Reg=%235
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=%230
  Successors:
    SU(3): Data Latency=0 Reg=%216
    SU(3): Out  Latency=0
    SU(14): Anti Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(2): Data Latency=0 Reg=%216
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%235
  Successors:
    SU(7): Data Latency=1 Reg=%216
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %237:gr64_nosp = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !171 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(21): Data Latency=4 Reg=%237
    SU(17): Data Latency=4 Reg=%237
    SU(6): Data Latency=4 Reg=%237
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %220:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(6): Data Latency=4 Reg=%220
    SU(6): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(6):   %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(5): Data Latency=4 Reg=%220
    SU(5): Out  Latency=0
    SU(4): Data Latency=4 Reg=%237
  Successors:
    SU(7): Data Latency=1 Reg=%220
    SU(7): Out  Latency=0
    SU(17): Ord  Latency=0 Weak
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(6): Data Latency=1 Reg=%220
    SU(6): Out  Latency=0
    SU(3): Data Latency=1 Reg=%216
  Successors:
    SU(8): Data Latency=1 Reg=%220
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(7): Data Latency=1 Reg=%220
  Successors:
    SU(9): Data Latency=1 Reg=%222
    SU(9): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=%222
    SU(8): Out  Latency=0
  Successors:
    SU(20): Data Latency=1 Reg=%222
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %227:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !176 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(11): Data Latency=4 Reg=%227
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(11):   %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(10): Data Latency=4 Reg=%227
    SU(10): Out  Latency=0
  Successors:
    SU(12): Data Latency=1 Reg=%227
    SU(12): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(12):   %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(11): Data Latency=1 Reg=%227
    SU(11): Out  Latency=0
  Successors:
    SU(13): Data Latency=1 Reg=%227
    SU(13): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(12): Data Latency=1 Reg=%227
    SU(12): Out  Latency=0
  Successors:
    SU(16): Data Latency=4 Reg=%227
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(2): Anti Latency=0
    SU(0): Data Latency=4 Reg=%230
    SU(0): Out  Latency=0
  Successors:
    SU(15): Data Latency=1 Reg=%230
    SU(15): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(14): Data Latency=1 Reg=%230
    SU(14): Out  Latency=0
  Successors:
    SU(16): Data Latency=1 Reg=%230
    SU(16): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(16):   %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(13): Data Latency=4 Reg=%227
    SU(15): Out  Latency=0
    SU(15): Data Latency=1 Reg=%230
  Successors:
    SU(19): Data Latency=1 Reg=%230
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(17):   %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(4): Data Latency=4 Reg=%237
    SU(21): Ord  Latency=0 Weak
    SU(6): Ord  Latency=0 Weak
  Successors:
    SU(18): Data Latency=0 Reg=%232
    SU(18): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(17): Data Latency=0 Reg=%232
    SU(17): Out  Latency=0
  Successors:
    SU(19): Data Latency=1 Reg=%232
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 4
  Predecessors:
    SU(16): Data Latency=1 Reg=%230
    SU(18): Data Latency=1 Reg=%232
  Successors:
    SU(20): Data Latency=4 Reg=%233
    SU(22): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(20):   MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(19): Data Latency=4 Reg=%233
    SU(19): Ord  Latency=0 Memory
    SU(9): Data Latency=1 Reg=%222
  Pressure Diff      : FR32 1    FR32X 1    GR16 2
  Single Issue       : false;
SU(21):   %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(4): Data Latency=4 Reg=%237
  Successors:
    SU(22): Data Latency=1 Reg=%234
    SU(17): Ord  Latency=0 Weak
  Pressure Diff      : 
  Single Issue       : false;
SU(22):   MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(21): Data Latency=1 Reg=%234
    SU(19): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
ExitSU:   JMP_1 %bb.15, debug-location !180; fft3d.c:168:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 15
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 22 20 
  Cand SU(22) ORDER                              
Pick Bot ORDER     
Scheduling SU(22) MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38
Bottom Pressure:
GR16=8
  LiveReg: %234
  UpdateRegP: SU(22) MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38
              to 
  Ready @0c
  BotQ.A TopLatency SU(22) 11c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 21 
  Cand SU(20) ORDER                              
Pick Bot WEAK      
Scheduling SU(20) MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %222
  UpdateRegP: SU(20) MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to FR32 1    FR32X 1
  LiveReg: %233
  UpdateRegP: SU(20) MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to 
  Ready @0c
  BotQ.A TopLatency SU(20) 15c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 19 9 
  Cand SU(21) ORDER                              
  Cand SU(19) WEAK                               
Pick Bot WEAK      
Scheduling SU(19) %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %232
  UpdateRegP: SU(19) %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FR32 -1    FR32X -1    GR16 2
  LiveReg: %230
  UpdateRegP: SU(19) %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FR32 -1    FR32X -1
  Ready @4c
  BotQ.A BotLatency SU(19) 4c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 9 16 18 
  Cand SU(21) ORDER                              
  Cand SU(9) WEAK                               
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %232
  UpdateRegP: SU(18) %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @5c
  BotQ.A BotLatency SU(18) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 9 16 17 
  Cand SU(21) ORDER                              
  Cand SU(9) WEAK                               
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %237
  UpdateRegP: SU(6) %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
              to 
  UpdateRegP: SU(17) %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
              to GR16 -2
  UpdateRegP: SU(21) %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 9 16 
  Cand SU(21) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(21) %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
Bottom Pressure:
GR16=12
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 9 
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %230
  UpdateRegP: SU(16) %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to 
  LiveReg: %227
  UpdateRegP: SU(16) %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 13 15 
  Cand SU(9) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %230
  UpdateRegP: SU(15) %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @6c
  BotQ.A BotLatency SU(15) 6c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 13 14 
  Cand SU(9) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %230
  UpdateRegP: SU(2) %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
              to GR16 -2
  UpdateRegP: SU(14) %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @7c
  BotQ.A BotLatency SU(14) 7c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 13 
  Cand SU(9) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %227
  UpdateRegP: SU(13) %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
              to GR16 -2
  Ready @9c
  BotQ.A BotLatency SU(13) 9c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 12 
  Cand SU(9) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %227
  UpdateRegP: SU(12) %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @10c
  BotQ.A BotLatency SU(12) 10c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 11 
  Cand SU(9) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
Bottom Pressure:
GR16=14
  LiveReg: %227
  UpdateRegP: SU(11) %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
              to GR16 -2
  Ready @11c
  BotQ.A BotLatency SU(11) 11c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 10 
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %227:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !176 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
Bottom Pressure:
GR16=12
  Ready @15c
  BotQ.A BotLatency SU(10) 15c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Scheduling SU(9) %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
Bottom Pressure:
GR16=12
  LiveReg: %222
  UpdateRegP: SU(9) %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
              to GR16 -2
  Ready @3c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Scheduling SU(8) %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
Bottom Pressure:
GR16=12
  LiveReg: %220
  UpdateRegP: SU(8) %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
              to GR16 -2
  Ready @4c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Scheduling SU(7) %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
Bottom Pressure:
GR16=14
  LiveReg: %220
  UpdateRegP: SU(7) %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
              to 
  LiveReg: %216
  UpdateRegP: SU(7) %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
              to GR16 -2
  Ready @5c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 
  Cand SU(6) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(6) %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
Bottom Pressure:
GR16=14
  LiveReg: %220
  UpdateRegP: SU(6) %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
              to GR16 -2
  Ready @6c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 4 
  Cand SU(3) ORDER                              
  Cand SU(5) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(5) %220:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
Bottom Pressure:
GR16=12
  Ready @10c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %237:gr64_nosp = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !171 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
Bottom Pressure:
GR16=10
  Ready @10c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
Bottom Pressure:
GR16=12
  LiveReg: %216
  UpdateRegP: SU(3) %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
              to 
  LiveReg: %235
  UpdateRegP: SU(3) %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
              to GR16 -2
  Ready @6c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
Bottom Pressure:
GR16=10
  Ready @7c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %235:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
Bottom Pressure:
GR16=8
  Ready @10c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
Bottom Pressure:
GR16=6
  Ready @11c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
SU(1):   %235:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
SU(2):   %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
SU(3):   %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
SU(4):   %237:gr64_nosp = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !171 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
SU(5):   %220:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
SU(6):   %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
SU(7):   %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
SU(8):   %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
SU(9):   %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
SU(10):   %227:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !176 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
SU(11):   %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(12):   %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(13):   %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
SU(14):   %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(15):   %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(16):   %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(21):   %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
SU(17):   %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
SU(18):   %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
SU(19):   %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
SU(20):   MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
SU(22):   MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38

********** MI Scheduling **********
fftXYZ:%bb.18 for.end37
  From: %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%186
  Single Issue       : false;
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %186:gr32, debug-location !196 :: (store 4 into %ir.j); fft3d.c:173:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%186
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %186:gr32, debug-location !196 :: (store 4 into %ir.j); fft3d.c:173:20
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %186:gr32, debug-location !196 :: (store 4 into %ir.j); fft3d.c:173:20

********** MI Scheduling **********
fftXYZ:%bb.18 for.end37
  From: MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
    To: CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !193; fft3d.c:172:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $edi = COPY %178:gr32, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $esi = COPY %179:gr32, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $edx = COPY %180:gr32, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $ecx = COPY %181:gr32, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $r8d = COPY %182:gr32, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !193; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !193; fft3d.c:172:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 5 4 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(5) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(5) $r8d = COPY %182:gr32, debug-location !193; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 4 3 2 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) $ecx = COPY %181:gr32, debug-location !193; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 2 3 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) $edx = COPY %180:gr32, debug-location !193; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 2 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $esi = COPY %179:gr32, debug-location !193; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(1) $edi = COPY %178:gr32, debug-location !193; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !193; fft3d.c:172:13
  Ready @1c
  BotQ.A BotLatency SU(6) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
SU(6):   $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !193; fft3d.c:172:13
SU(1):   $edi = COPY %178:gr32, debug-location !193; fft3d.c:172:13
SU(2):   $esi = COPY %179:gr32, debug-location !193; fft3d.c:172:13
SU(3):   $edx = COPY %180:gr32, debug-location !193; fft3d.c:172:13
SU(4):   $ecx = COPY %181:gr32, debug-location !193; fft3d.c:172:13
SU(5):   $r8d = COPY %182:gr32, debug-location !193; fft3d.c:172:13

********** MI Scheduling **********
fftXYZ:%bb.18 for.end37
  From: %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
    To: ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %179:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !188 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %180:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !189 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %181:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !190 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %182:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !191 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %183:gr64 = MOV64rm %fixed-stack.2, 1, $noreg, 0, $noreg, debug-location !192 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 3 2 1 0 
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %183:gr64 = MOV64rm %fixed-stack.2, 1, $noreg, 0, $noreg, debug-location !192 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 4 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %182:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !191 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %181:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !190 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  Ready @3c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %180:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !189 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  Ready @3c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %179:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !188 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  Ready @3c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  Ready @3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
SU(1):   %179:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !188 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
SU(2):   %180:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !189 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
SU(3):   %181:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !190 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
SU(4):   %182:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !191 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
SU(5):   %183:gr64 = MOV64rm %fixed-stack.2, 1, $noreg, 0, $noreg, debug-location !192 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59

********** MI Scheduling **********
fftXYZ:%bb.19 for.cond38
  From: %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
    To: JCC_1 %bb.24, 15, implicit $eflags, debug-location !202; fft3d.c:173:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%187
  Single Issue       : false;
SU(1):   CMP32rm %187:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !201 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%187
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.24, 15, implicit $eflags, debug-location !202; fft3d.c:173:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %187:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !201 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:29
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.19 ***
SU(0):   %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
SU(1):   CMP32rm %187:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !201 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:29

********** MI Scheduling **********
fftXYZ:%bb.21 for.cond41
  From: %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
    To: JCC_1 %bb.23, 13, implicit $eflags, debug-location !211; fft3d.c:174:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%190
  Single Issue       : false;
SU(1):   CMP32rm %190:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !210 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%190
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.23, 13, implicit $eflags, debug-location !211; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %190:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !210 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:31
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
SU(1):   CMP32rm %190:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !210 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:31

********** MI Scheduling **********
fftXYZ:%bb.22 for.body43
  From: %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
    To: JMP_1 %bb.21, debug-location !226; fft3d.c:174:17
 RegionInstrs: 24
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=1
FR32X=1
GR16=16
Live In: %223 %1 %0 
Live Out: %223 %1 %0 
Live Thru: GR16=6
  LiveReg: %223
  UpdateRegP: SU(21) %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
              to FR32 -1    FR32X -1    GR16 2
  LiveReg: %1
  UpdateRegP: SU(2) %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to 
  UpdateRegP: SU(8) %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to 
  LiveReg: %0
  UpdateRegP: SU(1) %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
              to GR16 -2
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
Constraining copy SU(12)
  Local use SU(17) -> SU(12)
SU(0):   %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 14
  Successors:
    SU(3): Data Latency=4 Reg=%192
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 11
  Successors:
    SU(2): Data Latency=0 Reg=%194
    SU(2): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 11
  Predecessors:
    SU(1): Data Latency=0 Reg=%194
    SU(1): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%194
    SU(3): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 10
  Predecessors:
    SU(2): Data Latency=1 Reg=%194
    SU(2): Out  Latency=0
    SU(0): Data Latency=4 Reg=%192
  Successors:
    SU(4): Data Latency=1 Reg=%194
    SU(4): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 9
  Predecessors:
    SU(3): Data Latency=1 Reg=%194
    SU(3): Out  Latency=0
  Successors:
    SU(5): Data Latency=1 Reg=%194
    SU(5): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 8
  Predecessors:
    SU(4): Data Latency=1 Reg=%194
    SU(4): Out  Latency=0
  Successors:
    SU(10): Data Latency=4 Reg=%194
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %197:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !215 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(15): Data Latency=4 Reg=%197
    SU(7): Data Latency=4 Reg=%197
    SU(15): Out  Latency=0
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(7):   %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(6): Data Latency=4 Reg=%197
  Successors:
    SU(8): Data Latency=0 Reg=%200
    SU(8): Out  Latency=0
    SU(15): Anti Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(7): Data Latency=0 Reg=%200
    SU(7): Out  Latency=0
  Successors:
    SU(9): Data Latency=1 Reg=%200
    SU(9): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%200
    SU(8): Out  Latency=0
  Successors:
    SU(10): Data Latency=1 Reg=%200
    SU(10): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 4
  Predecessors:
    SU(5): Data Latency=4 Reg=%194
    SU(9): Out  Latency=0
    SU(9): Data Latency=1 Reg=%200
  Successors:
    SU(22): Data Latency=1 Reg=%200
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   %202:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !216 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(17): Data Latency=4 Reg=%202
    SU(12): Data Latency=4 Reg=%202
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(12):   %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(11): Data Latency=4 Reg=%202
    SU(17): Ord  Latency=0 Weak
  Successors:
    SU(13): Data Latency=0 Reg=%204
    SU(13): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(12): Data Latency=0 Reg=%204
    SU(12): Out  Latency=0
  Successors:
    SU(22): Data Latency=1 Reg=%204
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   %238:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(15): Data Latency=4 Reg=%238
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(15):   %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(14): Data Latency=4 Reg=%238
    SU(7): Anti Latency=0
    SU(6): Data Latency=4 Reg=%197
    SU(6): Out  Latency=0
  Successors:
    SU(18): Data Latency=1 Reg=%197
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %207:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(17): Data Latency=4 Reg=%207
    SU(17): Out  Latency=0
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(17):   %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(16): Data Latency=4 Reg=%207
    SU(16): Out  Latency=0
    SU(11): Data Latency=4 Reg=%202
  Successors:
    SU(18): Data Latency=1 Reg=%207
    SU(18): Out  Latency=0
    SU(12): Ord  Latency=0 Weak
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(18):   %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(17): Data Latency=1 Reg=%207
    SU(17): Out  Latency=0
    SU(15): Data Latency=1 Reg=%197
  Successors:
    SU(19): Data Latency=1 Reg=%207
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(19):   %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(18): Data Latency=1 Reg=%207
  Successors:
    SU(20): Data Latency=1 Reg=%209
    SU(20): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(20):   %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 8
  Predecessors:
    SU(19): Data Latency=1 Reg=%209
    SU(19): Out  Latency=0
  Successors:
    SU(21): Data Latency=1 Reg=%209
  Pressure Diff      : 
  Single Issue       : false;
SU(21):   %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 7
  Predecessors:
    SU(20): Data Latency=1 Reg=%209
  Successors:
    SU(22): Data Latency=4 Reg=%211
    SU(22): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 2
  Single Issue       : false;
SU(22):   MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  # preds left       : 10
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 3
  Predecessors:
    SU(10): Data Latency=1 Reg=%200
    SU(21): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Data Latency=1 Reg=%204
    SU(11): Ord  Latency=0 Memory
    SU(21): Data Latency=4 Reg=%211
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(23): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(23):   INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !225 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 3
  Predecessors:
    SU(22): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JMP_1 %bb.21, debug-location !226; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(23): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 15
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 
Scheduling SU(23) INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !225 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:174:38
Bottom Pressure:
GR16=6
  Ready @3c
  BotQ.A TopLatency SU(23) 12c
  BotQ.A BotLatency SU(23) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 22 
Scheduling SU(22) MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %204
  UpdateRegP: SU(22) MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %200
  UpdateRegP: SU(22) MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to FR32 1    FR32X 1
  LiveReg: %211
  UpdateRegP: SU(22) MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to 
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 21 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(21) ORDER                              
Pick Bot ORDER     
Scheduling SU(21) %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
Bottom Pressure:
GR16=12
  LiveReg: %209
  UpdateRegP: SU(21) %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
              to FR32 -1    FR32X -1
  Ready @7c
  BotQ.A BotLatency SU(21) 7c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 20 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(20) ORDER                              
Pick Bot ORDER     
Scheduling SU(20) %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
Bottom Pressure:
GR16=12
  LiveReg: %209
  UpdateRegP: SU(20) %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
              to GR16 -2
  Ready @8c
  BotQ.A BotLatency SU(20) 8c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 19 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(19) ORDER                              
Pick Bot ORDER     
Scheduling SU(19) %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
Bottom Pressure:
GR16=12
  LiveReg: %207
  UpdateRegP: SU(19) %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
              to GR16 -2
  Ready @9c
  BotQ.A BotLatency SU(19) 9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 18 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
Bottom Pressure:
GR16=14
  LiveReg: %207
  UpdateRegP: SU(18) %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
              to 
  LiveReg: %197
  UpdateRegP: SU(18) %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
              to GR16 -2
  Ready @10c
  BotQ.A BotLatency SU(18) 10c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 17 15 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
Bottom Pressure:
GR16=16
  LiveReg: %197
  UpdateRegP: SU(7) %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
              to GR16 -2
  UpdateRegP: SU(15) %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
              to 
  LiveReg: %238
  UpdateRegP: SU(15) %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
              to GR16 -2
  Ready @11c
  BotQ.A BotLatency SU(15) 11c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 17 14 
  Cand SU(10) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %238:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
Bottom Pressure:
GR16=14
  Ready @15c
  BotQ.A BotLatency SU(14) 15c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 17 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot WEAK      
Scheduling SU(13) %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=14
  LiveReg: %204
  UpdateRegP: SU(13) %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @4c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 17 12 
  Cand SU(10) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=14
  LiveReg: %202
  UpdateRegP: SU(12) %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
              to GR16 -2
  UpdateRegP: SU(17) %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
              to 
  Ready @4c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 17 
  Cand SU(10) ORDER                              
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
Bottom Pressure:
GR16=14
  LiveReg: %207
  UpdateRegP: SU(17) %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
              to GR16 -2
  Ready @11c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 16 11 
  Cand SU(10) ORDER                              
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %207:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
Bottom Pressure:
GR16=12
  Ready @15c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 11 
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %202:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !216 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
Bottom Pressure:
GR16=10
  Ready @15c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Scheduling SU(10) %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=12
  LiveReg: %200
  UpdateRegP: SU(10) %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to 
  LiveReg: %194
  UpdateRegP: SU(10) %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @4c
  BotQ.A TopLatency SU(10) 10c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 9 
  Cand SU(5) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=12
  LiveReg: %200
  UpdateRegP: SU(9) %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @5c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=12
  LiveReg: %200
  UpdateRegP: SU(8) %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @6c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=10
  Ready @11c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %197:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !215 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
Bottom Pressure:
GR16=8
  Ready @15c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
Bottom Pressure:
GR16=8
  LiveReg: %194
  UpdateRegP: SU(5) %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
              to GR16 -2
  Ready @8c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=8
  LiveReg: %194
  UpdateRegP: SU(4) %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @9c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=10
  LiveReg: %194
  UpdateRegP: SU(3) %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to 
  LiveReg: %192
  UpdateRegP: SU(3) %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @10c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=10
  LiveReg: %194
  UpdateRegP: SU(2) %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
              to GR16 -2
  Ready @11c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
Bottom Pressure:
GR16=8
  Ready @11c
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
Bottom Pressure:
GR16=6
  Ready @14c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
SU(1):   %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
SU(2):   %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(3):   %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(4):   %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(5):   %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
SU(6):   %197:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !215 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
SU(7):   %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
SU(8):   %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(9):   %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(10):   %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(11):   %202:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !216 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
SU(16):   %207:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
SU(17):   %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
SU(12):   %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
SU(13):   %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
SU(14):   %238:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
SU(15):   %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
SU(18):   %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
SU(19):   %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
SU(20):   %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
SU(21):   %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
SU(22):   MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
SU(23):   INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !225 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:174:38

********** MI Scheduling **********
fftXYZ:%bb.24 for.end60
  From: %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
    To: JMP_1 %bb.9, debug-location !235; fft3d.c:162:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(1): Data Latency=4 Reg=%189
  Single Issue       : false;
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %189:gr32, implicit-def dead $eflags, debug-location !234 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=%189
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   JMP_1 %bb.9, debug-location !235; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %189:gr32, implicit-def dead $eflags, debug-location !234 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  Ready @3c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  Ready @7c
  BotQ.A BotLatency SU(0) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %189:gr32, implicit-def dead $eflags, debug-location !234 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:162:37

********** MI Scheduling **********
fftXYZ:%bb.28 if.end69
  From: $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
    To: JCC_1 %bb.30, 12, implicit $eflags, debug-location !252; fft3d.c:184:9
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
Global memory object and new barrier chain: SU(2).
SU(0):   $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$eax
  Single Issue       : false;
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !247; fft3d.c:183:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$edx
    SU(5): Out  Latency=0
  Single Issue       : false;
SU(2):   IDIV32m %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !247 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:26
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
    SU(1): Out  Latency=0
    SU(1): Data Latency=1 Reg=$edx
    SU(0): Out  Latency=0
    SU(0): Data Latency=1 Reg=$eax
  Successors:
    SU(3): Data Latency=4 Reg=$eax
    SU(5): Out  Latency=0
    SU(4): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(3):   %26:gr32 = COPY $eax, debug-location !247; fft3d.c:183:26
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$eax
  Successors:
    SU(5): Data Latency=0 Reg=%26
    SU(4): Data Latency=0 Reg=%26
  Single Issue       : false;
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %26:gr32, debug-location !248 :: (store 4 into @fftblock); fft3d.c:183:14
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%26
    SU(2): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(5):   CMP32ri8 %26:gr32, 32, implicit-def $eflags, debug-location !251; fft3d.c:184:18
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(3): Data Latency=0 Reg=%26
    SU(2): Out  Latency=0
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.30, 12, implicit $eflags, debug-location !252; fft3d.c:184:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) CMP32ri8 %26:gr32, 32, implicit-def $eflags, debug-location !251; fft3d.c:184:18
  Ready @1c
  BotQ.A TopLatency SU(5) 5c
  BotQ.A BotLatency SU(5) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %26:gr32, debug-location !248 :: (store 4 into @fftblock); fft3d.c:183:14
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %26:gr32 = COPY $eax, debug-location !247; fft3d.c:183:26
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) IDIV32m %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !247 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:26
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
  Rescheduling physreg copy SU(3):   %26:gr32 = COPY $eax, debug-location !247; fft3d.c:183:26
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) $edx = MOV32r0 implicit-def dead $eflags, debug-location !247; fft3d.c:183:26
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
  Ready @6c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !247; fft3d.c:183:26
SU(2):   IDIV32m %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !247 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:26
SU(3):   %26:gr32 = COPY $eax, debug-location !247; fft3d.c:183:26
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %26:gr32, debug-location !248 :: (store 4 into @fftblock); fft3d.c:183:14
SU(5):   CMP32ri8 %26:gr32, 32, implicit-def $eflags, debug-location !251; fft3d.c:184:18

********** MI Scheduling **********
fftXYZ:%bb.29 if.then72
  From: %28:gr32 = MOV32ri 32
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %28:gr32 = MOV32ri 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%28
  Single Issue       : false;
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %28:gr32, debug-location !253 :: (store 4 into @fftblock); fft3d.c:185:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%28
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %28:gr32, debug-location !253 :: (store 4 into @fftblock); fft3d.c:185:18
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %28:gr32 = MOV32ri 32
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   %28:gr32 = MOV32ri 32
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %28:gr32, debug-location !253 :: (store 4 into @fftblock); fft3d.c:185:18

********** MI Scheduling **********
fftXYZ:%bb.30 if.end73
  From: %32:gr32 = COPY $eax, debug-location !259; fft3d.c:187:11
    To: JCC_1 %bb.32, 4, implicit $eflags, debug-location !263; fft3d.c:188:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %32:gr32 = COPY $eax, debug-location !259; fft3d.c:187:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%32
  Single Issue       : false;
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %32:gr32, debug-location !260 :: (store 4 into %ir.log); fft3d.c:187:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%32
  Single Issue       : false;
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.32, 4, implicit $eflags, debug-location !263; fft3d.c:188:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %32:gr32, debug-location !260 :: (store 4 into %ir.log); fft3d.c:187:9
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %32:gr32 = COPY $eax, debug-location !259; fft3d.c:187:11
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.30 ***
SU(0):   %32:gr32 = COPY $eax, debug-location !259; fft3d.c:187:11
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %32:gr32, debug-location !260 :: (store 4 into %ir.log); fft3d.c:187:9
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9

********** MI Scheduling **********
fftXYZ:%bb.30 if.end73
  From: %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%30
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %30:gr32 = nsw INC32r %30:gr32(tied-def 0), implicit-def dead $eflags, debug-location !256; fft3d.c:186:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%30
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%30
  Single Issue       : false;
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %30:gr32, debug-location !257 :: (store 4 into %ir.blkp); fft3d.c:186:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%30
  Single Issue       : false;
SU(3):   %31:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !258 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:187:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %31:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !258 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:187:17
  Ready @3c
  BotQ.A BotLatency SU(3) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %30:gr32, debug-location !257 :: (store 4 into %ir.blkp); fft3d.c:186:10
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %30:gr32 = nsw INC32r %30:gr32(tied-def 0), implicit-def dead $eflags, debug-location !256; fft3d.c:186:21
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.30 ***
SU(0):   %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
SU(1):   %30:gr32 = nsw INC32r %30:gr32(tied-def 0), implicit-def dead $eflags, debug-location !256; fft3d.c:186:21
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %30:gr32, debug-location !257 :: (store 4 into %ir.blkp); fft3d.c:186:10
SU(3):   %31:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !258 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:187:17

********** MI Scheduling **********
fftXYZ:%bb.32 if.end78
  From: MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %150:gr64 = COPY %0:gr64_with_sub_8bit
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(2): Data Latency=0 Reg=%150
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   %150:gr64 = nuw IMUL64rr %150:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%150
    SU(1): Out  Latency=0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %150:gr64 = nuw IMUL64rr %150:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %150:gr64 = COPY %0:gr64_with_sub_8bit
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
SU(1):   %150:gr64 = COPY %0:gr64_with_sub_8bit
SU(2):   %150:gr64 = nuw IMUL64rr %150:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

********** MI Scheduling **********
fftXYZ:%bb.33 for.cond79
  From: %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
    To: JCC_1 %bb.40, 13, implicit $eflags, debug-location !272; fft3d.c:190:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%34
  Single Issue       : false;
SU(1):   CMP32rm %34:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !271 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%34
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.40, 13, implicit $eflags, debug-location !272; fft3d.c:190:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %34:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !271 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:19
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
SU(1):   CMP32rm %34:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !271 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:19

********** MI Scheduling **********
fftXYZ:%bb.35 for.cond82
  From: %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
    To: JCC_1 %bb.39, 13, implicit $eflags, debug-location !281; fft3d.c:191:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%129
  Single Issue       : false;
SU(1):   CMP32rm %129:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !280 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%129
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.39, 13, implicit $eflags, debug-location !281; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %129:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !280 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:27
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
SU(1):   CMP32rm %129:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !280 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:27

********** MI Scheduling **********
fftXYZ:%bb.36 for.body84
  From: undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
    To: JCC_1 %bb.38, 14, implicit $eflags, debug-location !292; fft3d.c:193:17
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%135
  Single Issue       : false;
SU(1):   undef %133.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !284 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%133
  Single Issue       : false;
SU(2):   %137:gr32 = LEA64_32r %135:gr64_with_sub_8bit, 1, %133:gr64_nosp, -1, $noreg, debug-location !286; fft3d.c:192:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(1): Data Latency=4 Reg=%133
    SU(0): Data Latency=4 Reg=%135
  Successors:
    SU(4): Data Latency=1 Reg=%137
    SU(3): Data Latency=1 Reg=%137
  Single Issue       : false;
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %137:gr32, debug-location !287 :: (store 4 into %ir.ble); fft3d.c:192:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%137
  Single Issue       : false;
SU(4):   CMP32rm %137:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !291 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%137
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.38, 14, implicit $eflags, debug-location !292; fft3d.c:193:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) CMP32rm %137:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !291 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:21
  Ready @4c
  BotQ.A TopLatency SU(4) 5c
  BotQ.A BotLatency SU(4) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %137:gr32, debug-location !287 :: (store 4 into %ir.ble); fft3d.c:192:17
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %137:gr32 = LEA64_32r %135:gr64_with_sub_8bit, 1, %133:gr64_nosp, -1, $noreg, debug-location !286; fft3d.c:192:34
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) undef %133.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !284 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  Ready @9c
  BotQ.A BotLatency SU(1) 9c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  Ready @9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
SU(1):   undef %133.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !284 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
SU(2):   %137:gr32 = LEA64_32r %135:gr64_with_sub_8bit, 1, %133:gr64_nosp, -1, $noreg, debug-location !286; fft3d.c:192:34
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %137:gr32, debug-location !287 :: (store 4 into %ir.ble); fft3d.c:192:17
SU(4):   CMP32rm %137:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !291 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:21

********** MI Scheduling **********
fftXYZ:%bb.37 if.then88
  From: %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%140
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %140:gr32 = DEC32r %140:gr32(tied-def 0), implicit-def dead $eflags, debug-location !294; fft3d.c:194:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%140
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%140
  Single Issue       : false;
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %140:gr32, debug-location !295 :: (store 4 into %ir.ble); fft3d.c:194:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%140
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %140:gr32, debug-location !295 :: (store 4 into %ir.ble); fft3d.c:194:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %140:gr32 = DEC32r %140:gr32(tied-def 0), implicit-def dead $eflags, debug-location !294; fft3d.c:194:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.37 ***
SU(0):   %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
SU(1):   %140:gr32 = DEC32r %140:gr32(tied-def 0), implicit-def dead $eflags, debug-location !294; fft3d.c:194:26
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %140:gr32, debug-location !295 :: (store 4 into %ir.ble); fft3d.c:194:21

********** MI Scheduling **********
fftXYZ:%bb.38 if.end90
  From: %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
    To: JMP_1 %bb.35, debug-location !317; fft3d.c:191:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(1): Data Latency=4 Reg=%159
  Single Issue       : false;
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %159:gr32, implicit-def dead $eflags, debug-location !316 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=%159
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   JMP_1 %bb.35, debug-location !317; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %159:gr32, implicit-def dead $eflags, debug-location !316 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  Ready @3c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  Ready @7c
  BotQ.A BotLatency SU(0) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %159:gr32, implicit-def dead $eflags, debug-location !316 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:191:37

********** MI Scheduling **********
fftXYZ:%bb.38 if.end90
  From: MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
    To: CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !313; fft3d.c:196:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $edi = COPY %144:gr32, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $esi = COPY %145:gr32, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $edx = COPY %143:gr32, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $ecx = COPY %146:gr32, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $r8d = COPY %148:gr32, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $r9 = COPY %156:gr64, debug-location !313; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !313; fft3d.c:196:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 5 4 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(6) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(6) $r9 = COPY %156:gr64, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 5 4 3 2 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) $r8d = COPY %148:gr32, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 4 3 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) $ecx = COPY %146:gr32, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 3 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) $edx = COPY %143:gr32, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $esi = COPY %145:gr32, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(1) $edi = COPY %144:gr32, debug-location !313; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
SU(1):   $edi = COPY %144:gr32, debug-location !313; fft3d.c:196:13
SU(2):   $esi = COPY %145:gr32, debug-location !313; fft3d.c:196:13
SU(3):   $edx = COPY %143:gr32, debug-location !313; fft3d.c:196:13
SU(4):   $ecx = COPY %146:gr32, debug-location !313; fft3d.c:196:13
SU(5):   $r8d = COPY %148:gr32, debug-location !313; fft3d.c:196:13
SU(6):   $r9 = COPY %156:gr64, debug-location !313; fft3d.c:196:13

********** MI Scheduling **********
fftXYZ:%bb.38 if.end90
  From: %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
    To: ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
 RegionInstrs: 17
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR16=16
Live In: %150 
Live Out: %157 %156 %150 %148 %146 %145 %144 %143 
Live Thru: GR16=2
  LiveReg: %157
  LiveReg: %156
  LiveReg: %150
  UpdateRegP: SU(10) %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to 
  LiveReg: %148
  LiveReg: %146
  LiveReg: %145
  LiveReg: %144
  LiveReg: %143
  UpdateRegP: SU(3) MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
              to 
Top Pressure:
GR16=2
Bottom Pressure:
GR16=16
Excess PSets: 
SU(0):   %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%143
    SU(1): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%143
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=4 Reg=%143
    SU(2): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%143
    SU(1): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%143
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%143
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %144:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !302 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %145:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !303 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(6):   %146:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !305 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(7):   %148:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !306 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(8): Data Latency=4 Reg=%148
    SU(8): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(8):   %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(7): Data Latency=4 Reg=%148
    SU(7): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %152:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !309 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(10): Data Latency=4 Reg=%152
    SU(10): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(10):   %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(9): Data Latency=4 Reg=%152
    SU(9): Out  Latency=0
  Successors:
    SU(11): Data Latency=1 Reg=%152
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(10): Data Latency=1 Reg=%152
    SU(10): Out  Latency=0
  Successors:
    SU(12): Data Latency=1 Reg=%152
    SU(12): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(12):   %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 4
  Predecessors:
    SU(11): Data Latency=1 Reg=%152
    SU(11): Out  Latency=0
  Successors:
    SU(15): Data Latency=4 Reg=%152
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %156:gr64 = MOVSX64rm32 %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !310 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(14): Data Latency=4 Reg=%156
    SU(14): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(14):   %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(13): Data Latency=4 Reg=%156
    SU(13): Out  Latency=0
  Successors:
    SU(15): Data Latency=1 Reg=%156
    SU(15): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(12): Data Latency=4 Reg=%152
    SU(14): Out  Latency=0
    SU(14): Data Latency=1 Reg=%156
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %157:gr64 = MOV64rm %fixed-stack.1, 1, $noreg, 0, $noreg, debug-location !312 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GR16 -2
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(16): Ord  Latency=3 Artificial
    SU(6): Ord  Latency=3 Artificial
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 10
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 8 3 16 6 5 4 
  Cand SU(15) ORDER                              
  Cand SU(8) REG-MAX                            
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %157:gr64 = MOV64rm %fixed-stack.1, 1, $noreg, 0, $noreg, debug-location !312 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
Bottom Pressure:
GR16=14
  Ready @3c
  BotQ.A BotLatency SU(16) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 8 3 4 6 5 
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
Bottom Pressure:
GR16=16
  LiveReg: %156
  UpdateRegP: SU(15) %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to 
  LiveReg: %152
  UpdateRegP: SU(15) %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to GR16 -2
  Ready @0c
  BotQ.A TopLatency SU(15) 10c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 12 14 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
Bottom Pressure:
GR16=16
  LiveReg: %156
  UpdateRegP: SU(14) %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to GR16 -2
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 12 13 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %156:gr64 = MOVSX64rm32 %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !310 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
Bottom Pressure:
GR16=14
  Ready @5c
  BotQ.A BotLatency SU(13) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 12 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
Bottom Pressure:
GR16=14
  LiveReg: %152
  UpdateRegP: SU(12) %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
              to GR16 -2
  Ready @4c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 11 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
Bottom Pressure:
GR16=14
  LiveReg: %152
  UpdateRegP: SU(11) %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 10 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
Bottom Pressure:
GR16=14
  LiveReg: %152
  UpdateRegP: SU(10) %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
              to GR16 -2
  Ready @6c
  BotQ.A BotLatency SU(10) 6c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 9 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %152:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !309 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
Bottom Pressure:
GR16=12
  Ready @10c
  BotQ.A BotLatency SU(9) 10c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 8 3 4 6 
  Cand SU(5) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
Bottom Pressure:
GR16=12
  LiveReg: %148
  UpdateRegP: SU(8) %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
              to GR16 -2
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 3 4 7 
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %148:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !306 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
Bottom Pressure:
GR16=10
  Ready @6c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 3 4 
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %146:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !305 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
Bottom Pressure:
GR16=8
  Ready @3c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 3 
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %145:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !303 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
Bottom Pressure:
GR16=6
  Ready @3c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %144:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !302 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
Bottom Pressure:
GR16=4
  Ready @3c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
Bottom Pressure:
GR16=4
  Ready @3c
  BotQ.A TopLatency SU(3) 9c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
Bottom Pressure:
GR16=4
  LiveReg: %143
  UpdateRegP: SU(2) %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
              to GR16 -2
  Ready @4c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
Bottom Pressure:
GR16=4
  LiveReg: %143
  UpdateRegP: SU(1) %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
              to GR16 -2
  Ready @8c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
Bottom Pressure:
GR16=2
  Ready @12c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
SU(1):   %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
SU(2):   %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
SU(3):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
SU(4):   %144:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !302 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
SU(5):   %145:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !303 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
SU(6):   %146:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !305 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
SU(7):   %148:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !306 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
SU(8):   %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
SU(9):   %152:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !309 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
SU(10):   %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
SU(11):   %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
SU(12):   %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
SU(13):   %156:gr64 = MOVSX64rm32 %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !310 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
SU(14):   %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
SU(15):   %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
SU(16):   %157:gr64 = MOV64rm %fixed-stack.1, 1, $noreg, 0, $noreg, debug-location !312 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69

********** MI Scheduling **********
fftXYZ:%bb.42 if.end107
  From: $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
    To: JCC_1 %bb.44, 12, implicit $eflags, debug-location !334; fft3d.c:203:9
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
Global memory object and new barrier chain: SU(2).
SU(0):   $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$eax
  Single Issue       : false;
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !329; fft3d.c:202:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=0
    SU(2): Data Latency=1 Reg=$edx
    SU(5): Out  Latency=0
  Single Issue       : false;
SU(2):   IDIV32m %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !329 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:26
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
    SU(1): Out  Latency=0
    SU(1): Data Latency=1 Reg=$edx
    SU(0): Out  Latency=0
    SU(0): Data Latency=1 Reg=$eax
  Successors:
    SU(3): Data Latency=4 Reg=$eax
    SU(5): Out  Latency=0
    SU(4): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(3):   %39:gr32 = COPY $eax, debug-location !329; fft3d.c:202:26
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$eax
  Successors:
    SU(5): Data Latency=0 Reg=%39
    SU(4): Data Latency=0 Reg=%39
  Single Issue       : false;
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %39:gr32, debug-location !330 :: (store 4 into @fftblock); fft3d.c:202:14
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%39
    SU(2): Ord  Latency=0 Barrier
  Single Issue       : false;
SU(5):   CMP32ri8 %39:gr32, 32, implicit-def $eflags, debug-location !333; fft3d.c:203:18
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(3): Data Latency=0 Reg=%39
    SU(2): Out  Latency=0
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.44, 12, implicit $eflags, debug-location !334; fft3d.c:203:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) CMP32ri8 %39:gr32, 32, implicit-def $eflags, debug-location !333; fft3d.c:203:18
  Ready @1c
  BotQ.A TopLatency SU(5) 5c
  BotQ.A BotLatency SU(5) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %39:gr32, debug-location !330 :: (store 4 into @fftblock); fft3d.c:202:14
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %39:gr32 = COPY $eax, debug-location !329; fft3d.c:202:26
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) IDIV32m %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !329 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:26
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
  Rescheduling physreg copy SU(3):   %39:gr32 = COPY $eax, debug-location !329; fft3d.c:202:26
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) $edx = MOV32r0 implicit-def dead $eflags, debug-location !329; fft3d.c:202:26
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
  Ready @6c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.42 ***
SU(0):   $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
SU(1):   $edx = MOV32r0 implicit-def dead $eflags, debug-location !329; fft3d.c:202:26
SU(2):   IDIV32m %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !329 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:26
SU(3):   %39:gr32 = COPY $eax, debug-location !329; fft3d.c:202:26
SU(4):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %39:gr32, debug-location !330 :: (store 4 into @fftblock); fft3d.c:202:14
SU(5):   CMP32ri8 %39:gr32, 32, implicit-def $eflags, debug-location !333; fft3d.c:203:18

********** MI Scheduling **********
fftXYZ:%bb.43 if.then110
  From: %41:gr32 = MOV32ri 32
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %41:gr32 = MOV32ri 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%41
  Single Issue       : false;
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %41:gr32, debug-location !335 :: (store 4 into @fftblock); fft3d.c:204:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%41
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %41:gr32, debug-location !335 :: (store 4 into @fftblock); fft3d.c:204:18
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %41:gr32 = MOV32ri 32
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   %41:gr32 = MOV32ri 32
SU(1):   MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %41:gr32, debug-location !335 :: (store 4 into @fftblock); fft3d.c:204:18

********** MI Scheduling **********
fftXYZ:%bb.44 if.end111
  From: %45:gr32 = COPY $eax, debug-location !341; fft3d.c:206:11
    To: JCC_1 %bb.46, 4, implicit $eflags, debug-location !345; fft3d.c:207:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %45:gr32 = COPY $eax, debug-location !341; fft3d.c:206:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%45
  Single Issue       : false;
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %45:gr32, debug-location !342 :: (store 4 into %ir.log); fft3d.c:206:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%45
  Single Issue       : false;
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !343 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.46, 4, implicit $eflags, debug-location !345; fft3d.c:207:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !343 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %45:gr32, debug-location !342 :: (store 4 into %ir.log); fft3d.c:206:9
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %45:gr32 = COPY $eax, debug-location !341; fft3d.c:206:11
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %45:gr32 = COPY $eax, debug-location !341; fft3d.c:206:11
SU(1):   MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %45:gr32, debug-location !342 :: (store 4 into %ir.log); fft3d.c:206:9
SU(2):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !343 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9

********** MI Scheduling **********
fftXYZ:%bb.44 if.end111
  From: %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%43
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %43:gr32 = nsw INC32r %43:gr32(tied-def 0), implicit-def dead $eflags, debug-location !338; fft3d.c:205:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%43
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%43
  Single Issue       : false;
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %43:gr32, debug-location !339 :: (store 4 into %ir.blkp); fft3d.c:205:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%43
  Single Issue       : false;
SU(3):   %44:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !340 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:206:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %44:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !340 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:206:17
  Ready @3c
  BotQ.A BotLatency SU(3) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %43:gr32, debug-location !339 :: (store 4 into %ir.blkp); fft3d.c:205:10
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %43:gr32 = nsw INC32r %43:gr32(tied-def 0), implicit-def dead $eflags, debug-location !338; fft3d.c:205:21
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
SU(1):   %43:gr32 = nsw INC32r %43:gr32(tied-def 0), implicit-def dead $eflags, debug-location !338; fft3d.c:205:21
SU(2):   MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %43:gr32, debug-location !339 :: (store 4 into %ir.blkp); fft3d.c:205:10
SU(3):   %44:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !340 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:206:17

********** MI Scheduling **********
fftXYZ:%bb.46 if.end116
  From: MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
    To: End RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %117:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %118:gr64 = COPY %0:gr64_with_sub_8bit
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(3): Data Latency=0 Reg=%118
    SU(3): Out  Latency=0
  Single Issue       : false;
SU(3):   %118:gr64 = nuw IMUL64rr %118:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%118
    SU(2): Out  Latency=0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 1 0 
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %118:gr64 = nuw IMUL64rr %118:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %118:gr64 = COPY %0:gr64_with_sub_8bit
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %117:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.46 ***
SU(0):   MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
SU(1):   %117:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
SU(2):   %118:gr64 = COPY %0:gr64_with_sub_8bit
SU(3):   %118:gr64 = nuw IMUL64rr %118:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

********** MI Scheduling **********
fftXYZ:%bb.47 for.cond117
  From: %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
    To: JCC_1 %bb.66, 13, implicit $eflags, debug-location !354; fft3d.c:209:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%47
  Single Issue       : false;
SU(1):   CMP32rm %47:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !353 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%47
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.66, 13, implicit $eflags, debug-location !354; fft3d.c:209:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %47:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !353 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:19
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.47 ***
SU(0):   %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
SU(1):   CMP32rm %47:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !353 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:19

********** MI Scheduling **********
fftXYZ:%bb.49 for.cond120
  From: %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
    To: JCC_1 %bb.65, 13, implicit $eflags, debug-location !363; fft3d.c:210:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%51
  Single Issue       : false;
SU(1):   CMP32rm %51:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !362 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%51
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.65, 13, implicit $eflags, debug-location !363; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %51:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !362 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:27
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.49 ***
SU(0):   %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
SU(1):   CMP32rm %51:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !362 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:27

********** MI Scheduling **********
fftXYZ:%bb.50 for.body122
  From: undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
    To: JCC_1 %bb.52, 14, implicit $eflags, debug-location !374; fft3d.c:212:17
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%57
  Single Issue       : false;
SU(1):   undef %55.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !366 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%55
  Single Issue       : false;
SU(2):   %59:gr32 = LEA64_32r %57:gr64_with_sub_8bit, 1, %55:gr64_nosp, -1, $noreg, debug-location !368; fft3d.c:211:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(1): Data Latency=4 Reg=%55
    SU(0): Data Latency=4 Reg=%57
  Successors:
    SU(4): Data Latency=1 Reg=%59
    SU(3): Data Latency=1 Reg=%59
  Single Issue       : false;
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %59:gr32, debug-location !369 :: (store 4 into %ir.ble); fft3d.c:211:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%59
  Single Issue       : false;
SU(4):   CMP32rm %59:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !373 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%59
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.52, 14, implicit $eflags, debug-location !374; fft3d.c:212:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) CMP32rm %59:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !373 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:21
  Ready @4c
  BotQ.A TopLatency SU(4) 5c
  BotQ.A BotLatency SU(4) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %59:gr32, debug-location !369 :: (store 4 into %ir.ble); fft3d.c:211:17
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %59:gr32 = LEA64_32r %57:gr64_with_sub_8bit, 1, %55:gr64_nosp, -1, $noreg, debug-location !368; fft3d.c:211:34
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) undef %55.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !366 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  Ready @9c
  BotQ.A BotLatency SU(1) 9c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  Ready @9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.50 ***
SU(0):   undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
SU(1):   undef %55.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !366 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
SU(2):   %59:gr32 = LEA64_32r %57:gr64_with_sub_8bit, 1, %55:gr64_nosp, -1, $noreg, debug-location !368; fft3d.c:211:34
SU(3):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %59:gr32, debug-location !369 :: (store 4 into %ir.ble); fft3d.c:211:17
SU(4):   CMP32rm %59:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !373 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:21

********** MI Scheduling **********
fftXYZ:%bb.51 if.then126
  From: %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%62
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %62:gr32 = DEC32r %62:gr32(tied-def 0), implicit-def dead $eflags, debug-location !376; fft3d.c:213:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%62
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%62
  Single Issue       : false;
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %62:gr32, debug-location !377 :: (store 4 into %ir.ble); fft3d.c:213:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%62
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %62:gr32, debug-location !377 :: (store 4 into %ir.ble); fft3d.c:213:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %62:gr32 = DEC32r %62:gr32(tied-def 0), implicit-def dead $eflags, debug-location !376; fft3d.c:213:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.51 ***
SU(0):   %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
SU(1):   %62:gr32 = DEC32r %62:gr32(tied-def 0), implicit-def dead $eflags, debug-location !376; fft3d.c:213:26
SU(2):   MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %62:gr32, debug-location !377 :: (store 4 into %ir.ble); fft3d.c:213:21

********** MI Scheduling **********
fftXYZ:%bb.52 if.end128
  From: %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
    To: End RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%65
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %65:gr32 = nsw SUB32rm %65:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !381 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:23
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%65
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=4 Reg=%65
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   %65:gr32 = nsw INC32r %65:gr32(tied-def 0), implicit-def dead $eflags, debug-location !382; fft3d.c:214:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%65
    SU(1): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%65
  Single Issue       : false;
SU(3):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %65:gr32, debug-location !383 :: (store 4 into %ir.len); fft3d.c:214:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%65
  Single Issue       : false;
SU(4):   MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !384 :: (store 4 into %ir.i); fft3d.c:215:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !384 :: (store 4 into %ir.i); fft3d.c:215:20
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %65:gr32, debug-location !383 :: (store 4 into %ir.len); fft3d.c:214:17
  Ready @0c
  BotQ.A TopLatency SU(3) 9c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %65:gr32 = nsw INC32r %65:gr32(tied-def 0), implicit-def dead $eflags, debug-location !382; fft3d.c:214:29
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %65:gr32 = nsw SUB32rm %65:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !381 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:23
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
SU(1):   %65:gr32 = nsw SUB32rm %65:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !381 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:23
SU(2):   %65:gr32 = nsw INC32r %65:gr32(tied-def 0), implicit-def dead $eflags, debug-location !382; fft3d.c:214:29
SU(3):   MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %65:gr32, debug-location !383 :: (store 4 into %ir.len); fft3d.c:214:17
SU(4):   MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !384 :: (store 4 into %ir.i); fft3d.c:215:20

********** MI Scheduling **********
fftXYZ:%bb.53 for.cond131
  From: %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
    To: JCC_1 %bb.58, 13, implicit $eflags, debug-location !391; fft3d.c:215:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%66
  Single Issue       : false;
SU(1):   CMP32rm %66:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !390 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%66
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.58, 13, implicit $eflags, debug-location !391; fft3d.c:215:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %66:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !390 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:27
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.53 ***
SU(0):   %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
SU(1):   CMP32rm %66:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !390 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:27

********** MI Scheduling **********
fftXYZ:%bb.54 for.body133
  From: %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%105
  Single Issue       : false;
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %105:gr32, debug-location !395 :: (store 4 into %ir.j); fft3d.c:216:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%105
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %105:gr32, debug-location !395 :: (store 4 into %ir.j); fft3d.c:216:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.54 ***
SU(0):   %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %105:gr32, debug-location !395 :: (store 4 into %ir.j); fft3d.c:216:24

********** MI Scheduling **********
fftXYZ:%bb.55 for.cond134
  From: %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
    To: JCC_1 %bb.57, 15, implicit $eflags, debug-location !401; fft3d.c:216:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%106
  Single Issue       : false;
SU(1):   CMP32rm %106:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !400 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%106
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.57, 15, implicit $eflags, debug-location !401; fft3d.c:216:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %106:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !400 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:33
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.55 ***
SU(0):   %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
SU(1):   CMP32rm %106:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !400 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:33

********** MI Scheduling **********
fftXYZ:%bb.56 for.body136
  From: %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
    To: JMP_1 %bb.55, debug-location !416; fft3d.c:216:17
 RegionInstrs: 22
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=1
FR32X=1
GR16=14
Live In: %117 %1 %118 
Live Out: %117 %1 %118 
Live Thru: GR16=6
  LiveReg: %117
  UpdateRegP: SU(19) MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %1
  UpdateRegP: SU(13) %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to 
  LiveReg: %118
  UpdateRegP: SU(9) %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to 
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
Constraining copy SU(1)
  Local use SU(20) -> SU(1)
  Local use SU(16) -> SU(1)
SU(0):   %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(20): Data Latency=4 Reg=%242
    SU(16): Data Latency=4 Reg=%242
    SU(1): Data Latency=4 Reg=%242
    SU(21): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=%242
    SU(20): Ord  Latency=0 Weak
    SU(16): Ord  Latency=0 Weak
  Successors:
    SU(2): Data Latency=0 Reg=%110
    SU(2): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(1): Data Latency=0 Reg=%110
    SU(1): Out  Latency=0
  Successors:
    SU(6): Data Latency=4 Reg=%110
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %120:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !407 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(9): Data Latency=4 Reg=%120
    SU(5): Data Latency=4 Reg=%120
    SU(9): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(4):   %114:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(5): Data Latency=4 Reg=%114
    SU(5): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(4): Data Latency=4 Reg=%114
    SU(4): Out  Latency=0
    SU(3): Data Latency=4 Reg=%120
  Successors:
    SU(6): Data Latency=1 Reg=%114
    SU(6): Out  Latency=0
    SU(9): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(6):   %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 3
  Predecessors:
    SU(5): Data Latency=1 Reg=%114
    SU(5): Out  Latency=0
    SU(2): Data Latency=4 Reg=%110
  Successors:
    SU(7): Data Latency=1 Reg=%114
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=%114
  Successors:
    SU(8): Data Latency=1 Reg=%116
    SU(8): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=%116
    SU(7): Out  Latency=0
  Successors:
    SU(19): Data Latency=1 Reg=%116
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(5): Anti Latency=0
    SU(3): Data Latency=4 Reg=%120
    SU(3): Out  Latency=0
  Successors:
    SU(10): Data Latency=1 Reg=%120
    SU(10): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(9): Data Latency=1 Reg=%120
    SU(9): Out  Latency=0
  Successors:
    SU(11): Data Latency=1 Reg=%120
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(10): Data Latency=1 Reg=%120
    SU(10): Out  Latency=0
  Successors:
    SU(15): Data Latency=4 Reg=%120
  Pressure Diff      : 
  Single Issue       : false;
SU(12):   %124:gr64_nosp = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !413 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(13): Data Latency=4 Reg=%124
    SU(13): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(13):   %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(12): Data Latency=4 Reg=%124
    SU(12): Out  Latency=0
  Successors:
    SU(14): Data Latency=1 Reg=%124
    SU(14): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(13): Data Latency=1 Reg=%124
    SU(13): Out  Latency=0
  Successors:
    SU(15): Data Latency=1 Reg=%124
    SU(15): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(11): Data Latency=4 Reg=%120
    SU(14): Out  Latency=0
    SU(14): Data Latency=1 Reg=%124
  Successors:
    SU(18): Data Latency=1 Reg=%124
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=%242
  Successors:
    SU(17): Data Latency=0 Reg=%126
    SU(17): Out  Latency=0
    SU(1): Ord  Latency=0 Weak
  Pressure Diff      : 
  Single Issue       : false;
SU(17):   %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(16): Data Latency=0 Reg=%126
    SU(16): Out  Latency=0
  Successors:
    SU(18): Data Latency=1 Reg=%126
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 4
  Predecessors:
    SU(15): Data Latency=1 Reg=%124
    SU(17): Data Latency=1 Reg=%126
  Successors:
    SU(19): Data Latency=4 Reg=%127
    SU(21): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(19):   MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(18): Data Latency=4 Reg=%127
    SU(18): Ord  Latency=0 Memory
    SU(8): Data Latency=1 Reg=%116
  Pressure Diff      : FR32 1    FR32X 1    GR16 2
  Single Issue       : false;
SU(20):   %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=%242
  Successors:
    SU(21): Data Latency=1 Reg=%128
    SU(1): Ord  Latency=0 Weak
  Pressure Diff      : 
  Single Issue       : false;
SU(21):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(20): Data Latency=1 Reg=%128
    SU(18): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
ExitSU:   JMP_1 %bb.55, debug-location !416; fft3d.c:216:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 15
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 19 
  Cand SU(21) ORDER                              
Pick Bot ORDER     
Scheduling SU(21) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42
Bottom Pressure:
GR16=8
  LiveReg: %128
  UpdateRegP: SU(21) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42
              to 
  Ready @0c
  BotQ.A TopLatency SU(21) 11c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 20 
  Cand SU(19) ORDER                              
Pick Bot WEAK      
Scheduling SU(19) MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %116
  UpdateRegP: SU(19) MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to FR32 1    FR32X 1
  LiveReg: %127
  UpdateRegP: SU(19) MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to 
  Ready @0c
  BotQ.A TopLatency SU(19) 15c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 8 
  Cand SU(20) ORDER                              
  Cand SU(18) WEAK                               
Pick Bot WEAK      
Scheduling SU(18) %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
Bottom Pressure:
GR16=14
  LiveReg: %126
  UpdateRegP: SU(18) %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
              to FR32 -1    FR32X -1    GR16 2
  LiveReg: %124
  UpdateRegP: SU(18) %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
              to FR32 -1    FR32X -1
  Ready @4c
  BotQ.A BotLatency SU(18) 4c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 8 15 17 
  Cand SU(20) ORDER                              
  Cand SU(8) WEAK                               
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=14
  LiveReg: %126
  UpdateRegP: SU(17) %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @5c
  BotQ.A BotLatency SU(17) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 8 15 16 
  Cand SU(20) ORDER                              
  Cand SU(8) WEAK                               
Pick Bot WEAK      
Scheduling SU(8) %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
Bottom Pressure:
GR16=14
  LiveReg: %116
  UpdateRegP: SU(8) %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
              to GR16 -2
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 15 7 
  Cand SU(20) ORDER                              
  Cand SU(15) WEAK                               
  Cand SU(7) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(7) %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
Bottom Pressure:
GR16=14
  LiveReg: %114
  UpdateRegP: SU(7) %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
              to GR16 -2
  Ready @2c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 15 6 
  Cand SU(20) ORDER                              
  Cand SU(15) WEAK                               
Pick Bot WEAK      
Scheduling SU(15) %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=16
  LiveReg: %124
  UpdateRegP: SU(15) %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to 
  LiveReg: %120
  UpdateRegP: SU(15) %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 11 14 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(11) REG-MAX                            
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=16
  LiveReg: %124
  UpdateRegP: SU(14) %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @6c
  BotQ.A BotLatency SU(14) 6c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 11 13 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(11) REG-MAX                            
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=16
  LiveReg: %124
  UpdateRegP: SU(13) %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @7c
  BotQ.A BotLatency SU(13) 7c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 11 12 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(11) REG-MAX                            
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %124:gr64_nosp = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !413 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
Bottom Pressure:
GR16=14
  Ready @11c
  BotQ.A BotLatency SU(12) 11c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 11 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
Bottom Pressure:
GR16=14
  LiveReg: %120
  UpdateRegP: SU(11) %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
              to GR16 -2
  Ready @9c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 10 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=14
  LiveReg: %120
  UpdateRegP: SU(10) %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @10c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 9 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=14
  LiveReg: %120
  UpdateRegP: SU(5) %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
              to 
  UpdateRegP: SU(9) %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
              to GR16 -2
  Ready @11c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 6 
  Cand SU(20) ORDER                              
  Cand SU(6) WEAK                               
Pick Bot WEAK      
Scheduling SU(6) %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
Bottom Pressure:
GR16=16
  LiveReg: %114
  UpdateRegP: SU(6) %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
              to 
  LiveReg: %110
  UpdateRegP: SU(6) %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
              to GR16 -2
  Ready @3c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 5 2 
  Cand SU(20) ORDER                              
  Cand SU(5) WEAK                               
Pick Bot WEAK      
Scheduling SU(5) %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
Bottom Pressure:
GR16=16
  LiveReg: %114
  UpdateRegP: SU(5) %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
              to GR16 -2
  Ready @11c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 2 4 3 
  Cand SU(20) ORDER                              
  Cand SU(2) WEAK                               
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %114:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
Bottom Pressure:
GR16=14
  Ready @15c
  BotQ.A BotLatency SU(4) 15c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 2 3 
  Cand SU(20) ORDER                              
  Cand SU(2) WEAK                               
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %120:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !407 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
Bottom Pressure:
GR16=12
  Ready @15c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 2 
  Cand SU(20) ORDER                              
  Cand SU(2) WEAK                               
Pick Bot WEAK      
Scheduling SU(2) %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
Bottom Pressure:
GR16=12
  LiveReg: %110
  UpdateRegP: SU(2) %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
              to GR16 -2
  Ready @7c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 1 
  Cand SU(20) ORDER                              
  Cand SU(1) WEAK                               
Pick Bot WEAK      
Scheduling SU(1) %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
Bottom Pressure:
GR16=12
  LiveReg: %242
  UpdateRegP: SU(1) %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
              to GR16 -2
  UpdateRegP: SU(16) %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
              to GR16 -2
  UpdateRegP: SU(20) %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
              to GR16 -2
  Ready @7c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 16 
  Cand SU(20) ORDER                              
Pick Bot ORDER     
Scheduling SU(20) %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
Bottom Pressure:
GR16=10
  Ready @4c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Scheduling SU(16) %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
Bottom Pressure:
GR16=8
  Ready @5c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
Bottom Pressure:
GR16=6
  Ready @11c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.56 ***
SU(0):   %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
SU(16):   %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
SU(20):   %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
SU(1):   %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
SU(2):   %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
SU(3):   %120:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !407 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
SU(4):   %114:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
SU(5):   %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
SU(6):   %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
SU(9):   %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(10):   %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(11):   %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
SU(12):   %124:gr64_nosp = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !413 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
SU(13):   %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(14):   %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(15):   %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(7):   %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
SU(8):   %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
SU(17):   %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
SU(18):   %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
SU(19):   MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
SU(21):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42

********** MI Scheduling **********
fftXYZ:%bb.58 for.end153
  From: MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
    To: CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !429; fft3d.c:220:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $edi = COPY %68:gr32, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $esi = COPY %69:gr32, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $edx = COPY %70:gr32, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $ecx = COPY %71:gr32, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $r8d = COPY %72:gr32, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !429; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !429; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 5 4 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(5) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(5) $r8d = COPY %72:gr32, debug-location !429; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 4 3 2 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) $ecx = COPY %71:gr32, debug-location !429; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 2 3 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) $edx = COPY %70:gr32, debug-location !429; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 2 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $esi = COPY %69:gr32, debug-location !429; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 1 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(1) $edi = COPY %68:gr32, debug-location !429; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !429; fft3d.c:220:13
  Ready @1c
  BotQ.A BotLatency SU(6) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
SU(6):   $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !429; fft3d.c:220:13
SU(1):   $edi = COPY %68:gr32, debug-location !429; fft3d.c:220:13
SU(2):   $esi = COPY %69:gr32, debug-location !429; fft3d.c:220:13
SU(3):   $edx = COPY %70:gr32, debug-location !429; fft3d.c:220:13
SU(4):   $ecx = COPY %71:gr32, debug-location !429; fft3d.c:220:13
SU(5):   $r8d = COPY %72:gr32, debug-location !429; fft3d.c:220:13

********** MI Scheduling **********
fftXYZ:%bb.58 for.end153
  From: %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
    To: ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %69:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !424 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %70:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !425 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %71:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !426 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %72:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !427 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %73:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !428 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 3 2 1 0 
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %73:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !428 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 4 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %72:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !427 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %71:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !426 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  Ready @3c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %70:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !425 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  Ready @3c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %69:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !424 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  Ready @3c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  Ready @3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
SU(1):   %69:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !424 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
SU(2):   %70:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !425 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
SU(3):   %71:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !426 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
SU(4):   %72:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !427 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
SU(5):   %73:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !428 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59

********** MI Scheduling **********
fftXYZ:%bb.59 for.cond154
  From: %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
    To: JCC_1 %bb.64, 15, implicit $eflags, debug-location !438; fft3d.c:221:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%78
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %78:gr32 = DEC32r %78:gr32(tied-def 0), implicit-def dead $eflags, debug-location !436; fft3d.c:221:33
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%78
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%78
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   CMP32mr %stack.9.i, 1, $noreg, 0, $noreg, %78:gr32, implicit-def $eflags, debug-location !437 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%78
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.64, 15, implicit $eflags, debug-location !438; fft3d.c:221:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) CMP32mr %stack.9.i, 1, $noreg, 0, $noreg, %78:gr32, implicit-def $eflags, debug-location !437 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:27
  Ready @4c
  BotQ.A TopLatency SU(2) 5c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %78:gr32 = DEC32r %78:gr32(tied-def 0), implicit-def dead $eflags, debug-location !436; fft3d.c:221:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.59 ***
SU(0):   %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
SU(1):   %78:gr32 = DEC32r %78:gr32(tied-def 0), implicit-def dead $eflags, debug-location !436; fft3d.c:221:33
SU(2):   CMP32mr %stack.9.i, 1, $noreg, 0, $noreg, %78:gr32, implicit-def $eflags, debug-location !437 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:27

********** MI Scheduling **********
fftXYZ:%bb.60 for.body157
  From: %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%81
  Single Issue       : false;
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %81:gr32, debug-location !442 :: (store 4 into %ir.j); fft3d.c:222:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%81
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %81:gr32, debug-location !442 :: (store 4 into %ir.j); fft3d.c:222:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.60 ***
SU(0):   %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
SU(1):   MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %81:gr32, debug-location !442 :: (store 4 into %ir.j); fft3d.c:222:24

********** MI Scheduling **********
fftXYZ:%bb.61 for.cond158
  From: %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
    To: JCC_1 %bb.63, 15, implicit $eflags, debug-location !448; fft3d.c:222:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%82
  Single Issue       : false;
SU(1):   CMP32rm %82:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !447 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%82
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.63, 15, implicit $eflags, debug-location !448; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %82:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !447 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:33
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.61 ***
SU(0):   %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
SU(1):   CMP32rm %82:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !447 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:33

********** MI Scheduling **********
fftXYZ:%bb.62 for.body160
  From: %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
    To: JMP_1 %bb.61, debug-location !470; fft3d.c:222:17
 RegionInstrs: 22
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=1
FR32X=1
GR16=14
Live In: %117 
Live Out: %117 
Live Thru: GR16=2
  LiveReg: %117
  UpdateRegP: SU(19) %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
              to FR32 -1    FR32X -1    GR16 2
Top Pressure:
GR16=2
Bottom Pressure:
GR16=2
Excess PSets: 
SU(0):   %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(20): Data Latency=4 Reg=%84
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %85:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !451 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(13): Data Latency=4 Reg=%85
    SU(10): Data Latency=4 Reg=%85
    SU(13): Out  Latency=0
    SU(21): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %88:gr64 = MOVSX64rm32 %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !452 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 17
  Successors:
    SU(3): Data Latency=4 Reg=%88
    SU(3): Out  Latency=0
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(3):   %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 13
  Predecessors:
    SU(2): Data Latency=4 Reg=%88
    SU(2): Out  Latency=0
  Successors:
    SU(9): Data Latency=1 Reg=%88
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %89:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !454 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 17
  Successors:
    SU(8): Data Latency=4 Reg=%89
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %94:gr64_nosp = MOVSX64rm32 %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !455 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 18
  Successors:
    SU(7): Data Latency=4 Reg=%94
    SU(7): Out  Latency=0
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(6):   %91:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !456 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 18
  Successors:
    SU(15): Data Latency=4 Reg=%91
    SU(7): Data Latency=4 Reg=%91
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(7):   %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 14
  Predecessors:
    SU(6): Data Latency=4 Reg=%91
    SU(5): Data Latency=4 Reg=%94
    SU(5): Out  Latency=0
  Successors:
    SU(8): Data Latency=1 Reg=%94
    SU(8): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 13
  Predecessors:
    SU(7): Data Latency=1 Reg=%94
    SU(7): Out  Latency=0
    SU(4): Data Latency=4 Reg=%89
  Successors:
    SU(9): Data Latency=1 Reg=%94
    SU(9): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(9):   %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 12
  Predecessors:
    SU(8): Data Latency=1 Reg=%94
    SU(8): Out  Latency=0
    SU(3): Data Latency=1 Reg=%88
  Successors:
    SU(10): Data Latency=1 Reg=%94
    SU(10): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 11
  Predecessors:
    SU(9): Data Latency=1 Reg=%94
    SU(9): Out  Latency=0
    SU(1): Data Latency=4 Reg=%85
  Successors:
    SU(11): Data Latency=1 Reg=%94
    SU(11): Out  Latency=0
    SU(13): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(10): Data Latency=1 Reg=%94
    SU(10): Out  Latency=0
  Successors:
    SU(20): Data Latency=1 Reg=%94
  Pressure Diff      : 
  Single Issue       : false;
SU(12):   %243:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(13): Data Latency=4 Reg=%243
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(13):   %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 11
  Predecessors:
    SU(12): Data Latency=4 Reg=%243
    SU(10): Anti Latency=0
    SU(1): Data Latency=4 Reg=%85
    SU(1): Out  Latency=0
  Successors:
    SU(16): Data Latency=1 Reg=%85
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(14):   %100:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(15): Data Latency=4 Reg=%100
    SU(15): Out  Latency=0
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(15):   %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(14): Data Latency=4 Reg=%100
    SU(14): Out  Latency=0
    SU(6): Data Latency=4 Reg=%91
  Successors:
    SU(16): Data Latency=1 Reg=%100
    SU(16): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 10
  Predecessors:
    SU(13): Data Latency=1 Reg=%85
    SU(15): Out  Latency=0
    SU(15): Data Latency=1 Reg=%100
  Successors:
    SU(17): Data Latency=1 Reg=%100
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(17):   %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 9
  Predecessors:
    SU(16): Data Latency=1 Reg=%100
  Successors:
    SU(18): Data Latency=1 Reg=%102
    SU(18): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 8
  Predecessors:
    SU(17): Data Latency=1 Reg=%102
    SU(17): Out  Latency=0
  Successors:
    SU(19): Data Latency=1 Reg=%102
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 7
  Predecessors:
    SU(18): Data Latency=1 Reg=%102
  Successors:
    SU(20): Data Latency=4 Reg=%104
    SU(20): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 2
  Single Issue       : false;
SU(20):   MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  # preds left       : 12
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 3
  Predecessors:
    SU(19): Data Latency=4 Reg=%104
    SU(19): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Data Latency=1 Reg=%94
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Data Latency=4 Reg=%84
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(21): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(21):   INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !469 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 15
  Height             : 3
  Predecessors:
    SU(20): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JMP_1 %bb.61, debug-location !470; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 18
  Height             : 0
  Predecessors:
    SU(21): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 18
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 
Scheduling SU(21) INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !469 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:222:42
Bottom Pressure:
GR16=2
  Ready @3c
  BotQ.A TopLatency SU(21) 15c
  BotQ.A BotLatency SU(21) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 
Scheduling SU(20) MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
Bottom Pressure:
FR32=1
FR32X=1
GR16=6
  LiveReg: %84
  UpdateRegP: SU(20) MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %94
  UpdateRegP: SU(20) MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to FR32 1    FR32X 1
  LiveReg: %104
  UpdateRegP: SU(20) MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to 
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 11 0 
  Cand SU(19) ORDER                              
Pick Bot ORDER     
Scheduling SU(19) %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
Bottom Pressure:
GR16=8
  LiveReg: %102
  UpdateRegP: SU(19) %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
              to FR32 -1    FR32X -1
  Ready @7c
  BotQ.A BotLatency SU(19) 7c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 18 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
Bottom Pressure:
GR16=8
  LiveReg: %102
  UpdateRegP: SU(18) %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
              to GR16 -2
  Ready @8c
  BotQ.A BotLatency SU(18) 8c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 17 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
Bottom Pressure:
GR16=8
  LiveReg: %100
  UpdateRegP: SU(17) %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
              to GR16 -2
  Ready @9c
  BotQ.A BotLatency SU(17) 9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 16 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
Bottom Pressure:
GR16=10
  LiveReg: %100
  UpdateRegP: SU(16) %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
              to 
  LiveReg: %85
  UpdateRegP: SU(16) %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
              to GR16 -2
  Ready @10c
  BotQ.A BotLatency SU(16) 10c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 13 15 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
Bottom Pressure:
GR16=12
  LiveReg: %100
  UpdateRegP: SU(15) %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
              to 
  LiveReg: %91
  UpdateRegP: SU(7) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
              to 
  UpdateRegP: SU(15) %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
              to GR16 -2
  Ready @11c
  BotQ.A BotLatency SU(15) 11c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 13 14 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %100:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
Bottom Pressure:
GR16=10
  Ready @15c
  BotQ.A BotLatency SU(14) 15c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 13 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
Bottom Pressure:
GR16=12
  LiveReg: %85
  UpdateRegP: SU(10) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
              to 
  UpdateRegP: SU(13) %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
              to 
  LiveReg: %243
  UpdateRegP: SU(13) %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
              to GR16 -2
  Ready @11c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 12 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %243:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
Bottom Pressure:
GR16=10
  Ready @15c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 11 
  Cand SU(0) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
Bottom Pressure:
GR16=10
  LiveReg: %94
  UpdateRegP: SU(11) %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
              to GR16 -2
  Ready @4c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 10 
  Cand SU(0) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
Bottom Pressure:
GR16=10
  LiveReg: %94
  UpdateRegP: SU(10) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
              to GR16 -2
  Ready @11c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 9 1 
  Cand SU(0) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
Bottom Pressure:
GR16=12
  LiveReg: %94
  UpdateRegP: SU(9) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
              to 
  LiveReg: %88
  UpdateRegP: SU(9) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
              to GR16 -2
  Ready @12c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 8 3 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
Bottom Pressure:
GR16=14
  LiveReg: %94
  UpdateRegP: SU(8) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
              to 
  LiveReg: %89
  UpdateRegP: SU(8) %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
              to GR16 -2
  Ready @13c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 7 4 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
Bottom Pressure:
GR16=14
  LiveReg: %94
  UpdateRegP: SU(7) %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
              to GR16 -2
  Ready @14c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 4 6 5 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %91:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !456 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
Bottom Pressure:
GR16=12
  Ready @18c
  BotQ.A BotLatency SU(6) 18c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 4 5 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %94:gr64_nosp = MOVSX64rm32 %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !455 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
Bottom Pressure:
GR16=10
  Ready @18c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 4 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %89:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !454 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
Bottom Pressure:
GR16=8
  Ready @17c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 3 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
Bottom Pressure:
GR16=8
  LiveReg: %88
  UpdateRegP: SU(3) %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
              to GR16 -2
  Ready @13c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %88:gr64 = MOVSX64rm32 %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !452 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
Bottom Pressure:
GR16=6
  Ready @17c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %85:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !451 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
Bottom Pressure:
GR16=4
  Ready @15c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
Bottom Pressure:
GR16=2
  Ready @7c
BotQ.A @5c
  Retired: 22
  Executed: 5c
  Critical: 5c, 22 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.62 ***
SU(0):   %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
SU(1):   %85:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !451 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
SU(2):   %88:gr64 = MOVSX64rm32 %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !452 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
SU(3):   %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
SU(4):   %89:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !454 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
SU(5):   %94:gr64_nosp = MOVSX64rm32 %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !455 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
SU(6):   %91:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !456 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
SU(7):   %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
SU(8):   %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
SU(9):   %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
SU(10):   %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
SU(11):   %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
SU(12):   %243:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
SU(13):   %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
SU(14):   %100:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
SU(15):   %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
SU(16):   %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
SU(17):   %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
SU(18):   %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
SU(19):   %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
SU(20):   MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
SU(21):   INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !469 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:222:42

********** MI Scheduling **********
fftXYZ:%bb.64 for.end178
  From: %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
    To: JMP_1 %bb.49, debug-location !479; fft3d.c:210:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(1): Data Latency=4 Reg=%80
  Single Issue       : false;
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %80:gr32, implicit-def dead $eflags, debug-location !478 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=%80
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   JMP_1 %bb.49, debug-location !479; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %80:gr32, implicit-def dead $eflags, debug-location !478 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  Ready @3c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  Ready @7c
  BotQ.A BotLatency SU(0) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.64 ***
SU(0):   %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
SU(1):   ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %80:gr32, implicit-def dead $eflags, debug-location !478 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:210:37

********** INTERVALS **********
AH [528r,560r:2)[560r,568r:8)[832r,912r:7)[4192r,4224r:1)[4224r,4232r:6)[4496r,4576r:5)[6288r,6320r:0)[6320r,6328r:4)[6592r,6672r:3)  0@6288r 1@4192r 2@528r 3@6592r 4@6320r 5@4496r 6@4224r 7@832r 8@560r
AL [528r,560r:2)[560r,568r:8)[832r,912r:7)[4192r,4224r:1)[4224r,4232r:6)[4496r,4576r:5)[6288r,6320r:0)[6320r,6328r:4)[6592r,6672r:3)  0@6288r 1@4192r 2@528r 3@6592r 4@6320r 5@4496r 6@4224r 7@832r 8@560r
CH [0B,48r:0)[2896r,2912r:1)[5808r,5856r:2)[8640r,8656r:3)  0@0B-phi 1@2896r 2@5808r 3@8640r
CL [0B,48r:0)[2896r,2912r:1)[5808r,5856r:2)[8640r,8656r:3)  0@0B-phi 1@2896r 2@5808r 3@8640r
DH [0B,64r:0)[544r,560r:9)[560r,560d:8)[2888r,2912r:1)[4208r,4224r:7)[4224r,4224d:6)[5792r,5856r:2)[6304r,6320r:5)[6320r,6320d:4)[8632r,8656r:3)  0@0B-phi 1@2888r 2@5792r 3@8632r 4@6320r 5@6304r 6@4224r 7@4208r 8@560r 9@544r
DIL [0B,96r:0)[384r,400r:14)[816r,832r:13)[1040r,1056r:12)[2872r,2912r:1)[4048r,4064r:11)[4480r,4496r:10)[4704r,4720r:9)[5760r,5856r:2)[6144r,6160r:8)[6576r,6592r:7)[6800r,6816r:6)[8616r,8656r:3)[9808r,9824r:5)[10016r,10032r:4)  0@0B-phi 1@2872r 2@5760r 3@8616r 4@10016r 5@9808r 6@6800r 7@6576r 8@6144r 9@4704r 10@4480r 11@4048r 12@1040r 13@816r 14@384r
DIH [0B,96r:0)[384r,400r:14)[816r,832r:13)[1040r,1056r:12)[2872r,2912r:1)[4048r,4064r:11)[4480r,4496r:10)[4704r,4720r:9)[5760r,5856r:2)[6144r,6160r:8)[6576r,6592r:7)[6800r,6816r:6)[8616r,8656r:3)[9808r,9824r:5)[10016r,10032r:4)  0@0B-phi 1@2872r 2@5760r 3@8616r 4@10016r 5@9808r 6@6800r 7@6576r 8@6144r 9@4704r 10@4480r 11@4048r 12@1040r 13@816r 14@384r
DL [0B,64r:0)[544r,560r:9)[560r,560d:8)[2888r,2912r:1)[4208r,4224r:7)[4224r,4224d:6)[5792r,5856r:2)[6304r,6320r:5)[6320r,6320d:4)[8632r,8656r:3)  0@0B-phi 1@2888r 2@5792r 3@8632r 4@6320r 5@6304r 6@4224r 7@4208r 8@560r 9@544r
HAX [528r,560r:2)[560r,568r:8)[832r,912r:7)[4192r,4224r:1)[4224r,4232r:6)[4496r,4576r:5)[6288r,6320r:0)[6320r,6328r:4)[6592r,6672r:3)  0@6288r 1@4192r 2@528r 3@6592r 4@6320r 5@4496r 6@4224r 7@832r 8@560r
HCX [0B,48r:0)[2896r,2912r:1)[5808r,5856r:2)[8640r,8656r:3)  0@0B-phi 1@2896r 2@5808r 3@8640r
HDI [0B,96r:0)[384r,400r:14)[816r,832r:13)[1040r,1056r:12)[2872r,2912r:1)[4048r,4064r:11)[4480r,4496r:10)[4704r,4720r:9)[5760r,5856r:2)[6144r,6160r:8)[6576r,6592r:7)[6800r,6816r:6)[8616r,8656r:3)[9808r,9824r:5)[10016r,10032r:4)  0@0B-phi 1@2872r 2@5760r 3@8616r 4@10016r 5@9808r 6@6800r 7@6576r 8@6144r 9@4704r 10@4480r 11@4048r 12@1040r 13@816r 14@384r
HDX [0B,64r:0)[544r,560r:9)[560r,560d:8)[2888r,2912r:1)[4208r,4224r:7)[4224r,4224d:6)[5792r,5856r:2)[6304r,6320r:5)[6320r,6320d:4)[8632r,8656r:3)  0@0B-phi 1@2888r 2@5792r 3@8632r 4@6320r 5@6304r 6@4224r 7@4208r 8@560r 9@544r
EFLAGS [256r,256d:168)[288r,304r:167)[352r,352d:166)[416r,416d:165)[432r,432d:164)[464r,464d:163)[544r,544d:2)[560r,560d:162)[608r,624r:161)[752r,752d:160)[800r,800d:159)[848r,848d:158)[864r,864d:157)[896r,896d:156)[944r,960r:155)[1008r,1008d:154)[1072r,1072d:153)[1088r,1088d:152)[1120r,1120d:151)[1200r,1200d:18)[1248r,1264r:150)[1360r,1376r:48)[1520r,1536r:46)[1616r,1616d:45)[1712r,1712d:44)[1744r,1744d:43)[1824r,1840r:42)[1936r,1952r:22)[2064r,2064d:9)[2144r,2144d:8)[2176r,2176d:20)[2224r,2224d:19)[2272r,2272d:17)[2304r,2304d:16)[2336r,2336d:15)[2368r,2368d:14)[2400r,2400d:13)[2432r,2432d:12)[2536r,2536d:11)[2592r,2592d:21)[2736r,2736d:41)[2920r,2920d:40)[2928r,2928d:39)[2944r,2944d:38)[3024r,3040r:37)[3136r,3152r:35)[3232r,3232d:33)[3264r,3264d:32)[3296r,3296d:31)[3328r,3328d:30)[3392r,3392d:29)[3424r,3424d:28)[3456r,3456d:27)[3616r,3616d:6)[3624r,3624d:26)[3640r,3640d:7)[3656r,3656d:25)[3696r,3696d:24)[3744r,3744d:23)[3792r,3792d:34)[3856r,3856d:36)[3904r,3904d:47)[3952r,3968r:149)[4016r,4016d:148)[4080r,4080d:147)[4096r,4096d:146)[4128r,4128d:145)[4208r,4208d:1)[4224r,4224d:144)[4272r,4288r:143)[4416r,4416d:142)[4464r,4464d:141)[4512r,4512d:140)[4528r,4528d:139)[4560r,4560d:138)[4608r,4624r:137)[4672r,4672d:136)[4736r,4736d:135)[4752r,4752d:134)[4784r,4784d:133)[4848r,4848d:59)[4896r,4912r:132)[5008r,5024r:66)[5168r,5184r:64)[5264r,5264d:63)[5344r,5344d:62)[5376r,5376d:61)[5488r,5488d:60)[5536r,5536d:58)[5568r,5568d:57)[5600r,5600d:56)[5648r,5648d:55)[5680r,5680d:54)[5712r,5712d:53)[5872r,5872d:52)[5888r,5888d:51)[5920r,5920d:50)[5952r,5952d:49)[6000r,6000d:65)[6048r,6064r:131)[6112r,6112d:130)[6176r,6176d:129)[6192r,6192d:128)[6224r,6224d:127)[6304r,6304d:0)[6320r,6320d:126)[6368r,6384r:125)[6512r,6512d:124)[6560r,6560d:123)[6608r,6608d:122)[6624r,6624d:121)[6656r,6656d:120)[6704r,6720r:119)[6768r,6768d:118)[6832r,6832d:117)[6848r,6848d:116)[6880r,6880d:115)[6960r,6960d:74)[7008r,7024r:114)[7120r,7136r:103)[7280r,7296r:101)[7376r,7376d:100)[7456r,7456d:99)[7488r,7488d:98)[7568r,7584r:97)[7696r,7712r:79)[8280r,8280d:77)[8304r,8304d:5)[8312r,8312d:76)[8320r,8320d:73)[8328r,8328d:72)[8336r,8336d:71)[8352r,8352d:70)[8360r,8360d:69)[8368r,8368d:68)[8384r,8384d:75)[8392r,8392d:67)[8440r,8440d:78)[8512r,8512d:96)[8664r,8664d:95)[8672r,8672d:94)[8688r,8688d:93)[8768r,8768d:92)[8784r,8800r:10)[8912r,8928r:90)[9056r,9056d:88)[9152r,9152d:87)[9184r,9184d:86)[9216r,9216d:85)[9248r,9248d:84)[9280r,9280d:83)[9328r,9328d:4)[9376r,9376d:3)[9408r,9408d:82)[9456r,9456d:81)[9504r,9504d:80)[9552r,9552d:89)[9616r,9616d:91)[9664r,9664d:102)[9712r,9728r:113)[9776r,9776d:112)[9840r,9840d:111)[9856r,9856d:110)[9888r,9888d:109)[9920r,9936r:108)[9984r,9984d:107)[10048r,10048d:106)[10064r,10064d:105)[10096r,10096d:104)  0@6304r 1@4208r 2@544r 3@9376r 4@9328r 5@8304r 6@3616r 7@3640r 8@2144r 9@2064r 10@8784r 11@2536r 12@2432r 13@2400r 14@2368r 15@2336r 16@2304r 17@2272r 18@1200r 19@2224r 20@2176r 21@2592r 22@1936r 23@3744r 24@3696r 25@3656r 26@3624r 27@3456r 28@3424r 29@3392r 30@3328r 31@3296r 32@3264r 33@3232r 34@3792r 35@3136r 36@3856r 37@3024r 38@2944r 39@2928r 40@2920r 41@2736r 42@1824r 43@1744r 44@1712r 45@1616r 46@1520r 47@3904r 48@1360r 49@5952r 50@5920r 51@5888r 52@5872r 53@5712r 54@5680r 55@5648r 56@5600r 57@5568r 58@5536r 59@4848r 60@5488r 61@5376r 62@5344r 63@5264r 64@5168r 65@6000r 66@5008r 67@8392r 68@8368r 69@8360r 70@8352r 71@8336r 72@8328r 73@8320r 74@6960r 75@8384r 76@8312r 77@8280r 78@8440r 79@7696r 80@9504r 81@9456r 82@9408r 83@9280r 84@9248r 85@9216r 86@9184r 87@9152r 88@9056r 89@9552r 90@8912r 91@9616r 92@8768r 93@8688r 94@8672r 95@8664r 96@8512r 97@7568r 98@7488r 99@7456r 100@7376r 101@7280r 102@9664r 103@7120r 104@10096r 105@10064r 106@10048r 107@9984r 108@9920r 109@9888r 110@9856r 111@9840r 112@9776r 113@9712r 114@7008r 115@6880r 116@6848r 117@6832r 118@6768r 119@6704r 120@6656r 121@6624r 122@6608r 123@6560r 124@6512r 125@6368r 126@6320r 127@6224r 128@6192r 129@6176r 130@6112r 131@6048r 132@4896r 133@4784r 134@4752r 135@4736r 136@4672r 137@4608r 138@4560r 139@4528r 140@4512r 141@4464r 142@4416r 143@4272r 144@4224r 145@4128r 146@4096r 147@4080r 148@4016r 149@3952r 150@1248r 151@1120r 152@1088r 153@1072r 154@1008r 155@944r 156@896r 157@864r 158@848r 159@800r 160@752r 161@608r 162@560r 163@464r 164@432r 165@416r 166@352r 167@288r 168@256r
SIL [0B,80r:0)[2880r,2912r:1)[5776r,5856r:2)[8624r,8656r:3)  0@0B-phi 1@2880r 2@5776r 3@8624r
SIH [0B,80r:0)[2880r,2912r:1)[5776r,5856r:2)[8624r,8656r:3)  0@0B-phi 1@2880r 2@5776r 3@8624r
HSI [0B,80r:0)[2880r,2912r:1)[5776r,5856r:2)[8624r,8656r:3)  0@0B-phi 1@2880r 2@5776r 3@8624r
SPL [352r,352d:69)[400r,400d:68)[416r,416d:67)[432r,432d:66)[464r,464d:65)[800r,800d:64)[832r,832d:63)[848r,848d:62)[864r,864d:61)[896r,896d:60)[1008r,1008d:59)[1056r,1056d:58)[1072r,1072d:57)[1088r,1088d:56)[1120r,1120d:55)[2736r,2736d:4)[2912r,2912d:3)[2920r,2920d:2)[2928r,2928d:1)[2944r,2944d:0)[4016r,4016d:54)[4064r,4064d:53)[4080r,4080d:52)[4096r,4096d:51)[4128r,4128d:50)[4464r,4464d:49)[4496r,4496d:48)[4512r,4512d:47)[4528r,4528d:46)[4560r,4560d:45)[4672r,4672d:44)[4720r,4720d:43)[4736r,4736d:42)[4752r,4752d:41)[4784r,4784d:40)[5712r,5712d:9)[5856r,5856d:8)[5872r,5872d:7)[5888r,5888d:6)[5920r,5920d:5)[6112r,6112d:39)[6160r,6160d:38)[6176r,6176d:37)[6192r,6192d:36)[6224r,6224d:35)[6560r,6560d:34)[6592r,6592d:33)[6608r,6608d:32)[6624r,6624d:31)[6656r,6656d:30)[6768r,6768d:29)[6816r,6816d:28)[6832r,6832d:27)[6848r,6848d:26)[6880r,6880d:25)[8512r,8512d:14)[8656r,8656d:13)[8664r,8664d:12)[8672r,8672d:11)[8688r,8688d:10)[9776r,9776d:24)[9824r,9824d:23)[9840r,9840d:22)[9856r,9856d:21)[9888r,9888d:20)[9984r,9984d:19)[10032r,10032d:18)[10048r,10048d:17)[10064r,10064d:16)[10096r,10096d:15)  0@2944r 1@2928r 2@2920r 3@2912r 4@2736r 5@5920r 6@5888r 7@5872r 8@5856r 9@5712r 10@8688r 11@8672r 12@8664r 13@8656r 14@8512r 15@10096r 16@10064r 17@10048r 18@10032r 19@9984r 20@9888r 21@9856r 22@9840r 23@9824r 24@9776r 25@6880r 26@6848r 27@6832r 28@6816r 29@6768r 30@6656r 31@6624r 32@6608r 33@6592r 34@6560r 35@6224r 36@6192r 37@6176r 38@6160r 39@6112r 40@4784r 41@4752r 42@4736r 43@4720r 44@4672r 45@4560r 46@4528r 47@4512r 48@4496r 49@4464r 50@4128r 51@4096r 52@4080r 53@4064r 54@4016r 55@1120r 56@1088r 57@1072r 58@1056r 59@1008r 60@896r 61@864r 62@848r 63@832r 64@800r 65@464r 66@432r 67@416r 68@400r 69@352r
SPH [352r,352d:69)[400r,400d:68)[416r,416d:67)[432r,432d:66)[464r,464d:65)[800r,800d:64)[832r,832d:63)[848r,848d:62)[864r,864d:61)[896r,896d:60)[1008r,1008d:59)[1056r,1056d:58)[1072r,1072d:57)[1088r,1088d:56)[1120r,1120d:55)[2736r,2736d:4)[2912r,2912d:3)[2920r,2920d:2)[2928r,2928d:1)[2944r,2944d:0)[4016r,4016d:54)[4064r,4064d:53)[4080r,4080d:52)[4096r,4096d:51)[4128r,4128d:50)[4464r,4464d:49)[4496r,4496d:48)[4512r,4512d:47)[4528r,4528d:46)[4560r,4560d:45)[4672r,4672d:44)[4720r,4720d:43)[4736r,4736d:42)[4752r,4752d:41)[4784r,4784d:40)[5712r,5712d:9)[5856r,5856d:8)[5872r,5872d:7)[5888r,5888d:6)[5920r,5920d:5)[6112r,6112d:39)[6160r,6160d:38)[6176r,6176d:37)[6192r,6192d:36)[6224r,6224d:35)[6560r,6560d:34)[6592r,6592d:33)[6608r,6608d:32)[6624r,6624d:31)[6656r,6656d:30)[6768r,6768d:29)[6816r,6816d:28)[6832r,6832d:27)[6848r,6848d:26)[6880r,6880d:25)[8512r,8512d:14)[8656r,8656d:13)[8664r,8664d:12)[8672r,8672d:11)[8688r,8688d:10)[9776r,9776d:24)[9824r,9824d:23)[9840r,9840d:22)[9856r,9856d:21)[9888r,9888d:20)[9984r,9984d:19)[10032r,10032d:18)[10048r,10048d:17)[10064r,10064d:16)[10096r,10096d:15)  0@2944r 1@2928r 2@2920r 3@2912r 4@2736r 5@5920r 6@5888r 7@5872r 8@5856r 9@5712r 10@8688r 11@8672r 12@8664r 13@8656r 14@8512r 15@10096r 16@10064r 17@10048r 18@10032r 19@9984r 20@9888r 21@9856r 22@9840r 23@9824r 24@9776r 25@6880r 26@6848r 27@6832r 28@6816r 29@6768r 30@6656r 31@6624r 32@6608r 33@6592r 34@6560r 35@6224r 36@6192r 37@6176r 38@6160r 39@6112r 40@4784r 41@4752r 42@4736r 43@4720r 44@4672r 45@4560r 46@4528r 47@4512r 48@4496r 49@4464r 50@4128r 51@4096r 52@4080r 53@4064r 54@4016r 55@1120r 56@1088r 57@1072r 58@1056r 59@1008r 60@896r 61@864r 62@848r 63@832r 64@800r 65@464r 66@432r 67@416r 68@400r 69@352r
HSP [352r,352d:69)[400r,400d:68)[416r,416d:67)[432r,432d:66)[464r,464d:65)[800r,800d:64)[832r,832d:63)[848r,848d:62)[864r,864d:61)[896r,896d:60)[1008r,1008d:59)[1056r,1056d:58)[1072r,1072d:57)[1088r,1088d:56)[1120r,1120d:55)[2736r,2736d:4)[2912r,2912d:3)[2920r,2920d:2)[2928r,2928d:1)[2944r,2944d:0)[4016r,4016d:54)[4064r,4064d:53)[4080r,4080d:52)[4096r,4096d:51)[4128r,4128d:50)[4464r,4464d:49)[4496r,4496d:48)[4512r,4512d:47)[4528r,4528d:46)[4560r,4560d:45)[4672r,4672d:44)[4720r,4720d:43)[4736r,4736d:42)[4752r,4752d:41)[4784r,4784d:40)[5712r,5712d:9)[5856r,5856d:8)[5872r,5872d:7)[5888r,5888d:6)[5920r,5920d:5)[6112r,6112d:39)[6160r,6160d:38)[6176r,6176d:37)[6192r,6192d:36)[6224r,6224d:35)[6560r,6560d:34)[6592r,6592d:33)[6608r,6608d:32)[6624r,6624d:31)[6656r,6656d:30)[6768r,6768d:29)[6816r,6816d:28)[6832r,6832d:27)[6848r,6848d:26)[6880r,6880d:25)[8512r,8512d:14)[8656r,8656d:13)[8664r,8664d:12)[8672r,8672d:11)[8688r,8688d:10)[9776r,9776d:24)[9824r,9824d:23)[9840r,9840d:22)[9856r,9856d:21)[9888r,9888d:20)[9984r,9984d:19)[10032r,10032d:18)[10048r,10048d:17)[10064r,10064d:16)[10096r,10096d:15)  0@2944r 1@2928r 2@2920r 3@2912r 4@2736r 5@5920r 6@5888r 7@5872r 8@5856r 9@5712r 10@8688r 11@8672r 12@8664r 13@8656r 14@8512r 15@10096r 16@10064r 17@10048r 18@10032r 19@9984r 20@9888r 21@9856r 22@9840r 23@9824r 24@9776r 25@6880r 26@6848r 27@6832r 28@6816r 29@6768r 30@6656r 31@6624r 32@6608r 33@6592r 34@6560r 35@6224r 36@6192r 37@6176r 38@6160r 39@6112r 40@4784r 41@4752r 42@4736r 43@4720r 44@4672r 45@4560r 46@4528r 47@4512r 48@4496r 49@4464r 50@4128r 51@4096r 52@4080r 53@4064r 54@4016r 55@1120r 56@1088r 57@1072r 58@1056r 59@1008r 60@896r 61@864r 62@848r 63@832r 64@800r 65@464r 66@432r 67@416r 68@400r 69@352r
R8B [0B,32r:0)[2904r,2912r:1)[5824r,5856r:2)[8648r,8656r:3)  0@0B-phi 1@2904r 2@5824r 3@8648r
R8BH [0B,32r:0)[2904r,2912r:1)[5824r,5856r:2)[8648r,8656r:3)  0@0B-phi 1@2904r 2@5824r 3@8648r
R8WH [0B,32r:0)[2904r,2912r:1)[5824r,5856r:2)[8648r,8656r:3)  0@0B-phi 1@2904r 2@5824r 3@8648r
R9B [0B,16r:0)[2864r,2912r:1)[5840r,5856r:2)[8608r,8656r:3)  0@0B-phi 1@2864r 2@5840r 3@8608r
R9BH [0B,16r:0)[2864r,2912r:1)[5840r,5856r:2)[8608r,8656r:3)  0@0B-phi 1@2864r 2@5840r 3@8608r
R9WH [0B,16r:0)[2864r,2912r:1)[5840r,5856r:2)[8608r,8656r:3)  0@0B-phi 1@2864r 2@5840r 3@8608r
%0 [208r,9696B:0)  0@208r weight:0.000000e+00
%1 [80r,256r:0)[256r,9696B:1)  0@80r 1@256r weight:0.000000e+00
%2 [96r,112r:0)  0@96r weight:0.000000e+00
%4 [64r,208r:0)  0@64r weight:0.000000e+00
%5 [48r,160r:0)  0@48r weight:0.000000e+00
%6 [32r,176r:0)  0@32r weight:0.000000e+00
%7 [16r,192r:0)  0@16r weight:0.000000e+00
%13 [568r,608r:0)  0@568r weight:0.000000e+00
%15 [672r,688r:0)  0@672r weight:0.000000e+00
%17 [720r,752r:0)[752r,768r:1)  0@720r 1@752r weight:0.000000e+00
%18 [784r,880r:0)  0@784r weight:0.000000e+00
%19 [912r,928r:0)  0@912r weight:0.000000e+00
%21 [1232r,1248r:0)  0@1232r weight:0.000000e+00
%26 [4232r,4272r:0)  0@4232r weight:0.000000e+00
%28 [4336r,4352r:0)  0@4336r weight:0.000000e+00
%30 [4384r,4416r:0)[4416r,4432r:1)  0@4384r 1@4416r weight:0.000000e+00
%31 [4448r,4544r:0)  0@4448r weight:0.000000e+00
%32 [4576r,4592r:0)  0@4576r weight:0.000000e+00
%34 [4880r,4896r:0)  0@4880r weight:0.000000e+00
%39 [6328r,6368r:0)  0@6328r weight:0.000000e+00
%41 [6432r,6448r:0)  0@6432r weight:0.000000e+00
%43 [6480r,6512r:0)[6512r,6528r:1)  0@6480r 1@6512r weight:0.000000e+00
%44 [6544r,6640r:0)  0@6544r weight:0.000000e+00
%45 [6672r,6688r:0)  0@6672r weight:0.000000e+00
%47 [6992r,7008r:0)  0@6992r weight:0.000000e+00
%51 [7104r,7120r:0)  0@7104r weight:0.000000e+00
%55 [7200r,7248r:0)  0@7200r weight:0.000000e+00
%57 [7184r,7248r:0)  0@7184r weight:0.000000e+00
%59 [7248r,7280r:0)  0@7248r weight:0.000000e+00
%62 [7344r,7376r:0)[7376r,7392r:1)  0@7344r 1@7376r weight:0.000000e+00
%65 [7424r,7456r:2)[7456r,7488r:0)[7488r,7504r:1)  0@7456r 1@7488r 2@7424r weight:0.000000e+00
%66 [7552r,7568r:0)  0@7552r weight:0.000000e+00
%68 [8464r,8680r:0)  0@8464r weight:0.000000e+00
%69 [8472r,8680r:0)  0@8472r weight:0.000000e+00
%70 [8480r,8680r:0)  0@8480r weight:0.000000e+00
%71 [8488r,8680r:0)  0@8488r weight:0.000000e+00
%72 [8496r,8680r:0)  0@8496r weight:0.000000e+00
%73 [8504r,8680r:0)  0@8504r weight:0.000000e+00
%78 [8736r,8768r:0)[8768r,8784r:1)  0@8736r 1@8768r weight:0.000000e+00
%80 [9600r,9616r:0)  0@9600r weight:0.000000e+00
%81 [8848r,8864r:0)  0@8848r weight:0.000000e+00
%82 [8896r,8912r:0)  0@8896r weight:0.000000e+00
%84 [8976r,9488r:0)  0@8976r weight:0.000000e+00
%85 [8992r,9328r:0)[9328r,9408r:1)  0@8992r 1@9328r weight:0.000000e+00
%88 [9024r,9056r:0)[9056r,9216r:1)  0@9024r 1@9056r weight:0.000000e+00
%89 [9072r,9184r:0)  0@9072r weight:0.000000e+00
%91 [9104r,9376r:0)  0@9104r weight:0.000000e+00
%94 [9088r,9152r:2)[9152r,9184r:0)[9184r,9216r:1)[9216r,9248r:3)[9248r,9280r:4)[9280r,9488r:5)  0@9152r 1@9184r 2@9088r 3@9216r 4@9248r 5@9280r weight:0.000000e+00
%100 [9344r,9376r:2)[9376r,9408r:0)[9408r,9424r:1)  0@9376r 1@9408r 2@9344r weight:0.000000e+00
%102 [9424r,9456r:0)[9456r,9472r:1)  0@9424r 1@9456r weight:0.000000e+00
%104 [9472r,9488r:0)  0@9472r weight:0.000000e+00
%105 [7632r,7648r:0)  0@7632r weight:0.000000e+00
%106 [7680r,7696r:0)  0@7680r weight:0.000000e+00
%110 [8276r,8280r:0)[8280r,8312r:1)  0@8276r 1@8280r weight:0.000000e+00
%114 [8296r,8304r:2)[8304r,8312r:0)[8312r,8376r:1)  0@8304r 1@8312r 2@8296r weight:0.000000e+00
%116 [8376r,8384r:0)[8384r,8408r:1)  0@8376r 1@8384r weight:0.000000e+00
%117 [6928r,9696B:0)  0@6928r weight:0.000000e+00
%118 [6944r,6960r:0)[6960r,9696B:1)  0@6944r 1@6960r weight:0.000000e+00
%120 [8288r,8320r:2)[8320r,8328r:0)[8328r,8336r:1)[8336r,8368r:3)  0@8320r 1@8328r 2@8288r 3@8336r weight:0.000000e+00
%124 [8344r,8352r:2)[8352r,8360r:0)[8360r,8368r:1)[8368r,8400r:3)  0@8352r 1@8360r 2@8344r 3@8368r weight:0.000000e+00
%126 [8192r,8392r:0)[8392r,8400r:1)  0@8192r 1@8392r weight:0.000000e+00
%127 [8400r,8408r:0)  0@8400r weight:0.000000e+00
%128 [8272r,8416r:0)  0@8272r weight:0.000000e+00
%129 [4992r,5008r:0)  0@4992r weight:0.000000e+00
%133 [5088r,5136r:0)  0@5088r weight:0.000000e+00
%135 [5072r,5136r:0)  0@5072r weight:0.000000e+00
%137 [5136r,5168r:0)  0@5136r weight:0.000000e+00
%140 [5232r,5264r:0)[5264r,5280r:1)  0@5232r 1@5264r weight:0.000000e+00
%143 [5312r,5344r:2)[5344r,5376r:0)[5376r,5904r:1)  0@5344r 1@5376r 2@5312r weight:0.000000e+00
%144 [5408r,5904r:0)  0@5408r weight:0.000000e+00
%145 [5424r,5904r:0)  0@5424r weight:0.000000e+00
%146 [5440r,5904r:0)  0@5440r weight:0.000000e+00
%148 [5456r,5488r:0)[5488r,5904r:1)  0@5456r 1@5488r weight:0.000000e+00
%150 [4832r,4848r:0)[4848r,6032B:1)  0@4832r 1@4848r weight:0.000000e+00
%152 [5504r,5536r:2)[5536r,5568r:0)[5568r,5600r:1)[5600r,5680r:3)  0@5536r 1@5568r 2@5504r 3@5600r weight:0.000000e+00
%156 [5616r,5648r:2)[5648r,5680r:0)[5680r,5904r:1)  0@5648r 1@5680r 2@5616r weight:0.000000e+00
%157 [5696r,5904r:0)  0@5696r weight:0.000000e+00
%159 [5936r,5952r:0)  0@5936r weight:0.000000e+00
%160 [1344r,1360r:0)  0@1344r weight:0.000000e+00
%164 [1440r,1488r:0)  0@1440r weight:0.000000e+00
%166 [1424r,1488r:0)  0@1424r weight:0.000000e+00
%168 [1488r,1520r:0)  0@1488r weight:0.000000e+00
%171 [1584r,1616r:0)[1616r,1632r:1)  0@1584r 1@1616r weight:0.000000e+00
%173 [1680r,1776r:0)  0@1680r weight:0.000000e+00
%175 [1664r,1712r:2)[1712r,1744r:0)[1744r,1760r:1)  0@1712r 1@1744r 2@1664r weight:0.000000e+00
%176 [1808r,1824r:0)  0@1808r weight:0.000000e+00
%178 [2640r,2936r:0)  0@2640r weight:0.000000e+00
%179 [2656r,2936r:0)  0@2656r weight:0.000000e+00
%180 [2672r,2936r:0)  0@2672r weight:0.000000e+00
%181 [2688r,2936r:0)  0@2688r weight:0.000000e+00
%182 [2704r,2936r:0)  0@2704r weight:0.000000e+00
%183 [2720r,2936r:0)  0@2720r weight:0.000000e+00
%186 [2960r,2976r:0)  0@2960r weight:0.000000e+00
%187 [3008r,3024r:0)  0@3008r weight:0.000000e+00
%189 [3840r,3856r:0)  0@3840r weight:0.000000e+00
%190 [3120r,3136r:0)  0@3120r weight:0.000000e+00
%192 [3200r,3264r:0)  0@3200r weight:0.000000e+00
%194 [3216r,3232r:2)[3232r,3264r:0)[3264r,3296r:1)[3296r,3328r:3)[3328r,3456r:4)  0@3232r 1@3264r 2@3216r 3@3296r 4@3328r weight:0.000000e+00
%197 [3344r,3640r:0)[3640r,3656r:1)  0@3344r 1@3640r weight:0.000000e+00
%200 [3376r,3392r:2)[3392r,3424r:0)[3424r,3456r:1)[3456r,3728r:3)  0@3392r 1@3424r 2@3376r 3@3456r weight:0.000000e+00
%202 [3472r,3620r:0)  0@3472r weight:0.000000e+00
%204 [3620r,3624r:0)[3624r,3728r:1)  0@3620r 1@3624r weight:0.000000e+00
%207 [3584r,3616r:2)[3616r,3656r:0)[3656r,3664r:1)  0@3616r 1@3656r 2@3584r weight:0.000000e+00
%209 [3664r,3696r:0)[3696r,3712r:1)  0@3664r 1@3696r weight:0.000000e+00
%211 [3712r,3728r:0)  0@3712r weight:0.000000e+00
%212 [1920r,1936r:0)  0@1920r weight:0.000000e+00
%216 [2048r,2064r:0)[2064r,2176r:1)  0@2048r 1@2064r weight:0.000000e+00
%220 [2112r,2144r:2)[2144r,2176r:0)[2176r,2192r:1)  0@2144r 1@2176r 2@2112r weight:0.000000e+00
%222 [2192r,2224r:0)[2224r,2552r:1)  0@2192r 1@2224r weight:0.000000e+00
%223 [1168r,3936B:0)  0@1168r weight:0.000000e+00
%225 [1184r,1200r:0)[1200r,3936B:1)  0@1184r 1@1200r weight:0.000000e+00
%227 [2240r,2272r:2)[2272r,2304r:0)[2304r,2336r:1)[2336r,2432r:3)  0@2272r 1@2304r 2@2240r 3@2336r weight:0.000000e+00
%230 [2000r,2368r:2)[2368r,2400r:0)[2400r,2432r:1)[2432r,2544r:3)  0@2368r 1@2400r 2@2000r 3@2432r weight:0.000000e+00
%232 [2532r,2536r:0)[2536r,2544r:1)  0@2532r 1@2536r weight:0.000000e+00
%233 [2544r,2552r:0)  0@2544r weight:0.000000e+00
%234 [2528r,2560r:0)  0@2528r weight:0.000000e+00
%235 [2032r,2064r:0)  0@2032r weight:0.000000e+00
%237 [2080r,2532r:0)  0@2080r weight:0.000000e+00
%238 [3632r,3640r:0)  0@3632r weight:0.000000e+00
%242 [7760r,8276r:0)  0@7760r weight:0.000000e+00
%243 [9296r,9328r:0)  0@9296r weight:0.000000e+00
RegMasks: 400r 832r 1056r 2912r 4064r 4496r 4720r 5856r 6160r 6592r 6816r 8656r 9824r 10032r
********** MACHINEINSTRS **********
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-3: size=8, align=16, fixed, at location [SP+24]
  fi#-2: size=8, align=8, fixed, at location [SP+16]
  fi#-1: size=8, align=16, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=4, align=4, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=8, align=8, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: dead
  fi#7: dead
  fi#8: dead
  fi#9: size=4, align=4, at location [SP+8]
  fi#10: size=4, align=4, at location [SP+8]
  fi#11: size=4, align=4, at location [SP+8]
  fi#12: size=4, align=4, at location [SP+8]
  fi#13: size=4, align=4, at location [SP+8]
  fi#14: size=4, align=4, at location [SP+8]
  fi#15: size=4, align=4, at location [SP+8]
  fi#16: size=4, align=4, at location [SP+8]
Function Live Ins: $edi in %2, $esi in %3, $edx in %4, $ecx in %5, $r8 in %6, $r9 in %7

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $edi, $esi, $edx, $ecx, $r8, $r9
16B	  %7:gr64 = COPY $r9
32B	  %6:gr64 = COPY $r8
48B	  %5:gr32 = COPY $ecx
64B	  %4:gr32 = COPY $edx
80B	  undef %1.sub_32bit:gr64_with_sub_8bit = COPY $esi
96B	  %2:gr32 = COPY $edi
112B	  MOV32mr %stack.0.sign.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.sign.addr)
128B	  MOV32mr %stack.1.n1.addr, 1, $noreg, 0, $noreg, %1.sub_32bit:gr64_with_sub_8bit :: (store 4 into %ir.n1.addr)
144B	  MOV32mr %stack.2.n2.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n2.addr)
160B	  MOV32mr %stack.3.n3.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.n3.addr)
176B	  MOV64mr %stack.4.x.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.x.addr)
192B	  MOV64mr %stack.5.xout.addr, 1, $noreg, 0, $noreg, %7:gr64 :: (store 8 into %ir.xout.addr)
208B	  undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %4:gr32, debug-location !60; fft3d.c:142:62
256B	  %1.sub_32bit:gr64_with_sub_8bit = nsw INC32r %1.sub_32bit:gr64_with_sub_8bit(tied-def 0), implicit-def dead $eflags, debug-location !62; fft3d.c:142:69
288B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
304B	  JCC_1 %bb.2, 4, implicit $eflags, debug-location !90; fft3d.c:151:9
320B	  JMP_1 %bb.1, debug-location !90; fft3d.c:151:9

336B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

352B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
384B	  $edi = MOV32ri 3, debug-location !91; fft3d.c:152:9
400B	  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !91; fft3d.c:152:9
416B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
432B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9
448B	  PCN_STACKMAP 0, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !91 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:152:9
464B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !91; fft3d.c:152:9

480B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x40000000), %bb.4(0x40000000); %bb.3(50.00%), %bb.4(50.00%)

528B	  $eax = MOV32ri 8192, debug-location !93; fft3d.c:154:26
544B	  $edx = MOV32r0 implicit-def dead $eflags, debug-location !93; fft3d.c:154:26
560B	  IDIV32m %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !93 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:26
568B	  %13:gr32 = COPY $eax, debug-location !93; fft3d.c:154:26
592B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %13:gr32, debug-location !94 :: (store 4 into @fftblock); fft3d.c:154:14
608B	  CMP32ri8 %13:gr32, 32, implicit-def $eflags, debug-location !97; fft3d.c:155:18
624B	  JCC_1 %bb.4, 12, implicit $eflags, debug-location !98; fft3d.c:155:9
640B	  JMP_1 %bb.3, debug-location !98; fft3d.c:155:9

656B	bb.3.if.then3:
	; predecessors: %bb.2
	  successors: %bb.4(0x80000000); %bb.4(100.00%)

672B	  %15:gr32 = MOV32ri 32
688B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %15:gr32, debug-location !99 :: (store 4 into @fftblock); fft3d.c:156:18

704B	bb.4.if.end4:
	; predecessors: %bb.2, %bb.3
	  successors: %bb.5(0x50000000), %bb.6(0x30000000); %bb.5(62.50%), %bb.6(37.50%)

720B	  %17:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !101 :: (dereferenceable load 4 from @fftblock); fft3d.c:157:12
752B	  %17:gr32 = nsw INC32r %17:gr32(tied-def 0), implicit-def dead $eflags, debug-location !102; fft3d.c:157:21
768B	  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %17:gr32, debug-location !103 :: (store 4 into %ir.blkp); fft3d.c:157:10
784B	  %18:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !104 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:158:17
800B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
816B	  $edi = COPY %18:gr32, debug-location !105; fft3d.c:158:11
832B	  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !105; fft3d.c:158:11
848B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !105; fft3d.c:158:11
864B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !106; fft3d.c:158:9
880B	  PCN_STACKMAP 1, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %18:gr32, implicit-def dead early-clobber $r11, debug-location !106 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:158:9
896B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !106; fft3d.c:158:9
912B	  %19:gr32 = COPY $eax, debug-location !105; fft3d.c:158:11
928B	  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %19:gr32, debug-location !106 :: (store 4 into %ir.log); fft3d.c:158:9
944B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !107 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
960B	  JCC_1 %bb.6, 4, implicit $eflags, debug-location !109; fft3d.c:159:9
976B	  JMP_1 %bb.5, debug-location !109; fft3d.c:159:9

992B	bb.5.if.then7:
	; predecessors: %bb.4
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

1008B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
1040B	  $edi = MOV32ri 7, debug-location !110; fft3d.c:160:9
1056B	  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !110; fft3d.c:160:9
1072B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
1088B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9
1104B	  PCN_STACKMAP 2, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !110 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:160:9
1120B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !110; fft3d.c:160:9

1136B	bb.6.if.end8:
	; predecessors: %bb.4, %bb.5
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

1152B	  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !111 :: (store 4 into %ir.k); fft3d.c:161:12
1168B	  %223:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
1184B	  %225:gr64 = COPY %0:gr64_with_sub_8bit
1200B	  %225:gr64 = nuw IMUL64rr %225:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

1216B	bb.7.for.cond:
	; predecessors: %bb.6, %bb.25
	  successors: %bb.8(0x7c000000), %bb.26(0x04000000); %bb.8(96.88%), %bb.26(3.12%)

1232B	  %21:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !114 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
1248B	  CMP32rm %21:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !117 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:19
1264B	  JCC_1 %bb.26, 13, implicit $eflags, debug-location !118; fft3d.c:161:5
1280B	  JMP_1 %bb.8, debug-location !118; fft3d.c:161:5

1296B	bb.8.for.body:
	; predecessors: %bb.7
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1312B	  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !119 :: (store 4 into %ir.bls); fft3d.c:162:18

1328B	bb.9.for.cond10:
	; predecessors: %bb.8, %bb.24
	  successors: %bb.10(0x7c000000), %bb.25(0x04000000); %bb.10(96.88%), %bb.25(3.12%)

1344B	  %160:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !123 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
1360B	  CMP32rm %160:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !126 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:27
1376B	  JCC_1 %bb.25, 13, implicit $eflags, debug-location !127; fft3d.c:162:9
1392B	  JMP_1 %bb.10, debug-location !127; fft3d.c:162:9

1408B	bb.10.for.body12:
	; predecessors: %bb.9
	  successors: %bb.11(0x40000000), %bb.12(0x40000000); %bb.11(50.00%), %bb.12(50.00%)

1424B	  undef %166.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !128 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
1440B	  undef %164.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !130 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
1488B	  %168:gr32 = LEA64_32r %166:gr64_with_sub_8bit, 1, %164:gr64_nosp, -1, $noreg, debug-location !132; fft3d.c:163:34
1504B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %168:gr32, debug-location !133 :: (store 4 into %ir.ble); fft3d.c:163:17
1520B	  CMP32rm %168:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !137 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:21
1536B	  JCC_1 %bb.12, 14, implicit $eflags, debug-location !138; fft3d.c:164:17
1552B	  JMP_1 %bb.11, debug-location !138; fft3d.c:164:17

1568B	bb.11.if.then15:
	; predecessors: %bb.10
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

1584B	  %171:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !139 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
1616B	  %171:gr32 = DEC32r %171:gr32(tied-def 0), implicit-def dead $eflags, debug-location !140; fft3d.c:165:26
1632B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %171:gr32, debug-location !141 :: (store 4 into %ir.ble); fft3d.c:165:21

1648B	bb.12.if.end17:
	; predecessors: %bb.10, %bb.11
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

1664B	  %175:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !143 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
1680B	  %173:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !144 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
1712B	  %175:gr32 = nsw SUB32rr %175:gr32(tied-def 0), %173:gr32, implicit-def dead $eflags, debug-location !145; fft3d.c:166:23
1744B	  %175:gr32 = nsw INC32r %175:gr32(tied-def 0), implicit-def dead $eflags, debug-location !146; fft3d.c:166:29
1760B	  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %175:gr32, debug-location !147 :: (store 4 into %ir.len); fft3d.c:166:17
1776B	  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %173:gr32, debug-location !150 :: (store 4 into %ir.j); fft3d.c:167:20

1792B	bb.13.for.cond20:
	; predecessors: %bb.12, %bb.17
	  successors: %bb.14(0x7c000000), %bb.18(0x04000000); %bb.14(96.88%), %bb.18(3.12%)

1808B	  %176:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !152 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
1824B	  CMP32rm %176:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !155 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:29
1840B	  JCC_1 %bb.18, 15, implicit $eflags, debug-location !156; fft3d.c:167:13
1856B	  JMP_1 %bb.14, debug-location !156; fft3d.c:167:13

1872B	bb.14.for.body22:
	; predecessors: %bb.13
	  successors: %bb.15(0x80000000); %bb.15(100.00%)

1888B	  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !157 :: (store 4 into %ir.i); fft3d.c:168:24

1904B	bb.15.for.cond23:
	; predecessors: %bb.14, %bb.16
	  successors: %bb.16(0x7c000000), %bb.17(0x04000000); %bb.16(96.88%), %bb.17(3.12%)

1920B	  %212:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !161 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
1936B	  CMP32rm %212:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !164 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:31
1952B	  JCC_1 %bb.17, 13, implicit $eflags, debug-location !165; fft3d.c:168:17
1968B	  JMP_1 %bb.16, debug-location !165; fft3d.c:168:17

1984B	bb.16.for.body25:
	; predecessors: %bb.15
	  successors: %bb.15(0x80000000); %bb.15(100.00%)

2000B	  %230:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !166 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
2032B	  %235:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
2048B	  %216:gr32 = COPY %230.sub_32bit:gr64_nosp, debug-location !169; fft3d.c:169:29
2064B	  %216:gr32 = SUB32rr %216:gr32(tied-def 0), %235:gr32, implicit-def dead $eflags, debug-location !169; fft3d.c:169:29
2080B	  %237:gr64_nosp = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !171 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
2112B	  %220:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
2144B	  %220:gr32 = IMUL32rr %220:gr32(tied-def 0), %237.sub_32bit:gr64_nosp, implicit-def dead $eflags, debug-location !172; fft3d.c:169:42
2176B	  %220:gr32 = nsw ADD32rr %220:gr32(tied-def 0), %216:gr32, implicit-def dead $eflags, debug-location !173; fft3d.c:169:35
2192B	  %222:gr64 = MOVSX64rr32 %220:gr32, debug-location !174; fft3d.c:169:21
2224B	  %222:gr64 = SHL64ri %222:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !174; fft3d.c:169:21
2240B	  %227:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !176 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
2272B	  %227:gr64 = nsw IMUL64rr %227:gr64(tied-def 0), %225:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2304B	  %227:gr64 = SHL64ri %227:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2336B	  %227:gr64 = ADD64rm %227:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !175 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
2368B	  %230:gr64_nosp = nsw IMUL64rr %230:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2400B	  %230:gr64_nosp = SHL64ri %230:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2432B	  %230:gr64_nosp = ADD64rr %230:gr64_nosp(tied-def 0), %227:gr64, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2528B	  %234:gr32 = LEA64_32r %237:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !179; fft3d.c:168:38
2532B	  %232:gr64 = COPY %237:gr64_nosp, debug-location !175; fft3d.c:169:49
2536B	  %232:gr64 = SHL64ri %232:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !175; fft3d.c:169:49
2544B	  %233:vr128 = MOVUPSrm %232:gr64, 1, %230:gr64_nosp, 0, $noreg, debug-location !175 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
2552B	  MOVUPSmr %222:gr64, 1, %223:gr64_nosp, 0, $noreg, %233:vr128, debug-location !175 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
2560B	  MOV32mr %stack.9.i, 1, $noreg, 0, $noreg, %234:gr32, debug-location !179 :: (store 4 into %ir.i); fft3d.c:168:38
2568B	  JMP_1 %bb.15, debug-location !180; fft3d.c:168:17

2576B	bb.17.for.end:
	; predecessors: %bb.15
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

2592B	  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !183 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:167:38
2608B	  JMP_1 %bb.13, debug-location !184; fft3d.c:167:13

2624B	bb.18.for.end37:
	; predecessors: %bb.13
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

2640B	  %178:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !187 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
2656B	  %179:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !188 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
2672B	  %180:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !189 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
2688B	  %181:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !190 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
2704B	  %182:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !191 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
2720B	  %183:gr64 = MOV64rm %fixed-stack.2, 1, $noreg, 0, $noreg, debug-location !192 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
2736B	  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
2768B	  MOV64mr $rsp, 1, $noreg, 0, $noreg, %183:gr64, debug-location !193 :: (store 8 into stack); fft3d.c:172:13
2864B	  $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !193; fft3d.c:172:13
2872B	  $edi = COPY %178:gr32, debug-location !193; fft3d.c:172:13
2880B	  $esi = COPY %179:gr32, debug-location !193; fft3d.c:172:13
2888B	  $edx = COPY %180:gr32, debug-location !193; fft3d.c:172:13
2896B	  $ecx = COPY %181:gr32, debug-location !193; fft3d.c:172:13
2904B	  $r8d = COPY %182:gr32, debug-location !193; fft3d.c:172:13
2912B	  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !193; fft3d.c:172:13
2920B	  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !193; fft3d.c:172:13
2928B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !194; fft3d.c:173:22
2936B	  PCN_STACKMAP 3, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %178:gr32, %179:gr32, %180:gr32, %181:gr32, %182:gr32, %183:gr64, implicit-def dead early-clobber $r11, debug-location !194 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:173:22
2944B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !194; fft3d.c:173:22
2960B	  %186:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !194 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
2976B	  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %186:gr32, debug-location !196 :: (store 4 into %ir.j); fft3d.c:173:20

2992B	bb.19.for.cond38:
	; predecessors: %bb.18, %bb.23
	  successors: %bb.20(0x7c000000), %bb.24(0x04000000); %bb.20(96.88%), %bb.24(3.12%)

3008B	  %187:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !198 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
3024B	  CMP32rm %187:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !201 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:29
3040B	  JCC_1 %bb.24, 15, implicit $eflags, debug-location !202; fft3d.c:173:13
3056B	  JMP_1 %bb.20, debug-location !202; fft3d.c:173:13

3072B	bb.20.for.body40:
	; predecessors: %bb.19
	  successors: %bb.21(0x80000000); %bb.21(100.00%)

3088B	  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !203 :: (store 4 into %ir.i); fft3d.c:174:24

3104B	bb.21.for.cond41:
	; predecessors: %bb.20, %bb.22
	  successors: %bb.22(0x7c000000), %bb.23(0x04000000); %bb.22(96.88%), %bb.23(3.12%)

3120B	  %190:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !207 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
3136B	  CMP32rm %190:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !210 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:31
3152B	  JCC_1 %bb.23, 13, implicit $eflags, debug-location !211; fft3d.c:174:17
3168B	  JMP_1 %bb.22, debug-location !211; fft3d.c:174:17

3184B	bb.22.for.body43:
	; predecessors: %bb.21
	  successors: %bb.21(0x80000000); %bb.21(100.00%)

3200B	  %192:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !214 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
3216B	  %194:gr64 = COPY %0:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
3232B	  %194:gr64 = nuw IMUL64rr %194:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3264B	  %194:gr64 = nsw IMUL64rr %194:gr64(tied-def 0), %192:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3296B	  %194:gr64 = SHL64ri %194:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3328B	  %194:gr64 = ADD64rm %194:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !212 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
3344B	  %197:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !215 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
3376B	  %200:gr64_nosp = COPY %197:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
3392B	  %200:gr64_nosp = nsw IMUL64rr %200:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3424B	  %200:gr64_nosp = SHL64ri %200:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3456B	  %200:gr64_nosp = ADD64rr %200:gr64_nosp(tied-def 0), %194:gr64, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3472B	  %202:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !216 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
3584B	  %207:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
3616B	  %207:gr32 = IMUL32rr %207:gr32(tied-def 0), %202.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !222; fft3d.c:175:55
3620B	  %204:gr64 = COPY %202:gr64_with_sub_8bit, debug-location !212; fft3d.c:175:21
3624B	  %204:gr64 = SHL64ri %204:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !212; fft3d.c:175:21
3632B	  %238:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
3640B	  %197.sub_32bit:gr64_with_sub_8bit = SUB32rr %197.sub_32bit:gr64_with_sub_8bit(tied-def 0), %238:gr32, implicit-def dead $eflags, debug-location !219; fft3d.c:175:42
3656B	  %207:gr32 = nsw ADD32rr %207:gr32(tied-def 0), %197.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !223; fft3d.c:175:48
3664B	  %209:gr64 = MOVSX64rr32 %207:gr32, debug-location !224; fft3d.c:175:34
3696B	  %209:gr64 = SHL64ri %209:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !224; fft3d.c:175:34
3712B	  %211:vr128 = MOVUPSrm %209:gr64, 1, %223:gr64_nosp, 0, $noreg, debug-location !224 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
3728B	  MOVUPSmr %204:gr64, 1, %200:gr64_nosp, 0, $noreg, %211:vr128, debug-location !224 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
3744B	  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !225 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:174:38
3760B	  JMP_1 %bb.21, debug-location !226; fft3d.c:174:17

3776B	bb.23.for.end57:
	; predecessors: %bb.21
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

3792B	  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !229 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:173:38
3808B	  JMP_1 %bb.19, debug-location !230; fft3d.c:173:13

3824B	bb.24.for.end60:
	; predecessors: %bb.19
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

3840B	  %189:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !233 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
3856B	  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %189:gr32, implicit-def dead $eflags, debug-location !234 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
3872B	  JMP_1 %bb.9, debug-location !235; fft3d.c:162:9

3888B	bb.25.for.end63:
	; predecessors: %bb.9
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

3904B	  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !238 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:161:26
3920B	  JMP_1 %bb.7, debug-location !239; fft3d.c:161:5

3936B	bb.26.for.end66:
	; predecessors: %bb.7
	  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

3952B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !242 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
3968B	  JCC_1 %bb.28, 4, implicit $eflags, debug-location !244; fft3d.c:180:9
3984B	  JMP_1 %bb.27, debug-location !244; fft3d.c:180:9

4000B	bb.27.if.then68:
	; predecessors: %bb.26
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4016B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
4048B	  $edi = MOV32ri 7, debug-location !245; fft3d.c:181:9
4064B	  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !245; fft3d.c:181:9
4080B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
4096B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9
4112B	  PCN_STACKMAP 4, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !245 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:181:9
4128B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !245; fft3d.c:181:9

4144B	bb.28.if.end69:
	; predecessors: %bb.26, %bb.27
	  successors: %bb.29(0x40000000), %bb.30(0x40000000); %bb.29(50.00%), %bb.30(50.00%)

4192B	  $eax = MOV32ri 8192, debug-location !247; fft3d.c:183:26
4208B	  $edx = MOV32r0 implicit-def dead $eflags, debug-location !247; fft3d.c:183:26
4224B	  IDIV32m %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !247 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:26
4232B	  %26:gr32 = COPY $eax, debug-location !247; fft3d.c:183:26
4256B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %26:gr32, debug-location !248 :: (store 4 into @fftblock); fft3d.c:183:14
4272B	  CMP32ri8 %26:gr32, 32, implicit-def $eflags, debug-location !251; fft3d.c:184:18
4288B	  JCC_1 %bb.30, 12, implicit $eflags, debug-location !252; fft3d.c:184:9
4304B	  JMP_1 %bb.29, debug-location !252; fft3d.c:184:9

4320B	bb.29.if.then72:
	; predecessors: %bb.28
	  successors: %bb.30(0x80000000); %bb.30(100.00%)

4336B	  %28:gr32 = MOV32ri 32
4352B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %28:gr32, debug-location !253 :: (store 4 into @fftblock); fft3d.c:185:18

4368B	bb.30.if.end73:
	; predecessors: %bb.28, %bb.29
	  successors: %bb.31(0x50000000), %bb.32(0x30000000); %bb.31(62.50%), %bb.32(37.50%)

4384B	  %30:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !255 :: (dereferenceable load 4 from @fftblock); fft3d.c:186:12
4416B	  %30:gr32 = nsw INC32r %30:gr32(tied-def 0), implicit-def dead $eflags, debug-location !256; fft3d.c:186:21
4432B	  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %30:gr32, debug-location !257 :: (store 4 into %ir.blkp); fft3d.c:186:10
4448B	  %31:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !258 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:187:17
4464B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
4480B	  $edi = COPY %31:gr32, debug-location !259; fft3d.c:187:11
4496B	  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !259; fft3d.c:187:11
4512B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !259; fft3d.c:187:11
4528B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !260; fft3d.c:187:9
4544B	  PCN_STACKMAP 5, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %31:gr32, implicit-def dead early-clobber $r11, debug-location !260 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:187:9
4560B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !260; fft3d.c:187:9
4576B	  %32:gr32 = COPY $eax, debug-location !259; fft3d.c:187:11
4592B	  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %32:gr32, debug-location !260 :: (store 4 into %ir.log); fft3d.c:187:9
4608B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
4624B	  JCC_1 %bb.32, 4, implicit $eflags, debug-location !263; fft3d.c:188:9
4640B	  JMP_1 %bb.31, debug-location !263; fft3d.c:188:9

4656B	bb.31.if.then77:
	; predecessors: %bb.30
	  successors: %bb.32(0x80000000); %bb.32(100.00%)

4672B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
4704B	  $edi = MOV32ri 8, debug-location !264; fft3d.c:189:9
4720B	  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !264; fft3d.c:189:9
4736B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
4752B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9
4768B	  PCN_STACKMAP 6, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !264 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:189:9
4784B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !264; fft3d.c:189:9

4800B	bb.32.if.end78:
	; predecessors: %bb.30, %bb.31
	  successors: %bb.33(0x80000000); %bb.33(100.00%)

4816B	  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !265 :: (store 4 into %ir.k); fft3d.c:190:12
4832B	  %150:gr64 = COPY %0:gr64_with_sub_8bit
4848B	  %150:gr64 = nuw IMUL64rr %150:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

4864B	bb.33.for.cond79:
	; predecessors: %bb.32, %bb.39
	  successors: %bb.34(0x7c000000), %bb.40(0x04000000); %bb.34(96.88%), %bb.40(3.12%)

4880B	  %34:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !268 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
4896B	  CMP32rm %34:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !271 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:19
4912B	  JCC_1 %bb.40, 13, implicit $eflags, debug-location !272; fft3d.c:190:5
4928B	  JMP_1 %bb.34, debug-location !272; fft3d.c:190:5

4944B	bb.34.for.body81:
	; predecessors: %bb.33
	  successors: %bb.35(0x80000000); %bb.35(100.00%)

4960B	  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !273 :: (store 4 into %ir.bls); fft3d.c:191:18

4976B	bb.35.for.cond82:
	; predecessors: %bb.34, %bb.38
	  successors: %bb.36(0x7c000000), %bb.39(0x04000000); %bb.36(96.88%), %bb.39(3.12%)

4992B	  %129:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !277 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
5008B	  CMP32rm %129:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !280 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:27
5024B	  JCC_1 %bb.39, 13, implicit $eflags, debug-location !281; fft3d.c:191:9
5040B	  JMP_1 %bb.36, debug-location !281; fft3d.c:191:9

5056B	bb.36.for.body84:
	; predecessors: %bb.35
	  successors: %bb.37(0x40000000), %bb.38(0x40000000); %bb.37(50.00%), %bb.38(50.00%)

5072B	  undef %135.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !282 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
5088B	  undef %133.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !284 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
5136B	  %137:gr32 = LEA64_32r %135:gr64_with_sub_8bit, 1, %133:gr64_nosp, -1, $noreg, debug-location !286; fft3d.c:192:34
5152B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %137:gr32, debug-location !287 :: (store 4 into %ir.ble); fft3d.c:192:17
5168B	  CMP32rm %137:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !291 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:21
5184B	  JCC_1 %bb.38, 14, implicit $eflags, debug-location !292; fft3d.c:193:17
5200B	  JMP_1 %bb.37, debug-location !292; fft3d.c:193:17

5216B	bb.37.if.then88:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

5232B	  %140:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !293 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
5264B	  %140:gr32 = DEC32r %140:gr32(tied-def 0), implicit-def dead $eflags, debug-location !294; fft3d.c:194:26
5280B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %140:gr32, debug-location !295 :: (store 4 into %ir.ble); fft3d.c:194:21

5296B	bb.38.if.end90:
	; predecessors: %bb.36, %bb.37
	  successors: %bb.35(0x80000000); %bb.35(100.00%)

5312B	  %143:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !297 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
5344B	  %143:gr32 = nsw SUB32rm %143:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !299 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:23
5376B	  %143:gr32 = nsw INC32r %143:gr32(tied-def 0), implicit-def dead $eflags, debug-location !300; fft3d.c:195:29
5392B	  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %143:gr32, debug-location !301 :: (store 4 into %ir.len); fft3d.c:195:17
5408B	  %144:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !302 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
5424B	  %145:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !303 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
5440B	  %146:gr32 = MOV32rm %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !305 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
5456B	  %148:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !306 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
5488B	  %148:gr32 = nsw INC32r %148:gr32(tied-def 0), implicit-def dead $eflags, debug-location !307; fft3d.c:196:49
5504B	  %152:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !309 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
5536B	  %152:gr64 = nsw IMUL64rr %152:gr64(tied-def 0), %150:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
5568B	  %152:gr64 = SHL64ri %152:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
5600B	  %152:gr64 = ADD64rm %152:gr64(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !308 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
5616B	  %156:gr64 = MOVSX64rm32 %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !310 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
5648B	  %156:gr64 = SHL64ri %156:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
5680B	  %156:gr64 = ADD64rr %156:gr64(tied-def 0), %152:gr64, implicit-def dead $eflags, debug-location !308; fft3d.c:196:55
5696B	  %157:gr64 = MOV64rm %fixed-stack.1, 1, $noreg, 0, $noreg, debug-location !312 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
5712B	  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
5744B	  MOV64mr $rsp, 1, $noreg, 0, $noreg, %157:gr64, debug-location !313 :: (store 8 into stack); fft3d.c:196:13
5760B	  $edi = COPY %144:gr32, debug-location !313; fft3d.c:196:13
5776B	  $esi = COPY %145:gr32, debug-location !313; fft3d.c:196:13
5792B	  $edx = COPY %143:gr32, debug-location !313; fft3d.c:196:13
5808B	  $ecx = COPY %146:gr32, debug-location !313; fft3d.c:196:13
5824B	  $r8d = COPY %148:gr32, debug-location !313; fft3d.c:196:13
5840B	  $r9 = COPY %156:gr64, debug-location !313; fft3d.c:196:13
5856B	  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !313; fft3d.c:196:13
5872B	  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !313; fft3d.c:196:13
5888B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !314; fft3d.c:197:9
5904B	  PCN_STACKMAP 7, 0, %148:gr32, %156:gr64, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %144:gr32, %145:gr32, %143:gr32, %146:gr32, %156:gr64, %157:gr64, implicit-def dead early-clobber $r11, debug-location !314 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:197:9
5920B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !314; fft3d.c:197:9
5936B	  %159:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !315 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
5952B	  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %159:gr32, implicit-def dead $eflags, debug-location !316 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
5968B	  JMP_1 %bb.35, debug-location !317; fft3d.c:191:9

5984B	bb.39.for.end101:
	; predecessors: %bb.35
	  successors: %bb.33(0x80000000); %bb.33(100.00%)

6000B	  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !320 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:190:26
6016B	  JMP_1 %bb.33, debug-location !321; fft3d.c:190:5

6032B	bb.40.for.end104:
	; predecessors: %bb.33
	  successors: %bb.41(0x50000000), %bb.42(0x30000000); %bb.41(62.50%), %bb.42(37.50%)

6048B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !324 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
6064B	  JCC_1 %bb.42, 4, implicit $eflags, debug-location !326; fft3d.c:199:9
6080B	  JMP_1 %bb.41, debug-location !326; fft3d.c:199:9

6096B	bb.41.if.then106:
	; predecessors: %bb.40
	  successors: %bb.42(0x80000000); %bb.42(100.00%)

6112B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
6144B	  $edi = MOV32ri 8, debug-location !327; fft3d.c:200:9
6160B	  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !327; fft3d.c:200:9
6176B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
6192B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9
6208B	  PCN_STACKMAP 8, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !327 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:200:9
6224B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !327; fft3d.c:200:9

6240B	bb.42.if.end107:
	; predecessors: %bb.40, %bb.41
	  successors: %bb.43(0x40000000), %bb.44(0x40000000); %bb.43(50.00%), %bb.44(50.00%)

6288B	  $eax = MOV32ri 8192, debug-location !329; fft3d.c:202:26
6304B	  $edx = MOV32r0 implicit-def dead $eflags, debug-location !329; fft3d.c:202:26
6320B	  IDIV32m %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eax, implicit-def dead $edx, implicit-def dead $eflags, implicit $eax, implicit $edx, debug-location !329 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:26
6328B	  %39:gr32 = COPY $eax, debug-location !329; fft3d.c:202:26
6352B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %39:gr32, debug-location !330 :: (store 4 into @fftblock); fft3d.c:202:14
6368B	  CMP32ri8 %39:gr32, 32, implicit-def $eflags, debug-location !333; fft3d.c:203:18
6384B	  JCC_1 %bb.44, 12, implicit $eflags, debug-location !334; fft3d.c:203:9
6400B	  JMP_1 %bb.43, debug-location !334; fft3d.c:203:9

6416B	bb.43.if.then110:
	; predecessors: %bb.42
	  successors: %bb.44(0x80000000); %bb.44(100.00%)

6432B	  %41:gr32 = MOV32ri 32
6448B	  MOV32mr $rip, 1, $noreg, @fftblock, $noreg, %41:gr32, debug-location !335 :: (store 4 into @fftblock); fft3d.c:204:18

6464B	bb.44.if.end111:
	; predecessors: %bb.42, %bb.43
	  successors: %bb.45(0x50000000), %bb.46(0x30000000); %bb.45(62.50%), %bb.46(37.50%)

6480B	  %43:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !337 :: (dereferenceable load 4 from @fftblock); fft3d.c:205:12
6512B	  %43:gr32 = nsw INC32r %43:gr32(tied-def 0), implicit-def dead $eflags, debug-location !338; fft3d.c:205:21
6528B	  MOV32mr %stack.16.blkp, 1, $noreg, 0, $noreg, %43:gr32, debug-location !339 :: (store 4 into %ir.blkp); fft3d.c:205:10
6544B	  %44:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !340 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:206:17
6560B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
6576B	  $edi = COPY %44:gr32, debug-location !341; fft3d.c:206:11
6592B	  CALL64pcrel32 @ilog2, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, implicit-def $eax, debug-location !341; fft3d.c:206:11
6608B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !341; fft3d.c:206:11
6624B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !342; fft3d.c:206:9
6640B	  PCN_STACKMAP 9, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %44:gr32, implicit-def dead early-clobber $r11, debug-location !342 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:206:9
6656B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !342; fft3d.c:206:9
6672B	  %45:gr32 = COPY $eax, debug-location !341; fft3d.c:206:11
6688B	  MOV32mr %stack.12.log, 1, $noreg, 0, $noreg, %45:gr32, debug-location !342 :: (store 4 into %ir.log); fft3d.c:206:9
6704B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !343 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
6720B	  JCC_1 %bb.46, 4, implicit $eflags, debug-location !345; fft3d.c:207:9
6736B	  JMP_1 %bb.45, debug-location !345; fft3d.c:207:9

6752B	bb.45.if.then115:
	; predecessors: %bb.44
	  successors: %bb.46(0x80000000); %bb.46(100.00%)

6768B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
6800B	  $edi = MOV32ri 9, debug-location !346; fft3d.c:208:9
6816B	  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !346; fft3d.c:208:9
6832B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
6848B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9
6864B	  PCN_STACKMAP 10, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !346 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:208:9
6880B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !346; fft3d.c:208:9

6896B	bb.46.if.end116:
	; predecessors: %bb.44, %bb.45
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

6912B	  MOV32mi %stack.11.k, 1, $noreg, 0, $noreg, 0, debug-location !347 :: (store 4 into %ir.k); fft3d.c:209:12
6928B	  %117:gr64_nosp = LEA64r $rip, 1, $noreg, @plane, $noreg
6944B	  %118:gr64 = COPY %0:gr64_with_sub_8bit
6960B	  %118:gr64 = nuw IMUL64rr %118:gr64(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags

6976B	bb.47.for.cond117:
	; predecessors: %bb.46, %bb.65
	  successors: %bb.48(0x7c000000), %bb.66(0x04000000); %bb.48(96.88%), %bb.66(3.12%)

6992B	  %47:gr32 = MOV32rm %stack.11.k, 1, $noreg, 0, $noreg, debug-location !350 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
7008B	  CMP32rm %47:gr32, %stack.2.n2.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !353 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:19
7024B	  JCC_1 %bb.66, 13, implicit $eflags, debug-location !354; fft3d.c:209:5
7040B	  JMP_1 %bb.48, debug-location !354; fft3d.c:209:5

7056B	bb.48.for.body119:
	; predecessors: %bb.47
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

7072B	  MOV32mi %stack.13.bls, 1, $noreg, 0, $noreg, 0, debug-location !355 :: (store 4 into %ir.bls); fft3d.c:210:18

7088B	bb.49.for.cond120:
	; predecessors: %bb.48, %bb.64
	  successors: %bb.50(0x7c000000), %bb.65(0x04000000); %bb.50(96.88%), %bb.65(3.12%)

7104B	  %51:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
7120B	  CMP32rm %51:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !362 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:27
7136B	  JCC_1 %bb.65, 13, implicit $eflags, debug-location !363; fft3d.c:210:9
7152B	  JMP_1 %bb.50, debug-location !363; fft3d.c:210:9

7168B	bb.50.for.body122:
	; predecessors: %bb.49
	  successors: %bb.51(0x40000000), %bb.52(0x40000000); %bb.51(50.00%), %bb.52(50.00%)

7184B	  undef %57.sub_32bit:gr64_with_sub_8bit = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !364 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
7200B	  undef %55.sub_32bit:gr64_nosp = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !366 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
7248B	  %59:gr32 = LEA64_32r %57:gr64_with_sub_8bit, 1, %55:gr64_nosp, -1, $noreg, debug-location !368; fft3d.c:211:34
7264B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %59:gr32, debug-location !369 :: (store 4 into %ir.ble); fft3d.c:211:17
7280B	  CMP32rm %59:gr32, %stack.1.n1.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !373 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:21
7296B	  JCC_1 %bb.52, 14, implicit $eflags, debug-location !374; fft3d.c:212:17
7312B	  JMP_1 %bb.51, debug-location !374; fft3d.c:212:17

7328B	bb.51.if.then126:
	; predecessors: %bb.50
	  successors: %bb.52(0x80000000); %bb.52(100.00%)

7344B	  %62:gr32 = MOV32rm %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !375 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
7376B	  %62:gr32 = DEC32r %62:gr32(tied-def 0), implicit-def dead $eflags, debug-location !376; fft3d.c:213:26
7392B	  MOV32mr %stack.14.ble, 1, $noreg, 0, $noreg, %62:gr32, debug-location !377 :: (store 4 into %ir.ble); fft3d.c:213:21

7408B	bb.52.if.end128:
	; predecessors: %bb.50, %bb.51
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

7424B	  %65:gr32 = MOV32rm %stack.14.ble, 1, $noreg, 0, $noreg, debug-location !379 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
7456B	  %65:gr32 = nsw SUB32rm %65:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !381 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:23
7488B	  %65:gr32 = nsw INC32r %65:gr32(tied-def 0), implicit-def dead $eflags, debug-location !382; fft3d.c:214:29
7504B	  MOV32mr %stack.15.len, 1, $noreg, 0, $noreg, %65:gr32, debug-location !383 :: (store 4 into %ir.len); fft3d.c:214:17
7520B	  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !384 :: (store 4 into %ir.i); fft3d.c:215:20

7536B	bb.53.for.cond131:
	; predecessors: %bb.52, %bb.57
	  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

7552B	  %66:gr32 = MOV32rm %stack.9.i, 1, $noreg, 0, $noreg, debug-location !387 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
7568B	  CMP32rm %66:gr32, %stack.3.n3.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !390 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:27
7584B	  JCC_1 %bb.58, 13, implicit $eflags, debug-location !391; fft3d.c:215:13
7600B	  JMP_1 %bb.54, debug-location !391; fft3d.c:215:13

7616B	bb.54.for.body133:
	; predecessors: %bb.53
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

7632B	  %105:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !392 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
7648B	  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %105:gr32, debug-location !395 :: (store 4 into %ir.j); fft3d.c:216:24

7664B	bb.55.for.cond134:
	; predecessors: %bb.54, %bb.56
	  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

7680B	  %106:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
7696B	  CMP32rm %106:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !400 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:33
7712B	  JCC_1 %bb.57, 15, implicit $eflags, debug-location !401; fft3d.c:216:17
7728B	  JMP_1 %bb.56, debug-location !401; fft3d.c:216:17

7744B	bb.56.for.body136:
	; predecessors: %bb.55
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

7760B	  %242:gr64_nosp = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !402 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
8192B	  %126:gr64 = COPY %242:gr64_nosp, debug-location !411; fft3d.c:217:49
8272B	  %128:gr32 = LEA64_32r %242:gr64_nosp, 1, $noreg, 1, $noreg, debug-location !415; fft3d.c:216:42
8276B	  %110:gr32 = COPY %242.sub_32bit:gr64_nosp, debug-location !405; fft3d.c:217:29
8280B	  %110:gr32 = nsw SUB32rm %110:gr32(tied-def 0), %stack.13.bls, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !405 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:29
8288B	  %120:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !407 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
8296B	  %114:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
8304B	  %114:gr32 = IMUL32rr %114:gr32(tied-def 0), %120.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !408; fft3d.c:217:42
8312B	  %114:gr32 = nsw ADD32rr %114:gr32(tied-def 0), %110:gr32, implicit-def dead $eflags, debug-location !409; fft3d.c:217:35
8320B	  %120:gr64_with_sub_8bit = nsw IMUL64rr %120:gr64_with_sub_8bit(tied-def 0), %118:gr64, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8328B	  %120:gr64_with_sub_8bit = SHL64ri %120:gr64_with_sub_8bit(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8336B	  %120:gr64_with_sub_8bit = ADD64rm %120:gr64_with_sub_8bit(tied-def 0), %stack.4.x.addr, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !411 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
8344B	  %124:gr64_nosp = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !413 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
8352B	  %124:gr64_nosp = nsw IMUL64rr %124:gr64_nosp(tied-def 0), %1:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8360B	  %124:gr64_nosp = SHL64ri %124:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8368B	  %124:gr64_nosp = ADD64rr %124:gr64_nosp(tied-def 0), %120:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8376B	  %116:gr64 = MOVSX64rr32 %114:gr32, debug-location !410; fft3d.c:217:21
8384B	  %116:gr64 = SHL64ri %116:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !410; fft3d.c:217:21
8392B	  %126:gr64 = SHL64ri %126:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !411; fft3d.c:217:49
8400B	  %127:vr128 = MOVUPSrm %126:gr64, 1, %124:gr64_nosp, 0, $noreg, debug-location !411 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
8408B	  MOVUPSmr %116:gr64, 1, %117:gr64_nosp, 0, $noreg, %127:vr128, debug-location !411 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
8416B	  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %128:gr32, debug-location !415 :: (store 4 into %ir.j); fft3d.c:216:42
8424B	  JMP_1 %bb.55, debug-location !416; fft3d.c:216:17

8432B	bb.57.for.end150:
	; predecessors: %bb.55
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

8440B	  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !419 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:215:34
8448B	  JMP_1 %bb.53, debug-location !420; fft3d.c:215:13

8456B	bb.58.for.end153:
	; predecessors: %bb.53
	  successors: %bb.59(0x80000000); %bb.59(100.00%)

8464B	  %68:gr32 = MOV32rm %stack.0.sign.addr, 1, $noreg, 0, $noreg, debug-location !423 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
8472B	  %69:gr32 = MOV32rm %stack.12.log, 1, $noreg, 0, $noreg, debug-location !424 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
8480B	  %70:gr32 = MOV32rm %stack.15.len, 1, $noreg, 0, $noreg, debug-location !425 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
8488B	  %71:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !426 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
8496B	  %72:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg, debug-location !427 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
8504B	  %73:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !428 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
8512B	  ADJCALLSTACKDOWN64 8, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
8528B	  MOV64mr $rsp, 1, $noreg, 0, $noreg, %73:gr64, debug-location !429 :: (store 8 into stack); fft3d.c:220:13
8608B	  $r9 = LEA64r $rip, 1, $noreg, @plane, $noreg, debug-location !429; fft3d.c:220:13
8616B	  $edi = COPY %68:gr32, debug-location !429; fft3d.c:220:13
8624B	  $esi = COPY %69:gr32, debug-location !429; fft3d.c:220:13
8632B	  $edx = COPY %70:gr32, debug-location !429; fft3d.c:220:13
8640B	  $ecx = COPY %71:gr32, debug-location !429; fft3d.c:220:13
8648B	  $r8d = COPY %72:gr32, debug-location !429; fft3d.c:220:13
8656B	  CALL64pcrel32 @Swarztrauber, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $esi, implicit $edx, implicit $ecx, implicit $r8d, implicit $r9, implicit-def $rsp, implicit-def $ssp, debug-location !429; fft3d.c:220:13
8664B	  ADJCALLSTACKUP64 8, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !429; fft3d.c:220:13
8672B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !430; fft3d.c:221:20
8680B	  PCN_STACKMAP 11, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gr64_with_sub_8bit, %1:gr64_with_sub_8bit, %68:gr32, %69:gr32, %70:gr32, %71:gr32, %72:gr32, %73:gr64, implicit-def dead early-clobber $r11, debug-location !430 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:221:20
8688B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !430; fft3d.c:221:20
8704B	  MOV32mi %stack.9.i, 1, $noreg, 0, $noreg, 0, debug-location !430 :: (store 4 into %ir.i); fft3d.c:221:20

8720B	bb.59.for.cond154:
	; predecessors: %bb.58, %bb.63
	  successors: %bb.60(0x7c000000), %bb.64(0x04000000); %bb.60(96.88%), %bb.64(3.12%)

8736B	  %78:gr32 = MOV32rm %stack.3.n3.addr, 1, $noreg, 0, $noreg, debug-location !435 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
8768B	  %78:gr32 = DEC32r %78:gr32(tied-def 0), implicit-def dead $eflags, debug-location !436; fft3d.c:221:33
8784B	  CMP32mr %stack.9.i, 1, $noreg, 0, $noreg, %78:gr32, implicit-def $eflags, debug-location !437 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:27
8800B	  JCC_1 %bb.64, 15, implicit $eflags, debug-location !438; fft3d.c:221:13
8816B	  JMP_1 %bb.60, debug-location !438; fft3d.c:221:13

8832B	bb.60.for.body157:
	; predecessors: %bb.59
	  successors: %bb.61(0x80000000); %bb.61(100.00%)

8848B	  %81:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg, debug-location !439 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
8864B	  MOV32mr %stack.10.j, 1, $noreg, 0, $noreg, %81:gr32, debug-location !442 :: (store 4 into %ir.j); fft3d.c:222:24

8880B	bb.61.for.cond158:
	; predecessors: %bb.60, %bb.62
	  successors: %bb.62(0x7c000000), %bb.63(0x04000000); %bb.62(96.88%), %bb.63(3.12%)

8896B	  %82:gr32 = MOV32rm %stack.10.j, 1, $noreg, 0, $noreg, debug-location !444 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
8912B	  CMP32rm %82:gr32, %stack.14.ble, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !447 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:33
8928B	  JCC_1 %bb.63, 15, implicit $eflags, debug-location !448; fft3d.c:222:17
8944B	  JMP_1 %bb.62, debug-location !448; fft3d.c:222:17

8960B	bb.62.for.body160:
	; predecessors: %bb.61
	  successors: %bb.61(0x80000000); %bb.61(100.00%)

8976B	  %84:gr64 = MOV64rm %stack.5.xout.addr, 1, $noreg, 0, $noreg, debug-location !449 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
8992B	  %85:gr64_with_sub_8bit = MOVSX64rm32 %stack.10.j, 1, $noreg, 0, $noreg, debug-location !451 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
9024B	  %88:gr64 = MOVSX64rm32 %stack.1.n1.addr, 1, $noreg, 0, $noreg, debug-location !452 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
9056B	  %88:gr64 = nsw INC64r %88:gr64(tied-def 0), implicit-def dead $eflags, debug-location !453; fft3d.c:223:34
9072B	  %89:gr64 = MOVSX64rm32 %stack.11.k, 1, $noreg, 0, $noreg, debug-location !454 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
9088B	  %94:gr64_nosp = MOVSX64rm32 %stack.2.n2.addr, 1, $noreg, 0, $noreg, debug-location !455 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
9104B	  %91:gr64_with_sub_8bit = MOVSX64rm32 %stack.9.i, 1, $noreg, 0, $noreg, debug-location !456 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
9152B	  %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %91:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !457; fft3d.c:223:49
9184B	  %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %89:gr64, implicit-def dead $eflags, debug-location !458; fft3d.c:223:44
9216B	  %94:gr64_nosp = nsw IMUL64rr %94:gr64_nosp(tied-def 0), %88:gr64, implicit-def dead $eflags, debug-location !459; fft3d.c:223:39
9248B	  %94:gr64_nosp = nsw ADD64rr %94:gr64_nosp(tied-def 0), %85:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !460; fft3d.c:223:28
9280B	  %94:gr64_nosp = SHL64ri %94:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !449; fft3d.c:223:21
9296B	  %243:gr32 = MOV32rm %stack.13.bls, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.bls)
9328B	  %85.sub_32bit:gr64_with_sub_8bit = SUB32rr %85.sub_32bit:gr64_with_sub_8bit(tied-def 0), %243:gr32, implicit-def dead $eflags, debug-location !463; fft3d.c:224:33
9344B	  %100:gr32 = MOV32rm %stack.16.blkp, 1, $noreg, 0, $noreg :: (dereferenceable load 4 from %ir.blkp)
9376B	  %100:gr32 = IMUL32rr %100:gr32(tied-def 0), %91.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !466; fft3d.c:224:46
9408B	  %100:gr32 = nsw ADD32rr %100:gr32(tied-def 0), %85.sub_32bit:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !467; fft3d.c:224:39
9424B	  %102:gr64 = MOVSX64rr32 %100:gr32, debug-location !468; fft3d.c:224:25
9456B	  %102:gr64 = SHL64ri %102:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !468; fft3d.c:224:25
9472B	  %104:vr128 = MOVUPSrm %102:gr64, 1, %117:gr64_nosp, 0, $noreg, debug-location !468 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
9488B	  MOVUPSmr %84:gr64, 1, %94:gr64_nosp, 0, $noreg, %104:vr128, debug-location !468 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
9504B	  INC32m %stack.10.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !469 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:222:42
9520B	  JMP_1 %bb.61, debug-location !470; fft3d.c:222:17

9536B	bb.63.for.end175:
	; predecessors: %bb.61
	  successors: %bb.59(0x80000000); %bb.59(100.00%)

9552B	  INC32m %stack.9.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !473 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:221:39
9568B	  JMP_1 %bb.59, debug-location !474; fft3d.c:221:13

9584B	bb.64.for.end178:
	; predecessors: %bb.59
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

9600B	  %80:gr32 = MOV32rm $rip, 1, $noreg, @fftblock, $noreg, debug-location !477 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
9616B	  ADD32mr %stack.13.bls, 1, $noreg, 0, $noreg, %80:gr32, implicit-def dead $eflags, debug-location !478 :: (store 4 into %ir.bls), (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
9632B	  JMP_1 %bb.49, debug-location !479; fft3d.c:210:9

9648B	bb.65.for.end181:
	; predecessors: %bb.49
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

9664B	  INC32m %stack.11.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !482 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:209:26
9680B	  JMP_1 %bb.47, debug-location !483; fft3d.c:209:5

9696B	bb.66.for.end184:
	; predecessors: %bb.47
	  successors: %bb.67(0x50000000), %bb.68(0x30000000); %bb.67(62.50%), %bb.68(37.50%)

9712B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !486 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
9728B	  JCC_1 %bb.68, 4, implicit $eflags, debug-location !488; fft3d.c:229:9
9744B	  JMP_1 %bb.67, debug-location !488; fft3d.c:229:9

9760B	bb.67.if.then186:
	; predecessors: %bb.66
	  successors: %bb.68(0x80000000); %bb.68(100.00%)

9776B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
9808B	  $edi = MOV32ri 9, debug-location !489; fft3d.c:230:9
9824B	  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !489; fft3d.c:230:9
9840B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
9856B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9
9872B	  PCN_STACKMAP 12, 0, implicit-def dead early-clobber $r11, debug-location !489; fft3d.c:230:9
9888B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !489; fft3d.c:230:9

9904B	bb.68.if.end187:
	; predecessors: %bb.66, %bb.67
	  successors: %bb.69(0x50000000), %bb.70(0x30000000); %bb.69(62.50%), %bb.70(37.50%)

9920B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !490 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
9936B	  JCC_1 %bb.70, 4, implicit $eflags, debug-location !492; fft3d.c:231:9
9952B	  JMP_1 %bb.69, debug-location !492; fft3d.c:231:9

9968B	bb.69.if.then189:
	; predecessors: %bb.68
	  successors: %bb.70(0x80000000); %bb.70(100.00%)

9984B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
10016B	  $edi = MOV32ri 3, debug-location !493; fft3d.c:232:9
10032B	  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !493; fft3d.c:232:9
10048B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
10064B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9
10080B	  PCN_STACKMAP 13, 0, implicit-def dead early-clobber $r11, debug-location !493; fft3d.c:232:9
10096B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !493; fft3d.c:232:9

10112B	bb.70.if.end190:
	; predecessors: %bb.68, %bb.69

10128B	  RET 0, debug-location !494; fft3d.c:233:1

# End machine code for function fftXYZ.

warning: fft3d.c:172:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled stack slot 20 across call to Swarztrauber
warning: fft3d.c:196:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled stack slot 21 across call to Swarztrauber
warning: fft3d.c:220:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled stack slot 19 across call to Swarztrauber
Before MISched:
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=4, align=4, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=4, align=4, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: dead
  fi#7: size=8, align=8, at location [SP+8]
  fi#8: size=4, align=4, at location [SP+8]
  fi#9: size=4, align=4, at location [SP+8]
  fi#10: size=4, align=4, at location [SP+8]
  fi#11: size=16, align=16, at location [SP+8]
  fi#12: size=16, align=16, at location [SP+8]
  fi#13: size=16, align=16, at location [SP+8]
  fi#14: size=4, align=4, at location [SP+8]
  fi#15: size=4, align=4, at location [SP+8]
  fi#16: size=4, align=4, at location [SP+8]
  fi#17: size=4, align=4, at location [SP+8]
  fi#18: size=4, align=4, at location [SP+8]
  fi#19: size=4, align=4, at location [SP+8]
  fi#20: size=4, align=4, at location [SP+8]
  fi#21: size=4, align=4, at location [SP+8]
  fi#22: size=4, align=4, at location [SP+8]
  fi#23: size=4, align=4, at location [SP+8]
  fi#24: size=16, align=8, at location [SP+8]
  fi#25: size=16, align=8, at location [SP+8]
  fi#26: size=16, align=8, at location [SP+8]
  fi#27: size=16, align=8, at location [SP+8]
  fi#28: size=16, align=8, at location [SP+8]
  fi#29: size=16, align=8, at location [SP+8]
  fi#30: size=16, align=8, at location [SP+8]
  fi#31: size=16, align=8, at location [SP+8]
  fi#32: size=16, align=8, at location [SP+8]
  fi#33: size=16, align=8, at location [SP+8]
  fi#34: size=16, align=8, at location [SP+8]
  fi#35: size=16, align=8, at location [SP+8]
  fi#36: size=16, align=8, at location [SP+8]
  fi#37: size=16, align=8, at location [SP+8]
Constant Pool:
  cp#0: <double -0.000000e+00, double -0.000000e+00>, align=16
Function Live Ins: $edi in %1, $esi in %2, $edx in %3, $ecx in %4, $r8d in %5, $r9 in %6

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $edi, $esi, $edx, $ecx, $r8d, $r9
  %6:gr64 = COPY $r9
  %5:gr32 = COPY $r8d
  %4:gr32 = COPY $ecx
  %3:gr32 = COPY $edx
  %2:gr32 = COPY $esi
  %1:gr32 = COPY $edi
  MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
  MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
  MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
  MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
  MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
  MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
  undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
  MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !553 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !555; fft3d.c:66:9
  JMP_1 %bb.1, debug-location !555; fft3d.c:66:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
  $edi = MOV32ri 4, debug-location !556; fft3d.c:67:9
  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !556; fft3d.c:67:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
  PCN_STACKMAP 0, 0, 0, %stack.24..compoundliteral, 0, 0, %stack.31..compoundliteral155, 0, 0, %stack.32..compoundliteral190, 0, 0, %stack.33..compoundliteral204, 0, 0, %stack.34..compoundliteral207, 0, 0, %stack.35..compoundliteral219, 0, 0, %stack.36..compoundliteral233, 0, 0, %stack.37..compoundliteral245, 0, 0, %stack.25..compoundliteral43, 0, 0, %stack.26..compoundliteral57, 0, 0, %stack.27..compoundliteral60, 0, 0, %stack.28..compoundliteral72, 0, 0, %stack.29..compoundliteral86, 0, 0, %stack.30..compoundliteral98, 0, 0, %fixed-stack.0, 0, 0, %stack.8.i, 0, 0, %stack.20.i11, 0, 0, %stack.21.i12, 0, 0, %stack.22.i21, 0, 0, %stack.23.i22, 0, 0, %stack.0.is.addr, 0, 0, %stack.9.j, 0, 0, %stack.14.k, 0, 0, %stack.19.ku, 0, 0, %stack.10.l, 0, 0, %stack.16.li, 0, 0, %stack.17.lj, 0, 0, %stack.18.lk, 0, 0, %stack.1.m.addr, 0, 0, %stack.3.n.addr, 0, 0, %stack.15.n1, 0, 0, %stack.11.u1, 0, 0, %stack.2.vlen.addr, 0, 0, %stack.7.x, 0, 0, %stack.12.x11, 0, 0, %stack.13.x21, 0, %0:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !556 :: (load 8 from %stack.24..compoundliteral), (load 8 from %stack.31..compoundliteral155), (load 8 from %stack.32..compoundliteral190), (load 8 from %stack.33..compoundliteral204), (load 8 from %stack.34..compoundliteral207), (load 8 from %stack.35..compoundliteral219), (load 8 from %stack.36..compoundliteral233), (load 8 from %stack.37..compoundliteral245), (load 8 from %stack.25..compoundliteral43), (load 8 from %stack.26..compoundliteral57), (load 8 from %stack.27..compoundliteral60), (load 8 from %stack.28..compoundliteral72), (load 8 from %stack.29..compoundliteral86), (load 8 from %stack.30..compoundliteral98), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.8.i, align 4), (load 8 from %stack.20.i11, align 4), (load 8 from %stack.21.i12, align 4), (load 8 from %stack.22.i21, align 4), (load 8 from %stack.23.i22, align 4), (load 8 from %stack.0.is.addr, align 4), (load 8 from %stack.9.j, align 4), (load 8 from %stack.14.k, align 4), (load 8 from %stack.19.ku, align 4), (load 8 from %stack.10.l, align 4), (load 8 from %stack.16.li, align 4), (load 8 from %stack.17.lj, align 4), (load 8 from %stack.18.lk, align 4), (load 8 from %stack.1.m.addr, align 4), (load 8 from %stack.3.n.addr, align 4), (load 8 from %stack.15.n1, align 4), (load 8 from %stack.11.u1, align 16), (load 8 from %stack.2.vlen.addr, align 4), (load 8 from %stack.7.x), (load 8 from %stack.12.x11, align 16), (load 8 from %stack.13.x21, align 16); fft3d.c:67:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
  %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
  %13:gr32 = MOV32ri 1
  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
  %14:gr8 = MOV8rm %stack.1.m.addr, 1, $noreg, 0, $noreg, debug-location !561 :: (dereferenceable load 1 from %ir.m.addr, align 4); fft3d.c:73:15
  $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
  %15:gr32 = MOV32ri 1, debug-location !562; fft3d.c:73:12
  %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
  MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
  %186:gr64 = MOV32ri64 528
  %188:gr64 = LEA64r $rip, 1, $noreg, @scr, $noreg
  %227:vr128 = MOVAPSrm $rip, 1, $noreg, %const.0, $noreg :: (load 16 from constant-pool)

bb.3.for.cond:
; predecessors: %bb.2, %bb.35
  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

  %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  CMP32rm %16:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !570 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:19
  JCC_1 %bb.36, 15, implicit killed $eflags, debug-location !571; fft3d.c:74:5
  JMP_1 %bb.4, debug-location !571; fft3d.c:74:5

bb.4.for.body:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
  %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
  %21:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !578 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
  %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
  MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
  MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !583 :: (store 4 into %ir.i); fft3d.c:80:16

bb.5.for.cond2:
; predecessors: %bb.4, %bb.15
  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

  %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  %27:gr32 = DEC32r %27:gr32(tied-def 0), implicit-def dead $eflags, debug-location !589; fft3d.c:80:29
  CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %27:gr32, implicit-def $eflags, debug-location !590 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:23
  JCC_1 %bb.16, 15, implicit killed $eflags, debug-location !591; fft3d.c:80:9
  JMP_1 %bb.6, debug-location !591; fft3d.c:80:9

bb.6.for.body4:
; predecessors: %bb.5
  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

  %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  %142:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !594 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
  %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
  MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
  %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
  MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
  %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
  MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
  %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
  MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
  CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !611 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:20
  JCC_1 %bb.8, 14, implicit killed $eflags, debug-location !612; fft3d.c:86:17
  JMP_1 %bb.7, debug-location !612; fft3d.c:86:17

bb.7.if.then9:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  %157:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !615 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  %160:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !616 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  %160:gr64_nosp = nsw ADD64rr %160:gr64_nosp(tied-def 0), %157:gr64, implicit-def dead $eflags, debug-location !617; fft3d.c:87:34
  %160:gr64_nosp = SHL64ri %160:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !613; fft3d.c:87:22
  %161:vr128 = MOVUPSrm %156:gr64, 1, %160:gr64_nosp, 0, $noreg, debug-location !613 :: (load 16 from %ir.32, align 8); fft3d.c:87:22
  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %161:vr128, debug-location !613 :: (store 16 into %ir.31); fft3d.c:87:22
  JMP_1 %bb.9, debug-location !618; fft3d.c:88:13

bb.8.if.else:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  %148:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  %151:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
  %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
  %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
  MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
  %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
  %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
  MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
  %155:vr128 = MOVUPSrm %stack.24..compoundliteral, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 16 from %ir.42, align 8); fft3d.c:90:22
  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22

bb.9.if.end20:
; predecessors: %bb.8, %bb.7
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !621 :: (store 4 into %ir.k); fft3d.c:92:20

bb.10.for.cond21:
; predecessors: %bb.9, %bb.14
  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

  %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  %164:gr32 = DEC32r %164:gr32(tied-def 0), implicit-def dead $eflags, debug-location !627; fft3d.c:92:33
  CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %164:gr32, implicit-def $eflags, debug-location !628 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:27
  JCC_1 %bb.15, 15, implicit killed $eflags, debug-location !629; fft3d.c:92:13
  JMP_1 %bb.11, debug-location !629; fft3d.c:92:13

bb.11.for.body24:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !630 :: (store 4 into %ir.j); fft3d.c:93:24

bb.12.for.cond25:
; predecessors: %bb.11, %bb.13
  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

  %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  CMP32rm %166:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !637 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:31
  JCC_1 %bb.14, 13, implicit killed $eflags, debug-location !638; fft3d.c:93:17
  JMP_1 %bb.13, debug-location !638; fft3d.c:93:17

bb.13.for.body27:
; predecessors: %bb.12
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  %172:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !641 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  %170:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !642 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
  %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  %176:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !644 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
  MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
  %180:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !646 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
  %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
  MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
  %187:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !650 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
  %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  %192:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  %193:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
  %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
  %194:vr128 = MOVUPSrm %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 16 from %ir.69, align 8); fft3d.c:96:39
  MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
  %195:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !656 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  %198:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !657 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
  %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  %201:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !660 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  %206:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6215, align 16); fft3d.c:97:39
  %205:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag66); fft3d.c:97:39
  %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
  MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
  %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
  %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
  %207:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag71); fft3d.c:97:39
  %209:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7419, align 16); fft3d.c:97:39
  %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
  MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
  %212:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag78); fft3d.c:97:39
  %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
  MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
  %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
  %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
  MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
  %214:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  %216:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8823, align 16); fft3d.c:97:39
  %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
  MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
  %219:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
  MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
  %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
  %221:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  %225:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag97)
  %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
  %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
  MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
  %224:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
  MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
  %226:vr128 = MOVUPSrm %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 16 from %ir.98, align 8); fft3d.c:97:39
  MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !662 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  JMP_1 %bb.12, debug-location !663; fft3d.c:93:17

bb.14.for.end:
; predecessors: %bb.12
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !666 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  JMP_1 %bb.10, debug-location !667; fft3d.c:92:13

bb.15.for.end112:
; predecessors: %bb.10
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  INC32m %stack.8.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !670 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  JMP_1 %bb.5, debug-location !671; fft3d.c:80:9

bb.16.for.end115:
; predecessors: %bb.5
  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

  %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  CMP32rm %29:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !677 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:15
  JCC_1 %bb.23, 5, implicit killed $eflags, debug-location !678; fft3d.c:102:13
  JMP_1 %bb.17, debug-location !678; fft3d.c:102:13

bb.17.if.then117:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !679 :: (store 4 into %ir.k); fft3d.c:103:20

bb.18.for.cond118:
; predecessors: %bb.17, %bb.22
  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

  %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  CMP32rm %126:gr32, %stack.3.n.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !686 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:27
  JCC_1 %bb.35, 13, implicit killed $eflags, debug-location !687; fft3d.c:103:13
  JMP_1 %bb.19, debug-location !687; fft3d.c:103:13

bb.19.for.body120:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !688 :: (store 4 into %ir.j); fft3d.c:104:24

bb.20.for.cond121:
; predecessors: %bb.19, %bb.21
  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

  %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  CMP32rm %128:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !695 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:31
  JCC_1 %bb.22, 13, implicit killed $eflags, debug-location !696; fft3d.c:104:17
  JMP_1 %bb.21, debug-location !696; fft3d.c:104:17

bb.21.for.body123:
; predecessors: %bb.20
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
  %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  %135:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
  %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
  %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
  MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !704 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  JMP_1 %bb.20, debug-location !705; fft3d.c:104:17

bb.22.for.end134:
; predecessors: %bb.20
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !708 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  JMP_1 %bb.18, debug-location !709; fft3d.c:103:13

bb.23.if.else138:
; predecessors: %bb.16
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
  %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
  %33:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !718 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
  %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
  MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
  MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !723 :: (store 4 into %ir.i); fft3d.c:115:20

bb.24.for.cond141:
; predecessors: %bb.23, %bb.34
  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

  %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  %39:gr32 = DEC32r %39:gr32(tied-def 0), implicit-def dead $eflags, debug-location !729; fft3d.c:115:33
  CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %39:gr32, implicit-def $eflags, debug-location !730 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:27
  JCC_1 %bb.35, 15, implicit killed $eflags, debug-location !731; fft3d.c:115:13
  JMP_1 %bb.25, debug-location !731; fft3d.c:115:13

bb.25.for.body144:
; predecessors: %bb.24
  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

  %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  %42:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !734 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
  %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
  MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
  %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
  MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
  %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
  MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
  %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
  MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
  CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !751 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:24
  JCC_1 %bb.27, 14, implicit killed $eflags, debug-location !752; fft3d.c:121:21
  JMP_1 %bb.26, debug-location !752; fft3d.c:121:21

bb.26.if.then150:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  %57:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  %60:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !756 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  %60:gr64_nosp = nsw ADD64rr %60:gr64_nosp(tied-def 0), %57:gr64, implicit-def dead $eflags, debug-location !757; fft3d.c:122:38
  %60:gr64_nosp = SHL64ri %60:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !753; fft3d.c:122:26
  %61:vr128 = MOVUPSrm %56:gr64, 1, %60:gr64_nosp, 0, $noreg, debug-location !753 :: (load 16 from %ir.137, align 8); fft3d.c:122:26
  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %61:vr128, debug-location !753 :: (store 16 into %ir.136); fft3d.c:122:26
  JMP_1 %bb.28, debug-location !758; fft3d.c:123:17

bb.27.if.else154:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  %48:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  %51:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
  %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
  %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
  MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
  %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
  %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
  MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
  %55:vr128 = MOVUPSrm %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 16 from %ir.147, align 8); fft3d.c:125:26
  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26

bb.28.if.end167:
; predecessors: %bb.27, %bb.26
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !761 :: (store 4 into %ir.k); fft3d.c:127:24

bb.29.for.cond168:
; predecessors: %bb.28, %bb.33
  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

  %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  %64:gr32 = DEC32r %64:gr32(tied-def 0), implicit-def dead $eflags, debug-location !767; fft3d.c:127:37
  CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %64:gr32, implicit-def $eflags, debug-location !768 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:31
  JCC_1 %bb.34, 15, implicit killed $eflags, debug-location !769; fft3d.c:127:17
  JMP_1 %bb.30, debug-location !769; fft3d.c:127:17

bb.30.for.body171:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !770 :: (store 4 into %ir.j); fft3d.c:128:28

bb.31.for.cond172:
; predecessors: %bb.30, %bb.32
  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

  %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  CMP32rm %66:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !777 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:35
  JCC_1 %bb.33, 13, implicit killed $eflags, debug-location !778; fft3d.c:128:21
  JMP_1 %bb.32, debug-location !778; fft3d.c:128:21

bb.32.for.body174:
; predecessors: %bb.31
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  %69:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !781 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
  %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
  %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
  %76:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !784 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
  MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
  %80:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !785 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
  %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
  %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
  %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
  MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
  %85:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !791 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
  %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  %90:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  %91:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
  %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
  %92:vr128 = MOVUPSrm %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 16 from %ir.172, align 8); fft3d.c:131:41
  MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
  %93:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !797 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  %96:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !798 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
  %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  %100:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !800 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  %105:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20944, align 16); fft3d.c:132:41
  %104:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag213); fft3d.c:132:41
  %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
  MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
  %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
  %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
  %106:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  %108:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22148, align 16); fft3d.c:132:41
  %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
  MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
  %111:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag225); fft3d.c:132:41
  %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
  MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
  %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
  %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
  MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
  %113:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  %115:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
  %118:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
  MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
  %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
  %120:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  %124:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag244)
  %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
  %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
  MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
  %123:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
  MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
  %125:vr128 = MOVUPSrm %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 16 from %ir.203, align 8); fft3d.c:132:41
  MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !802 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  JMP_1 %bb.31, debug-location !803; fft3d.c:128:21

bb.33.for.end259:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !806 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  JMP_1 %bb.29, debug-location !807; fft3d.c:127:17

bb.34.for.end262:
; predecessors: %bb.29
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  INC32m %stack.8.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !810 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  JMP_1 %bb.24, debug-location !811; fft3d.c:115:13

bb.35.if.end266:
; predecessors: %bb.24, %bb.18
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  ADD32mi8 %stack.10.l, 1, $noreg, 0, $noreg, 2, implicit-def dead $eflags, debug-location !814 :: (store 4 into %ir.l), (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  JMP_1 %bb.3, debug-location !815; fft3d.c:74:5

bb.36.for.end269:
; predecessors: %bb.3
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !818 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  JCC_1 %bb.38, 4, implicit killed $eflags, debug-location !820; fft3d.c:138:9
  JMP_1 %bb.37, debug-location !820; fft3d.c:138:9

bb.37.if.then271:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
  $edi = MOV32ri 4, debug-location !821; fft3d.c:139:9
  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !821; fft3d.c:139:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
  PCN_STACKMAP 1, 0, implicit-def dead early-clobber $r11, debug-location !821; fft3d.c:139:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9

bb.38.if.end272:
; predecessors: %bb.36, %bb.37

  RET 0, debug-location !822; fft3d.c:140:1

# End machine code for function Swarztrauber.

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: %6:gr64 = COPY $r9
    To: JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !555; fft3d.c:66:9
 RegionInstrs: 15
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=12
Live In: DIL DIH HDI SIL SIH HSI DH DL HDX CH CL HCX R8B R8BH R8WH R9B R9BH R9WH 
Live Out: %0 
Live Thru: 
  LiveReg: %0
Top Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=8
Bottom Pressure:
GR16=2
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %6:gr64 = COPY $r9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(13): Data Latency=0 Reg=%6
    SU(11): Data Latency=0 Reg=%6
  Pressure Diff      : GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1    GR32temp+GR64_TC 1    GR8+GR32temp 1    GR16 -1
  Single Issue       : false;
SU(1):   %5:gr32 = COPY $r8d
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(12): Data Latency=0 Reg=%5
    SU(10): Data Latency=0 Reg=%5
  Pressure Diff      : GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1    GR32temp+GR64_TC 1    GR8+GR32temp 1    GR16 -1
  Single Issue       : false;
SU(2):   %4:gr32 = COPY $ecx
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(9): Data Latency=0 Reg=%4
  Pressure Diff      : GR32_BSI 2    GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 2    GR32_TC 2    GR32_BPSP+GR32_TC 2    GR64_NOREX 2    GR64_TCW64 2    GR32_BPSP+GR64_TCW64 2    GR8 2    GR8+GR32_DIBP 2    GR8+GR32_BSI 2    GR64_TC+GR64_TCW64 2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 2    GR8+GR64_NOREX 2    GR32temp 2
  Single Issue       : false;
SU(3):   %3:gr32 = COPY $edx
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(8): Data Latency=0 Reg=%3
  Pressure Diff      : GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 2    GR32_TC 2    GR32_BPSP+GR32_TC 2    GR64_NOREX 2    GR64_TCW64 2    GR32_BPSP+GR64_TCW64 2    GR8 2    GR8+GR32_DIBP 2    GR8+GR32_BSI 2    GR64_TC+GR64_TCW64 2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 2    GR8+GR64_NOREX 2    GR32temp 2    GR32temp+GR32_DIBP 2
  Single Issue       : false;
SU(4):   %2:gr32 = COPY $esi
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(7): Data Latency=0 Reg=%2
  Pressure Diff      : GR32_BSI 1    GR32_SIDI 1    GR32_DIBP+GR32_SIDI 1    GR8_ABCD_H+GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 1    GR64_NOREX 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1
  Single Issue       : false;
SU(5):   %1:gr32 = COPY $edi
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%1
  Pressure Diff      : GR32_BPSP 1    GR32_SIDI 1    GR32_DIBP+GR32_SIDI 1    GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR64_NOREX 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1    GR64_TC 1    GR8+GR64_TCW64 1    GR8+GR64_TC 1
  Single Issue       : false;
SU(6):   MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%1
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%2
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%3
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(9):   MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%4
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%5
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%6
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(12):   undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%5
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%6
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(14):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !553 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !555; fft3d.c:66:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(14): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 12 11 10 9 8 7 6 14 
  Cand SU(13) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !553 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
Bottom Pressure:
GR16=2
  Ready @4c
  BotQ.A BotLatency SU(14) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
Bottom Pressure:
GR16=4
  LiveReg: %6
  UpdateRegP: SU(11) MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
              to 
  UpdateRegP: SU(13) MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
              to 
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 12 11 10 9 8 7 
  Cand SU(6) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
Bottom Pressure:
GR16=4
  LiveReg: %5
  UpdateRegP: SU(10) MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
              to 
  UpdateRegP: SU(12) undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
              to GR16 -2
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 11 10 9 8 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
Bottom Pressure:
GR16=4
  Ready @0c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 10 9 0 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(10) MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
Bottom Pressure:
GR16=4
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 0 9 1 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(9) MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
Bottom Pressure:
GR16=6
  LiveReg: %4
  UpdateRegP: SU(9) MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
              to 
  Ready @1c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 0 1 2 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(8) MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
Bottom Pressure:
GR16=8
  LiveReg: %3
  UpdateRegP: SU(8) MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
              to 
  Ready @1c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 2 0 1 3 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(7) MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
Bottom Pressure:
GR16=10
  LiveReg: %2
  UpdateRegP: SU(7) MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
              to 
  Ready @1c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 2 0 1 4 
  Cand SU(6) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
Bottom Pressure:
GR16=12
  LiveReg: %1
  UpdateRegP: SU(6) MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
              to 
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 0 1 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %1:gr32 = COPY $edi
Bottom Pressure:
GR32_BPSP=1
GR32_SIDI=1
GR32_DIBP+GR32_SIDI=1
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR64_NOREX=1
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR64_TC+GR64_TCW64=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR32temp=1
GR32temp+GR32_DIBP=1
GR64_TC=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR32temp+GR64_TC=1
GR8+GR32temp=1
GR16=11
  GR32_BPSP: 1 <= 2(+ 0 livethru)
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 0 1 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %2:gr32 = COPY $esi
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=1
GR8_ABCD_L+GR32_BSI=1
GR8_NOREX=1
GR64_NOREX=2
GR8=2
GR8+GR32_DIBP=2
GR8+GR32_BSI=2
GR64_TC+GR64_TCW64=2
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=2
GR8+GR64_NOREX=2
GR32temp=2
GR32temp+GR32_DIBP=2
GR64_TC=2
GR8+GR64_TCW64=2
GR8+GR64_TC=2
GR32temp+GR64_TC=2
GR8+GR32temp=2
GR16=10
  GR32_DIBP+GR32_SIDI: 2 <= 4(+ 0 livethru)
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 2 0 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %3:gr32 = COPY $edx
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=2
GR8_ABCD_L+GR32_BSI=2
GR8_NOREX=3
GR32_TC=2
GR32_BPSP+GR32_TC=2
GR64_NOREX=4
GR64_TCW64=2
GR32_BPSP+GR64_TCW64=2
GR8=4
GR8+GR32_DIBP=4
GR8+GR32_BSI=4
GR64_TC+GR64_TCW64=4
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=4
GR8+GR64_NOREX=4
GR32temp=4
GR32temp+GR32_DIBP=4
GR64_TC=4
GR8+GR64_TCW64=4
GR8+GR64_TC=4
GR32temp+GR64_TC=4
GR8+GR32temp=4
GR16=10
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %4:gr32 = COPY $ecx
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=4
GR32_BPSP+GR64_TCW64=4
GR8=6
GR8+GR32_DIBP=6
GR8+GR32_BSI=6
GR64_TC+GR64_TCW64=6
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=6
GR8+GR64_NOREX=6
GR32temp=6
GR32temp+GR32_DIBP=6
GR64_TC=6
GR8+GR64_TCW64=6
GR8+GR64_TC=6
GR32temp+GR64_TC=6
GR8+GR32temp=6
GR16=10
  GR8_NOREX: 5 <= 6(+ 0 livethru)
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %5:gr32 = COPY $r8d
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=5
GR32_BPSP+GR64_TCW64=5
GR8=7
GR8+GR32_DIBP=7
GR8+GR32_BSI=7
GR64_TC+GR64_TCW64=7
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=7
GR8+GR64_NOREX=7
GR32temp=7
GR32temp+GR32_DIBP=7
GR64_TC=7
GR8+GR64_TCW64=7
GR8+GR64_TC=7
GR32temp+GR64_TC=7
GR8+GR32temp=7
GR16=9
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %6:gr64 = COPY $r9
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
GR16=8
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %6:gr64 = COPY $r9
SU(1):   %5:gr32 = COPY $r8d
SU(2):   %4:gr32 = COPY $ecx
SU(3):   %3:gr32 = COPY $edx
SU(4):   %2:gr32 = COPY $esi
SU(5):   %1:gr32 = COPY $edi
SU(6):   MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
SU(7):   MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
SU(8):   MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
SU(9):   MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
SU(10):   MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
SU(11):   MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
SU(12):   undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
SU(13):   MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
SU(14):   CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !553 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9

********** MI Scheduling **********
Swarztrauber:%bb.2 if.end
  From: %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
    To: End RegionInstrs: 17
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR32_BSI=1
GR8_ABCD_L+GR32_BSI=1
GR8_NOREX=1
GR32_TC=1
GR32_BPSP+GR32_TC=1
FR32=1
GR64_NOREX=1
GR64_TCW64=1
GR32_BPSP+GR64_TCW64=1
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR64_TC+GR64_TCW64=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR32temp=1
GR32temp+GR32_DIBP=1
GR64_TC=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR32temp+GR64_TC=1
GR8+GR32temp=1
FR32X=1
GR16=5
Live In: 
Live Out: %227 %188 %186 
Live Thru: 
  LiveReg: %227
  LiveReg: %188
  LiveReg: %186
Top Pressure:

Bottom Pressure:
FR32=1
FR32X=1
GR16=4
Excess PSets: 
SU(0):   %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=%9
    SU(1): Data Latency=4 Reg=%9
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=%9
  Successors:
    SU(2): Data Latency=0 Reg=%11
    SU(2): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=0 Reg=%11
    SU(1): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%11
    SU(3): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%11
    SU(2): Out  Latency=0
    SU(0): Data Latency=4 Reg=%9
  Successors:
    SU(4): Data Latency=1 Reg=%11
    SU(4): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%11
    SU(3): Out  Latency=0
  Successors:
    SU(5): Data Latency=1 Reg=%11
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%11
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(6):   %13:gr32 = MOV32ri 1
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(13): Data Latency=1 Reg=%13
    SU(7): Data Latency=1 Reg=%13
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(7):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%13
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %14:gr8 = MOV8rm %stack.1.m.addr, 1, $noreg, 0, $noreg, debug-location !561 :: (dereferenceable load 1 from %ir.m.addr, align 4); fft3d.c:73:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(9): Data Latency=4 Reg=%14
  Pressure Diff      : GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR8+GR64_TCW64 -1    GR8+GR64_TC -1    GR8+GR32temp -1    GR16 -1
  Single Issue       : false;
SU(9):   $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(8): Data Latency=4 Reg=%14
  Successors:
    SU(11): Data Latency=0 Reg=$cl
  Pressure Diff      : GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -1    GR32_TC -1    GR32_BPSP+GR32_TC -1    GR64_NOREX -1    GR64_TCW64 -1    GR32_BPSP+GR64_TCW64 -1    GR64_TC+GR64_TCW64 -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR8+GR64_TCW64 1    GR8+GR64_TC 1    GR8+GR32temp 1    GR16 1
  Single Issue       : false;
SU(10):   %15:gr32 = MOV32ri 1, debug-location !562; fft3d.c:73:12
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(11): Data Latency=1 Reg=%15
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(11):   %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(9): Data Latency=0 Reg=$cl
    SU(10): Out  Latency=0
    SU(10): Data Latency=1 Reg=%15
  Successors:
    SU(12): Data Latency=1 Reg=%15
  Pressure Diff      : GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 1    GR32_TC 1    GR32_BPSP+GR32_TC 1    GR64_NOREX 1    GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1
  Single Issue       : false;
SU(12):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(11): Data Latency=1 Reg=%15
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(13):   MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%13
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(14):   %186:gr64 = MOV32ri64 528
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(15):   %188:gr64 = LEA64r $rip, 1, $noreg, @scr, $noreg
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(16):   %227:vr128 = MOVAPSrm $rip, 1, $noreg, %const.0, $noreg :: (load 16 from constant-pool)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 14 13 12 7 5 16 
  Cand SU(15) ORDER                              
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %227:vr128 = MOVAPSrm $rip, 1, $noreg, %const.0, $noreg :: (load 16 from constant-pool)
Bottom Pressure:
GR16=4
  Ready @3c
  BotQ.A BotLatency SU(16) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 14 13 12 7 5 
  Cand SU(15) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(15) %188:gr64 = LEA64r $rip, 1, $noreg, @scr, $noreg
Bottom Pressure:
GR16=2
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 14 13 12 7 
  Cand SU(5) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %186:gr64 = MOV32ri64 528
Bottom Pressure:

  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 13 12 
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
Bottom Pressure:
GR16=2
  LiveReg: %13
  UpdateRegP: SU(7) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
              to 
  UpdateRegP: SU(13) MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
              to 
  Ready @0c
  BotQ.A TopLatency SU(13) 1c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 12 
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
Bottom Pressure:
GR16=4
  LiveReg: %15
  UpdateRegP: SU(12) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
              to 
  Ready @1c
  BotQ.A TopLatency SU(12) 5c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 11 
  Cand SU(5) ORDER                              
  Cand SU(7) REG-MAX                            
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
Bottom Pressure:
GR32_BSI=1
GR8_ABCD_L+GR32_BSI=1
GR8_NOREX=1
GR32_TC=1
GR32_BPSP+GR32_TC=1
GR64_NOREX=1
GR64_TCW64=1
GR32_BPSP+GR64_TCW64=1
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR64_TC+GR64_TCW64=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR32temp=1
GR32temp+GR32_DIBP=1
GR64_TC=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR32temp+GR64_TC=1
GR8+GR32temp=1
GR16=5
  LiveReg: %15
  UpdateRegP: SU(11) %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
              to GR32_BSI 1    GR8_ABCD_L+GR32_BSI 1    GR8_NOREX 1    GR32_TC 1    GR32_BPSP+GR32_TC 1    GR64_NOREX 1    GR64_TCW64 1    GR32_BPSP+GR64_TCW64 1    GR8 1    GR8+GR32_DIBP 1    GR8+GR32_BSI 1    GR64_TC+GR64_TCW64 1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit 1    GR8+GR64_NOREX 1    GR32temp 1    GR32temp+GR32_DIBP 1
  Ready @2c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 9 10 
  Cand SU(5) ORDER                              
  Cand SU(7) REG-MAX                            
  Cand SU(9) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(9) $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
Bottom Pressure:
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR8+GR32temp=1
GR16=5
  LiveReg: %14
  UpdateRegP: SU(9) $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
              to GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -1    GR32_TC -1    GR32_BPSP+GR32_TC -1    GR64_NOREX -1    GR64_TCW64 -1    GR32_BPSP+GR64_TCW64 -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1
  Ready @2c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 10 8 
  Cand SU(5) ORDER                              
  Cand SU(7) REG-MAX                            
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %15:gr32 = MOV32ri 1, debug-location !562; fft3d.c:73:12
Bottom Pressure:
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR8+GR32temp=1
GR16=3
  Ready @3c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 8 
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %14:gr8 = MOV8rm %stack.1.m.addr, 1, $noreg, 0, $noreg, debug-location !561 :: (dereferenceable load 1 from %ir.m.addr, align 4); fft3d.c:73:15
Bottom Pressure:
GR16=2
  Ready @6c
  BotQ.A BotLatency SU(8) 5c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 7 
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
Bottom Pressure:
GR16=2
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %13:gr32 = MOV32ri 1
Bottom Pressure:

  Ready @3c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
Bottom Pressure:
GR16=2
  LiveReg: %11
  UpdateRegP: SU(5) MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
              to 
  Ready @2c
  BotQ.A TopLatency SU(5) 7c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
Bottom Pressure:
GR16=2
  LiveReg: %11
  UpdateRegP: SU(4) %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
              to GR16 -2
  Ready @3c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
Bottom Pressure:
GR16=4
  LiveReg: %11
  UpdateRegP: SU(3) %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
              to 
  LiveReg: %9
  UpdateRegP: SU(1) %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
              to GR16 -2
  UpdateRegP: SU(3) %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
              to GR16 -2
  Ready @4c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
Bottom Pressure:
GR16=4
  LiveReg: %11
  UpdateRegP: SU(2) %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
              to GR16 -2
  Ready @5c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
Bottom Pressure:
GR16=2
  Ready @5c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
Bottom Pressure:

  Ready @9c
  BotQ.A BotLatency SU(0) 7c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
SU(1):   %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
SU(2):   %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
SU(3):   %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
SU(4):   %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
SU(5):   MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
SU(6):   %13:gr32 = MOV32ri 1
SU(7):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
SU(8):   %14:gr8 = MOV8rm %stack.1.m.addr, 1, $noreg, 0, $noreg, debug-location !561 :: (dereferenceable load 1 from %ir.m.addr, align 4); fft3d.c:73:15
SU(10):   %15:gr32 = MOV32ri 1, debug-location !562; fft3d.c:73:12
SU(9):   $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
SU(11):   %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
SU(12):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
SU(13):   MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
SU(14):   %186:gr64 = MOV32ri64 528
SU(15):   %188:gr64 = LEA64r $rip, 1, $noreg, @scr, $noreg
SU(16):   %227:vr128 = MOVAPSrm $rip, 1, $noreg, %const.0, $noreg :: (load 16 from constant-pool)

********** MI Scheduling **********
Swarztrauber:%bb.3 for.cond
  From: %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
    To: JCC_1 %bb.36, 15, implicit killed $eflags, debug-location !571; fft3d.c:74:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%16
  Single Issue       : false;
SU(1):   CMP32rm %16:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !570 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:19
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%16
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.36, 15, implicit killed $eflags, debug-location !571; fft3d.c:74:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %16:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !570 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:19
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
SU(1):   CMP32rm %16:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !570 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:19

********** MI Scheduling **********
Swarztrauber:%bb.4 for.body
  From: %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
    To: End RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR16=4
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%20
    SU(1): Data Latency=4 Reg=%20
    SU(2): Out  Latency=0
    SU(3): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%20
  Successors:
    SU(2): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(2):   %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Data Latency=4 Reg=%20
    SU(0): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%20
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%20
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %21:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !578 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(7): Data Latency=4 Reg=%21
    SU(5): Data Latency=4 Reg=%21
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%21
  Successors:
    SU(6): Data Latency=0 Reg=%23
    SU(6): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(5): Data Latency=0 Reg=%23
    SU(5): Out  Latency=0
  Successors:
    SU(7): Data Latency=1 Reg=%23
    SU(7): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=%23
    SU(6): Out  Latency=0
    SU(4): Data Latency=4 Reg=%21
  Successors:
    SU(8): Data Latency=1 Reg=%23
    SU(8): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=%23
    SU(7): Out  Latency=0
  Successors:
    SU(10): Data Latency=1 Reg=%23
    SU(9): Data Latency=1 Reg=%23
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%23
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%23
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !583 :: (store 4 into %ir.i); fft3d.c:80:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 10 9 3 
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !583 :: (store 4 into %ir.i); fft3d.c:80:16
Bottom Pressure:

  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 10 9 
  Cand SU(3) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
Bottom Pressure:
GR16=2
  LiveReg: %23
  UpdateRegP: SU(9) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
              to 
  UpdateRegP: SU(10) MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
              to 
  Ready @0c
  BotQ.A TopLatency SU(10) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
Bottom Pressure:
GR16=2
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 8 
  Cand SU(3) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
Bottom Pressure:
GR16=2
  LiveReg: %23
  UpdateRegP: SU(8) %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
              to GR16 -2
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 7 
  Cand SU(3) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
Bottom Pressure:
GR16=4
  LiveReg: %23
  UpdateRegP: SU(7) %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
              to 
  LiveReg: %21
  UpdateRegP: SU(5) %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
              to GR16 -2
  UpdateRegP: SU(7) %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
              to GR16 -2
  Ready @2c
  BotQ.A BotLatency SU(7) 2c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 6 
  Cand SU(3) ORDER                              
  Cand SU(6) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(6) %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
Bottom Pressure:
GR16=4
  LiveReg: %23
  UpdateRegP: SU(6) %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
              to GR16 -2
  Ready @3c
  BotQ.A BotLatency SU(6) 3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 
  Cand SU(3) ORDER                              
  Cand SU(5) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(5) %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
Bottom Pressure:
GR16=2
  Ready @3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %21:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !578 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
Bottom Pressure:

  Ready @7c
  BotQ.A BotLatency SU(4) 7c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
Bottom Pressure:
GR16=2
  LiveReg: %20
  UpdateRegP: SU(3) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
              to 
  Ready @1c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
Bottom Pressure:
GR16=2
  LiveReg: %20
  UpdateRegP: SU(1) MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
              to 
  UpdateRegP: SU(2) %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
              to GR16 -2
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
Bottom Pressure:
GR16=2
  Ready @2c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
Bottom Pressure:

  Ready @6c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
SU(1):   MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
SU(2):   %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
SU(3):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
SU(4):   %21:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !578 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
SU(5):   %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
SU(6):   %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
SU(7):   %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
SU(8):   %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
SU(9):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
SU(10):   MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
SU(11):   MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !583 :: (store 4 into %ir.i); fft3d.c:80:16

********** MI Scheduling **********
Swarztrauber:%bb.5 for.cond2
  From: %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
    To: JCC_1 %bb.16, 15, implicit killed $eflags, debug-location !591; fft3d.c:80:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%27
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %27:gr32 = DEC32r %27:gr32(tied-def 0), implicit-def dead $eflags, debug-location !589; fft3d.c:80:29
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%27
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%27
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %27:gr32, implicit-def $eflags, debug-location !590 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%27
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.16, 15, implicit killed $eflags, debug-location !591; fft3d.c:80:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %27:gr32, implicit-def $eflags, debug-location !590 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:23
  Ready @4c
  BotQ.A TopLatency SU(2) 5c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %27:gr32 = DEC32r %27:gr32(tied-def 0), implicit-def dead $eflags, debug-location !589; fft3d.c:80:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
SU(1):   %27:gr32 = DEC32r %27:gr32(tied-def 0), implicit-def dead $eflags, debug-location !589; fft3d.c:80:29
SU(2):   CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %27:gr32, implicit-def $eflags, debug-location !590 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:23

********** MI Scheduling **********
Swarztrauber:%bb.6 for.body4
  From: %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
    To: JCC_1 %bb.8, 14, implicit killed $eflags, debug-location !612; fft3d.c:86:17
 RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR16=6
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%146
    SU(2): Data Latency=4 Reg=%146
    SU(7): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %142:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !594 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(9): Data Latency=4 Reg=%142
    SU(3): Data Latency=4 Reg=%142
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(0): Data Latency=4 Reg=%146
  Successors:
    SU(3): Data Latency=0 Reg=%144
    SU(3): Out  Latency=0
    SU(7): Anti Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(2): Data Latency=0 Reg=%144
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%142
  Successors:
    SU(5): Data Latency=1 Reg=%144
    SU(4): Data Latency=1 Reg=%144
    SU(5): Out  Latency=0
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(3): Data Latency=1 Reg=%144
  Successors:
    SU(5): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(5):   %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Data Latency=1 Reg=%144
    SU(3): Out  Latency=0
  Successors:
    SU(6): Data Latency=4 Reg=%144
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(5): Data Latency=4 Reg=%144
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(2): Anti Latency=0
    SU(0): Data Latency=4 Reg=%146
    SU(0): Out  Latency=0
  Successors:
    SU(9): Data Latency=4 Reg=%146
    SU(8): Data Latency=4 Reg=%146
    SU(9): Out  Latency=0
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(7): Data Latency=4 Reg=%146
  Successors:
    SU(9): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(9):   %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Data Latency=4 Reg=%146
    SU(7): Out  Latency=0
    SU(1): Data Latency=4 Reg=%142
  Successors:
    SU(10): Data Latency=1 Reg=%146
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=%146
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !611 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:20
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(9): Out  Latency=0
    SU(7): Out  Latency=0
    SU(5): Out  Latency=0
    SU(3): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JCC_1 %bb.8, 14, implicit killed $eflags, debug-location !612; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(11): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 12
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 6 11 
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !611 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:20
Bottom Pressure:

  Ready @4c
  BotQ.A TopLatency SU(11) 8c
  BotQ.A BotLatency SU(11) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 6 
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
Bottom Pressure:
GR16=2
  LiveReg: %146
  UpdateRegP: SU(10) MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
              to 
  Ready @0c
  BotQ.A TopLatency SU(10) 9c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 9 
  Cand SU(6) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
Bottom Pressure:
GR16=4
  LiveReg: %146
  UpdateRegP: SU(8) MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
              to 
  UpdateRegP: SU(9) %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
              to 
  LiveReg: %142
  UpdateRegP: SU(3) %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
              to 
  UpdateRegP: SU(9) %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
              to GR16 -2
  Ready @4c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 8 
  Cand SU(6) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
Bottom Pressure:
GR16=4
  Ready @4c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
Bottom Pressure:
GR16=4
  LiveReg: %146
  UpdateRegP: SU(2) %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
              to GR16 -2
  UpdateRegP: SU(7) %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
              to GR16 -2
  Ready @8c
  BotQ.A BotLatency SU(7) 8c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
Bottom Pressure:
GR16=6
  LiveReg: %144
  UpdateRegP: SU(6) MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
              to 
  Ready @1c
  BotQ.A TopLatency SU(6) 9c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
Bottom Pressure:
GR16=6
  LiveReg: %144
  UpdateRegP: SU(4) MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
              to 
  UpdateRegP: SU(5) %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
Bottom Pressure:
GR16=6
  Ready @5c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
Bottom Pressure:
GR16=6
  LiveReg: %144
  UpdateRegP: SU(3) %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
              to GR16 -2
  Ready @6c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
Bottom Pressure:
GR16=4
  Ready @8c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %142:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !594 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
Bottom Pressure:
GR16=2
  Ready @10c
  BotQ.A BotLatency SU(1) 9c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
Bottom Pressure:

  Ready @12c
  BotQ.A BotLatency SU(0) 12c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
SU(1):   %142:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !594 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
SU(2):   %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
SU(3):   %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
SU(4):   MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
SU(5):   %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
SU(6):   MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
SU(7):   %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
SU(8):   MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
SU(9):   %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
SU(10):   MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
SU(11):   CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !611 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:20

********** MI Scheduling **********
Swarztrauber:%bb.7 if.then9
  From: %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
    To: JMP_1 %bb.9, debug-location !618; fft3d.c:88:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(5): Data Latency=4 Reg=%156
  Single Issue       : false;
SU(1):   %157:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !615 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(3): Data Latency=4 Reg=%157
  Single Issue       : false;
SU(2):   %160:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !616 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(3): Data Latency=4 Reg=%160
    SU(3): Out  Latency=0
  Single Issue       : false;
SU(3):   %160:gr64_nosp = nsw ADD64rr %160:gr64_nosp(tied-def 0), %157:gr64, implicit-def dead $eflags, debug-location !617; fft3d.c:87:34
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(2): Data Latency=4 Reg=%160
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%157
  Successors:
    SU(4): Data Latency=1 Reg=%160
    SU(4): Out  Latency=0
  Single Issue       : false;
SU(4):   %160:gr64_nosp = SHL64ri %160:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !613; fft3d.c:87:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(3): Data Latency=1 Reg=%160
    SU(3): Out  Latency=0
  Successors:
    SU(5): Data Latency=1 Reg=%160
  Single Issue       : false;
SU(5):   %161:vr128 = MOVUPSrm %156:gr64, 1, %160:gr64_nosp, 0, $noreg, debug-location !613 :: (load 16 from %ir.32, align 8); fft3d.c:87:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 4
  Predecessors:
    SU(4): Data Latency=1 Reg=%160
    SU(0): Data Latency=4 Reg=%156
  Successors:
    SU(6): Data Latency=4 Reg=%161
    SU(6): Ord  Latency=0 Memory
  Single Issue       : false;
SU(6):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %161:vr128, debug-location !613 :: (store 16 into %ir.31); fft3d.c:87:22
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(5): Data Latency=4 Reg=%161
    SU(5): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   JMP_1 %bb.9, debug-location !618; fft3d.c:88:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 10
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %161:vr128, debug-location !613 :: (store 16 into %ir.31); fft3d.c:87:22
  Ready @0c
  BotQ.A TopLatency SU(6) 10c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %161:vr128 = MOVUPSrm %156:gr64, 1, %160:gr64_nosp, 0, $noreg, debug-location !613 :: (load 16 from %ir.32, align 8); fft3d.c:87:22
  Ready @4c
  BotQ.A BotLatency SU(5) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %160:gr64_nosp = SHL64ri %160:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !613; fft3d.c:87:22
  Ready @5c
  BotQ.A BotLatency SU(4) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %160:gr64_nosp = nsw ADD64rr %160:gr64_nosp(tied-def 0), %157:gr64, implicit-def dead $eflags, debug-location !617; fft3d.c:87:34
  Ready @6c
  BotQ.A BotLatency SU(3) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %160:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !616 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  Ready @10c
  BotQ.A BotLatency SU(2) 10c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %157:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !615 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  Ready @10c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  Ready @8c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
SU(1):   %157:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !615 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
SU(2):   %160:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !616 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
SU(3):   %160:gr64_nosp = nsw ADD64rr %160:gr64_nosp(tied-def 0), %157:gr64, implicit-def dead $eflags, debug-location !617; fft3d.c:87:34
SU(4):   %160:gr64_nosp = SHL64ri %160:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !613; fft3d.c:87:22
SU(5):   %161:vr128 = MOVUPSrm %156:gr64, 1, %160:gr64_nosp, 0, $noreg, debug-location !613 :: (load 16 from %ir.32, align 8); fft3d.c:87:22
SU(6):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %161:vr128, debug-location !613 :: (store 16 into %ir.31); fft3d.c:87:22

********** MI Scheduling **********
Swarztrauber:%bb.8 if.else
  From: %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
    To: End RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=2
FR32X=2
GR16=6
Live In: %227 
Live Out: %227 
Live Thru: FR32=1
FR32X=1
  LiveReg: %227
  UpdateRegP: SU(8) %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
              to 
Top Pressure:
FR32=1
FR32X=1
Bottom Pressure:
FR32=1
FR32X=1
Excess PSets: 
SU(0):   %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 19
  Successors:
    SU(7): Data Latency=4 Reg=%147
    SU(5): Data Latency=4 Reg=%147
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %148:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 21
  Successors:
    SU(3): Data Latency=4 Reg=%148
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %151:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 21
  Successors:
    SU(3): Data Latency=4 Reg=%151
    SU(3): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(3):   %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 17
  Predecessors:
    SU(2): Data Latency=4 Reg=%151
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%148
  Successors:
    SU(4): Data Latency=1 Reg=%151
    SU(4): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 16
  Predecessors:
    SU(3): Data Latency=1 Reg=%151
    SU(3): Out  Latency=0
  Successors:
    SU(7): Data Latency=1 Reg=%151
    SU(5): Data Latency=1 Reg=%151
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 15
  Predecessors:
    SU(4): Data Latency=1 Reg=%151
    SU(0): Data Latency=4 Reg=%147
  Successors:
    SU(6): Data Latency=4 Reg=%152
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(6):   MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 11
  Predecessors:
    SU(5): Data Latency=4 Reg=%152
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(9): Ord  Latency=0 Memory
    SU(10): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(7):   %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 10
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%151
    SU(0): Data Latency=4 Reg=%147
  Successors:
    SU(8): Data Latency=4 Reg=%154
    SU(8): Out  Latency=0
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(8):   %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 6
  Predecessors:
    SU(7): Data Latency=4 Reg=%154
    SU(7): Out  Latency=0
  Successors:
    SU(9): Data Latency=1 Reg=%154
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%154
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(10): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(10):   %155:vr128 = MOVUPSrm %stack.24..compoundliteral, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 16 from %ir.42, align 8); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 4
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(6): Ord  Latency=1 Memory
  Successors:
    SU(11): Data Latency=4 Reg=%155
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(11):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 0
  Predecessors:
    SU(10): Data Latency=4 Reg=%155
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
Critical Path(GS-RR ): 21
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 
Scheduling SU(11) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %155
  UpdateRegP: SU(11) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22
              to 
  Ready @0c
  BotQ.A TopLatency SU(11) 21c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Scheduling SU(10) %155:vr128 = MOVUPSrm %stack.24..compoundliteral, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 16 from %ir.42, align 8); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
  Ready @4c
  BotQ.A BotLatency SU(10) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Scheduling SU(9) MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %154
  UpdateRegP: SU(9) MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
              to 
  Ready @5c
  BotQ.A BotLatency SU(9) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Scheduling SU(8) %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %154
  UpdateRegP: SU(8) %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
              to FR32 -1    FR32X -1
  Ready @6c
  BotQ.A BotLatency SU(8) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Scheduling SU(7) %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  LiveReg: %147
  UpdateRegP: SU(5) %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(7) %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
              to FR32 -1    FR32X -1    GR16 2
  LiveReg: %151
  UpdateRegP: SU(5) %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
              to FR32 -1    FR32X -1
  UpdateRegP: SU(7) %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
              to FR32 -1    FR32X -1
  Ready @10c
  BotQ.A BotLatency SU(7) 10c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
Bottom Pressure:
FR32=2
FR32X=2
GR16=4
  LiveReg: %152
  UpdateRegP: SU(6) MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
              to 
  Ready @11c
  BotQ.A BotLatency SU(6) 11c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  Ready @15c
  BotQ.A BotLatency SU(5) 15c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  LiveReg: %151
  UpdateRegP: SU(4) %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
              to GR16 -2
  Ready @16c
  BotQ.A BotLatency SU(4) 16c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=6
  LiveReg: %151
  UpdateRegP: SU(3) %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
              to 
  LiveReg: %148
  UpdateRegP: SU(3) %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
              to GR16 -2
  Ready @17c
  BotQ.A BotLatency SU(3) 17c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %151:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  Ready @21c
  BotQ.A BotLatency SU(2) 21c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %148:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
GR16=2
  Ready @21c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
Bottom Pressure:
FR32=1
FR32X=1
  Ready @19c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
SU(1):   %148:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
SU(2):   %151:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
SU(3):   %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
SU(4):   %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
SU(5):   %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
SU(6):   MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
SU(7):   %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
SU(8):   %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
SU(9):   MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
SU(10):   %155:vr128 = MOVUPSrm %stack.24..compoundliteral, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 16 from %ir.42, align 8); fft3d.c:90:22
SU(11):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22

********** MI Scheduling **********
Swarztrauber:%bb.10 for.cond21
  From: %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
    To: JCC_1 %bb.15, 15, implicit killed $eflags, debug-location !629; fft3d.c:92:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%164
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %164:gr32 = DEC32r %164:gr32(tied-def 0), implicit-def dead $eflags, debug-location !627; fft3d.c:92:33
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%164
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%164
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %164:gr32, implicit-def $eflags, debug-location !628 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%164
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.15, 15, implicit killed $eflags, debug-location !629; fft3d.c:92:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %164:gr32, implicit-def $eflags, debug-location !628 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:27
  Ready @4c
  BotQ.A TopLatency SU(2) 5c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %164:gr32 = DEC32r %164:gr32(tied-def 0), implicit-def dead $eflags, debug-location !627; fft3d.c:92:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
SU(1):   %164:gr32 = DEC32r %164:gr32(tied-def 0), implicit-def dead $eflags, debug-location !627; fft3d.c:92:33
SU(2):   CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %164:gr32, implicit-def $eflags, debug-location !628 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:27

********** MI Scheduling **********
Swarztrauber:%bb.12 for.cond25
  From: %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
    To: JCC_1 %bb.14, 13, implicit killed $eflags, debug-location !638; fft3d.c:93:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%166
  Single Issue       : false;
SU(1):   CMP32rm %166:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !637 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%166
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.14, 13, implicit killed $eflags, debug-location !638; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %166:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !637 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:31
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
SU(1):   CMP32rm %166:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !637 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:31

********** MI Scheduling **********
Swarztrauber:%bb.13 for.body27
  From: %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
    To: JMP_1 %bb.12, debug-location !663; fft3d.c:93:17
 RegionInstrs: 75
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=3
FR32X=3
GR16=14
Live In: %188 %186 %0 
Live Out: %188 %186 %0 
Live Thru: GR16=6
  LiveReg: %188
  UpdateRegP: SU(21) %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
              to 
  UpdateRegP: SU(34) %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
              to 
  LiveReg: %186
  UpdateRegP: SU(20) %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
              to 
  UpdateRegP: SU(33) %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
              to 
  LiveReg: %0
  UpdateRegP: SU(4) %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
              to 
  UpdateRegP: SU(13) %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
              to 
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
SU(0):   %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(15): Data Latency=4 Reg=%168
    SU(6): Data Latency=4 Reg=%168
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %172:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !641 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 32
  Successors:
    SU(3): Data Latency=4 Reg=%172
    SU(3): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %170:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !642 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 32
  Successors:
    SU(19): Data Latency=4 Reg=%170
    SU(12): Data Latency=4 Reg=%170
    SU(3): Data Latency=4 Reg=%170
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(3):   %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 28
  Predecessors:
    SU(2): Data Latency=4 Reg=%170
    SU(1): Data Latency=4 Reg=%172
    SU(1): Out  Latency=0
  Successors:
    SU(4): Data Latency=1 Reg=%172
    SU(4): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 27
  Predecessors:
    SU(3): Data Latency=1 Reg=%172
    SU(3): Out  Latency=0
  Successors:
    SU(5): Data Latency=1 Reg=%172
    SU(5): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 26
  Predecessors:
    SU(4): Data Latency=1 Reg=%172
    SU(4): Out  Latency=0
  Successors:
    SU(6): Data Latency=1 Reg=%172
    SU(6): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 25
  Predecessors:
    SU(5): Data Latency=1 Reg=%172
    SU(5): Out  Latency=0
    SU(0): Data Latency=4 Reg=%168
  Successors:
    SU(9): Data Latency=1 Reg=%172
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   %176:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !644 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(8): Data Latency=4 Reg=%176
    SU(8): Out  Latency=0
    SU(74): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(8):   %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 25
  Predecessors:
    SU(7): Data Latency=4 Reg=%176
    SU(7): Out  Latency=0
  Successors:
    SU(29): Data Latency=1 Reg=%176
    SU(16): Data Latency=1 Reg=%176
    SU(9): Data Latency=1 Reg=%176
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 18
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 24
  Predecessors:
    SU(6): Data Latency=1 Reg=%172
    SU(8): Data Latency=1 Reg=%176
  Successors:
    SU(10): Data Latency=4 Reg=%177
    SU(74): Ord  Latency=0 Memory
    SU(73): Ord  Latency=0 Memory
    SU(29): Ord  Latency=0 Memory
    SU(71): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(70): Ord  Latency=0 Memory
    SU(67): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(10):   MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 11
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 20
  Predecessors:
    SU(9): Data Latency=4 Reg=%177
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=1 Memory
    SU(62): Ord  Latency=1 Memory
    SU(58): Ord  Latency=1 Memory
    SU(55): Ord  Latency=1 Memory
    SU(48): Ord  Latency=1 Memory
    SU(45): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
    SU(16): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(11):   %180:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !646 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 27
  Successors:
    SU(12): Data Latency=4 Reg=%180
    SU(12): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(12):   %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 23
  Predecessors:
    SU(11): Data Latency=4 Reg=%180
    SU(11): Out  Latency=0
    SU(2): Data Latency=4 Reg=%170
  Successors:
    SU(13): Data Latency=1 Reg=%180
    SU(13): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(13):   %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 22
  Predecessors:
    SU(12): Data Latency=1 Reg=%180
    SU(12): Out  Latency=0
  Successors:
    SU(14): Data Latency=1 Reg=%180
    SU(14): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 21
  Predecessors:
    SU(13): Data Latency=1 Reg=%180
    SU(13): Out  Latency=0
  Successors:
    SU(15): Data Latency=1 Reg=%180
    SU(15): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 20
  Predecessors:
    SU(14): Data Latency=1 Reg=%180
    SU(14): Out  Latency=0
    SU(0): Data Latency=4 Reg=%168
  Successors:
    SU(16): Data Latency=1 Reg=%180
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 17
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 19
  Predecessors:
    SU(15): Data Latency=1 Reg=%180
    SU(10): Ord  Latency=1 Memory
    SU(8): Data Latency=1 Reg=%176
  Successors:
    SU(17): Data Latency=4 Reg=%183
    SU(74): Ord  Latency=0 Memory
    SU(73): Ord  Latency=0 Memory
    SU(29): Ord  Latency=0 Memory
    SU(71): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(70): Ord  Latency=0 Memory
    SU(67): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(17):   MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 10
  # rdefs left       : 0
  Latency            : 1
  Depth              : 17
  Height             : 15
  Predecessors:
    SU(16): Data Latency=4 Reg=%183
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(69): Ord  Latency=1 Memory
    SU(63): Ord  Latency=1 Memory
    SU(59): Ord  Latency=1 Memory
    SU(56): Ord  Latency=1 Memory
    SU(49): Ord  Latency=1 Memory
    SU(46): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(39): Ord  Latency=1 Memory
    SU(26): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(18):   %187:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !650 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(19): Data Latency=4 Reg=%187
    SU(19): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(19):   %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(18): Data Latency=4 Reg=%187
    SU(18): Out  Latency=0
    SU(2): Data Latency=4 Reg=%170
  Successors:
    SU(20): Data Latency=1 Reg=%187
    SU(20): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(20):   %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(19): Data Latency=1 Reg=%187
    SU(19): Out  Latency=0
  Successors:
    SU(21): Data Latency=1 Reg=%187
    SU(21): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(21):   %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(20): Data Latency=1 Reg=%187
    SU(20): Out  Latency=0
  Successors:
    SU(29): Data Latency=1 Reg=%187
  Pressure Diff      : 
  Single Issue       : false;
SU(22):   %192:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 13
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(24): Data Latency=4 Reg=%192
    SU(24): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(23):   %193:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 13
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(26): Data Latency=4 Reg=%193
    SU(26): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(24):   %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 9
  Predecessors:
    SU(22): Data Latency=4 Reg=%192
    SU(22): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%192
  Pressure Diff      : 
  Single Issue       : false;
SU(25):   MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(24): Data Latency=4 Reg=%192
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(27): Ord  Latency=0 Memory
    SU(28): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(26):   %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 9
  Predecessors:
    SU(23): Data Latency=4 Reg=%193
    SU(23): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(27): Data Latency=4 Reg=%193
  Pressure Diff      : 
  Single Issue       : false;
SU(27):   MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(26): Data Latency=4 Reg=%193
    SU(25): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(28): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(28):   %194:vr128 = MOVUPSrm %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 16 from %ir.69, align 8); fft3d.c:96:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 23
  Height             : 4
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(25): Ord  Latency=1 Memory
  Successors:
    SU(29): Data Latency=4 Reg=%194
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(29):   MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 0
  Predecessors:
    SU(28): Data Latency=4 Reg=%194
    SU(21): Data Latency=1 Reg=%187
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Data Latency=1 Reg=%176
  Successors:
    SU(73): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(30):   %195:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !656 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(32): Data Latency=4 Reg=%195
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(31):   %198:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !657 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(32): Data Latency=4 Reg=%198
    SU(32): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(32):   %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(31): Data Latency=4 Reg=%198
    SU(31): Out  Latency=0
    SU(30): Data Latency=4 Reg=%195
  Successors:
    SU(33): Data Latency=1 Reg=%198
    SU(33): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(33):   %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(32): Data Latency=1 Reg=%198
    SU(32): Out  Latency=0
  Successors:
    SU(34): Data Latency=1 Reg=%198
    SU(34): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(34):   %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(33): Data Latency=1 Reg=%198
    SU(33): Out  Latency=0
  Successors:
    SU(73): Data Latency=1 Reg=%198
  Pressure Diff      : 
  Single Issue       : false;
SU(35):   %201:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !660 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(36): Data Latency=4 Reg=%201
    SU(36): Out  Latency=0
    SU(74): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(36):   %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(35): Data Latency=4 Reg=%201
    SU(35): Out  Latency=0
  Successors:
    SU(73): Data Latency=1 Reg=%201
  Pressure Diff      : 
  Single Issue       : false;
SU(37):   %206:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6215, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 18
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(39): Data Latency=4 Reg=%206
    SU(39): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(38):   %205:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag66); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 8
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(41): Data Latency=4 Reg=%205
    SU(41): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(39):   %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 14
  Predecessors:
    SU(37): Data Latency=4 Reg=%206
    SU(37): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(43): Data Latency=4 Reg=%206
    SU(40): Data Latency=4 Reg=%206
    SU(43): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(40):   MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(39): Data Latency=4 Reg=%206
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(43): Anti Latency=0
    SU(42): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(41):   %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 4
  Predecessors:
    SU(38): Data Latency=4 Reg=%205
    SU(38): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(42): Data Latency=4 Reg=%205
  Pressure Diff      : 
  Single Issue       : false;
SU(42):   MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=4 Reg=%205
    SU(40): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(43):   %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(40): Anti Latency=0
    SU(39): Data Latency=4 Reg=%206
    SU(39): Out  Latency=0
  Successors:
    SU(52): Data Latency=4 Reg=%206
    SU(52): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(44):   %207:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag71); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(51): Data Latency=4 Reg=%207
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(45):   %209:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7419, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 15
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(46): Data Latency=4 Reg=%209
    SU(46): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(46):   %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 11
  Predecessors:
    SU(45): Data Latency=4 Reg=%209
    SU(45): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(47): Data Latency=4 Reg=%209
  Pressure Diff      : 
  Single Issue       : false;
SU(47):   MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(46): Data Latency=4 Reg=%209
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(50): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(48):   %212:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag78); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 15
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(49): Data Latency=4 Reg=%212
    SU(49): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(49):   %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 11
  Predecessors:
    SU(48): Data Latency=4 Reg=%212
    SU(48): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(51): Data Latency=4 Reg=%212
    SU(50): Data Latency=4 Reg=%212
    SU(51): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(50):   MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(49): Data Latency=4 Reg=%212
    SU(47): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(51): Anti Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(51):   %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(50): Anti Latency=0
    SU(49): Data Latency=4 Reg=%212
    SU(49): Out  Latency=0
    SU(44): Data Latency=4 Reg=%207
  Successors:
    SU(52): Data Latency=1 Reg=%212
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(52):   %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 6
  Predecessors:
    SU(51): Data Latency=1 Reg=%212
    SU(43): Data Latency=4 Reg=%206
    SU(43): Out  Latency=0
  Successors:
    SU(53): Data Latency=1 Reg=%206
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(53):   MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 5
  Predecessors:
    SU(52): Data Latency=1 Reg=%206
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=0 Memory
    SU(72): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(54):   %214:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(61): Data Latency=4 Reg=%214
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(55):   %216:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8823, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 15
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%216
    SU(56): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(56):   %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 11
  Predecessors:
    SU(55): Data Latency=4 Reg=%216
    SU(55): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(57): Data Latency=4 Reg=%216
  Pressure Diff      : 
  Single Issue       : false;
SU(57):   MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(56): Data Latency=4 Reg=%216
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(60): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(58):   %219:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 15
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(59): Data Latency=4 Reg=%219
    SU(59): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(59):   %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 11
  Predecessors:
    SU(58): Data Latency=4 Reg=%219
    SU(58): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(61): Data Latency=4 Reg=%219
    SU(60): Data Latency=4 Reg=%219
    SU(61): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(60):   MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(59): Data Latency=4 Reg=%219
    SU(57): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(61): Anti Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(61):   %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(60): Anti Latency=0
    SU(59): Data Latency=4 Reg=%219
    SU(59): Out  Latency=0
    SU(54): Data Latency=4 Reg=%214
  Successors:
    SU(66): Data Latency=1 Reg=%219
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(62):   %221:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 15
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(63): Data Latency=4 Reg=%221
    SU(63): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(63):   %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 11
  Predecessors:
    SU(62): Data Latency=4 Reg=%221
    SU(62): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(67): Data Latency=4 Reg=%221
    SU(65): Data Latency=4 Reg=%221
  Pressure Diff      : 
  Single Issue       : false;
SU(64):   %225:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag97)
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(65): Data Latency=4 Reg=%225
    SU(65): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(65):   %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(63): Data Latency=4 Reg=%221
    SU(64): Out  Latency=0
    SU(64): Data Latency=4 Reg=%225
  Successors:
    SU(66): Data Latency=1 Reg=%225
    SU(66): Out  Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(66):   %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 23
  Height             : 6
  Predecessors:
    SU(65): Data Latency=1 Reg=%225
    SU(65): Out  Latency=0
    SU(61): Data Latency=1 Reg=%219
  Successors:
    SU(71): Data Latency=1 Reg=%225
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(67):   MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(63): Data Latency=4 Reg=%221
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(70): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(68):   %224:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 8
  Predecessors:
    SU(10): Ord  Latency=1 Memory
  Successors:
    SU(69): Data Latency=4 Reg=%224
    SU(69): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(69):   %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 18
  Height             : 4
  Predecessors:
    SU(68): Data Latency=4 Reg=%224
    SU(68): Out  Latency=0
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(70): Data Latency=4 Reg=%224
  Pressure Diff      : 
  Single Issue       : false;
SU(70):   MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(69): Data Latency=4 Reg=%224
    SU(67): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(71):   MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 5
  Predecessors:
    SU(66): Data Latency=1 Reg=%225
    SU(53): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Successors:
    SU(72): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(72):   %226:vr128 = MOVUPSrm %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 16 from %ir.98, align 8); fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 28
  Height             : 4
  Predecessors:
    SU(71): Ord  Latency=1 Memory
    SU(53): Ord  Latency=1 Memory
  Successors:
    SU(73): Data Latency=4 Reg=%226
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(73):   MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 32
  Height             : 0
  Predecessors:
    SU(72): Data Latency=4 Reg=%226
    SU(36): Data Latency=1 Reg=%201
    SU(34): Data Latency=1 Reg=%198
    SU(29): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(74):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !662 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 13
  Height             : 3
  Predecessors:
    SU(35): Ord  Latency=0 Memory
    SU(16): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JMP_1 %bb.12, debug-location !663; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(74): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 32
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 73 70 42 74 
  Cand SU(73) ORDER                              
  Cand SU(74) ORDER                              
Pick Bot ORDER     
Scheduling SU(74) INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !662 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:93:40
Bottom Pressure:
GR16=6
  Ready @3c
  BotQ.A TopLatency SU(74) 13c
  BotQ.A BotLatency SU(74) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 73 70 42 
  Cand SU(73) ORDER                              
Pick Bot ORDER     
Scheduling SU(73) MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %201
  UpdateRegP: SU(73) MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %198
  UpdateRegP: SU(73) MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
              to FR32 1    FR32X 1
  LiveReg: %226
  UpdateRegP: SU(73) MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
              to 
  Ready @0c
  BotQ.A TopLatency SU(73) 32c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 70 72 36 34 29 
  Cand SU(42) ORDER                              
  Cand SU(70) ORDER                              
  Cand SU(72) ORDER                              
Pick Bot ORDER     
Scheduling SU(72) %226:vr128 = MOVUPSrm %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 16 from %ir.98, align 8); fft3d.c:97:39
Bottom Pressure:
GR16=10
  Ready @4c
  BotQ.A BotLatency SU(72) 4c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 70 29 36 34 71 
  Cand SU(42) ORDER                              
  Cand SU(70) ORDER                              
  Cand SU(71) ORDER                              
Pick Bot ORDER     
Scheduling SU(71) MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %225
  UpdateRegP: SU(71) MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
              to 
  Ready @5c
  BotQ.A BotLatency SU(71) 5c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 70 29 36 34 66 53 
  Cand SU(42) ORDER                              
  Cand SU(70) ORDER                              
Pick Bot ORDER     
Scheduling SU(70) MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %224
  UpdateRegP: SU(70) MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
              to 
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 66 69 67 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(66) ORDER                              
  Cand SU(69) ORDER                              
Pick Bot ORDER     
Scheduling SU(69) %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %224
  UpdateRegP: SU(69) %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @5c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 66 67 68 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(66) ORDER                              
  Cand SU(67) ORDER                              
  Cand SU(68) ORDER                              
Pick Bot ORDER     
Scheduling SU(68) %224:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @9c
  BotQ.A BotLatency SU(68) 8c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 66 67 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(66) ORDER                              
  Cand SU(67) ORDER                              
Pick Bot ORDER     
Scheduling SU(67) MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %221
  UpdateRegP: SU(65) %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
              to 
  UpdateRegP: SU(67) MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
              to 
  Ready @1c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 66 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(66) ORDER                              
Pick Bot ORDER     
Scheduling SU(66) %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %225
  UpdateRegP: SU(66) %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
              to 
  LiveReg: %219
  UpdateRegP: SU(66) %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @6c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 65 61 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(36) REG-MAX                            
  Cand SU(65) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(65) %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %225
  UpdateRegP: SU(65) %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @7c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 61 63 64 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(36) REG-MAX                            
  Cand SU(63) ORDER                              
  Cand SU(64) ORDER                              
Pick Bot ORDER     
Scheduling SU(64) %225:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag97)
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @11c
  BotQ.A BotLatency SU(64) 11c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 61 63 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(61) ORDER                              
  Cand SU(63) ORDER                              
Pick Bot ORDER     
Scheduling SU(63) %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %221
  UpdateRegP: SU(63) %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @11c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 61 62 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(61) ORDER                              
  Cand SU(62) ORDER                              
Pick Bot ORDER     
Scheduling SU(62) %221:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @15c
  BotQ.A BotLatency SU(62) 15c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 61 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(61) ORDER                              
Pick Bot ORDER     
Scheduling SU(61) %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %219
  UpdateRegP: SU(60) MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
              to 
  UpdateRegP: SU(61) %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
              to 
  LiveReg: %214
  UpdateRegP: SU(61) %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @7c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 60 54 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(60) ORDER                              
Pick Bot ORDER     
Scheduling SU(60) MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @7c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 59 57 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
  Cand SU(59) ORDER                              
Pick Bot ORDER     
Scheduling SU(59) %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %219
  UpdateRegP: SU(59) %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @11c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 57 58 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
  Cand SU(57) ORDER                              
  Cand SU(58) ORDER                              
Pick Bot ORDER     
Scheduling SU(58) %219:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @15c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 57 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
  Cand SU(57) ORDER                              
Pick Bot ORDER     
Scheduling SU(57) MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %216
  UpdateRegP: SU(57) MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
              to 
  Ready @7c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 56 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
  Cand SU(56) ORDER                              
Pick Bot ORDER     
Scheduling SU(56) %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %216
  UpdateRegP: SU(56) %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @11c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 55 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
  Cand SU(55) ORDER                              
Pick Bot ORDER     
Scheduling SU(55) %216:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8823, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @15c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 54 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
Pick Bot ORDER     
Scheduling SU(54) %214:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
Bottom Pressure:
GR16=10
  Ready @11c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 53 29 36 34 
  Cand SU(42) ORDER                              
  Cand SU(53) ORDER                              
Pick Bot ORDER     
Scheduling SU(53) MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %206
  UpdateRegP: SU(53) MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
              to 
  Ready @5c
BotQ.A @5c
  Retired: 22
  Executed: 5c
  Critical: 5c, 22 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 52 
  Cand SU(42) ORDER                              
  Cand SU(52) ORDER                              
Pick Bot ORDER     
Scheduling SU(52) %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %206
  UpdateRegP: SU(52) %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
              to 
  LiveReg: %212
  UpdateRegP: SU(52) %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @6c
BotQ.A @5c
  Retired: 23
  Executed: 5c
  Critical: 5c, 23 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 51 43 
  Cand SU(42) ORDER                              
  Cand SU(51) ORDER                              
Pick Bot ORDER     
Scheduling SU(51) %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %212
  UpdateRegP: SU(50) MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
              to 
  UpdateRegP: SU(51) %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
              to 
  LiveReg: %207
  UpdateRegP: SU(51) %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @7c
  *** Max MOps 4 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 24
  Executed: 6c
  Critical: 6c, 24 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 50 44 
  Cand SU(42) ORDER                              
  Cand SU(34) REG-MAX                            
  Cand SU(36) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(50) ORDER                              
Pick Bot ORDER     
Scheduling SU(50) MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  Ready @7c
BotQ.A @6c
  Retired: 25
  Executed: 6c
  Critical: 6c, 25 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 49 47 
  Cand SU(42) ORDER                              
  Cand SU(34) REG-MAX                            
  Cand SU(36) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
  Cand SU(49) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(49) %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %212
  UpdateRegP: SU(49) %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @11c
BotQ.A @6c
  Retired: 26
  Executed: 6c
  Critical: 6c, 26 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 47 48 
  Cand SU(42) ORDER                              
  Cand SU(34) REG-MAX                            
  Cand SU(36) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
  Cand SU(48) ORDER                              
Pick Bot ORDER     
Scheduling SU(48) %212:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag78); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @15c
BotQ.A @6c
  Retired: 27
  Executed: 6c
  Critical: 6c, 27 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 47 
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
  Cand SU(47) ORDER                              
Pick Bot ORDER     
Scheduling SU(47) MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %209
  UpdateRegP: SU(47) MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
              to 
  Ready @7c
  *** Max MOps 4 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 28
  Executed: 7c
  Critical: 7c, 28 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 46 
  Cand SU(42) ORDER                              
  Cand SU(34) REG-MAX                            
  Cand SU(36) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
  Cand SU(46) ORDER                              
Pick Bot ORDER     
Scheduling SU(46) %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %209
  UpdateRegP: SU(46) %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @11c
BotQ.A @7c
  Retired: 29
  Executed: 7c
  Critical: 7c, 29 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 45 
  Cand SU(42) ORDER                              
  Cand SU(34) REG-MAX                            
  Cand SU(36) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
  Cand SU(45) ORDER                              
Pick Bot ORDER     
Scheduling SU(45) %209:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7419, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @15c
BotQ.A @7c
  Retired: 30
  Executed: 7c
  Critical: 7c, 30 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 44 
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
Pick Bot ORDER     
Scheduling SU(44) %207:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag71); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @11c
BotQ.A @7c
  Retired: 31
  Executed: 7c
  Critical: 7c, 31 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 43 
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
Pick Bot ORDER     
Scheduling SU(43) %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %206
  UpdateRegP: SU(40) MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
              to 
  UpdateRegP: SU(43) %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @10c
  *** Max MOps 4 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 32
  Executed: 8c
  Critical: 8c, 32 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 34 29 36 
  Cand SU(42) ORDER                              
Pick Bot ORDER     
Scheduling SU(42) MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %205
  UpdateRegP: SU(42) MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
              to 
  Ready @8c
BotQ.A @8c
  Retired: 33
  Executed: 8c
  Critical: 8c, 33 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 41 40 
  Cand SU(36) ORDER                              
  Cand SU(41) ORDER                              
Pick Bot ORDER     
Scheduling SU(41) %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %205
  UpdateRegP: SU(41) %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @12c
BotQ.A @8c
  Retired: 34
  Executed: 8c
  Critical: 8c, 34 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 40 38 
  Cand SU(36) ORDER                              
  Cand SU(40) ORDER                              
Pick Bot ORDER     
Scheduling SU(40) MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @10c
BotQ.A @8c
  Retired: 35
  Executed: 8c
  Critical: 8c, 35 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 38 39 
  Cand SU(36) ORDER                              
  Cand SU(38) ORDER                              
  Cand SU(39) ORDER                              
Pick Bot ORDER     
Scheduling SU(39) %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %206
  UpdateRegP: SU(39) %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
              to FR32 -1    FR32X -1
  Ready @14c
  *** Max MOps 4 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 36
  Executed: 9c
  Critical: 9c, 36 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 38 37 
  Cand SU(36) ORDER                              
  Cand SU(38) ORDER                              
Pick Bot ORDER     
Scheduling SU(38) %205:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag66); fft3d.c:97:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @16c
BotQ.A @9c
  Retired: 37
  Executed: 9c
  Critical: 9c, 37 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 37 
  Cand SU(36) ORDER                              
  Cand SU(37) ORDER                              
Pick Bot ORDER     
Scheduling SU(37) %206:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6215, align 16); fft3d.c:97:39
Bottom Pressure:
GR16=10
  Ready @18c
  BotQ.A BotLatency SU(37) 18c
BotQ.A @9c
  Retired: 38
  Executed: 9c
  Critical: 9c, 38 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 34 29 
  Cand SU(36) ORDER                              
Pick Bot ORDER     
Scheduling SU(36) %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
Bottom Pressure:
GR16=10
  LiveReg: %201
  UpdateRegP: SU(36) %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
              to GR16 -2
  Ready @9c
BotQ.A @9c
  Retired: 39
  Executed: 9c
  Critical: 9c, 39 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 34 35 
  Cand SU(29) ORDER                              
  Cand SU(34) ORDER                              
  Cand SU(35) ORDER                              
Pick Bot ORDER     
Scheduling SU(35) %201:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !660 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
Bottom Pressure:
GR16=8
  Ready @13c
  *** Max MOps 4 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 40
  Executed: 10c
  Critical: 10c, 40 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 34 
  Cand SU(29) ORDER                              
  Cand SU(34) ORDER                              
Pick Bot ORDER     
Scheduling SU(34) %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
Bottom Pressure:
GR16=8
  LiveReg: %198
  UpdateRegP: SU(34) %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
              to GR16 -2
  Ready @10c
BotQ.A @10c
  Retired: 41
  Executed: 10c
  Critical: 10c, 41 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 33 
  Cand SU(29) ORDER                              
  Cand SU(33) ORDER                              
Pick Bot ORDER     
Scheduling SU(33) %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
Bottom Pressure:
GR16=8
  LiveReg: %198
  UpdateRegP: SU(33) %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
              to GR16 -2
  Ready @11c
BotQ.A @10c
  Retired: 42
  Executed: 10c
  Critical: 10c, 42 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 32 
  Cand SU(29) ORDER                              
  Cand SU(32) ORDER                              
Pick Bot ORDER     
Scheduling SU(32) %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
Bottom Pressure:
GR16=10
  LiveReg: %198
  UpdateRegP: SU(32) %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
              to 
  LiveReg: %195
  UpdateRegP: SU(32) %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
              to GR16 -2
  Ready @12c
BotQ.A @10c
  Retired: 43
  Executed: 10c
  Critical: 10c, 43 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 31 30 
  Cand SU(29) ORDER                              
  Cand SU(31) ORDER                              
Pick Bot ORDER     
Scheduling SU(31) %198:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !657 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
Bottom Pressure:
GR16=8
  Ready @16c
  *** Max MOps 4 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 44
  Executed: 11c
  Critical: 11c, 44 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 30 
  Cand SU(29) ORDER                              
  Cand SU(30) ORDER                              
Pick Bot ORDER     
Scheduling SU(30) %195:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !656 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
Bottom Pressure:
GR16=6
  Ready @16c
BotQ.A @11c
  Retired: 45
  Executed: 11c
  Critical: 11c, 45 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 
Scheduling SU(29) MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %176
  UpdateRegP: SU(9) %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(16) %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(29) MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %187
  UpdateRegP: SU(29) MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
              to FR32 1    FR32X 1
  LiveReg: %194
  UpdateRegP: SU(29) MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
              to 
  Ready @11c
  BotQ.A TopLatency SU(29) 27c
BotQ.A @11c
  Retired: 46
  Executed: 11c
  Critical: 11c, 46 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 28 21 
  Cand SU(28) ORDER                              
Pick Bot ORDER     
Scheduling SU(28) %194:vr128 = MOVUPSrm %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 16 from %ir.69, align 8); fft3d.c:96:39
Bottom Pressure:
GR16=10
  Ready @15c
BotQ.A @11c
  Retired: 47
  Executed: 11c
  Critical: 11c, 47 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 27 
  Cand SU(21) ORDER                              
  Cand SU(27) ORDER                              
Pick Bot ORDER     
Scheduling SU(27) MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %193
  UpdateRegP: SU(27) MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
              to 
  Ready @16c
  *** Max MOps 4 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 48
  Executed: 12c
  Critical: 12c, 48 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 26 25 
  Cand SU(21) ORDER                              
  Cand SU(26) ORDER                              
Pick Bot ORDER     
Scheduling SU(26) %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %193
  UpdateRegP: SU(26) %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
              to FR32 -1    FR32X -1
  Ready @20c
BotQ.A @12c
  Retired: 49
  Executed: 12c
  Critical: 12c, 49 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 25 23 
  Cand SU(21) ORDER                              
  Cand SU(25) ORDER                              
Pick Bot ORDER     
Scheduling SU(25) MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %192
  UpdateRegP: SU(25) MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
              to 
  Ready @16c
BotQ.A @12c
  Retired: 50
  Executed: 12c
  Critical: 12c, 50 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 23 24 
  Cand SU(21) ORDER                              
  Cand SU(23) ORDER                              
  Cand SU(24) ORDER                              
Pick Bot ORDER     
Scheduling SU(24) %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %192
  UpdateRegP: SU(24) %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
              to FR32 -1    FR32X -1
  Ready @20c
BotQ.A @12c
  Retired: 51
  Executed: 12c
  Critical: 12c, 51 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 23 22 17 
  Cand SU(21) ORDER                              
  Cand SU(23) ORDER                              
Pick Bot ORDER     
Scheduling SU(23) %193:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @24c
  *** Max MOps 4 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 52
  Executed: 13c
  Critical: 13c, 52 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 17 22 
  Cand SU(21) ORDER                              
  Cand SU(22) ORDER                              
Pick Bot ORDER     
Scheduling SU(22) %192:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
Bottom Pressure:
GR16=10
  Ready @24c
BotQ.A @13c
  Retired: 53
  Executed: 13c
  Critical: 13c, 53 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 17 
  Cand SU(21) ORDER                              
Pick Bot ORDER     
Scheduling SU(21) %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
Bottom Pressure:
GR16=10
  LiveReg: %187
  UpdateRegP: SU(21) %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
              to GR16 -2
  Ready @13c
BotQ.A @13c
  Retired: 54
  Executed: 13c
  Critical: 13c, 54 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 20 
  Cand SU(17) ORDER                              
  Cand SU(20) ORDER                              
Pick Bot ORDER     
Scheduling SU(20) %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
Bottom Pressure:
GR16=10
  LiveReg: %187
  UpdateRegP: SU(20) %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
              to GR16 -2
  Ready @14c
BotQ.A @13c
  Retired: 55
  Executed: 13c
  Critical: 13c, 55 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 19 
  Cand SU(17) ORDER                              
  Cand SU(19) ORDER                              
Pick Bot ORDER     
Scheduling SU(19) %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
Bottom Pressure:
GR16=12
  LiveReg: %187
  UpdateRegP: SU(19) %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
              to 
  LiveReg: %170
  UpdateRegP: SU(3) %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
              to 
  UpdateRegP: SU(12) %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
              to 
  UpdateRegP: SU(19) %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
              to GR16 -2
  Ready @15c
  *** Max MOps 4 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 56
  Executed: 14c
  Critical: 14c, 56 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 18 
  Cand SU(17) ORDER                              
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) %187:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !650 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
Bottom Pressure:
GR16=10
  Ready @19c
BotQ.A @14c
  Retired: 57
  Executed: 14c
  Critical: 14c, 57 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 
Scheduling SU(17) MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %183
  UpdateRegP: SU(17) MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
              to 
  Ready @21c
BotQ.A @14c
  Retired: 58
  Executed: 14c
  Critical: 14c, 58 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Scheduling SU(16) %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
Bottom Pressure:
GR16=12
  LiveReg: %180
  UpdateRegP: SU(16) %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
              to FR32 -1    FR32X -1
  Ready @25c
  BotQ.A BotLatency SU(16) 19c
BotQ.A @14c
  Retired: 59
  Executed: 14c
  Critical: 14c, 59 MOps
  ExpectedLatency: 19c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 10 
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
Bottom Pressure:
GR16=14
  LiveReg: %180
  UpdateRegP: SU(15) %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
              to 
  LiveReg: %168
  UpdateRegP: SU(6) %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
              to 
  UpdateRegP: SU(15) %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
              to GR16 -2
  Ready @26c
  BotQ.A BotLatency SU(15) 20c
  *** Max MOps 4 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 60
  Executed: 15c
  Critical: 15c, 60 MOps
  ExpectedLatency: 20c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 14 
  Cand SU(10) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
Bottom Pressure:
GR16=14
  LiveReg: %180
  UpdateRegP: SU(14) %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
              to GR16 -2
  Ready @27c
  BotQ.A BotLatency SU(14) 21c
BotQ.A @15c
  Retired: 61
  Executed: 15c
  Critical: 15c, 61 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 13 
  Cand SU(10) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
Bottom Pressure:
GR16=14
  LiveReg: %180
  UpdateRegP: SU(13) %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
              to GR16 -2
  Ready @28c
  BotQ.A BotLatency SU(13) 22c
BotQ.A @15c
  Retired: 62
  Executed: 15c
  Critical: 15c, 62 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 12 
  Cand SU(10) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
Bottom Pressure:
GR16=14
  LiveReg: %180
  UpdateRegP: SU(12) %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
              to GR16 -2
  Ready @29c
  BotQ.A BotLatency SU(12) 23c
BotQ.A @15c
  Retired: 63
  Executed: 15c
  Critical: 15c, 63 MOps
  ExpectedLatency: 23c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 11 
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %180:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !646 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
Bottom Pressure:
GR16=12
  Ready @33c
  BotQ.A BotLatency SU(11) 27c
  *** Max MOps 4 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 64
  Executed: 16c
  Critical: 16c, 64 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Scheduling SU(10) MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
Bottom Pressure:
FR32=1
FR32X=1
GR16=12
  LiveReg: %177
  UpdateRegP: SU(10) MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
              to 
  Ready @26c
BotQ.A @16c
  Retired: 65
  Executed: 16c
  Critical: 16c, 65 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Scheduling SU(9) %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
Bottom Pressure:
GR16=14
  LiveReg: %172
  UpdateRegP: SU(9) %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
              to FR32 -1    FR32X -1
  Ready @30c
BotQ.A @16c
  Retired: 66
  Executed: 16c
  Critical: 16c, 66 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 8 
  Cand SU(6) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
Bottom Pressure:
GR16=14
  LiveReg: %176
  UpdateRegP: SU(8) %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
              to GR16 -2
  Ready @31c
BotQ.A @16c
  Retired: 67
  Executed: 16c
  Critical: 16c, 67 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %176:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !644 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
Bottom Pressure:
GR16=12
  Ready @35c
  BotQ.A BotLatency SU(7) 29c
  *** Max MOps 4 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 68
  Executed: 17c
  Critical: 17c, 68 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
Bottom Pressure:
GR16=12
  LiveReg: %172
  UpdateRegP: SU(6) %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
              to GR16 -2
  Ready @31c
BotQ.A @17c
  Retired: 69
  Executed: 17c
  Critical: 17c, 69 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 0 
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
Bottom Pressure:
GR16=12
  LiveReg: %172
  UpdateRegP: SU(5) %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
              to GR16 -2
  Ready @32c
BotQ.A @17c
  Retired: 70
  Executed: 17c
  Critical: 17c, 70 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 4 
  Cand SU(0) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
Bottom Pressure:
GR16=12
  LiveReg: %172
  UpdateRegP: SU(4) %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
              to GR16 -2
  Ready @33c
BotQ.A @17c
  Retired: 71
  Executed: 17c
  Critical: 17c, 71 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
Bottom Pressure:
GR16=12
  LiveReg: %172
  UpdateRegP: SU(3) %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
              to GR16 -2
  Ready @34c
  *** Max MOps 4 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 72
  Executed: 18c
  Critical: 18c, 72 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %170:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !642 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
Bottom Pressure:
GR16=10
  Ready @38c
  BotQ.A BotLatency SU(2) 32c
BotQ.A @18c
  Retired: 73
  Executed: 18c
  Critical: 18c, 73 MOps
  ExpectedLatency: 32c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %172:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !641 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
Bottom Pressure:
GR16=8
  Ready @38c
BotQ.A @18c
  Retired: 74
  Executed: 18c
  Critical: 18c, 74 MOps
  ExpectedLatency: 32c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
Bottom Pressure:
GR16=6
  Ready @35c
BotQ.A @18c
  Retired: 75
  Executed: 18c
  Critical: 18c, 75 MOps
  ExpectedLatency: 32c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
SU(1):   %172:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !641 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
SU(2):   %170:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !642 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
SU(3):   %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
SU(4):   %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
SU(5):   %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
SU(6):   %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
SU(7):   %176:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !644 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
SU(8):   %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
SU(9):   %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
SU(10):   MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
SU(11):   %180:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !646 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
SU(12):   %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
SU(13):   %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
SU(14):   %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
SU(15):   %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
SU(16):   %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
SU(17):   MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
SU(18):   %187:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !650 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
SU(19):   %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
SU(20):   %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
SU(21):   %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
SU(22):   %192:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
SU(23):   %193:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
SU(24):   %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
SU(25):   MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
SU(26):   %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
SU(27):   MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
SU(28):   %194:vr128 = MOVUPSrm %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 16 from %ir.69, align 8); fft3d.c:96:39
SU(29):   MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
SU(30):   %195:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !656 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
SU(31):   %198:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !657 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
SU(32):   %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
SU(33):   %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
SU(34):   %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
SU(35):   %201:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !660 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
SU(36):   %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
SU(37):   %206:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6215, align 16); fft3d.c:97:39
SU(38):   %205:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag66); fft3d.c:97:39
SU(39):   %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
SU(40):   MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
SU(41):   %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
SU(42):   MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
SU(43):   %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
SU(44):   %207:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag71); fft3d.c:97:39
SU(45):   %209:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7419, align 16); fft3d.c:97:39
SU(46):   %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
SU(47):   MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
SU(48):   %212:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag78); fft3d.c:97:39
SU(49):   %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
SU(50):   MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
SU(51):   %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
SU(52):   %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
SU(53):   MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
SU(54):   %214:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
SU(55):   %216:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8823, align 16); fft3d.c:97:39
SU(56):   %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
SU(57):   MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
SU(58):   %219:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
SU(59):   %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
SU(60):   MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
SU(61):   %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
SU(62):   %221:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
SU(63):   %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
SU(64):   %225:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag97)
SU(65):   %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
SU(66):   %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
SU(67):   MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
SU(68):   %224:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
SU(69):   %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
SU(70):   MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
SU(71):   MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
SU(72):   %226:vr128 = MOVUPSrm %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 16 from %ir.98, align 8); fft3d.c:97:39
SU(73):   MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
SU(74):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !662 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:93:40

********** MI Scheduling **********
Swarztrauber:%bb.16 for.end115
  From: %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
    To: JCC_1 %bb.23, 5, implicit killed $eflags, debug-location !678; fft3d.c:102:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%29
  Single Issue       : false;
SU(1):   CMP32rm %29:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !677 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:15
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%29
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.23, 5, implicit killed $eflags, debug-location !678; fft3d.c:102:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %29:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !677 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:15
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
SU(1):   CMP32rm %29:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !677 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:15

********** MI Scheduling **********
Swarztrauber:%bb.18 for.cond118
  From: %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
    To: JCC_1 %bb.35, 13, implicit killed $eflags, debug-location !687; fft3d.c:103:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%126
  Single Issue       : false;
SU(1):   CMP32rm %126:gr32, %stack.3.n.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !686 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%126
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.35, 13, implicit killed $eflags, debug-location !687; fft3d.c:103:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %126:gr32, %stack.3.n.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !686 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:27
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
SU(1):   CMP32rm %126:gr32, %stack.3.n.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !686 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:27

********** MI Scheduling **********
Swarztrauber:%bb.20 for.cond121
  From: %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
    To: JCC_1 %bb.22, 13, implicit killed $eflags, debug-location !696; fft3d.c:104:17
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%128
  Single Issue       : false;
SU(1):   CMP32rm %128:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !695 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%128
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.22, 13, implicit killed $eflags, debug-location !696; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %128:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !695 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:31
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
SU(1):   CMP32rm %128:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !695 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:31

********** MI Scheduling **********
Swarztrauber:%bb.21 for.body123
  From: %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
    To: JMP_1 %bb.20, debug-location !705; fft3d.c:104:17
 RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=1
FR32X=1
GR16=12
Live In: %188 %186 %0 
Live Out: %188 %186 %0 
Live Thru: GR16=6
  LiveReg: %188
  UpdateRegP: SU(8) %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
              to 
  LiveReg: %186
  UpdateRegP: SU(7) %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
              to 
  LiveReg: %0
  UpdateRegP: SU(2) %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
              to 
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
SU(0):   %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 13
  Successors:
    SU(7): Data Latency=4 Reg=%139
    SU(1): Data Latency=4 Reg=%139
    SU(7): Out  Latency=0
    SU(10): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(0): Data Latency=4 Reg=%139
  Successors:
    SU(2): Data Latency=0 Reg=%132
    SU(2): Out  Latency=0
    SU(7): Anti Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(1): Data Latency=0 Reg=%132
    SU(1): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%132
    SU(3): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(2): Data Latency=1 Reg=%132
    SU(2): Out  Latency=0
  Successors:
    SU(4): Data Latency=1 Reg=%132
    SU(4): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 7
  Predecessors:
    SU(3): Data Latency=1 Reg=%132
    SU(3): Out  Latency=0
  Successors:
    SU(10): Data Latency=4 Reg=%132
    SU(10): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %135:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(6): Data Latency=4 Reg=%135
    SU(6): Out  Latency=0
    SU(11): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(6):   %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(5): Data Latency=4 Reg=%135
    SU(5): Out  Latency=0
  Successors:
    SU(10): Data Latency=1 Reg=%135
    SU(9): Data Latency=1 Reg=%135
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Data Latency=4 Reg=%139
    SU(0): Out  Latency=0
  Successors:
    SU(8): Data Latency=1 Reg=%139
    SU(8): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(7): Data Latency=1 Reg=%139
    SU(7): Out  Latency=0
  Successors:
    SU(9): Data Latency=1 Reg=%139
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 7
  Predecessors:
    SU(8): Data Latency=1 Reg=%139
    SU(6): Data Latency=1 Reg=%135
  Successors:
    SU(10): Data Latency=4 Reg=%140
    SU(10): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(10):   MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
  # preds left       : 7
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 3
  Predecessors:
    SU(9): Data Latency=4 Reg=%140
    SU(9): Ord  Latency=0 Memory
    SU(6): Data Latency=1 Reg=%135
    SU(5): Ord  Latency=0 Memory
    SU(4): Data Latency=4 Reg=%132
    SU(4): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(11): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(11):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !704 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 3
  Predecessors:
    SU(10): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JMP_1 %bb.20, debug-location !705; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 13
  Height             : 0
  Predecessors:
    SU(11): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 13
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 
Scheduling SU(11) INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !704 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:104:40
Bottom Pressure:
GR16=6
  Ready @3c
  BotQ.A TopLatency SU(11) 10c
  BotQ.A BotLatency SU(11) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Scheduling SU(10) MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %135
  UpdateRegP: SU(9) %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(10) MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %132
  UpdateRegP: SU(10) MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
              to FR32 1    FR32X 1
  LiveReg: %140
  UpdateRegP: SU(10) MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
              to 
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 4 
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
Bottom Pressure:
GR16=12
  LiveReg: %139
  UpdateRegP: SU(9) %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
              to FR32 -1    FR32X -1
  Ready @7c
  BotQ.A BotLatency SU(9) 7c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 8 6 
  Cand SU(4) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
Bottom Pressure:
GR16=12
  LiveReg: %139
  UpdateRegP: SU(8) %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
              to GR16 -2
  Ready @8c
  BotQ.A BotLatency SU(8) 8c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 7 
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
Bottom Pressure:
GR16=12
  LiveReg: %139
  UpdateRegP: SU(1) %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
              to GR16 -2
  UpdateRegP: SU(7) %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
              to GR16 -2
  Ready @9c
  BotQ.A BotLatency SU(7) 9c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
Bottom Pressure:
GR16=12
  LiveReg: %135
  UpdateRegP: SU(6) %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
              to GR16 -2
  Ready @8c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %135:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
Bottom Pressure:
GR16=10
  Ready @12c
  BotQ.A BotLatency SU(5) 12c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
Bottom Pressure:
GR16=10
  LiveReg: %132
  UpdateRegP: SU(4) %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
              to GR16 -2
  Ready @7c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
Bottom Pressure:
GR16=10
  LiveReg: %132
  UpdateRegP: SU(3) %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
              to GR16 -2
  Ready @8c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
Bottom Pressure:
GR16=10
  LiveReg: %132
  UpdateRegP: SU(2) %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
              to GR16 -2
  Ready @9c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
Bottom Pressure:
GR16=8
  Ready @9c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
Bottom Pressure:
GR16=6
  Ready @13c
  BotQ.A BotLatency SU(0) 13c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
SU(1):   %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
SU(2):   %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
SU(3):   %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
SU(4):   %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
SU(5):   %135:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
SU(6):   %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
SU(7):   %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
SU(8):   %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
SU(9):   %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
SU(10):   MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
SU(11):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !704 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:104:40

********** MI Scheduling **********
Swarztrauber:%bb.23 if.else138
  From: %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
    To: End RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR16=4
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%32
    SU(1): Data Latency=4 Reg=%32
    SU(2): Out  Latency=0
    SU(3): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%32
  Successors:
    SU(2): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(2):   %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Data Latency=4 Reg=%32
    SU(0): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%32
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%32
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %33:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !718 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(7): Data Latency=4 Reg=%33
    SU(5): Data Latency=4 Reg=%33
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%33
  Successors:
    SU(6): Data Latency=0 Reg=%35
    SU(6): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(5): Data Latency=0 Reg=%35
    SU(5): Out  Latency=0
  Successors:
    SU(7): Data Latency=1 Reg=%35
    SU(7): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=%35
    SU(6): Out  Latency=0
    SU(4): Data Latency=4 Reg=%33
  Successors:
    SU(8): Data Latency=1 Reg=%35
    SU(8): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=%35
    SU(7): Out  Latency=0
  Successors:
    SU(10): Data Latency=1 Reg=%35
    SU(9): Data Latency=1 Reg=%35
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%35
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%35
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !723 :: (store 4 into %ir.i); fft3d.c:115:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 10 9 3 
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !723 :: (store 4 into %ir.i); fft3d.c:115:20
Bottom Pressure:

  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 10 9 
  Cand SU(3) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
Bottom Pressure:
GR16=2
  LiveReg: %35
  UpdateRegP: SU(9) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
              to 
  UpdateRegP: SU(10) MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
              to 
  Ready @0c
  BotQ.A TopLatency SU(10) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
Bottom Pressure:
GR16=2
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 8 
  Cand SU(3) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
Bottom Pressure:
GR16=2
  LiveReg: %35
  UpdateRegP: SU(8) %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
              to GR16 -2
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 7 
  Cand SU(3) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
Bottom Pressure:
GR16=4
  LiveReg: %35
  UpdateRegP: SU(7) %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
              to 
  LiveReg: %33
  UpdateRegP: SU(5) %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
              to GR16 -2
  UpdateRegP: SU(7) %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
              to GR16 -2
  Ready @2c
  BotQ.A BotLatency SU(7) 2c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 6 
  Cand SU(3) ORDER                              
  Cand SU(6) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(6) %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
Bottom Pressure:
GR16=4
  LiveReg: %35
  UpdateRegP: SU(6) %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
              to GR16 -2
  Ready @3c
  BotQ.A BotLatency SU(6) 3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 
  Cand SU(3) ORDER                              
  Cand SU(5) REG-MAX                            
Pick Bot REG-MAX   
Scheduling SU(5) %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
Bottom Pressure:
GR16=2
  Ready @3c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %33:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !718 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
Bottom Pressure:

  Ready @7c
  BotQ.A BotLatency SU(4) 7c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
Bottom Pressure:
GR16=2
  LiveReg: %32
  UpdateRegP: SU(3) MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
              to 
  Ready @1c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
Bottom Pressure:
GR16=2
  LiveReg: %32
  UpdateRegP: SU(1) MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
              to 
  UpdateRegP: SU(2) %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
              to GR16 -2
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
Bottom Pressure:
GR16=2
  Ready @2c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
Bottom Pressure:

  Ready @6c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
SU(1):   MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
SU(2):   %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
SU(3):   MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
SU(4):   %33:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !718 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
SU(5):   %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
SU(6):   %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
SU(7):   %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
SU(8):   %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
SU(9):   MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
SU(10):   MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
SU(11):   MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !723 :: (store 4 into %ir.i); fft3d.c:115:20

********** MI Scheduling **********
Swarztrauber:%bb.24 for.cond141
  From: %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
    To: JCC_1 %bb.35, 15, implicit killed $eflags, debug-location !731; fft3d.c:115:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%39
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %39:gr32 = DEC32r %39:gr32(tied-def 0), implicit-def dead $eflags, debug-location !729; fft3d.c:115:33
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%39
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%39
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %39:gr32, implicit-def $eflags, debug-location !730 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%39
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.35, 15, implicit killed $eflags, debug-location !731; fft3d.c:115:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %39:gr32, implicit-def $eflags, debug-location !730 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:27
  Ready @4c
  BotQ.A TopLatency SU(2) 5c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %39:gr32 = DEC32r %39:gr32(tied-def 0), implicit-def dead $eflags, debug-location !729; fft3d.c:115:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
SU(1):   %39:gr32 = DEC32r %39:gr32(tied-def 0), implicit-def dead $eflags, debug-location !729; fft3d.c:115:33
SU(2):   CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %39:gr32, implicit-def $eflags, debug-location !730 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:27

********** MI Scheduling **********
Swarztrauber:%bb.25 for.body144
  From: %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
    To: JCC_1 %bb.27, 14, implicit killed $eflags, debug-location !752; fft3d.c:121:21
 RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR16=6
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%46
    SU(2): Data Latency=4 Reg=%46
    SU(7): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %42:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !734 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(9): Data Latency=4 Reg=%42
    SU(3): Data Latency=4 Reg=%42
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(0): Data Latency=4 Reg=%46
  Successors:
    SU(3): Data Latency=0 Reg=%44
    SU(3): Out  Latency=0
    SU(7): Anti Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(2): Data Latency=0 Reg=%44
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%42
  Successors:
    SU(5): Data Latency=1 Reg=%44
    SU(4): Data Latency=1 Reg=%44
    SU(5): Out  Latency=0
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(3): Data Latency=1 Reg=%44
  Successors:
    SU(5): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(5):   %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Data Latency=1 Reg=%44
    SU(3): Out  Latency=0
  Successors:
    SU(6): Data Latency=4 Reg=%44
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(5): Data Latency=4 Reg=%44
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(7):   %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(2): Anti Latency=0
    SU(0): Data Latency=4 Reg=%46
    SU(0): Out  Latency=0
  Successors:
    SU(9): Data Latency=4 Reg=%46
    SU(8): Data Latency=4 Reg=%46
    SU(9): Out  Latency=0
    SU(11): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(7): Data Latency=4 Reg=%46
  Successors:
    SU(9): Anti Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(9):   %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Data Latency=4 Reg=%46
    SU(7): Out  Latency=0
    SU(1): Data Latency=4 Reg=%42
  Successors:
    SU(10): Data Latency=1 Reg=%46
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=%46
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !751 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:24
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(9): Out  Latency=0
    SU(7): Out  Latency=0
    SU(5): Out  Latency=0
    SU(3): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JCC_1 %bb.27, 14, implicit killed $eflags, debug-location !752; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(11): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 12
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 6 11 
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !751 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:24
Bottom Pressure:

  Ready @4c
  BotQ.A TopLatency SU(11) 8c
  BotQ.A BotLatency SU(11) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 6 
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
Bottom Pressure:
GR16=2
  LiveReg: %46
  UpdateRegP: SU(10) MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
              to 
  Ready @0c
  BotQ.A TopLatency SU(10) 9c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 9 
  Cand SU(6) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
Bottom Pressure:
GR16=4
  LiveReg: %46
  UpdateRegP: SU(8) MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
              to 
  UpdateRegP: SU(9) %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
              to 
  LiveReg: %42
  UpdateRegP: SU(3) %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
              to 
  UpdateRegP: SU(9) %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
              to GR16 -2
  Ready @4c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 8 
  Cand SU(6) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
Bottom Pressure:
GR16=4
  Ready @4c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
Bottom Pressure:
GR16=4
  LiveReg: %46
  UpdateRegP: SU(2) %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
              to GR16 -2
  UpdateRegP: SU(7) %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
              to GR16 -2
  Ready @8c
  BotQ.A BotLatency SU(7) 8c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
Bottom Pressure:
GR16=6
  LiveReg: %44
  UpdateRegP: SU(6) MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
              to 
  Ready @1c
  BotQ.A TopLatency SU(6) 9c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
Bottom Pressure:
GR16=6
  LiveReg: %44
  UpdateRegP: SU(4) MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
              to 
  UpdateRegP: SU(5) %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
              to GR16 -2
  Ready @5c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
Bottom Pressure:
GR16=6
  Ready @5c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
Bottom Pressure:
GR16=6
  LiveReg: %44
  UpdateRegP: SU(3) %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
              to GR16 -2
  Ready @6c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
Bottom Pressure:
GR16=4
  Ready @8c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %42:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !734 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
Bottom Pressure:
GR16=2
  Ready @10c
  BotQ.A BotLatency SU(1) 9c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
Bottom Pressure:

  Ready @12c
  BotQ.A BotLatency SU(0) 12c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
SU(1):   %42:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !734 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
SU(2):   %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
SU(3):   %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
SU(4):   MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
SU(5):   %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
SU(6):   MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
SU(7):   %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
SU(8):   MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
SU(9):   %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
SU(10):   MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
SU(11):   CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !751 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:24

********** MI Scheduling **********
Swarztrauber:%bb.26 if.then150
  From: %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
    To: JMP_1 %bb.28, debug-location !758; fft3d.c:123:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(5): Data Latency=4 Reg=%56
  Single Issue       : false;
SU(1):   %57:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(3): Data Latency=4 Reg=%57
  Single Issue       : false;
SU(2):   %60:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !756 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(3): Data Latency=4 Reg=%60
    SU(3): Out  Latency=0
  Single Issue       : false;
SU(3):   %60:gr64_nosp = nsw ADD64rr %60:gr64_nosp(tied-def 0), %57:gr64, implicit-def dead $eflags, debug-location !757; fft3d.c:122:38
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(2): Data Latency=4 Reg=%60
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%57
  Successors:
    SU(4): Data Latency=1 Reg=%60
    SU(4): Out  Latency=0
  Single Issue       : false;
SU(4):   %60:gr64_nosp = SHL64ri %60:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !753; fft3d.c:122:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(3): Data Latency=1 Reg=%60
    SU(3): Out  Latency=0
  Successors:
    SU(5): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(5):   %61:vr128 = MOVUPSrm %56:gr64, 1, %60:gr64_nosp, 0, $noreg, debug-location !753 :: (load 16 from %ir.137, align 8); fft3d.c:122:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 4
  Predecessors:
    SU(4): Data Latency=1 Reg=%60
    SU(0): Data Latency=4 Reg=%56
  Successors:
    SU(6): Data Latency=4 Reg=%61
    SU(6): Ord  Latency=0 Memory
  Single Issue       : false;
SU(6):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %61:vr128, debug-location !753 :: (store 16 into %ir.136); fft3d.c:122:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(5): Data Latency=4 Reg=%61
    SU(5): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   JMP_1 %bb.28, debug-location !758; fft3d.c:123:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 10
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %61:vr128, debug-location !753 :: (store 16 into %ir.136); fft3d.c:122:26
  Ready @0c
  BotQ.A TopLatency SU(6) 10c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %61:vr128 = MOVUPSrm %56:gr64, 1, %60:gr64_nosp, 0, $noreg, debug-location !753 :: (load 16 from %ir.137, align 8); fft3d.c:122:26
  Ready @4c
  BotQ.A BotLatency SU(5) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %60:gr64_nosp = SHL64ri %60:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !753; fft3d.c:122:26
  Ready @5c
  BotQ.A BotLatency SU(4) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %60:gr64_nosp = nsw ADD64rr %60:gr64_nosp(tied-def 0), %57:gr64, implicit-def dead $eflags, debug-location !757; fft3d.c:122:38
  Ready @6c
  BotQ.A BotLatency SU(3) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %60:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !756 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  Ready @10c
  BotQ.A BotLatency SU(2) 10c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %57:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  Ready @10c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  Ready @8c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
SU(1):   %57:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
SU(2):   %60:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !756 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
SU(3):   %60:gr64_nosp = nsw ADD64rr %60:gr64_nosp(tied-def 0), %57:gr64, implicit-def dead $eflags, debug-location !757; fft3d.c:122:38
SU(4):   %60:gr64_nosp = SHL64ri %60:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !753; fft3d.c:122:26
SU(5):   %61:vr128 = MOVUPSrm %56:gr64, 1, %60:gr64_nosp, 0, $noreg, debug-location !753 :: (load 16 from %ir.137, align 8); fft3d.c:122:26
SU(6):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %61:vr128, debug-location !753 :: (store 16 into %ir.136); fft3d.c:122:26

********** MI Scheduling **********
Swarztrauber:%bb.27 if.else154
  From: %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
    To: End RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=2
FR32X=2
GR16=6
Live In: %227 
Live Out: %227 
Live Thru: FR32=1
FR32X=1
  LiveReg: %227
  UpdateRegP: SU(8) %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
              to 
Top Pressure:
FR32=1
FR32X=1
Bottom Pressure:
FR32=1
FR32X=1
Excess PSets: 
SU(0):   %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 19
  Successors:
    SU(7): Data Latency=4 Reg=%47
    SU(5): Data Latency=4 Reg=%47
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %48:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 21
  Successors:
    SU(3): Data Latency=4 Reg=%48
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %51:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 21
  Successors:
    SU(3): Data Latency=4 Reg=%51
    SU(3): Out  Latency=0
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(3):   %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 17
  Predecessors:
    SU(2): Data Latency=4 Reg=%51
    SU(2): Out  Latency=0
    SU(1): Data Latency=4 Reg=%48
  Successors:
    SU(4): Data Latency=1 Reg=%51
    SU(4): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 16
  Predecessors:
    SU(3): Data Latency=1 Reg=%51
    SU(3): Out  Latency=0
  Successors:
    SU(7): Data Latency=1 Reg=%51
    SU(5): Data Latency=1 Reg=%51
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 15
  Predecessors:
    SU(4): Data Latency=1 Reg=%51
    SU(0): Data Latency=4 Reg=%47
  Successors:
    SU(6): Data Latency=4 Reg=%52
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(6):   MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 11
  Predecessors:
    SU(5): Data Latency=4 Reg=%52
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(9): Ord  Latency=0 Memory
    SU(10): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(7):   %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 10
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%51
    SU(0): Data Latency=4 Reg=%47
  Successors:
    SU(8): Data Latency=4 Reg=%54
    SU(8): Out  Latency=0
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(8):   %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 6
  Predecessors:
    SU(7): Data Latency=4 Reg=%54
    SU(7): Out  Latency=0
  Successors:
    SU(9): Data Latency=1 Reg=%54
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%54
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(10): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(10):   %55:vr128 = MOVUPSrm %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 16 from %ir.147, align 8); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 4
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(6): Ord  Latency=1 Memory
  Successors:
    SU(11): Data Latency=4 Reg=%55
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(11):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 0
  Predecessors:
    SU(10): Data Latency=4 Reg=%55
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
Critical Path(GS-RR ): 21
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 
Scheduling SU(11) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %55
  UpdateRegP: SU(11) MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26
              to 
  Ready @0c
  BotQ.A TopLatency SU(11) 21c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Scheduling SU(10) %55:vr128 = MOVUPSrm %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 16 from %ir.147, align 8); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
  Ready @4c
  BotQ.A BotLatency SU(10) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Scheduling SU(9) MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %54
  UpdateRegP: SU(9) MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
              to 
  Ready @5c
  BotQ.A BotLatency SU(9) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Scheduling SU(8) %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %54
  UpdateRegP: SU(8) %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
              to FR32 -1    FR32X -1
  Ready @6c
  BotQ.A BotLatency SU(8) 6c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Scheduling SU(7) %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  LiveReg: %47
  UpdateRegP: SU(5) %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(7) %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
              to FR32 -1    FR32X -1    GR16 2
  LiveReg: %51
  UpdateRegP: SU(5) %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
              to FR32 -1    FR32X -1
  UpdateRegP: SU(7) %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
              to FR32 -1    FR32X -1
  Ready @10c
  BotQ.A BotLatency SU(7) 10c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
Bottom Pressure:
FR32=2
FR32X=2
GR16=4
  LiveReg: %52
  UpdateRegP: SU(6) MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
              to 
  Ready @11c
  BotQ.A BotLatency SU(6) 11c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  Ready @15c
  BotQ.A BotLatency SU(5) 15c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  LiveReg: %51
  UpdateRegP: SU(4) %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
              to GR16 -2
  Ready @16c
  BotQ.A BotLatency SU(4) 16c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=6
  LiveReg: %51
  UpdateRegP: SU(3) %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
              to 
  LiveReg: %48
  UpdateRegP: SU(3) %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
              to GR16 -2
  Ready @17c
  BotQ.A BotLatency SU(3) 17c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %51:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=4
  Ready @21c
  BotQ.A BotLatency SU(2) 21c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %48:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
GR16=2
  Ready @21c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
Bottom Pressure:
FR32=1
FR32X=1
  Ready @19c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.27 ***
SU(0):   %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
SU(1):   %48:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
SU(2):   %51:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
SU(3):   %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
SU(4):   %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
SU(5):   %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
SU(6):   MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
SU(7):   %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
SU(8):   %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
SU(9):   MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
SU(10):   %55:vr128 = MOVUPSrm %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 16 from %ir.147, align 8); fft3d.c:125:26
SU(11):   MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26

********** MI Scheduling **********
Swarztrauber:%bb.29 for.cond168
  From: %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
    To: JCC_1 %bb.34, 15, implicit killed $eflags, debug-location !769; fft3d.c:127:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(1): Data Latency=4 Reg=%64
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %64:gr32 = DEC32r %64:gr32(tied-def 0), implicit-def dead $eflags, debug-location !767; fft3d.c:127:37
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=%64
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=%64
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %64:gr32, implicit-def $eflags, debug-location !768 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%64
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.34, 15, implicit killed $eflags, debug-location !769; fft3d.c:127:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %64:gr32, implicit-def $eflags, debug-location !768 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:31
  Ready @4c
  BotQ.A TopLatency SU(2) 5c
  BotQ.A BotLatency SU(2) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %64:gr32 = DEC32r %64:gr32(tied-def 0), implicit-def dead $eflags, debug-location !767; fft3d.c:127:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  Ready @9c
  BotQ.A BotLatency SU(0) 9c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
SU(1):   %64:gr32 = DEC32r %64:gr32(tied-def 0), implicit-def dead $eflags, debug-location !767; fft3d.c:127:37
SU(2):   CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %64:gr32, implicit-def $eflags, debug-location !768 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:31

********** MI Scheduling **********
Swarztrauber:%bb.31 for.cond172
  From: %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
    To: JCC_1 %bb.33, 13, implicit killed $eflags, debug-location !778; fft3d.c:128:21
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=%66
  Single Issue       : false;
SU(1):   CMP32rm %66:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !777 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:35
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=%66
  Successors:
    ExitSU: Ord  Latency=4 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.33, 13, implicit killed $eflags, debug-location !778; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) CMP32rm %66:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !777 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:35
  Ready @4c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  Ready @8c
  BotQ.A BotLatency SU(0) 8c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
SU(1):   CMP32rm %66:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !777 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:35

********** MI Scheduling **********
Swarztrauber:%bb.32 for.body174
  From: %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
    To: JMP_1 %bb.31, debug-location !803; fft3d.c:128:21
 RegionInstrs: 74
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=3
FR32X=3
GR16=12
Live In: %0 %188 %186 
Live Out: %0 %188 %186 
Live Thru: GR16=6
  LiveReg: %0
  UpdateRegP: SU(17) %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
              to 
  UpdateRegP: SU(31) %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
              to 
  LiveReg: %188
  UpdateRegP: SU(4) %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
              to 
  UpdateRegP: SU(12) %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
              to 
  LiveReg: %186
  UpdateRegP: SU(3) %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
              to 
  UpdateRegP: SU(11) %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
              to 
Top Pressure:
GR16=6
Bottom Pressure:
GR16=6
Excess PSets: 
SU(0):   %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 47
  Successors:
    SU(2): Data Latency=4 Reg=%72
    SU(2): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   %69:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !781 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 47
  Successors:
    SU(16): Data Latency=4 Reg=%69
    SU(10): Data Latency=4 Reg=%69
    SU(2): Data Latency=4 Reg=%69
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(2):   %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 43
  Predecessors:
    SU(1): Data Latency=4 Reg=%69
    SU(0): Data Latency=4 Reg=%72
    SU(0): Out  Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=%72
    SU(3): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(3):   %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 42
  Predecessors:
    SU(2): Data Latency=1 Reg=%72
    SU(2): Out  Latency=0
  Successors:
    SU(4): Data Latency=1 Reg=%72
    SU(4): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 41
  Predecessors:
    SU(3): Data Latency=1 Reg=%72
    SU(3): Out  Latency=0
  Successors:
    SU(7): Data Latency=1 Reg=%72
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %76:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !784 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 45
  Successors:
    SU(6): Data Latency=4 Reg=%76
    SU(6): Out  Latency=0
    SU(73): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(6):   %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 41
  Predecessors:
    SU(5): Data Latency=4 Reg=%76
    SU(5): Out  Latency=0
  Successors:
    SU(27): Data Latency=1 Reg=%76
    SU(13): Data Latency=1 Reg=%76
    SU(7): Data Latency=1 Reg=%76
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 40
  Predecessors:
    SU(4): Data Latency=1 Reg=%72
    SU(6): Data Latency=1 Reg=%76
  Successors:
    SU(8): Data Latency=4 Reg=%77
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(8):   MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
  # preds left       : 1
  # succs left       : 12
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 36
  Predecessors:
    SU(7): Data Latency=4 Reg=%77
  Successors:
    SU(67): Ord  Latency=1 Memory
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(54): Ord  Latency=1 Memory
    SU(47): Ord  Latency=1 Memory
    SU(44): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(21): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(9):   %80:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !785 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 43
  Successors:
    SU(10): Data Latency=4 Reg=%80
    SU(10): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(10):   %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 39
  Predecessors:
    SU(9): Data Latency=4 Reg=%80
    SU(9): Out  Latency=0
    SU(1): Data Latency=4 Reg=%69
  Successors:
    SU(11): Data Latency=1 Reg=%80
    SU(11): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(11):   %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 38
  Predecessors:
    SU(10): Data Latency=1 Reg=%80
    SU(10): Out  Latency=0
  Successors:
    SU(12): Data Latency=1 Reg=%80
    SU(12): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(12):   %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 37
  Predecessors:
    SU(11): Data Latency=1 Reg=%80
    SU(11): Out  Latency=0
  Successors:
    SU(13): Data Latency=1 Reg=%80
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 36
  Predecessors:
    SU(12): Data Latency=1 Reg=%80
    SU(6): Data Latency=1 Reg=%76
  Successors:
    SU(14): Data Latency=4 Reg=%82
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1    GR16 4
  Single Issue       : false;
SU(14):   MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
  # preds left       : 1
  # succs left       : 12
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 32
  Predecessors:
    SU(13): Data Latency=4 Reg=%82
  Successors:
    SU(68): Ord  Latency=1 Memory
    SU(62): Ord  Latency=1 Memory
    SU(58): Ord  Latency=1 Memory
    SU(55): Ord  Latency=1 Memory
    SU(48): Ord  Latency=1 Memory
    SU(45): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(15):   %85:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !791 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 33
  Successors:
    SU(16): Data Latency=4 Reg=%85
    SU(16): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(16):   %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 29
  Predecessors:
    SU(15): Data Latency=4 Reg=%85
    SU(15): Out  Latency=0
    SU(1): Data Latency=4 Reg=%69
  Successors:
    SU(17): Data Latency=1 Reg=%85
    SU(17): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(17):   %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 28
  Predecessors:
    SU(16): Data Latency=1 Reg=%85
    SU(16): Out  Latency=0
  Successors:
    SU(18): Data Latency=1 Reg=%85
    SU(18): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 27
  Predecessors:
    SU(17): Data Latency=1 Reg=%85
    SU(17): Out  Latency=0
  Successors:
    SU(19): Data Latency=1 Reg=%85
    SU(19): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 26
  Predecessors:
    SU(18): Data Latency=1 Reg=%85
    SU(18): Out  Latency=0
  Successors:
    SU(27): Data Latency=4 Reg=%85
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(20):   %90:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 35
  Predecessors:
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(22): Data Latency=4 Reg=%90
    SU(22): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(21):   %91:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 35
  Predecessors:
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(24): Data Latency=4 Reg=%91
    SU(24): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(22):   %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 16
  Height             : 31
  Predecessors:
    SU(20): Data Latency=4 Reg=%90
    SU(20): Out  Latency=0
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(23): Data Latency=4 Reg=%90
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(23):   MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 20
  Height             : 27
  Predecessors:
    SU(22): Data Latency=4 Reg=%90
  Successors:
    SU(25): Ord  Latency=0 Memory
    SU(26): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(24):   %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 16
  Height             : 31
  Predecessors:
    SU(21): Data Latency=4 Reg=%91
    SU(21): Out  Latency=0
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%91
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(25):   MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 20
  Height             : 27
  Predecessors:
    SU(24): Data Latency=4 Reg=%91
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(26): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(26):   %92:vr128 = MOVUPSrm %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 16 from %ir.172, align 8); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 21
  Height             : 26
  Predecessors:
    SU(25): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(27): Data Latency=4 Reg=%92
    SU(72): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(27):   MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
  # preds left       : 20
  # succs left       : 37
  # rdefs left       : 0
  Latency            : 1
  Depth              : 25
  Height             : 22
  Predecessors:
    SU(26): Data Latency=4 Reg=%92
    SU(26): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(21): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Data Latency=4 Reg=%85
    SU(19): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(6): Data Latency=1 Reg=%76
    SU(5): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(73): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
    SU(70): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(69): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Memory
    SU(71): Ord  Latency=1 Memory
    SU(68): Ord  Latency=1 Memory
    SU(62): Ord  Latency=1 Memory
    SU(58): Ord  Latency=1 Memory
    SU(55): Ord  Latency=1 Memory
    SU(48): Ord  Latency=1 Memory
    SU(45): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(67): Ord  Latency=1 Memory
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(54): Ord  Latency=1 Memory
    SU(47): Ord  Latency=1 Memory
    SU(44): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(63): Ord  Latency=1 Memory
    SU(53): Ord  Latency=1 Memory
    SU(43): Ord  Latency=1 Memory
    SU(42): Ord  Latency=1 Memory
    SU(34): Ord  Latency=1 Memory
    SU(33): Ord  Latency=1 Memory
    SU(29): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(28):   %93:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !797 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(30): Data Latency=4 Reg=%93
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(29):   %96:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !798 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(30): Data Latency=4 Reg=%96
    SU(30): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(30):   %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 10
  Predecessors:
    SU(29): Data Latency=4 Reg=%96
    SU(29): Out  Latency=0
    SU(28): Data Latency=4 Reg=%93
  Successors:
    SU(31): Data Latency=1 Reg=%96
    SU(31): Out  Latency=0
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(31):   %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 9
  Predecessors:
    SU(30): Data Latency=1 Reg=%96
    SU(30): Out  Latency=0
  Successors:
    SU(32): Data Latency=1 Reg=%96
    SU(32): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(32):   %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 32
  Height             : 8
  Predecessors:
    SU(31): Data Latency=1 Reg=%96
    SU(31): Out  Latency=0
  Successors:
    SU(33): Data Latency=1 Reg=%96
    SU(33): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(33):   %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 33
  Height             : 7
  Predecessors:
    SU(32): Data Latency=1 Reg=%96
    SU(32): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(72): Data Latency=4 Reg=%96
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(34):   %100:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !800 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  # preds left       : 1
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 8
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(35): Data Latency=4 Reg=%100
    SU(35): Out  Latency=0
    SU(73): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(35):   %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 4
  Predecessors:
    SU(34): Data Latency=4 Reg=%100
    SU(34): Out  Latency=0
  Successors:
    SU(72): Data Latency=1 Reg=%100
  Pressure Diff      : 
  Single Issue       : false;
SU(36):   %105:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20944, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 21
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(38): Data Latency=4 Reg=%105
    SU(38): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(37):   %104:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag213); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 11
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(40): Data Latency=4 Reg=%104
    SU(40): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(38):   %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 17
  Predecessors:
    SU(36): Data Latency=4 Reg=%105
    SU(36): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(42): Data Latency=4 Reg=%105
    SU(39): Data Latency=4 Reg=%105
    SU(42): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(39):   MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 13
  Predecessors:
    SU(38): Data Latency=4 Reg=%105
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(42): Anti Latency=0
    SU(41): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(40):   %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 7
  Predecessors:
    SU(37): Data Latency=4 Reg=%104
    SU(37): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(41): Data Latency=4 Reg=%104
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(41):   MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 3
  Predecessors:
    SU(40): Data Latency=4 Reg=%104
    SU(39): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(42):   %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 34
  Height             : 13
  Predecessors:
    SU(39): Anti Latency=0
    SU(38): Data Latency=4 Reg=%105
    SU(38): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(51): Data Latency=4 Reg=%105
    SU(51): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(43):   %106:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(50): Data Latency=4 Reg=%106
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(44):   %108:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22148, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(45): Data Latency=4 Reg=%108
    SU(45): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(45):   %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(44): Data Latency=4 Reg=%108
    SU(44): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(46): Data Latency=4 Reg=%108
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(46):   MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(45): Data Latency=4 Reg=%108
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(49): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(47):   %111:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag225); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(48): Data Latency=4 Reg=%111
    SU(48): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(48):   %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(47): Data Latency=4 Reg=%111
    SU(47): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(50): Data Latency=4 Reg=%111
    SU(49): Data Latency=4 Reg=%111
    SU(50): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(49):   MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(48): Data Latency=4 Reg=%111
    SU(46): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(50): Anti Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(50):   %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(49): Anti Latency=0
    SU(48): Data Latency=4 Reg=%111
    SU(48): Out  Latency=0
    SU(43): Data Latency=4 Reg=%106
  Successors:
    SU(51): Data Latency=1 Reg=%111
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(51):   %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 38
  Height             : 9
  Predecessors:
    SU(50): Data Latency=1 Reg=%111
    SU(42): Data Latency=4 Reg=%105
    SU(42): Out  Latency=0
  Successors:
    SU(52): Data Latency=1 Reg=%105
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(52):   MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 39
  Height             : 8
  Predecessors:
    SU(51): Data Latency=1 Reg=%105
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(70): Ord  Latency=0 Memory
    SU(71): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(53):   %113:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(60): Data Latency=4 Reg=%113
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(54):   %115:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(55): Data Latency=4 Reg=%115
    SU(55): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(55):   %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(54): Data Latency=4 Reg=%115
    SU(54): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%115
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(56):   MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(55): Data Latency=4 Reg=%115
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(59): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(57):   %118:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(58): Data Latency=4 Reg=%118
    SU(58): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(58):   %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(57): Data Latency=4 Reg=%118
    SU(57): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(60): Data Latency=4 Reg=%118
    SU(59): Data Latency=4 Reg=%118
    SU(60): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(59):   MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(58): Data Latency=4 Reg=%118
    SU(56): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(60): Anti Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(60):   %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(59): Anti Latency=0
    SU(58): Data Latency=4 Reg=%118
    SU(58): Out  Latency=0
    SU(53): Data Latency=4 Reg=%113
  Successors:
    SU(65): Data Latency=1 Reg=%118
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(61):   %120:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(62): Data Latency=4 Reg=%120
    SU(62): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(62):   %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(61): Data Latency=4 Reg=%120
    SU(61): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(66): Data Latency=4 Reg=%120
    SU(64): Data Latency=4 Reg=%120
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(63):   %124:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag244)
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(64): Data Latency=4 Reg=%124
    SU(64): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(64):   %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(62): Data Latency=4 Reg=%120
    SU(63): Out  Latency=0
    SU(63): Data Latency=4 Reg=%124
  Successors:
    SU(65): Data Latency=1 Reg=%124
    SU(65): Out  Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(65):   %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 9
  Predecessors:
    SU(64): Data Latency=1 Reg=%124
    SU(64): Out  Latency=0
    SU(60): Data Latency=1 Reg=%118
  Successors:
    SU(70): Data Latency=1 Reg=%124
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(66):   MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 3
  Predecessors:
    SU(62): Data Latency=4 Reg=%120
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(69): Ord  Latency=0 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(67):   %123:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 11
  Predecessors:
    SU(27): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(68): Data Latency=4 Reg=%123
    SU(68): Out  Latency=0
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(68):   %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 7
  Predecessors:
    SU(67): Data Latency=4 Reg=%123
    SU(67): Out  Latency=0
    SU(27): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(69): Data Latency=4 Reg=%123
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : 
  Single Issue       : false;
SU(69):   MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 3
  Predecessors:
    SU(68): Data Latency=4 Reg=%123
    SU(66): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(70):   MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 39
  Height             : 8
  Predecessors:
    SU(65): Data Latency=1 Reg=%124
    SU(52): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=1 Memory
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(71):   %125:vr128 = MOVUPSrm %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 16 from %ir.203, align 8); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 40
  Height             : 7
  Predecessors:
    SU(70): Ord  Latency=1 Memory
    SU(52): Ord  Latency=1 Memory
    SU(27): Ord  Latency=1 Memory
  Successors:
    SU(72): Data Latency=4 Reg=%125
    SU(72): Ord  Latency=0 Memory
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(72):   MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
  # preds left       : 56
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 44
  Height             : 3
  Predecessors:
    SU(71): Data Latency=4 Reg=%125
    SU(71): Ord  Latency=0 Memory
    SU(70): Ord  Latency=0 Memory
    SU(69): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(67): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Memory
    SU(62): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(58): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Memory
    SU(55): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(45): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(37): Ord  Latency=0 Memory
    SU(36): Ord  Latency=0 Memory
    SU(35): Data Latency=1 Reg=%100
    SU(34): Ord  Latency=0 Memory
    SU(33): Data Latency=4 Reg=%96
    SU(33): Ord  Latency=0 Memory
    SU(29): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(21): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(73): Ord  Latency=0 Memory
  Pressure Diff      : FR32 1    FR32X 1    GR16 4
  Single Issue       : false;
SU(73):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !802 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 44
  Height             : 3
  Predecessors:
    SU(72): Ord  Latency=0 Memory
    SU(34): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : 
  Single Issue       : false;
ExitSU:   JMP_1 %bb.31, debug-location !803; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 47
  Height             : 0
  Predecessors:
    SU(73): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 47
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 73 
Scheduling SU(73) INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !802 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:128:44
Bottom Pressure:
GR16=6
  Ready @3c
  BotQ.A TopLatency SU(73) 44c
  BotQ.A BotLatency SU(73) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 72 
Scheduling SU(72) MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %100
  UpdateRegP: SU(72) MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %96
  UpdateRegP: SU(72) MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
              to FR32 1    FR32X 1
  LiveReg: %125
  UpdateRegP: SU(72) MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
              to 
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 71 69 41 35 33 
  Cand SU(71) ORDER                              
Pick Bot ORDER     
Scheduling SU(71) %125:vr128 = MOVUPSrm %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 16 from %ir.203, align 8); fft3d.c:132:41
Bottom Pressure:
GR16=10
  Ready @7c
  BotQ.A BotLatency SU(71) 7c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 69 41 35 70 
  Cand SU(33) ORDER                              
  Cand SU(69) ORDER                              
  Cand SU(70) ORDER                              
Pick Bot ORDER     
Scheduling SU(70) MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %124
  UpdateRegP: SU(70) MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
              to 
  Ready @8c
  BotQ.A BotLatency SU(70) 8c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 69 41 35 65 52 
  Cand SU(33) ORDER                              
  Cand SU(69) ORDER                              
Pick Bot ORDER     
Scheduling SU(69) MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %123
  UpdateRegP: SU(69) MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
              to 
  Ready @3c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 65 68 66 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(65) ORDER                              
  Cand SU(68) ORDER                              
Pick Bot ORDER     
Scheduling SU(68) %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %123
  UpdateRegP: SU(68) %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @7c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 65 66 67 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(65) ORDER                              
  Cand SU(66) ORDER                              
  Cand SU(67) ORDER                              
Pick Bot ORDER     
Scheduling SU(67) %123:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @11c
  BotQ.A BotLatency SU(67) 11c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 65 66 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(65) ORDER                              
  Cand SU(66) ORDER                              
Pick Bot ORDER     
Scheduling SU(66) MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %120
  UpdateRegP: SU(64) %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
              to 
  UpdateRegP: SU(66) MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
              to 
  Ready @3c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 65 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(65) ORDER                              
Pick Bot ORDER     
Scheduling SU(65) %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %124
  UpdateRegP: SU(65) %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
              to 
  LiveReg: %118
  UpdateRegP: SU(65) %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @9c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 64 60 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(64) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(64) %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %124
  UpdateRegP: SU(64) %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @10c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 60 62 63 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(62) ORDER                              
  Cand SU(63) ORDER                              
Pick Bot ORDER     
Scheduling SU(63) %124:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag244)
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @14c
  BotQ.A BotLatency SU(63) 14c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 60 62 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(60) ORDER                              
  Cand SU(62) ORDER                              
Pick Bot ORDER     
Scheduling SU(62) %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %120
  UpdateRegP: SU(62) %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @14c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 60 61 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(60) ORDER                              
  Cand SU(61) ORDER                              
Pick Bot ORDER     
Scheduling SU(61) %120:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @18c
  BotQ.A BotLatency SU(61) 18c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 60 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(60) ORDER                              
Pick Bot ORDER     
Scheduling SU(60) %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %118
  UpdateRegP: SU(59) MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
              to 
  UpdateRegP: SU(60) %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
              to 
  LiveReg: %113
  UpdateRegP: SU(60) %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @10c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 59 53 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(59) ORDER                              
Pick Bot ORDER     
Scheduling SU(59) MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @10c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 58 56 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(58) ORDER                              
Pick Bot ORDER     
Scheduling SU(58) %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %118
  UpdateRegP: SU(58) %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @14c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 56 57 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(57) ORDER                              
Pick Bot ORDER     
Scheduling SU(57) %118:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @18c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 56 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(56) ORDER                              
Pick Bot ORDER     
Scheduling SU(56) MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %115
  UpdateRegP: SU(56) MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
              to 
  Ready @10c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 55 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(55) ORDER                              
Pick Bot ORDER     
Scheduling SU(55) %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %115
  UpdateRegP: SU(55) %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @14c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 54 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
  Cand SU(54) ORDER                              
Pick Bot ORDER     
Scheduling SU(54) %115:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @18c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 53 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(53) ORDER                              
Pick Bot ORDER     
Scheduling SU(53) %113:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
Bottom Pressure:
GR16=10
  Ready @14c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 52 41 35 
  Cand SU(33) ORDER                              
  Cand SU(52) ORDER                              
Pick Bot ORDER     
Scheduling SU(52) MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %105
  UpdateRegP: SU(52) MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
              to 
  Ready @8c
BotQ.A @5c
  Retired: 22
  Executed: 5c
  Critical: 5c, 22 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 51 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
  Cand SU(51) ORDER                              
Pick Bot ORDER     
Scheduling SU(51) %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %105
  UpdateRegP: SU(51) %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
              to 
  LiveReg: %111
  UpdateRegP: SU(51) %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @9c
BotQ.A @5c
  Retired: 23
  Executed: 5c
  Critical: 5c, 23 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 50 42 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
  Cand SU(50) ORDER                              
Pick Bot ORDER     
Scheduling SU(50) %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %111
  UpdateRegP: SU(49) MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
              to 
  UpdateRegP: SU(50) %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
              to 
  LiveReg: %106
  UpdateRegP: SU(50) %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @10c
  *** Max MOps 4 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 24
  Executed: 6c
  Critical: 6c, 24 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 49 43 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(49) ORDER                              
Pick Bot ORDER     
Scheduling SU(49) MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  Ready @10c
BotQ.A @6c
  Retired: 25
  Executed: 6c
  Critical: 6c, 25 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 48 46 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(48) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(48) %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %111
  UpdateRegP: SU(48) %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @14c
BotQ.A @6c
  Retired: 26
  Executed: 6c
  Critical: 6c, 26 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 46 47 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(47) ORDER                              
Pick Bot ORDER     
Scheduling SU(47) %111:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag225); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @18c
BotQ.A @6c
  Retired: 27
  Executed: 6c
  Critical: 6c, 27 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 46 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(46) ORDER                              
Pick Bot ORDER     
Scheduling SU(46) MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %108
  UpdateRegP: SU(46) MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
              to 
  Ready @10c
  *** Max MOps 4 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 28
  Executed: 7c
  Critical: 7c, 28 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 45 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(45) ORDER                              
Pick Bot ORDER     
Scheduling SU(45) %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=3
FR32X=3
GR16=10
  LiveReg: %108
  UpdateRegP: SU(45) %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @14c
BotQ.A @7c
  Retired: 29
  Executed: 7c
  Critical: 7c, 29 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 44 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(44) ORDER                              
Pick Bot ORDER     
Scheduling SU(44) %108:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22148, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @18c
BotQ.A @7c
  Retired: 30
  Executed: 7c
  Critical: 7c, 30 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 43 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
  Cand SU(42) ORDER                              
  Cand SU(43) ORDER                              
Pick Bot ORDER     
Scheduling SU(43) %106:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @14c
BotQ.A @7c
  Retired: 31
  Executed: 7c
  Critical: 7c, 31 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 42 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
  Cand SU(42) ORDER                              
Pick Bot ORDER     
Scheduling SU(42) %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %105
  UpdateRegP: SU(39) MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
              to 
  UpdateRegP: SU(42) %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @13c
  *** Max MOps 4 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 32
  Executed: 8c
  Critical: 8c, 32 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 41 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(41) ORDER                              
Pick Bot ORDER     
Scheduling SU(41) MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %104
  UpdateRegP: SU(41) MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
              to 
  Ready @8c
BotQ.A @8c
  Retired: 33
  Executed: 8c
  Critical: 8c, 33 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 40 39 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(40) ORDER                              
Pick Bot ORDER     
Scheduling SU(40) %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %104
  UpdateRegP: SU(40) %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @12c
BotQ.A @8c
  Retired: 34
  Executed: 8c
  Critical: 8c, 34 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 39 37 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(39) ORDER                              
Pick Bot ORDER     
Scheduling SU(39) MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  Ready @13c
BotQ.A @8c
  Retired: 35
  Executed: 8c
  Critical: 8c, 35 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 37 38 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(37) ORDER                              
  Cand SU(38) ORDER                              
Pick Bot ORDER     
Scheduling SU(38) %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %105
  UpdateRegP: SU(38) %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
              to FR32 -1    FR32X -1
  Ready @17c
  *** Max MOps 4 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 36
  Executed: 9c
  Critical: 9c, 36 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 37 36 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(37) ORDER                              
Pick Bot ORDER     
Scheduling SU(37) %104:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag213); fft3d.c:132:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @16c
BotQ.A @9c
  Retired: 37
  Executed: 9c
  Critical: 9c, 37 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 36 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(36) ORDER                              
Pick Bot ORDER     
Scheduling SU(36) %105:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20944, align 16); fft3d.c:132:41
Bottom Pressure:
GR16=10
  Ready @21c
  BotQ.A BotLatency SU(36) 21c
BotQ.A @9c
  Retired: 38
  Executed: 9c
  Critical: 9c, 38 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 
  Cand SU(33) ORDER                              
  Cand SU(35) ORDER                              
Pick Bot ORDER     
Scheduling SU(35) %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
Bottom Pressure:
GR16=10
  LiveReg: %100
  UpdateRegP: SU(35) %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
              to GR16 -2
  Ready @9c
BotQ.A @9c
  Retired: 39
  Executed: 9c
  Critical: 9c, 39 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 34 
  Cand SU(33) ORDER                              
  Cand SU(34) ORDER                              
Pick Bot ORDER     
Scheduling SU(34) %100:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !800 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
Bottom Pressure:
GR16=8
  Ready @13c
  *** Max MOps 4 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 40
  Executed: 10c
  Critical: 10c, 40 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 
Scheduling SU(33) %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
Bottom Pressure:
GR16=8
  LiveReg: %96
  UpdateRegP: SU(33) %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
              to GR16 -2
  Ready @10c
BotQ.A @10c
  Retired: 41
  Executed: 10c
  Critical: 10c, 41 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 32 
Scheduling SU(32) %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
Bottom Pressure:
GR16=8
  LiveReg: %96
  UpdateRegP: SU(32) %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
              to GR16 -2
  Ready @11c
BotQ.A @10c
  Retired: 42
  Executed: 10c
  Critical: 10c, 42 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 31 
Scheduling SU(31) %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
Bottom Pressure:
GR16=8
  LiveReg: %96
  UpdateRegP: SU(31) %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
              to GR16 -2
  Ready @12c
BotQ.A @10c
  Retired: 43
  Executed: 10c
  Critical: 10c, 43 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 30 
Scheduling SU(30) %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
Bottom Pressure:
GR16=10
  LiveReg: %96
  UpdateRegP: SU(30) %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
              to 
  LiveReg: %93
  UpdateRegP: SU(30) %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
              to GR16 -2
  Ready @13c
  *** Max MOps 4 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 44
  Executed: 11c
  Critical: 11c, 44 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 28 
  Cand SU(29) ORDER                              
Pick Bot ORDER     
Scheduling SU(29) %96:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !798 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
Bottom Pressure:
GR16=8
  Ready @17c
BotQ.A @11c
  Retired: 45
  Executed: 11c
  Critical: 11c, 45 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 28 
Scheduling SU(28) %93:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !797 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
Bottom Pressure:
GR16=6
  Ready @17c
BotQ.A @11c
  Retired: 46
  Executed: 11c
  Critical: 11c, 46 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 27 
Scheduling SU(27) MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %76
  UpdateRegP: SU(7) %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(13) %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
              to FR32 -1    FR32X -1    GR16 2
  UpdateRegP: SU(27) MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
              to FR32 1    FR32X 1    GR16 2
  LiveReg: %85
  UpdateRegP: SU(27) MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
              to FR32 1    FR32X 1
  LiveReg: %92
  UpdateRegP: SU(27) MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
              to 
  Ready @22c
  BotQ.A BotLatency SU(27) 22c
BotQ.A @11c
  Retired: 47
  Executed: 11c
  Critical: 11c, 47 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 26 19 
  Cand SU(26) ORDER                              
Pick Bot ORDER     
Scheduling SU(26) %92:vr128 = MOVUPSrm %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 16 from %ir.172, align 8); fft3d.c:131:41
Bottom Pressure:
GR16=10
  Ready @26c
  BotQ.A BotLatency SU(26) 26c
  *** Max MOps 4 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 48
  Executed: 12c
  Critical: 12c, 48 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 25 
  Cand SU(19) ORDER                              
  Cand SU(25) ORDER                              
Pick Bot ORDER     
Scheduling SU(25) MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %91
  UpdateRegP: SU(25) MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
              to 
  Ready @27c
  BotQ.A BotLatency SU(25) 27c
BotQ.A @12c
  Retired: 49
  Executed: 12c
  Critical: 12c, 49 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 24 23 
  Cand SU(19) ORDER                              
  Cand SU(24) ORDER                              
Pick Bot ORDER     
Scheduling SU(24) %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %91
  UpdateRegP: SU(24) %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
              to FR32 -1    FR32X -1
  Ready @31c
  BotQ.A BotLatency SU(24) 31c
BotQ.A @12c
  Retired: 50
  Executed: 12c
  Critical: 12c, 50 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 23 21 
  Cand SU(19) ORDER                              
  Cand SU(23) ORDER                              
Pick Bot ORDER     
Scheduling SU(23) MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %90
  UpdateRegP: SU(23) MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
              to 
  Ready @27c
BotQ.A @12c
  Retired: 51
  Executed: 12c
  Critical: 12c, 51 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 21 22 
  Cand SU(19) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(22) ORDER                              
Pick Bot ORDER     
Scheduling SU(22) %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
Bottom Pressure:
FR32=2
FR32X=2
GR16=10
  LiveReg: %90
  UpdateRegP: SU(22) %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
              to FR32 -1    FR32X -1
  Ready @31c
  *** Max MOps 4 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 52
  Executed: 13c
  Critical: 13c, 52 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 21 20 14 
  Cand SU(19) ORDER                              
  Cand SU(21) ORDER                              
Pick Bot ORDER     
Scheduling SU(21) %91:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  Ready @35c
  BotQ.A BotLatency SU(21) 35c
BotQ.A @13c
  Retired: 53
  Executed: 13c
  Critical: 13c, 53 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 14 20 
  Cand SU(19) ORDER                              
  Cand SU(20) ORDER                              
Pick Bot ORDER     
Scheduling SU(20) %90:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
Bottom Pressure:
GR16=10
  Ready @35c
BotQ.A @13c
  Retired: 54
  Executed: 13c
  Critical: 13c, 54 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 19 14 8 
  Cand SU(19) ORDER                              
Pick Bot ORDER     
Scheduling SU(19) %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
Bottom Pressure:
GR16=10
  LiveReg: %85
  UpdateRegP: SU(19) %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
              to GR16 -2
  Ready @26c
BotQ.A @13c
  Retired: 55
  Executed: 13c
  Critical: 13c, 55 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 14 18 
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
Bottom Pressure:
GR16=10
  LiveReg: %85
  UpdateRegP: SU(18) %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
              to GR16 -2
  Ready @27c
  *** Max MOps 4 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 56
  Executed: 14c
  Critical: 14c, 56 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 14 17 
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
Bottom Pressure:
GR16=10
  LiveReg: %85
  UpdateRegP: SU(17) %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
              to GR16 -2
  Ready @28c
BotQ.A @14c
  Retired: 57
  Executed: 14c
  Critical: 14c, 57 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 14 16 
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
Bottom Pressure:
GR16=12
  LiveReg: %85
  UpdateRegP: SU(16) %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
              to 
  LiveReg: %69
  UpdateRegP: SU(2) %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
              to 
  UpdateRegP: SU(10) %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
              to 
  UpdateRegP: SU(16) %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
              to GR16 -2
  Ready @29c
BotQ.A @14c
  Retired: 58
  Executed: 14c
  Critical: 14c, 58 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 14 15 
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) %85:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !791 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
Bottom Pressure:
GR16=10
  Ready @33c
BotQ.A @14c
  Retired: 59
  Executed: 14c
  Critical: 14c, 59 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 14 
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %82
  UpdateRegP: SU(14) MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
              to 
  Ready @32c
  *** Max MOps 4 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 60
  Executed: 15c
  Critical: 15c, 60 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 13 
  Cand SU(8) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
Bottom Pressure:
GR16=12
  LiveReg: %80
  UpdateRegP: SU(13) %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
              to FR32 -1    FR32X -1
  Ready @36c
  BotQ.A BotLatency SU(13) 36c
BotQ.A @15c
  Retired: 61
  Executed: 15c
  Critical: 15c, 61 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 12 
  Cand SU(8) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
Bottom Pressure:
GR16=12
  LiveReg: %80
  UpdateRegP: SU(12) %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
              to GR16 -2
  Ready @37c
  BotQ.A BotLatency SU(12) 37c
BotQ.A @15c
  Retired: 62
  Executed: 15c
  Critical: 15c, 62 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 11 
  Cand SU(8) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
Bottom Pressure:
GR16=12
  LiveReg: %80
  UpdateRegP: SU(11) %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
              to GR16 -2
  Ready @38c
  BotQ.A BotLatency SU(11) 38c
BotQ.A @15c
  Retired: 63
  Executed: 15c
  Critical: 15c, 63 MOps
  ExpectedLatency: 38c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 10 
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
Bottom Pressure:
GR16=12
  LiveReg: %80
  UpdateRegP: SU(10) %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
              to GR16 -2
  Ready @39c
  BotQ.A BotLatency SU(10) 39c
  *** Max MOps 4 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 64
  Executed: 16c
  Critical: 16c, 64 MOps
  ExpectedLatency: 39c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %80:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !785 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
Bottom Pressure:
GR16=10
  Ready @43c
  BotQ.A BotLatency SU(9) 43c
BotQ.A @16c
  Retired: 65
  Executed: 16c
  Critical: 16c, 65 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Scheduling SU(8) MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
Bottom Pressure:
FR32=1
FR32X=1
GR16=10
  LiveReg: %77
  UpdateRegP: SU(8) MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
              to 
  Ready @36c
BotQ.A @16c
  Retired: 66
  Executed: 16c
  Critical: 16c, 66 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Scheduling SU(7) %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
Bottom Pressure:
GR16=12
  LiveReg: %72
  UpdateRegP: SU(7) %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
              to FR32 -1    FR32X -1
  Ready @40c
BotQ.A @16c
  Retired: 67
  Executed: 16c
  Critical: 16c, 67 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
Bottom Pressure:
GR16=12
  LiveReg: %76
  UpdateRegP: SU(6) %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
              to GR16 -2
  Ready @41c
  *** Max MOps 4 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 68
  Executed: 17c
  Critical: 17c, 68 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %76:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !784 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
Bottom Pressure:
GR16=10
  Ready @45c
  BotQ.A BotLatency SU(5) 45c
BotQ.A @17c
  Retired: 69
  Executed: 17c
  Critical: 17c, 69 MOps
  ExpectedLatency: 45c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
Bottom Pressure:
GR16=10
  LiveReg: %72
  UpdateRegP: SU(4) %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
              to GR16 -2
  Ready @41c
BotQ.A @17c
  Retired: 70
  Executed: 17c
  Critical: 17c, 70 MOps
  ExpectedLatency: 45c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Scheduling SU(3) %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
Bottom Pressure:
GR16=10
  LiveReg: %72
  UpdateRegP: SU(3) %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
              to GR16 -2
  Ready @42c
BotQ.A @17c
  Retired: 71
  Executed: 17c
  Critical: 17c, 71 MOps
  ExpectedLatency: 45c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
Bottom Pressure:
GR16=10
  LiveReg: %72
  UpdateRegP: SU(2) %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
              to GR16 -2
  Ready @43c
  *** Max MOps 4 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 72
  Executed: 18c
  Critical: 18c, 72 MOps
  ExpectedLatency: 45c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %69:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !781 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
Bottom Pressure:
GR16=8
  Ready @47c
  BotQ.A BotLatency SU(1) 47c
BotQ.A @18c
  Retired: 73
  Executed: 18c
  Critical: 18c, 73 MOps
  ExpectedLatency: 47c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
Bottom Pressure:
GR16=6
  Ready @47c
BotQ.A @18c
  Retired: 74
  Executed: 18c
  Critical: 18c, 74 MOps
  ExpectedLatency: 47c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
SU(1):   %69:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !781 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
SU(2):   %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
SU(3):   %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
SU(4):   %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
SU(5):   %76:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !784 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
SU(6):   %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
SU(7):   %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
SU(8):   MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
SU(9):   %80:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !785 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
SU(10):   %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
SU(11):   %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
SU(12):   %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
SU(13):   %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
SU(14):   MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
SU(15):   %85:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !791 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
SU(16):   %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
SU(17):   %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
SU(18):   %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
SU(19):   %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
SU(20):   %90:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
SU(21):   %91:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
SU(22):   %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
SU(23):   MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
SU(24):   %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
SU(25):   MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
SU(26):   %92:vr128 = MOVUPSrm %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 16 from %ir.172, align 8); fft3d.c:131:41
SU(27):   MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
SU(28):   %93:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !797 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
SU(29):   %96:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !798 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
SU(30):   %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
SU(31):   %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
SU(32):   %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
SU(33):   %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
SU(34):   %100:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !800 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
SU(35):   %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
SU(36):   %105:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20944, align 16); fft3d.c:132:41
SU(37):   %104:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag213); fft3d.c:132:41
SU(38):   %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
SU(39):   MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
SU(40):   %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
SU(41):   MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
SU(42):   %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
SU(43):   %106:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
SU(44):   %108:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22148, align 16); fft3d.c:132:41
SU(45):   %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
SU(46):   MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
SU(47):   %111:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag225); fft3d.c:132:41
SU(48):   %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
SU(49):   MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
SU(50):   %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
SU(51):   %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
SU(52):   MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
SU(53):   %113:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
SU(54):   %115:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
SU(55):   %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
SU(56):   MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
SU(57):   %118:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
SU(58):   %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
SU(59):   MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
SU(60):   %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
SU(61):   %120:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
SU(62):   %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
SU(63):   %124:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag244)
SU(64):   %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
SU(65):   %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
SU(66):   MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
SU(67):   %123:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
SU(68):   %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
SU(69):   MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
SU(70):   MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
SU(71):   %125:vr128 = MOVUPSrm %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 16 from %ir.203, align 8); fft3d.c:132:41
SU(72):   MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
SU(73):   INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !802 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:128:44

********** INTERVALS **********
CH [0B,48r:0)  0@0B-phi
CL [0B,48r:0)[664r,672r:1)  0@0B-phi 1@664r
DH [0B,64r:0)  0@0B-phi
DIL [0B,96r:0)[352r,368r:2)[8016r,8032r:1)  0@0B-phi 1@8016r 2@352r
DIH [0B,96r:0)[352r,368r:2)[8016r,8032r:1)  0@0B-phi 1@8016r 2@352r
DL [0B,64r:0)  0@0B-phi
HCX [0B,48r:0)  0@0B-phi
HDI [0B,96r:0)[352r,368r:2)[8016r,8032r:1)  0@0B-phi 1@8016r 2@352r
HDX [0B,64r:0)  0@0B-phi
SIL [0B,80r:0)  0@0B-phi
SIH [0B,80r:0)  0@0B-phi
HSI [0B,80r:0)  0@0B-phi
R8B [0B,32r:0)  0@0B-phi
R8BH [0B,32r:0)  0@0B-phi
R8WH [0B,32r:0)  0@0B-phi
R9B [0B,16r:0)  0@0B-phi
R9BH [0B,16r:0)  0@0B-phi
R9WH [0B,16r:0)  0@0B-phi
%0 [208r,7904B:0)  0@208r weight:0.000000e+00
%1 [96r,112r:0)  0@96r weight:0.000000e+00
%2 [80r,128r:0)  0@80r weight:0.000000e+00
%3 [64r,144r:0)  0@64r weight:0.000000e+00
%4 [48r,160r:0)  0@48r weight:0.000000e+00
%5 [32r,208r:0)  0@32r weight:0.000000e+00
%6 [16r,240r:0)  0@16r weight:0.000000e+00
%9 [464r,528r:0)  0@464r weight:0.000000e+00
%11 [480r,496r:2)[496r,528r:0)[528r,560r:1)[560r,576r:3)  0@496r 1@528r 2@480r 3@560r weight:0.000000e+00
%13 [592r,704r:0)  0@592r weight:0.000000e+00
%14 [624r,664r:0)  0@624r weight:0.000000e+00
%15 [656r,672r:0)[672r,688r:1)  0@656r 1@672r weight:0.000000e+00
%16 [784r,800r:0)  0@784r weight:0.000000e+00
%20 [864r,912r:0)[912r,928r:1)  0@864r 1@912r weight:0.000000e+00
%21 [944r,1008r:0)  0@944r weight:0.000000e+00
%23 [960r,976r:2)[976r,1008r:0)[1008r,1040r:1)[1040r,1072r:3)  0@976r 1@1008r 2@960r 3@1040r weight:0.000000e+00
%27 [1120r,1152r:0)[1152r,1168r:1)  0@1120r 1@1152r weight:0.000000e+00
%29 [4048r,4064r:0)  0@4048r weight:0.000000e+00
%32 [4704r,4752r:0)[4752r,4768r:1)  0@4704r 1@4752r weight:0.000000e+00
%33 [4784r,4848r:0)  0@4784r weight:0.000000e+00
%35 [4800r,4816r:2)[4816r,4848r:0)[4848r,4880r:1)[4880r,4912r:3)  0@4816r 1@4848r 2@4800r 3@4880r weight:0.000000e+00
%39 [4960r,4992r:0)[4992r,5008r:1)  0@4960r 1@4992r weight:0.000000e+00
%42 [5088r,5264r:0)  0@5088r weight:0.000000e+00
%44 [5104r,5120r:2)[5120r,5168r:0)[5168r,5184r:1)  0@5120r 1@5168r 2@5104r weight:0.000000e+00
%46 [5072r,5216r:2)[5216r,5264r:0)[5264r,5280r:1)  0@5216r 1@5264r 2@5072r weight:0.000000e+00
%47 [5536r,5680r:0)  0@5536r weight:0.000000e+00
%48 [5552r,5600r:0)  0@5552r weight:0.000000e+00
%51 [5568r,5600r:2)[5600r,5632r:0)[5632r,5680r:1)  0@5600r 1@5632r 2@5568r weight:0.000000e+00
%52 [5648r,5664r:0)  0@5648r weight:0.000000e+00
%54 [5680r,5712r:0)[5712r,5728r:1)  0@5680r 1@5712r weight:0.000000e+00
%55 [5744r,5760r:0)  0@5744r weight:0.000000e+00
%56 [5360r,5472r:0)  0@5360r weight:0.000000e+00
%57 [5376r,5424r:0)  0@5376r weight:0.000000e+00
%60 [5392r,5424r:2)[5424r,5456r:0)[5456r,5472r:1)  0@5424r 1@5456r 2@5392r weight:0.000000e+00
%61 [5472r,5488r:0)  0@5472r weight:0.000000e+00
%64 [5824r,5856r:0)[5856r,5872r:1)  0@5824r 1@5856r weight:0.000000e+00
%66 [5968r,5984r:0)  0@5968r weight:0.000000e+00
%69 [6064r,6432r:0)  0@6064r weight:0.000000e+00
%72 [6048r,6096r:2)[6096r,6128r:0)[6128r,6160r:1)[6160r,6224r:3)  0@6096r 1@6128r 2@6048r 3@6160r weight:0.000000e+00
%76 [6176r,6208r:0)[6208r,6688r:1)  0@6176r 1@6208r weight:0.000000e+00
%77 [6224r,6240r:0)  0@6224r weight:0.000000e+00
%80 [6256r,6288r:2)[6288r,6320r:0)[6320r,6352r:1)[6352r,6368r:3)  0@6288r 1@6320r 2@6256r 3@6352r weight:0.000000e+00
%82 [6368r,6384r:0)  0@6368r weight:0.000000e+00
%85 [6400r,6432r:2)[6432r,6464r:0)[6464r,6496r:1)[6496r,6528r:3)[6528r,6688r:4)  0@6432r 1@6464r 2@6400r 3@6496r 4@6528r weight:0.000000e+00
%90 [6544r,6592r:0)[6592r,6608r:1)  0@6544r 1@6592r weight:0.000000e+00
%91 [6560r,6640r:0)[6640r,6656r:1)  0@6560r 1@6640r weight:0.000000e+00
%92 [6672r,6688r:0)  0@6672r weight:0.000000e+00
%93 [6704r,6752r:0)  0@6704r weight:0.000000e+00
%96 [6720r,6752r:2)[6752r,6784r:0)[6784r,6816r:1)[6816r,6848r:3)[6848r,7712r:4)  0@6752r 1@6784r 2@6720r 3@6816r 4@6848r weight:0.000000e+00
%100 [6864r,6896r:0)[6896r,7712r:1)  0@6864r 1@6896r weight:0.000000e+00
%104 [6928r,7008r:0)[7008r,7024r:1)  0@6928r 1@7008r weight:0.000000e+00
%105 [6912r,6960r:2)[6960r,7056r:0)[7056r,7264r:1)[7264r,7280r:3)  0@6960r 1@7056r 2@6912r 3@7264r weight:0.000000e+00
%106 [7072r,7232r:0)  0@7072r weight:0.000000e+00
%108 [7088r,7120r:0)[7120r,7136r:1)  0@7088r 1@7120r weight:0.000000e+00
%111 [7152r,7184r:2)[7184r,7232r:0)[7232r,7264r:1)  0@7184r 1@7232r 2@7152r weight:0.000000e+00
%113 [7296r,7456r:0)  0@7296r weight:0.000000e+00
%115 [7312r,7344r:0)[7344r,7360r:1)  0@7312r 1@7344r weight:0.000000e+00
%118 [7376r,7408r:2)[7408r,7456r:0)[7456r,7584r:1)  0@7408r 1@7456r 2@7376r weight:0.000000e+00
%120 [7472r,7504r:0)[7504r,7600r:1)  0@7472r 1@7504r weight:0.000000e+00
%123 [7616r,7648r:0)[7648r,7664r:1)  0@7616r 1@7648r weight:0.000000e+00
%124 [7520r,7552r:2)[7552r,7584r:0)[7584r,7680r:1)  0@7552r 1@7584r 2@7520r weight:0.000000e+00
%125 [7696r,7712r:0)  0@7696r weight:0.000000e+00
%126 [4160r,4176r:0)  0@4160r weight:0.000000e+00
%128 [4272r,4288r:0)  0@4272r weight:0.000000e+00
%132 [4368r,4384r:2)[4384r,4416r:0)[4416r,4448r:1)[4448r,4592r:3)  0@4384r 1@4416r 2@4368r 3@4448r weight:0.000000e+00
%135 [4464r,4496r:0)[4496r,4592r:1)  0@4464r 1@4496r weight:0.000000e+00
%139 [4352r,4528r:2)[4528r,4560r:0)[4560r,4576r:1)  0@4528r 1@4560r 2@4352r weight:0.000000e+00
%140 [4576r,4592r:0)  0@4576r weight:0.000000e+00
%142 [1248r,1424r:0)  0@1248r weight:0.000000e+00
%144 [1264r,1280r:2)[1280r,1328r:0)[1328r,1344r:1)  0@1280r 1@1328r 2@1264r weight:0.000000e+00
%146 [1232r,1376r:2)[1376r,1424r:0)[1424r,1440r:1)  0@1376r 1@1424r 2@1232r weight:0.000000e+00
%147 [1696r,1840r:0)  0@1696r weight:0.000000e+00
%148 [1712r,1760r:0)  0@1712r weight:0.000000e+00
%151 [1728r,1760r:2)[1760r,1792r:0)[1792r,1840r:1)  0@1760r 1@1792r 2@1728r weight:0.000000e+00
%152 [1808r,1824r:0)  0@1808r weight:0.000000e+00
%154 [1840r,1872r:0)[1872r,1888r:1)  0@1840r 1@1872r weight:0.000000e+00
%155 [1904r,1920r:0)  0@1904r weight:0.000000e+00
%156 [1520r,1632r:0)  0@1520r weight:0.000000e+00
%157 [1536r,1584r:0)  0@1536r weight:0.000000e+00
%160 [1552r,1584r:2)[1584r,1616r:0)[1616r,1632r:1)  0@1584r 1@1616r 2@1552r weight:0.000000e+00
%161 [1632r,1648r:0)  0@1632r weight:0.000000e+00
%164 [1984r,2016r:0)[2016r,2032r:1)  0@1984r 1@2016r weight:0.000000e+00
%166 [2128r,2144r:0)  0@2128r weight:0.000000e+00
%168 [2208r,2592r:0)  0@2208r weight:0.000000e+00
%170 [2240r,2672r:0)  0@2240r weight:0.000000e+00
%172 [2224r,2272r:2)[2272r,2304r:0)[2304r,2336r:1)[2336r,2368r:3)[2368r,2432r:4)  0@2272r 1@2304r 2@2224r 3@2336r 4@2368r weight:0.000000e+00
%176 [2384r,2416r:0)[2416r,2896r:1)  0@2384r 1@2416r weight:0.000000e+00
%177 [2432r,2448r:0)  0@2432r weight:0.000000e+00
%180 [2464r,2496r:2)[2496r,2528r:0)[2528r,2560r:1)[2560r,2592r:3)[2592r,2608r:4)  0@2496r 1@2528r 2@2464r 3@2560r 4@2592r weight:0.000000e+00
%183 [2608r,2624r:0)  0@2608r weight:0.000000e+00
%186 [720r,7904B:0)  0@720r weight:0.000000e+00
%187 [2640r,2672r:2)[2672r,2704r:0)[2704r,2736r:1)[2736r,2896r:3)  0@2672r 1@2704r 2@2640r 3@2736r weight:0.000000e+00
%188 [736r,7904B:0)  0@736r weight:0.000000e+00
%192 [2752r,2800r:0)[2800r,2816r:1)  0@2752r 1@2800r weight:0.000000e+00
%193 [2768r,2848r:0)[2848r,2864r:1)  0@2768r 1@2848r weight:0.000000e+00
%194 [2880r,2896r:0)  0@2880r weight:0.000000e+00
%195 [2912r,2960r:0)  0@2912r weight:0.000000e+00
%198 [2928r,2960r:2)[2960r,2992r:0)[2992r,3024r:1)[3024r,3888r:3)  0@2960r 1@2992r 2@2928r 3@3024r weight:0.000000e+00
%201 [3040r,3072r:0)[3072r,3888r:1)  0@3040r 1@3072r weight:0.000000e+00
%205 [3104r,3184r:0)[3184r,3200r:1)  0@3104r 1@3184r weight:0.000000e+00
%206 [3088r,3136r:2)[3136r,3232r:0)[3232r,3440r:1)[3440r,3456r:3)  0@3136r 1@3232r 2@3088r 3@3440r weight:0.000000e+00
%207 [3248r,3408r:0)  0@3248r weight:0.000000e+00
%209 [3264r,3296r:0)[3296r,3312r:1)  0@3264r 1@3296r weight:0.000000e+00
%212 [3328r,3360r:2)[3360r,3408r:0)[3408r,3440r:1)  0@3360r 1@3408r 2@3328r weight:0.000000e+00
%214 [3472r,3632r:0)  0@3472r weight:0.000000e+00
%216 [3488r,3520r:0)[3520r,3536r:1)  0@3488r 1@3520r weight:0.000000e+00
%219 [3552r,3584r:2)[3584r,3632r:0)[3632r,3760r:1)  0@3584r 1@3632r 2@3552r weight:0.000000e+00
%221 [3648r,3680r:0)[3680r,3776r:1)  0@3648r 1@3680r weight:0.000000e+00
%224 [3792r,3824r:0)[3824r,3840r:1)  0@3792r 1@3824r weight:0.000000e+00
%225 [3696r,3728r:2)[3728r,3760r:0)[3760r,3856r:1)  0@3728r 1@3760r 2@3696r weight:0.000000e+00
%226 [3872r,3888r:0)  0@3872r weight:0.000000e+00
%227 [752r,7904B:0)  0@752r weight:0.000000e+00
RegMasks: 368r 8032r
********** MACHINEINSTRS **********
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP+8]
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=4, align=4, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=4, align=4, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: dead
  fi#7: size=8, align=8, at location [SP+8]
  fi#8: size=4, align=4, at location [SP+8]
  fi#9: size=4, align=4, at location [SP+8]
  fi#10: size=4, align=4, at location [SP+8]
  fi#11: size=16, align=16, at location [SP+8]
  fi#12: size=16, align=16, at location [SP+8]
  fi#13: size=16, align=16, at location [SP+8]
  fi#14: size=4, align=4, at location [SP+8]
  fi#15: size=4, align=4, at location [SP+8]
  fi#16: size=4, align=4, at location [SP+8]
  fi#17: size=4, align=4, at location [SP+8]
  fi#18: size=4, align=4, at location [SP+8]
  fi#19: size=4, align=4, at location [SP+8]
  fi#20: size=4, align=4, at location [SP+8]
  fi#21: size=4, align=4, at location [SP+8]
  fi#22: size=4, align=4, at location [SP+8]
  fi#23: size=4, align=4, at location [SP+8]
  fi#24: size=16, align=8, at location [SP+8]
  fi#25: size=16, align=8, at location [SP+8]
  fi#26: size=16, align=8, at location [SP+8]
  fi#27: size=16, align=8, at location [SP+8]
  fi#28: size=16, align=8, at location [SP+8]
  fi#29: size=16, align=8, at location [SP+8]
  fi#30: size=16, align=8, at location [SP+8]
  fi#31: size=16, align=8, at location [SP+8]
  fi#32: size=16, align=8, at location [SP+8]
  fi#33: size=16, align=8, at location [SP+8]
  fi#34: size=16, align=8, at location [SP+8]
  fi#35: size=16, align=8, at location [SP+8]
  fi#36: size=16, align=8, at location [SP+8]
  fi#37: size=16, align=8, at location [SP+8]
Constant Pool:
  cp#0: <double -0.000000e+00, double -0.000000e+00>, align=16
Function Live Ins: $edi in %1, $esi in %2, $edx in %3, $ecx in %4, $r8d in %5, $r9 in %6

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $edi, $esi, $edx, $ecx, $r8d, $r9
16B	  %6:gr64 = COPY $r9
32B	  %5:gr32 = COPY $r8d
48B	  %4:gr32 = COPY $ecx
64B	  %3:gr32 = COPY $edx
80B	  %2:gr32 = COPY $esi
96B	  %1:gr32 = COPY $edi
112B	  MOV32mr %stack.0.is.addr, 1, $noreg, 0, $noreg, %1:gr32 :: (store 4 into %ir.is.addr)
128B	  MOV32mr %stack.1.m.addr, 1, $noreg, 0, $noreg, %2:gr32 :: (store 4 into %ir.m.addr)
144B	  MOV32mr %stack.2.vlen.addr, 1, $noreg, 0, $noreg, %3:gr32 :: (store 4 into %ir.vlen.addr)
160B	  MOV32mr %stack.3.n.addr, 1, $noreg, 0, $noreg, %4:gr32 :: (store 4 into %ir.n.addr)
176B	  MOV32mr %stack.4.xd1.addr, 1, $noreg, 0, $noreg, %5:gr32 :: (store 4 into %ir.xd1.addr)
192B	  MOV64mr %stack.5.ox.addr, 1, $noreg, 0, $noreg, %6:gr64 :: (store 8 into %ir.ox.addr)
208B	  undef %0.sub_32bit:gr64_with_sub_8bit = MOV32rr %5:gr32, debug-location !514; fft3d.c:60:18
240B	  MOV64mr %stack.7.x, 1, $noreg, 0, $noreg, %6:gr64, debug-location !517 :: (store 8 into %ir.x); fft3d.c:60:15
256B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !553 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
272B	  JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !555; fft3d.c:66:9
288B	  JMP_1 %bb.1, debug-location !555; fft3d.c:66:9

304B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

320B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
352B	  $edi = MOV32ri 4, debug-location !556; fft3d.c:67:9
368B	  CALL64pcrel32 @timer_start, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !556; fft3d.c:67:9
384B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
400B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9
416B	  PCN_STACKMAP 0, 0, 0, %stack.24..compoundliteral, 0, 0, %stack.31..compoundliteral155, 0, 0, %stack.32..compoundliteral190, 0, 0, %stack.33..compoundliteral204, 0, 0, %stack.34..compoundliteral207, 0, 0, %stack.35..compoundliteral219, 0, 0, %stack.36..compoundliteral233, 0, 0, %stack.37..compoundliteral245, 0, 0, %stack.25..compoundliteral43, 0, 0, %stack.26..compoundliteral57, 0, 0, %stack.27..compoundliteral60, 0, 0, %stack.28..compoundliteral72, 0, 0, %stack.29..compoundliteral86, 0, 0, %stack.30..compoundliteral98, 0, 0, %fixed-stack.0, 0, 0, %stack.8.i, 0, 0, %stack.20.i11, 0, 0, %stack.21.i12, 0, 0, %stack.22.i21, 0, 0, %stack.23.i22, 0, 0, %stack.0.is.addr, 0, 0, %stack.9.j, 0, 0, %stack.14.k, 0, 0, %stack.19.ku, 0, 0, %stack.10.l, 0, 0, %stack.16.li, 0, 0, %stack.17.lj, 0, 0, %stack.18.lk, 0, 0, %stack.1.m.addr, 0, 0, %stack.3.n.addr, 0, 0, %stack.15.n1, 0, 0, %stack.11.u1, 0, 0, %stack.2.vlen.addr, 0, 0, %stack.7.x, 0, 0, %stack.12.x11, 0, 0, %stack.13.x21, 0, %0:gr64_with_sub_8bit, implicit-def dead early-clobber $r11, debug-location !556 :: (load 8 from %stack.24..compoundliteral), (load 8 from %stack.31..compoundliteral155), (load 8 from %stack.32..compoundliteral190), (load 8 from %stack.33..compoundliteral204), (load 8 from %stack.34..compoundliteral207), (load 8 from %stack.35..compoundliteral219), (load 8 from %stack.36..compoundliteral233), (load 8 from %stack.37..compoundliteral245), (load 8 from %stack.25..compoundliteral43), (load 8 from %stack.26..compoundliteral57), (load 8 from %stack.27..compoundliteral60), (load 8 from %stack.28..compoundliteral72), (load 8 from %stack.29..compoundliteral86), (load 8 from %stack.30..compoundliteral98), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.8.i, align 4), (load 8 from %stack.20.i11, align 4), (load 8 from %stack.21.i12, align 4), (load 8 from %stack.22.i21, align 4), (load 8 from %stack.23.i22, align 4), (load 8 from %stack.0.is.addr, align 4), (load 8 from %stack.9.j, align 4), (load 8 from %stack.14.k, align 4), (load 8 from %stack.19.ku, align 4), (load 8 from %stack.10.l, align 4), (load 8 from %stack.16.li, align 4), (load 8 from %stack.17.lj, align 4), (load 8 from %stack.18.lk, align 4), (load 8 from %stack.1.m.addr, align 4), (load 8 from %stack.3.n.addr, align 4), (load 8 from %stack.15.n1, align 4), (load 8 from %stack.11.u1, align 16), (load 8 from %stack.2.vlen.addr, align 4), (load 8 from %stack.7.x), (load 8 from %stack.12.x11, align 16), (load 8 from %stack.13.x21, align 16); fft3d.c:67:9
432B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !556; fft3d.c:67:9

448B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

464B	  %9:gr32 = MOV32rm %stack.3.n.addr, 1, $noreg, 0, $noreg, debug-location !557 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
480B	  %11:gr32 = COPY %9:gr32, debug-location !558; fft3d.c:71:12
496B	  %11:gr32 = SHR32ri %11:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
528B	  %11:gr32 = ADD32rr %11:gr32(tied-def 0), %9:gr32, implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
560B	  %11:gr32 = SAR32r1 %11:gr32(tied-def 0), implicit-def dead $eflags, debug-location !558; fft3d.c:71:12
576B	  MOV32mr %stack.15.n1, 1, $noreg, 0, $noreg, %11:gr32, debug-location !559 :: (store 4 into %ir.n1); fft3d.c:71:8
592B	  %13:gr32 = MOV32ri 1
608B	  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %13:gr32, debug-location !560 :: (store 4 into %ir.lj); fft3d.c:72:8
624B	  %14:gr8 = MOV8rm %stack.1.m.addr, 1, $noreg, 0, $noreg, debug-location !561 :: (dereferenceable load 1 from %ir.m.addr, align 4); fft3d.c:73:15
656B	  %15:gr32 = MOV32ri 1, debug-location !562; fft3d.c:73:12
664B	  $cl = COPY %14:gr8, debug-location !562; fft3d.c:73:12
672B	  %15:gr32 = SHL32rCL %15:gr32(tied-def 0), implicit-def dead $eflags, implicit $cl, debug-location !562; fft3d.c:73:12
688B	  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %15:gr32, debug-location !563 :: (store 4 into %ir.li); fft3d.c:73:8
704B	  MOV32mr %stack.10.l, 1, $noreg, 0, $noreg, %13:gr32, debug-location !564 :: (store 4 into %ir.l); fft3d.c:74:12
720B	  %186:gr64 = MOV32ri64 528
736B	  %188:gr64 = LEA64r $rip, 1, $noreg, @scr, $noreg
752B	  %227:vr128 = MOVAPSrm $rip, 1, $noreg, %const.0, $noreg :: (load 16 from constant-pool)

768B	bb.3.for.cond:
	; predecessors: %bb.2, %bb.35
	  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

784B	  %16:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !567 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
800B	  CMP32rm %16:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !570 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:19
816B	  JCC_1 %bb.36, 15, implicit killed $eflags, debug-location !571; fft3d.c:74:5
832B	  JMP_1 %bb.4, debug-location !571; fft3d.c:74:5

848B	bb.4.for.body:
	; predecessors: %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

864B	  %20:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !572 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
880B	  MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %20:gr32, debug-location !574 :: (store 4 into %ir.lk); fft3d.c:75:12
912B	  %20:gr32 = ADD32rr %20:gr32(tied-def 0), %20:gr32, implicit-def dead $eflags, debug-location !576; fft3d.c:76:16
928B	  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %20:gr32, debug-location !577 :: (store 4 into %ir.lj); fft3d.c:76:12
944B	  %21:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !578 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
960B	  %23:gr32 = COPY %21:gr32, debug-location !579; fft3d.c:77:17
976B	  %23:gr32 = SHR32ri %23:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
1008B	  %23:gr32 = ADD32rr %23:gr32(tied-def 0), %21:gr32, implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
1040B	  %23:gr32 = SAR32r1 %23:gr32(tied-def 0), implicit-def dead $eflags, debug-location !579; fft3d.c:77:17
1056B	  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %23:gr32, debug-location !580 :: (store 4 into %ir.li); fft3d.c:77:12
1072B	  MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %23:gr32, debug-location !582 :: (store 4 into %ir.ku); fft3d.c:78:12
1088B	  MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !583 :: (store 4 into %ir.i); fft3d.c:80:16

1104B	bb.5.for.cond2:
	; predecessors: %bb.4, %bb.15
	  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

1120B	  %27:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !588 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
1152B	  %27:gr32 = DEC32r %27:gr32(tied-def 0), implicit-def dead $eflags, debug-location !589; fft3d.c:80:29
1168B	  CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %27:gr32, implicit-def $eflags, debug-location !590 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:23
1184B	  JCC_1 %bb.16, 15, implicit killed $eflags, debug-location !591; fft3d.c:80:9
1200B	  JMP_1 %bb.6, debug-location !591; fft3d.c:80:9

1216B	bb.6.for.body4:
	; predecessors: %bb.5
	  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

1232B	  %146:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !592 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
1248B	  %142:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !594 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
1264B	  %144:gr32 = COPY %146:gr32, debug-location !595; fft3d.c:81:21
1280B	  %144:gr32 = nsw IMUL32rr %144:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !595; fft3d.c:81:21
1296B	  MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %144:gr32, debug-location !596 :: (store 4 into %ir.i11); fft3d.c:81:17
1328B	  %144:gr32 = nsw ADD32rm %144:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !599 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:23
1344B	  MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %144:gr32, debug-location !600 :: (store 4 into %ir.i12); fft3d.c:82:17
1376B	  %146:gr32 = nsw IMUL32rm %146:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !603 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:21
1392B	  MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %146:gr32, debug-location !604 :: (store 4 into %ir.i21); fft3d.c:83:17
1424B	  %146:gr32 = nsw ADD32rr %146:gr32(tied-def 0), %142:gr32, implicit-def dead $eflags, debug-location !607; fft3d.c:84:23
1440B	  MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %146:gr32, debug-location !608 :: (store 4 into %ir.i22); fft3d.c:84:17
1456B	  CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !611 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:20
1472B	  JCC_1 %bb.8, 14, implicit killed $eflags, debug-location !612; fft3d.c:86:17
1488B	  JMP_1 %bb.7, debug-location !612; fft3d.c:86:17

1504B	bb.7.if.then9:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1520B	  %156:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
1536B	  %157:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !615 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
1552B	  %160:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !616 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
1584B	  %160:gr64_nosp = nsw ADD64rr %160:gr64_nosp(tied-def 0), %157:gr64, implicit-def dead $eflags, debug-location !617; fft3d.c:87:34
1616B	  %160:gr64_nosp = SHL64ri %160:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !613; fft3d.c:87:22
1632B	  %161:vr128 = MOVUPSrm %156:gr64, 1, %160:gr64_nosp, 0, $noreg, debug-location !613 :: (load 16 from %ir.32, align 8); fft3d.c:87:22
1648B	  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %161:vr128, debug-location !613 :: (store 16 into %ir.31); fft3d.c:87:22
1664B	  JMP_1 %bb.9, debug-location !618; fft3d.c:88:13

1680B	bb.8.if.else:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1696B	  %147:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
1712B	  %148:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
1728B	  %151:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
1760B	  %151:gr64_nosp = nsw ADD64rr %151:gr64_nosp(tied-def 0), %148:gr64, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
1792B	  %151:gr64_nosp = SHL64ri %151:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !619; fft3d.c:90:22
1808B	  %152:fr64 = MOVSDrm_alt %147:gr64, 1, %151:gr64_nosp, 0, $noreg, debug-location !619 :: (load 8 from %ir.real143); fft3d.c:90:22
1824B	  MOVSDmr %stack.24..compoundliteral, 1, $noreg, 0, $noreg, %152:fr64, debug-location !619 :: (store 8 into %ir.real1); fft3d.c:90:22
1840B	  %154:vr128 = MOVSDrm %147:gr64, 1, %151:gr64_nosp, 8, $noreg, debug-location !619 :: (load 8 from %ir.imag18); fft3d.c:90:22
1872B	  %154:vr128 = PXORrr %154:vr128(tied-def 0), %227:vr128, debug-location !619; fft3d.c:90:22
1888B	  MOVLPDmr %stack.24..compoundliteral, 1, $noreg, 8, $noreg, %154:vr128, debug-location !619 :: (store 8 into %ir.imag); fft3d.c:90:22
1904B	  %155:vr128 = MOVUPSrm %stack.24..compoundliteral, 1, $noreg, 0, $noreg, debug-location !619 :: (dereferenceable load 16 from %ir.42, align 8); fft3d.c:90:22
1920B	  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %155:vr128, debug-location !619 :: (store 16 into %ir.41); fft3d.c:90:22

1936B	bb.9.if.end20:
	; predecessors: %bb.8, %bb.7
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

1952B	  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !621 :: (store 4 into %ir.k); fft3d.c:92:20

1968B	bb.10.for.cond21:
	; predecessors: %bb.9, %bb.14
	  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

1984B	  %164:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !626 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
2016B	  %164:gr32 = DEC32r %164:gr32(tied-def 0), implicit-def dead $eflags, debug-location !627; fft3d.c:92:33
2032B	  CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %164:gr32, implicit-def $eflags, debug-location !628 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:27
2048B	  JCC_1 %bb.15, 15, implicit killed $eflags, debug-location !629; fft3d.c:92:13
2064B	  JMP_1 %bb.11, debug-location !629; fft3d.c:92:13

2080B	bb.11.for.body24:
	; predecessors: %bb.10
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2096B	  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !630 :: (store 4 into %ir.j); fft3d.c:93:24

2112B	bb.12.for.cond25:
	; predecessors: %bb.11, %bb.13
	  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

2128B	  %166:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !634 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
2144B	  CMP32rm %166:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !637 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:31
2160B	  JCC_1 %bb.14, 13, implicit killed $eflags, debug-location !638; fft3d.c:93:17
2176B	  JMP_1 %bb.13, debug-location !638; fft3d.c:93:17

2192B	bb.13.for.body27:
	; predecessors: %bb.12
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2208B	  %168:gr64 = MOV64rm %stack.7.x, 1, $noreg, 0, $noreg, debug-location !639 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
2224B	  %172:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !641 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
2240B	  %170:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !642 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
2272B	  %172:gr64_nosp = nsw ADD64rr %172:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !643; fft3d.c:94:33
2304B	  %172:gr64_nosp = nsw IMUL64rr %172:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
2336B	  %172:gr64_nosp = SHL64ri %172:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
2368B	  %172:gr64_nosp = ADD64rr %172:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !639; fft3d.c:94:27
2384B	  %176:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !644 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
2416B	  %176:gr64 = SHL64ri %176:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
2432B	  %177:vr128 = MOVUPSrm %176:gr64, 1, %172:gr64_nosp, 0, $noreg, debug-location !639 :: (load 16 from %ir.53, align 8); fft3d.c:94:27
2448B	  MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %177:vr128, debug-location !639 :: (store 16 into %ir.52); fft3d.c:94:27
2464B	  %180:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !646 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
2496B	  %180:gr64_nosp = nsw ADD64rr %180:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !648; fft3d.c:95:33
2528B	  %180:gr64_nosp = nsw IMUL64rr %180:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
2560B	  %180:gr64_nosp = SHL64ri %180:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
2592B	  %180:gr64_nosp = ADD64rr %180:gr64_nosp(tied-def 0), %168:gr64, implicit-def dead $eflags, debug-location !645; fft3d.c:95:27
2608B	  %183:vr128 = MOVUPSrm %176:gr64, 1, %180:gr64_nosp, 0, $noreg, debug-location !645 :: (load 16 from %ir.60, align 8); fft3d.c:95:27
2624B	  MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %183:vr128, debug-location !645 :: (store 16 into %ir.59); fft3d.c:95:27
2640B	  %187:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !650 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
2672B	  %187:gr64_nosp = nsw ADD64rr %187:gr64_nosp(tied-def 0), %170:gr64, implicit-def dead $eflags, debug-location !653; fft3d.c:96:29
2704B	  %187:gr64_nosp = IMUL64rr %187:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
2736B	  %187:gr64_nosp = ADD64rr %187:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !652; fft3d.c:96:21
2752B	  %192:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
2768B	  %193:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
2800B	  %192:fr64 = ADDSDrm %192:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
2816B	  MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, %192:fr64, debug-location !655 :: (store 8 into %ir.real448); fft3d.c:96:39
2848B	  %193:fr64 = ADDSDrm %193:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !655 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
2864B	  MOVSDmr %stack.25..compoundliteral43, 1, $noreg, 8, $noreg, %193:fr64, debug-location !655 :: (store 8 into %ir.imag48); fft3d.c:96:39
2880B	  %194:vr128 = MOVUPSrm %stack.25..compoundliteral43, 1, $noreg, 0, $noreg, debug-location !655 :: (dereferenceable load 16 from %ir.69, align 8); fft3d.c:96:39
2896B	  MOVUPSmr %176:gr64, 1, %187:gr64_nosp, 0, $noreg, %194:vr128, debug-location !655 :: (store 16 into %ir.68, align 8); fft3d.c:96:39
2912B	  %195:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !656 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
2928B	  %198:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !657 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
2960B	  %198:gr64_nosp = nsw ADD64rr %198:gr64_nosp(tied-def 0), %195:gr64, implicit-def dead $eflags, debug-location !659; fft3d.c:97:29
2992B	  %198:gr64_nosp = IMUL64rr %198:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
3024B	  %198:gr64_nosp = ADD64rr %198:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
3040B	  %201:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !660 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
3072B	  %201:gr64 = SHL64ri %201:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !658; fft3d.c:97:21
3088B	  %206:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6215, align 16); fft3d.c:97:39
3104B	  %205:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag66); fft3d.c:97:39
3136B	  %206:fr64 = SUBSDrm %206:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real6316, align 16); fft3d.c:97:39
3152B	  MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real6114); fft3d.c:97:39
3184B	  %205:fr64 = SUBSDrm %205:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
3200B	  MOVSDmr %stack.27..compoundliteral60, 1, $noreg, 8, $noreg, %205:fr64, debug-location !661 :: (store 8 into %ir.imag65); fft3d.c:97:39
3232B	  %206:fr64 = MULSDrm %206:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real5913, align 16); fft3d.c:97:39
3248B	  %207:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag71); fft3d.c:97:39
3264B	  %209:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7419, align 16); fft3d.c:97:39
3296B	  %209:fr64 = SUBSDrm %209:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real7520, align 16); fft3d.c:97:39
3312B	  MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 0, $noreg, %209:fr64, debug-location !661 :: (store 8 into %ir.real7318); fft3d.c:97:39
3328B	  %212:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag78); fft3d.c:97:39
3360B	  %212:fr64 = SUBSDrm %212:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag79); fft3d.c:97:39
3376B	  MOVSDmr %stack.28..compoundliteral72, 1, $noreg, 8, $noreg, %212:fr64, debug-location !661 :: (store 8 into %ir.imag77); fft3d.c:97:39
3408B	  %212:fr64 = MULSDrr %212:fr64(tied-def 0), %207:fr64, debug-location !661; fft3d.c:97:39
3440B	  %206:fr64 = SUBSDrr %206:fr64(tied-def 0), %212:fr64, debug-location !661; fft3d.c:97:39
3456B	  MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, %206:fr64, debug-location !661 :: (store 8 into %ir.real5812); fft3d.c:97:39
3472B	  %214:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
3488B	  %216:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8823, align 16); fft3d.c:97:39
3520B	  %216:fr64 = SUBSDrm %216:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real8924, align 16); fft3d.c:97:39
3536B	  MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 0, $noreg, %216:fr64, debug-location !661 :: (store 8 into %ir.real8722); fft3d.c:97:39
3552B	  %219:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
3584B	  %219:fr64 = SUBSDrm %219:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag93); fft3d.c:97:39
3600B	  MOVSDmr %stack.29..compoundliteral86, 1, $noreg, 8, $noreg, %219:fr64, debug-location !661 :: (store 8 into %ir.imag91); fft3d.c:97:39
3632B	  %219:fr64 = MULSDrr %219:fr64(tied-def 0), %214:fr64, debug-location !661; fft3d.c:97:39
3648B	  %221:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
3680B	  %221:fr64 = SUBSDrm %221:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
3696B	  %225:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag97)
3728B	  %225:fr64 = MULSDrr %225:fr64(tied-def 0), %221:fr64, debug-location !661; fft3d.c:97:39
3760B	  %225:fr64 = ADDSDrr %225:fr64(tied-def 0), %219:fr64, debug-location !661; fft3d.c:97:39
3776B	  MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 0, $noreg, %221:fr64, debug-location !661 :: (store 8 into %ir.real9925); fft3d.c:97:39
3792B	  %224:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
3824B	  %224:fr64 = SUBSDrm %224:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !661 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
3840B	  MOVSDmr %stack.30..compoundliteral98, 1, $noreg, 8, $noreg, %224:fr64, debug-location !661 :: (store 8 into %ir.imag103); fft3d.c:97:39
3856B	  MOVSDmr %stack.26..compoundliteral57, 1, $noreg, 8, $noreg, %225:fr64, debug-location !661 :: (store 8 into %ir.imag84); fft3d.c:97:39
3872B	  %226:vr128 = MOVUPSrm %stack.26..compoundliteral57, 1, $noreg, 0, $noreg, debug-location !661 :: (dereferenceable load 16 from %ir.98, align 8); fft3d.c:97:39
3888B	  MOVUPSmr %201:gr64, 1, %198:gr64_nosp, 0, $noreg, %226:vr128, debug-location !661 :: (store 16 into %ir.97, align 8); fft3d.c:97:39
3904B	  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !662 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:93:40
3920B	  JMP_1 %bb.12, debug-location !663; fft3d.c:93:17

3936B	bb.14.for.end:
	; predecessors: %bb.12
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

3952B	  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !666 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:92:39
3968B	  JMP_1 %bb.10, debug-location !667; fft3d.c:92:13

3984B	bb.15.for.end112:
	; predecessors: %bb.10
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

4000B	  INC32m %stack.8.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !670 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:80:35
4016B	  JMP_1 %bb.5, debug-location !671; fft3d.c:80:9

4032B	bb.16.for.end115:
	; predecessors: %bb.5
	  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

4048B	  %29:gr32 = MOV32rm %stack.10.l, 1, $noreg, 0, $noreg, debug-location !674 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
4064B	  CMP32rm %29:gr32, %stack.1.m.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !677 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:15
4080B	  JCC_1 %bb.23, 5, implicit killed $eflags, debug-location !678; fft3d.c:102:13
4096B	  JMP_1 %bb.17, debug-location !678; fft3d.c:102:13

4112B	bb.17.if.then117:
	; predecessors: %bb.16
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

4128B	  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !679 :: (store 4 into %ir.k); fft3d.c:103:20

4144B	bb.18.for.cond118:
	; predecessors: %bb.17, %bb.22
	  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

4160B	  %126:gr32 = MOV32rm %stack.14.k, 1, $noreg, 0, $noreg, debug-location !683 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
4176B	  CMP32rm %126:gr32, %stack.3.n.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !686 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:27
4192B	  JCC_1 %bb.35, 13, implicit killed $eflags, debug-location !687; fft3d.c:103:13
4208B	  JMP_1 %bb.19, debug-location !687; fft3d.c:103:13

4224B	bb.19.for.body120:
	; predecessors: %bb.18
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

4240B	  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !688 :: (store 4 into %ir.j); fft3d.c:104:24

4256B	bb.20.for.cond121:
	; predecessors: %bb.19, %bb.21
	  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

4272B	  %128:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !692 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
4288B	  CMP32rm %128:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !695 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:31
4304B	  JCC_1 %bb.22, 13, implicit killed $eflags, debug-location !696; fft3d.c:104:17
4320B	  JMP_1 %bb.21, debug-location !696; fft3d.c:104:17

4336B	bb.21.for.body123:
	; predecessors: %bb.20
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

4352B	  %139:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !699 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
4368B	  %132:gr64_nosp = COPY %139:gr64_nosp, debug-location !697; fft3d.c:105:21
4384B	  %132:gr64_nosp = nsw IMUL64rr %132:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
4416B	  %132:gr64_nosp = SHL64ri %132:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
4448B	  %132:gr64_nosp = ADD64rm %132:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !697 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
4464B	  %135:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
4496B	  %135:gr64 = SHL64ri %135:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !697; fft3d.c:105:21
4528B	  %139:gr64_nosp = IMUL64rr %139:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
4560B	  %139:gr64_nosp = ADD64rr %139:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !702; fft3d.c:105:31
4576B	  %140:vr128 = MOVUPSrm %135:gr64, 1, %139:gr64_nosp, 0, $noreg, debug-location !702 :: (load 16 from %ir.115, align 8); fft3d.c:105:31
4592B	  MOVUPSmr %135:gr64, 1, %132:gr64_nosp, 0, $noreg, %140:vr128, debug-location !702 :: (store 16 into %ir.114, align 8); fft3d.c:105:31
4608B	  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !704 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:104:40
4624B	  JMP_1 %bb.20, debug-location !705; fft3d.c:104:17

4640B	bb.22.for.end134:
	; predecessors: %bb.20
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

4656B	  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !708 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:103:33
4672B	  JMP_1 %bb.18, debug-location !709; fft3d.c:103:13

4688B	bb.23.if.else138:
	; predecessors: %bb.16
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

4704B	  %32:gr32 = MOV32rm %stack.17.lj, 1, $noreg, 0, $noreg, debug-location !712 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
4720B	  MOV32mr %stack.18.lk, 1, $noreg, 0, $noreg, %32:gr32, debug-location !714 :: (store 4 into %ir.lk); fft3d.c:110:16
4752B	  %32:gr32 = ADD32rr %32:gr32(tied-def 0), %32:gr32, implicit-def dead $eflags, debug-location !716; fft3d.c:111:20
4768B	  MOV32mr %stack.17.lj, 1, $noreg, 0, $noreg, %32:gr32, debug-location !717 :: (store 4 into %ir.lj); fft3d.c:111:16
4784B	  %33:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !718 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
4800B	  %35:gr32 = COPY %33:gr32, debug-location !719; fft3d.c:112:21
4816B	  %35:gr32 = SHR32ri %35:gr32(tied-def 0), 31, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
4848B	  %35:gr32 = ADD32rr %35:gr32(tied-def 0), %33:gr32, implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
4880B	  %35:gr32 = SAR32r1 %35:gr32(tied-def 0), implicit-def dead $eflags, debug-location !719; fft3d.c:112:21
4896B	  MOV32mr %stack.16.li, 1, $noreg, 0, $noreg, %35:gr32, debug-location !720 :: (store 4 into %ir.li); fft3d.c:112:16
4912B	  MOV32mr %stack.19.ku, 1, $noreg, 0, $noreg, %35:gr32, debug-location !722 :: (store 4 into %ir.ku); fft3d.c:113:16
4928B	  MOV32mi %stack.8.i, 1, $noreg, 0, $noreg, 0, debug-location !723 :: (store 4 into %ir.i); fft3d.c:115:20

4944B	bb.24.for.cond141:
	; predecessors: %bb.23, %bb.34
	  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

4960B	  %39:gr32 = MOV32rm %stack.16.li, 1, $noreg, 0, $noreg, debug-location !728 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
4992B	  %39:gr32 = DEC32r %39:gr32(tied-def 0), implicit-def dead $eflags, debug-location !729; fft3d.c:115:33
5008B	  CMP32mr %stack.8.i, 1, $noreg, 0, $noreg, %39:gr32, implicit-def $eflags, debug-location !730 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:27
5024B	  JCC_1 %bb.35, 15, implicit killed $eflags, debug-location !731; fft3d.c:115:13
5040B	  JMP_1 %bb.25, debug-location !731; fft3d.c:115:13

5056B	bb.25.for.body144:
	; predecessors: %bb.24
	  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

5072B	  %46:gr32 = MOV32rm %stack.8.i, 1, $noreg, 0, $noreg, debug-location !732 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
5088B	  %42:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !734 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
5104B	  %44:gr32 = COPY %46:gr32, debug-location !735; fft3d.c:116:25
5120B	  %44:gr32 = nsw IMUL32rr %44:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !735; fft3d.c:116:25
5136B	  MOV32mr %stack.20.i11, 1, $noreg, 0, $noreg, %44:gr32, debug-location !736 :: (store 4 into %ir.i11); fft3d.c:116:21
5168B	  %44:gr32 = nsw ADD32rm %44:gr32(tied-def 0), %stack.15.n1, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !739 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:27
5184B	  MOV32mr %stack.21.i12, 1, $noreg, 0, $noreg, %44:gr32, debug-location !740 :: (store 4 into %ir.i12); fft3d.c:117:21
5216B	  %46:gr32 = nsw IMUL32rm %46:gr32(tied-def 0), %stack.17.lj, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !743 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:25
5232B	  MOV32mr %stack.22.i21, 1, $noreg, 0, $noreg, %46:gr32, debug-location !744 :: (store 4 into %ir.i21); fft3d.c:118:21
5264B	  %46:gr32 = nsw ADD32rr %46:gr32(tied-def 0), %42:gr32, implicit-def dead $eflags, debug-location !747; fft3d.c:119:27
5280B	  MOV32mr %stack.23.i22, 1, $noreg, 0, $noreg, %46:gr32, debug-location !748 :: (store 4 into %ir.i22); fft3d.c:119:21
5296B	  CMP32mi8 %stack.0.is.addr, 1, $noreg, 0, $noreg, 0, implicit-def $eflags, debug-location !751 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:24
5312B	  JCC_1 %bb.27, 14, implicit killed $eflags, debug-location !752; fft3d.c:121:21
5328B	  JMP_1 %bb.26, debug-location !752; fft3d.c:121:21

5344B	bb.26.if.then150:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

5360B	  %56:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !753 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
5376B	  %57:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
5392B	  %60:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !756 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
5424B	  %60:gr64_nosp = nsw ADD64rr %60:gr64_nosp(tied-def 0), %57:gr64, implicit-def dead $eflags, debug-location !757; fft3d.c:122:38
5456B	  %60:gr64_nosp = SHL64ri %60:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !753; fft3d.c:122:26
5472B	  %61:vr128 = MOVUPSrm %56:gr64, 1, %60:gr64_nosp, 0, $noreg, debug-location !753 :: (load 16 from %ir.137, align 8); fft3d.c:122:26
5488B	  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %61:vr128, debug-location !753 :: (store 16 into %ir.136); fft3d.c:122:26
5504B	  JMP_1 %bb.28, debug-location !758; fft3d.c:123:17

5520B	bb.27.if.else154:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

5536B	  %47:gr64 = MOV64rm %fixed-stack.0, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
5552B	  %48:gr64 = MOVSX64rm32 %stack.19.ku, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
5568B	  %51:gr64_nosp = MOVSX64rm32 %stack.8.i, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
5600B	  %51:gr64_nosp = nsw ADD64rr %51:gr64_nosp(tied-def 0), %48:gr64, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
5632B	  %51:gr64_nosp = SHL64ri %51:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !759; fft3d.c:125:26
5648B	  %52:fr64 = MOVSDrm_alt %47:gr64, 1, %51:gr64_nosp, 0, $noreg, debug-location !759 :: (load 8 from %ir.real16032); fft3d.c:125:26
5664B	  MOVSDmr %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, %52:fr64, debug-location !759 :: (store 8 into %ir.real15630); fft3d.c:125:26
5680B	  %54:vr128 = MOVSDrm %47:gr64, 1, %51:gr64_nosp, 8, $noreg, debug-location !759 :: (load 8 from %ir.imag165); fft3d.c:125:26
5712B	  %54:vr128 = PXORrr %54:vr128(tied-def 0), %227:vr128, debug-location !759; fft3d.c:125:26
5728B	  MOVLPDmr %stack.31..compoundliteral155, 1, $noreg, 8, $noreg, %54:vr128, debug-location !759 :: (store 8 into %ir.imag161); fft3d.c:125:26
5744B	  %55:vr128 = MOVUPSrm %stack.31..compoundliteral155, 1, $noreg, 0, $noreg, debug-location !759 :: (dereferenceable load 16 from %ir.147, align 8); fft3d.c:125:26
5760B	  MOVAPSmr %stack.11.u1, 1, $noreg, 0, $noreg, %55:vr128, debug-location !759 :: (store 16 into %ir.146); fft3d.c:125:26

5776B	bb.28.if.end167:
	; predecessors: %bb.27, %bb.26
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

5792B	  MOV32mi %stack.14.k, 1, $noreg, 0, $noreg, 0, debug-location !761 :: (store 4 into %ir.k); fft3d.c:127:24

5808B	bb.29.for.cond168:
	; predecessors: %bb.28, %bb.33
	  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

5824B	  %64:gr32 = MOV32rm %stack.18.lk, 1, $noreg, 0, $noreg, debug-location !766 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
5856B	  %64:gr32 = DEC32r %64:gr32(tied-def 0), implicit-def dead $eflags, debug-location !767; fft3d.c:127:37
5872B	  CMP32mr %stack.14.k, 1, $noreg, 0, $noreg, %64:gr32, implicit-def $eflags, debug-location !768 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:31
5888B	  JCC_1 %bb.34, 15, implicit killed $eflags, debug-location !769; fft3d.c:127:17
5904B	  JMP_1 %bb.30, debug-location !769; fft3d.c:127:17

5920B	bb.30.for.body171:
	; predecessors: %bb.29
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

5936B	  MOV32mi %stack.9.j, 1, $noreg, 0, $noreg, 0, debug-location !770 :: (store 4 into %ir.j); fft3d.c:128:28

5952B	bb.31.for.cond172:
	; predecessors: %bb.30, %bb.32
	  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

5968B	  %66:gr32 = MOV32rm %stack.9.j, 1, $noreg, 0, $noreg, debug-location !774 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
5984B	  CMP32rm %66:gr32, %stack.2.vlen.addr, 1, $noreg, 0, $noreg, implicit-def $eflags, debug-location !777 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:35
6000B	  JCC_1 %bb.33, 13, implicit killed $eflags, debug-location !778; fft3d.c:128:21
6016B	  JMP_1 %bb.32, debug-location !778; fft3d.c:128:21

6032B	bb.32.for.body174:
	; predecessors: %bb.31
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

6048B	  %72:gr64_nosp = MOVSX64rm32 %stack.20.i11, 1, $noreg, 0, $noreg, debug-location !779 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
6064B	  %69:gr64 = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !781 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
6096B	  %72:gr64_nosp = nsw ADD64rr %72:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !783; fft3d.c:129:39
6128B	  %72:gr64_nosp = IMUL64rr %72:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
6160B	  %72:gr64_nosp = ADD64rr %72:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !782; fft3d.c:129:31
6176B	  %76:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !784 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
6208B	  %76:gr64 = SHL64ri %76:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
6224B	  %77:vr128 = MOVUPSrm %76:gr64, 1, %72:gr64_nosp, 0, $noreg, debug-location !782 :: (load 16 from %ir.156, align 8); fft3d.c:129:31
6240B	  MOVAPSmr %stack.12.x11, 1, $noreg, 0, $noreg, %77:vr128, debug-location !782 :: (store 16 into %ir.155); fft3d.c:129:31
6256B	  %80:gr64_nosp = MOVSX64rm32 %stack.21.i12, 1, $noreg, 0, $noreg, debug-location !785 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
6288B	  %80:gr64_nosp = nsw ADD64rr %80:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !788; fft3d.c:130:39
6320B	  %80:gr64_nosp = IMUL64rr %80:gr64_nosp(tied-def 0), %186:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
6352B	  %80:gr64_nosp = ADD64rr %80:gr64_nosp(tied-def 0), %188:gr64, implicit-def dead $eflags, debug-location !787; fft3d.c:130:31
6368B	  %82:vr128 = MOVUPSrm %76:gr64, 1, %80:gr64_nosp, 0, $noreg, debug-location !787 :: (load 16 from %ir.161, align 8); fft3d.c:130:31
6384B	  MOVAPSmr %stack.13.x21, 1, $noreg, 0, $noreg, %82:vr128, debug-location !787 :: (store 16 into %ir.160); fft3d.c:130:31
6400B	  %85:gr64_nosp = MOVSX64rm32 %stack.22.i21, 1, $noreg, 0, $noreg, debug-location !791 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
6432B	  %85:gr64_nosp = nsw ADD64rr %85:gr64_nosp(tied-def 0), %69:gr64, implicit-def dead $eflags, debug-location !793; fft3d.c:131:31
6464B	  %85:gr64_nosp = nsw IMUL64rr %85:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
6496B	  %85:gr64_nosp = SHL64ri %85:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !790; fft3d.c:131:25
6528B	  %85:gr64_nosp = ADD64rm %85:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !790 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
6544B	  %90:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
6560B	  %91:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
6592B	  %90:fr64 = ADDSDrm %90:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
6608B	  MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, %90:fr64, debug-location !795 :: (store 8 into %ir.real19137); fft3d.c:131:41
6640B	  %91:fr64 = ADDSDrm %91:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !795 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
6656B	  MOVSDmr %stack.32..compoundliteral190, 1, $noreg, 8, $noreg, %91:fr64, debug-location !795 :: (store 8 into %ir.imag195); fft3d.c:131:41
6672B	  %92:vr128 = MOVUPSrm %stack.32..compoundliteral190, 1, $noreg, 0, $noreg, debug-location !795 :: (dereferenceable load 16 from %ir.172, align 8); fft3d.c:131:41
6688B	  MOVUPSmr %76:gr64, 1, %85:gr64_nosp, 0, $noreg, %92:vr128, debug-location !795 :: (store 16 into %ir.171, align 8); fft3d.c:131:41
6704B	  %93:gr64 = MOVSX64rm32 %stack.23.i22, 1, $noreg, 0, $noreg, debug-location !797 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
6720B	  %96:gr64_nosp = MOVSX64rm32 %stack.14.k, 1, $noreg, 0, $noreg, debug-location !798 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
6752B	  %96:gr64_nosp = nsw ADD64rr %96:gr64_nosp(tied-def 0), %93:gr64, implicit-def dead $eflags, debug-location !799; fft3d.c:132:31
6784B	  %96:gr64_nosp = nsw IMUL64rr %96:gr64_nosp(tied-def 0), %0:gr64_with_sub_8bit, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
6816B	  %96:gr64_nosp = SHL64ri %96:gr64_nosp(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
6848B	  %96:gr64_nosp = ADD64rm %96:gr64_nosp(tied-def 0), %stack.7.x, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !796 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
6864B	  %100:gr64 = MOVSX64rm32 %stack.9.j, 1, $noreg, 0, $noreg, debug-location !800 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
6896B	  %100:gr64 = SHL64ri %100:gr64(tied-def 0), 4, implicit-def dead $eflags, debug-location !796; fft3d.c:132:25
6912B	  %105:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20944, align 16); fft3d.c:132:41
6928B	  %104:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag213); fft3d.c:132:41
6960B	  %105:fr64 = SUBSDrm %105:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real21045, align 16); fft3d.c:132:41
6976B	  MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20843); fft3d.c:132:41
7008B	  %104:fr64 = SUBSDrm %104:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
7024B	  MOVSDmr %stack.34..compoundliteral207, 1, $noreg, 8, $noreg, %104:fr64, debug-location !801 :: (store 8 into %ir.imag212); fft3d.c:132:41
7056B	  %105:fr64 = MULSDrm %105:fr64(tied-def 0), %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real20642, align 16); fft3d.c:132:41
7072B	  %106:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
7088B	  %108:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22148, align 16); fft3d.c:132:41
7120B	  %108:fr64 = SUBSDrm %108:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real22249, align 16); fft3d.c:132:41
7136B	  MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 0, $noreg, %108:fr64, debug-location !801 :: (store 8 into %ir.real22047); fft3d.c:132:41
7152B	  %111:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag225); fft3d.c:132:41
7184B	  %111:fr64 = SUBSDrm %111:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag226); fft3d.c:132:41
7200B	  MOVSDmr %stack.35..compoundliteral219, 1, $noreg, 8, $noreg, %111:fr64, debug-location !801 :: (store 8 into %ir.imag224); fft3d.c:132:41
7232B	  %111:fr64 = MULSDrr %111:fr64(tied-def 0), %106:fr64, debug-location !801; fft3d.c:132:41
7264B	  %105:fr64 = SUBSDrr %105:fr64(tied-def 0), %111:fr64, debug-location !801; fft3d.c:132:41
7280B	  MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, %105:fr64, debug-location !801 :: (store 8 into %ir.real20541); fft3d.c:132:41
7296B	  %113:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
7312B	  %115:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
7344B	  %115:fr64 = SUBSDrm %115:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
7360B	  MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 0, $noreg, %115:fr64, debug-location !801 :: (store 8 into %ir.real23451); fft3d.c:132:41
7376B	  %118:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
7408B	  %118:fr64 = SUBSDrm %118:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag240); fft3d.c:132:41
7424B	  MOVSDmr %stack.36..compoundliteral233, 1, $noreg, 8, $noreg, %118:fr64, debug-location !801 :: (store 8 into %ir.imag238); fft3d.c:132:41
7456B	  %118:fr64 = MULSDrr %118:fr64(tied-def 0), %113:fr64, debug-location !801; fft3d.c:132:41
7472B	  %120:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
7504B	  %120:fr64 = SUBSDrm %120:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
7520B	  %124:fr64 = MOVSDrm_alt %stack.11.u1, 1, $noreg, 8, $noreg :: (dereferenceable load 8 from %ir.imag244)
7552B	  %124:fr64 = MULSDrr %124:fr64(tied-def 0), %120:fr64, debug-location !801; fft3d.c:132:41
7584B	  %124:fr64 = ADDSDrr %124:fr64(tied-def 0), %118:fr64, debug-location !801; fft3d.c:132:41
7600B	  MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 0, $noreg, %120:fr64, debug-location !801 :: (store 8 into %ir.real24654); fft3d.c:132:41
7616B	  %123:fr64 = MOVSDrm_alt %stack.12.x11, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
7648B	  %123:fr64 = SUBSDrm %123:fr64(tied-def 0), %stack.13.x21, 1, $noreg, 8, $noreg, debug-location !801 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
7664B	  MOVSDmr %stack.37..compoundliteral245, 1, $noreg, 8, $noreg, %123:fr64, debug-location !801 :: (store 8 into %ir.imag250); fft3d.c:132:41
7680B	  MOVSDmr %stack.33..compoundliteral204, 1, $noreg, 8, $noreg, %124:fr64, debug-location !801 :: (store 8 into %ir.imag231); fft3d.c:132:41
7696B	  %125:vr128 = MOVUPSrm %stack.33..compoundliteral204, 1, $noreg, 0, $noreg, debug-location !801 :: (dereferenceable load 16 from %ir.203, align 8); fft3d.c:132:41
7712B	  MOVUPSmr %100:gr64, 1, %96:gr64_nosp, 0, $noreg, %125:vr128, debug-location !801 :: (store 16 into %ir.202, align 8); fft3d.c:132:41
7728B	  INC32m %stack.9.j, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !802 :: (store 4 into %ir.j), (dereferenceable load 4 from %ir.j); fft3d.c:128:44
7744B	  JMP_1 %bb.31, debug-location !803; fft3d.c:128:21

7760B	bb.33.for.end259:
	; predecessors: %bb.31
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

7776B	  INC32m %stack.14.k, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !806 :: (store 4 into %ir.k), (dereferenceable load 4 from %ir.k); fft3d.c:127:43
7792B	  JMP_1 %bb.29, debug-location !807; fft3d.c:127:17

7808B	bb.34.for.end262:
	; predecessors: %bb.29
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

7824B	  INC32m %stack.8.i, 1, $noreg, 0, $noreg, implicit-def dead $eflags, debug-location !810 :: (store 4 into %ir.i), (dereferenceable load 4 from %ir.i); fft3d.c:115:39
7840B	  JMP_1 %bb.24, debug-location !811; fft3d.c:115:13

7856B	bb.35.if.end266:
	; predecessors: %bb.24, %bb.18
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

7872B	  ADD32mi8 %stack.10.l, 1, $noreg, 0, $noreg, 2, implicit-def dead $eflags, debug-location !814 :: (store 4 into %ir.l), (dereferenceable load 4 from %ir.l); fft3d.c:74:27
7888B	  JMP_1 %bb.3, debug-location !815; fft3d.c:74:5

7904B	bb.36.for.end269:
	; predecessors: %bb.3
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

7920B	  CMP32mi8 $rip, 1, $noreg, @timers_enabled, $noreg, 0, implicit-def $eflags, debug-location !818 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
7936B	  JCC_1 %bb.38, 4, implicit killed $eflags, debug-location !820; fft3d.c:138:9
7952B	  JMP_1 %bb.37, debug-location !820; fft3d.c:138:9

7968B	bb.37.if.then271:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

7984B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
8016B	  $edi = MOV32ri 4, debug-location !821; fft3d.c:139:9
8032B	  CALL64pcrel32 @timer_stop, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit-def $rsp, implicit-def $ssp, debug-location !821; fft3d.c:139:9
8048B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
8064B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9
8080B	  PCN_STACKMAP 1, 0, implicit-def dead early-clobber $r11, debug-location !821; fft3d.c:139:9
8096B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !821; fft3d.c:139:9

8112B	bb.38.if.end272:
	; predecessors: %bb.36, %bb.37

8128B	  RET 0, debug-location !822; fft3d.c:140:1

# End machine code for function Swarztrauber.


Before MISched:
# Machine code for function main: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=8, align=8, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=1, align=4, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: size=8, align=8, at location [SP+8]
  fi#7: size=4, align=4, at location [SP+8]
  fi#8: size=8, align=8, at location [SP+8]
Constant Pool:
  cp#0: 0x4180000000000000, align=8
  cp#1: 7.196410e+00, align=8
  cp#2: 1.481570e+01, align=8
  cp#3: 7.211130e+00, align=8
  cp#4: 5.235180e+00, align=8
  cp#5: 0x4040C6F7A0B5ED8D, align=8
Function Live Ins: $edi in %0, $rsi in %1

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $edi, $rsi
  %1:gr64 = COPY $rsi
  %0:gr32 = COPY $edi
  MOV32mi %stack.0.retval, 1, $noreg, 0, $noreg, 0 :: (store 4 into %ir.retval)
  MOV32mr %stack.1.argc.addr, 1, $noreg, 0, $noreg, %0:gr32 :: (store 4 into %ir.argc.addr)
  MOV64mr %stack.2.argv.addr, 1, $noreg, 0, $noreg, %1:gr64 :: (store 8 into %ir.argv.addr)
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
  $rsi = LEA64r $rip, 1, $noreg, @mainft__str_1_r_, $noreg, debug-location !48; mainft.c:62:15
  CALL64pcrel32 @fopen, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $rsi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, debug-location !48; mainft.c:62:15
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !50; mainft.c:62:13
  PCN_STACKMAP 0, 0, 0, %stack.4.Class, 0, 0, %stack.8.fp, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !50 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.8.fp), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:62:13
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !50; mainft.c:62:13
  %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
  MOV64mr %stack.8.fp, 1, $noreg, 0, $noreg, %4:gr64, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  TEST64rr %4:gr64, %4:gr64, implicit-def $eflags, debug-location !51; mainft.c:62:41
  JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !52; mainft.c:62:9
  JMP_1 %bb.1, debug-location !52; mainft.c:62:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %5:gr32 = MOV32ri 1
  MOV32mr $rip, 1, $noreg, @timers_enabled, $noreg, %5:gr32, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  %6:gr64 = MOV64rm %stack.8.fp, 1, $noreg, 0, $noreg, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
  $rdi = COPY %6:gr64, debug-location !56; mainft.c:64:9
  CALL64pcrel32 @fclose, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !56; mainft.c:64:9
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !57; mainft.c:65:5
  PCN_STACKMAP 1, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %6:gr64, implicit-def dead early-clobber $r11, debug-location !57 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:65:5
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !57; mainft.c:65:5
  JMP_1 %bb.3, debug-location !57; mainft.c:65:5

bb.2.if.else:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  MOV32mi $rip, 1, $noreg, @timers_enabled, $noreg, 0, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

bb.3.if.end:
; predecessors: %bb.2, %bb.1
  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

  %8:gr32 = MOV32ri 20
  MOV32mr %stack.3.niter, 1, $noreg, 0, $noreg, %8:gr32, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !61; mainft.c:72:5
  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !61; mainft.c:72:5
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
  PCN_STACKMAP 2, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !62 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:73:5
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
  $esi = MOV32ri 512, debug-location !62; mainft.c:73:5
  $edx = MOV32ri 256, debug-location !62; mainft.c:73:5
  $ecx = MOV32ri 256, debug-location !62; mainft.c:73:5
  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !62; mainft.c:73:5
  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !62; mainft.c:73:5
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !63; mainft.c:74:49
  PCN_STACKMAP 3, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !63 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:74:49
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !63; mainft.c:74:49
  %17:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !64; mainft.c:74:5
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
  $esi = COPY %17:gr32, debug-location !64; mainft.c:74:5
  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !64; mainft.c:74:5
  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !64; mainft.c:74:5
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !64; mainft.c:74:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
  PCN_STACKMAP 4, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %17:gr32, implicit-def dead early-clobber $r11, debug-location !65 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:75:5
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !65; mainft.c:75:5
  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !65; mainft.c:75:5
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
  PCN_STACKMAP 5, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !66 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:13
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
  CALL64pcrel32 @getclass, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp, implicit-def $al, debug-location !66; mainft.c:77:13
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !67; mainft.c:77:11
  PCN_STACKMAP 6, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !67 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:11
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !67; mainft.c:77:11
  %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
  MOV8mr %stack.4.Class, 1, $noreg, 0, $noreg, %22:gr8, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  %23:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
  $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5
  $rsi = LEA64r %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  $rdx = LEA64r %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  CALL64pcrel32 @appft, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $rsi, implicit killed $rdx, implicit-def $rsp, implicit-def $ssp, debug-location !69; mainft.c:79:5
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !70; mainft.c:81:9
  PCN_STACKMAP 7, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %23:gr32, implicit-def dead early-clobber $r11, debug-location !70 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:81:9
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !70; mainft.c:81:9
  %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  %27:fr64 = FsFLD0SD
  UCOMISDrr %26:fr64, %27:fr64, implicit-def $eflags, debug-location !73; mainft.c:81:9
  JCC_1 %bb.4, 5, implicit $eflags, debug-location !73; mainft.c:81:9
  JCC_1 %bb.4, 10, implicit killed $eflags, debug-location !73; mainft.c:81:9
  JMP_1 %bb.5, debug-location !73; mainft.c:81:9

bb.4.if.then8:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !74; mainft.c:83:39
  %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
  $xmm0 = COPY %28:fr64, debug-location !74; mainft.c:83:39
  CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !74; mainft.c:83:39
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !74; mainft.c:83:39
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !76; mainft.c:83:37
  PCN_STACKMAP 8, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !76 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:83:37
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !76; mainft.c:83:37
  %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
  %31:fr64 = MULSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.1, $noreg, debug-location !76 :: (load 8 from constant-pool); mainft.c:83:37
  %31:fr64 = ADDSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.2, $noreg, debug-location !77 :: (load 8 from constant-pool); mainft.c:83:27
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
  $xmm0 = COPY %28:fr64, debug-location !78; mainft.c:84:40
  CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !78; mainft.c:84:40
  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !79; mainft.c:84:38
  PCN_STACKMAP 9, 0, 0, %stack.4.Class, 0, %31:fr64, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !79 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:84:38
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !79; mainft.c:84:38
  %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
  %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
  %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
  %37:fr64 = CVTSI2SDrm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
  %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
  %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
  %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
  MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  JMP_1 %bb.6, debug-location !88; mainft.c:86:5

bb.5.if.else16:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  MOV64mi32 %stack.6.mflops, 1, $noreg, 0, $noreg, 0, debug-location !89 :: (store 8 into %ir.mflops); mainft.c:88:16

bb.6.if.end17:
; predecessors: %bb.5, %bb.4

  %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  %42:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  %43:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  %44:fr64 = MOVSDrm_alt %stack.6.mflops, 1, $noreg, 0, $noreg, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  %45:gr32 = MOV32rm %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  ADJCALLSTACKDOWN64 88, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
  %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
  %48:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_15__O3__mcmod, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
  %49:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_14__g__Wall__, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
  %50:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_13__I___commo, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
  %51:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_12__lm_, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
  %52:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_11___CC__, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
  %53:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_10_gcc_, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
  %54:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_9_03_Nov_201, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
  %55:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_8_3_3_1_, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  %56:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_7___________, $noreg, debug-location !96; mainft.c:91:5
  MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_6_FT_, $noreg, debug-location !96; mainft.c:91:5
  $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
  $edx = MOV32ri 512, debug-location !96; mainft.c:91:5
  $ecx = MOV32ri 256, debug-location !96; mainft.c:91:5
  $r8d = MOV32ri 256, debug-location !96; mainft.c:91:5
  $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
  $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
  $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5
  CALL64pcrel32 @print_results, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $r8d, implicit killed $r9d, implicit killed $xmm0, implicit killed $xmm1, implicit-def $rsp, implicit-def $ssp, debug-location !96; mainft.c:91:5
  ADJCALLSTACKUP64 88, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !97; mainft.c:95:5
  PCN_STACKMAP 10, 0, %40.sub_8bit:gr32, %42:gr32, %43:fr64, %44:fr64, %45:gr32, implicit-def dead early-clobber $r11, debug-location !97; mainft.c:95:5
  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !97; mainft.c:95:5
  $eax = MOV32r0 implicit-def dead $eflags, debug-location !98; mainft.c:98:5
  RET 0, killed $eax, debug-location !98; mainft.c:98:5

# End machine code for function main.

********** MI Scheduling **********
main:%bb.0 entry
  From: %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
    To: JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !52; mainft.c:62:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=0 Reg=%4
    SU(1): Data Latency=0 Reg=%4
  Single Issue       : false;
SU(1):   MOV64mr %stack.8.fp, 1, $noreg, 0, $noreg, %4:gr64, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%4
  Single Issue       : false;
SU(2):   TEST64rr %4:gr64, %4:gr64, implicit-def $eflags, debug-location !51; mainft.c:62:41
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(0): Data Latency=0 Reg=%4
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !52; mainft.c:62:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) TEST64rr %4:gr64, %4:gr64, implicit-def $eflags, debug-location !51; mainft.c:62:41
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV64mr %stack.8.fp, 1, $noreg, 0, $noreg, %4:gr64, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
SU(1):   MOV64mr %stack.8.fp, 1, $noreg, 0, $noreg, %4:gr64, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
SU(2):   TEST64rr %4:gr64, %4:gr64, implicit-def $eflags, debug-location !51; mainft.c:62:41

********** MI Scheduling **********
main:%bb.0 entry
  From: $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
    To: CALL64pcrel32 @fopen, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $rsi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, debug-location !48; mainft.c:62:15
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $rsi = LEA64r $rip, 1, $noreg, @mainft__str_1_r_, $noreg, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @fopen, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $rsi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, debug-location !48; mainft.c:62:15
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) $rsi = LEA64r $rip, 1, $noreg, @mainft__str_1_r_, $noreg, debug-location !48; mainft.c:62:15
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
SU(1):   $rsi = LEA64r $rip, 1, $noreg, @mainft__str_1_r_, $noreg, debug-location !48; mainft.c:62:15

********** MI Scheduling **********
main:%bb.0 entry
  From: %1:gr64 = COPY $rsi
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %1:gr64 = COPY $rsi
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(4): Data Latency=0 Reg=%1
  Single Issue       : false;
SU(1):   %0:gr32 = COPY $edi
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(3): Data Latency=0 Reg=%0
  Single Issue       : false;
SU(2):   MOV32mi %stack.0.retval, 1, $noreg, 0, $noreg, 0 :: (store 4 into %ir.retval)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(3):   MOV32mr %stack.1.argc.addr, 1, $noreg, 0, $noreg, %0:gr32 :: (store 4 into %ir.argc.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%0
  Single Issue       : false;
SU(4):   MOV64mr %stack.2.argv.addr, 1, $noreg, 0, $noreg, %1:gr64 :: (store 8 into %ir.argv.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) MOV64mr %stack.2.argv.addr, 1, $noreg, 0, $noreg, %1:gr64 :: (store 8 into %ir.argv.addr)
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 0 
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) MOV32mr %stack.1.argc.addr, 1, $noreg, 0, $noreg, %0:gr32 :: (store 4 into %ir.argc.addr)
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
  Cand SU(2) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(2) MOV32mi %stack.0.retval, 1, $noreg, 0, $noreg, 0 :: (store 4 into %ir.retval)
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %0:gr32 = COPY $edi
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %1:gr64 = COPY $rsi
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %1:gr64 = COPY $rsi
SU(1):   %0:gr32 = COPY $edi
SU(2):   MOV32mi %stack.0.retval, 1, $noreg, 0, $noreg, 0 :: (store 4 into %ir.retval)
SU(3):   MOV32mr %stack.1.argc.addr, 1, $noreg, 0, $noreg, %0:gr32 :: (store 4 into %ir.argc.addr)
SU(4):   MOV64mr %stack.2.argv.addr, 1, $noreg, 0, $noreg, %1:gr64 :: (store 8 into %ir.argv.addr)

********** MI Scheduling **********
main:%bb.1 if.then
  From: %5:gr32 = MOV32ri 1
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %5:gr32 = MOV32ri 1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%5
  Single Issue       : false;
SU(1):   MOV32mr $rip, 1, $noreg, @timers_enabled, $noreg, %5:gr32, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%5
  Single Issue       : false;
SU(2):   %6:gr64 = MOV64rm %stack.8.fp, 1, $noreg, 0, $noreg, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %6:gr64 = MOV64rm %stack.8.fp, 1, $noreg, 0, $noreg, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr $rip, 1, $noreg, @timers_enabled, $noreg, %5:gr32, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %5:gr32 = MOV32ri 1
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.1 ***
SU(0):   %5:gr32 = MOV32ri 1
SU(1):   MOV32mr $rip, 1, $noreg, @timers_enabled, $noreg, %5:gr32, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
SU(2):   %6:gr64 = MOV64rm %stack.8.fp, 1, $noreg, 0, $noreg, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16

********** MI Scheduling **********
main:%bb.3 if.end
  From: %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
    To: JCC_1 %bb.4, 5, implicit $eflags, debug-location !73; mainft.c:81:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%26
  Single Issue       : false;
SU(1):   %27:fr64 = FsFLD0SD
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(2): Data Latency=1 Reg=%27
  Single Issue       : false;
SU(2):   UCOMISDrr %26:fr64, %27:fr64, implicit-def $eflags, debug-location !73; mainft.c:81:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=1 Reg=%27
    SU(0): Data Latency=4 Reg=%26
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   JCC_1 %bb.4, 5, implicit $eflags, debug-location !73; mainft.c:81:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) UCOMISDrr %26:fr64, %27:fr64, implicit-def $eflags, debug-location !73; mainft.c:81:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %27:fr64 = FsFLD0SD
  Ready @2c
  BotQ.A BotLatency SU(1) 2c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
SU(1):   %27:fr64 = FsFLD0SD
SU(2):   UCOMISDrr %26:fr64, %27:fr64, implicit-def $eflags, debug-location !73; mainft.c:81:9

********** MI Scheduling **********
main:%bb.3 if.end
  From: $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5
    To: CALL64pcrel32 @appft, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $rsi, implicit killed $rdx, implicit-def $rsp, implicit-def $ssp, debug-location !69; mainft.c:79:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $rsi = LEA64r %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $rdx = LEA64r %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @appft, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $rsi, implicit killed $rdx, implicit-def $rsp, implicit-def $ssp, debug-location !69; mainft.c:79:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 0 
  Cand SU(2) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(0) $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $rdx = LEA64r %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) $rsi = LEA64r %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(1):   $rsi = LEA64r %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
SU(2):   $rdx = LEA64r %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
SU(0):   $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%22
  Single Issue       : false;
SU(1):   MOV8mr %stack.4.Class, 1, $noreg, 0, $noreg, %22:gr8, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%22
  Single Issue       : false;
SU(2):   %23:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %23:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV8mr %stack.4.Class, 1, $noreg, 0, $noreg, %22:gr8, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
  Ready @0c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
SU(1):   MOV8mr %stack.4.Class, 1, $noreg, 0, $noreg, %22:gr8, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
SU(2):   %23:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11

********** MI Scheduling **********
main:%bb.3 if.end
  From: $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
    To: CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !65; mainft.c:75:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !65; mainft.c:75:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !65; mainft.c:75:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(1) dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !65; mainft.c:75:5
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
SU(1):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !65; mainft.c:75:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
    To: CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !64; mainft.c:74:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $esi = COPY %17:gr32, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !64; mainft.c:74:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 0 
  Cand SU(2) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(2) dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !64; mainft.c:74:5
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(1) $esi = COPY %17:gr32, debug-location !64; mainft.c:74:5
  Ready @0c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
SU(1):   $esi = COPY %17:gr32, debug-location !64; mainft.c:74:5
SU(2):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !64; mainft.c:74:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
    To: CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !62; mainft.c:73:5
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $esi = MOV32ri 512, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $edx = MOV32ri 256, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $ecx = MOV32ri 256, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !62; mainft.c:73:5
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 1 0 
  Cand SU(4) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(4) dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !62; mainft.c:73:5
  Ready @1c
  BotQ.A BotLatency SU(4) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(3) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(3) $ecx = MOV32ri 256, debug-location !62; mainft.c:73:5
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $edx = MOV32ri 256, debug-location !62; mainft.c:73:5
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(1) $esi = MOV32ri 512, debug-location !62; mainft.c:73:5
  Ready @1c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
  Ready @1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
SU(1):   $esi = MOV32ri 512, debug-location !62; mainft.c:73:5
SU(2):   $edx = MOV32ri 256, debug-location !62; mainft.c:73:5
SU(3):   $ecx = MOV32ri 256, debug-location !62; mainft.c:73:5
SU(4):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !62; mainft.c:73:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
    To: CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !61; mainft.c:72:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !61; mainft.c:72:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !61; mainft.c:72:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
  Cand SU(1) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(1) dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !61; mainft.c:72:5
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
SU(1):   dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !61; mainft.c:72:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: %8:gr32 = MOV32ri 20
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %8:gr32 = MOV32ri 20
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%8
  Single Issue       : false;
SU(1):   MOV32mr %stack.3.niter, 1, $noreg, 0, $noreg, %8:gr32, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%8
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV32mr %stack.3.niter, 1, $noreg, 0, $noreg, %8:gr32, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %8:gr32 = MOV32ri 20
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %8:gr32 = MOV32ri 20
SU(1):   MOV32mr %stack.3.niter, 1, $noreg, 0, $noreg, %8:gr32, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
    To: JMP_1 %bb.6, debug-location !88; mainft.c:86:5
 RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: FR32=3
FR32X=3
Live In: %31 XMM0 
Live Out: 
Live Thru: 
Top Pressure:
FR32=2
FR32X=2
Bottom Pressure:

Excess PSets: 
SU(0):   %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 18
  Successors:
    SU(1): Data Latency=0 Reg=%34
    SU(1): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(1):   %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 18
  Predecessors:
    SU(0): Data Latency=0 Reg=%34
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=4 Reg=%34
    SU(2): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 14
  Predecessors:
    SU(1): Data Latency=4 Reg=%34
    SU(1): Out  Latency=0
  Successors:
    SU(4): Data Latency=4 Reg=%34
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %37:fr64 = CVTSI2SDrm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 14
  Successors:
    SU(4): Data Latency=4 Reg=%37
    SU(4): Out  Latency=0
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(4):   %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 10
  Predecessors:
    SU(2): Data Latency=4 Reg=%34
    SU(3): Out  Latency=0
    SU(3): Data Latency=4 Reg=%37
  Successors:
    SU(5): Data Latency=1 Reg=%37
    SU(5): Out  Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(5):   %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 9
  Predecessors:
    SU(4): Data Latency=1 Reg=%37
    SU(4): Out  Latency=0
  Successors:
    SU(6): Data Latency=1 Reg=%37
    SU(6): Out  Latency=0
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
SU(6):   %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 8
  Predecessors:
    SU(5): Data Latency=1 Reg=%37
    SU(5): Out  Latency=0
  Successors:
    SU(7): Data Latency=4 Reg=%37
    SU(7): Out  Latency=0
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 14
  Height             : 4
  Predecessors:
    SU(6): Data Latency=4 Reg=%37
    SU(6): Out  Latency=0
  Successors:
    SU(8): Data Latency=4 Reg=%37
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 18
  Height             : 0
  Predecessors:
    SU(7): Data Latency=4 Reg=%37
  Pressure Diff      : FR32 1    FR32X 1
  Single Issue       : false;
ExitSU:   JMP_1 %bb.6, debug-location !88; mainft.c:86:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 18
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Scheduling SU(8) MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
Bottom Pressure:
FR32=1
FR32X=1
  LiveReg: %37
  UpdateRegP: SU(8) MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
              to 
  Ready @0c
  BotQ.A TopLatency SU(8) 18c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Scheduling SU(7) %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
Bottom Pressure:
FR32=1
FR32X=1
  LiveReg: %37
  UpdateRegP: SU(7) %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
              to FR32 -1    FR32X -1
  Ready @4c
  BotQ.A BotLatency SU(7) 4c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Scheduling SU(6) %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
Bottom Pressure:
FR32=1
FR32X=1
  LiveReg: %37
  UpdateRegP: SU(6) %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
              to FR32 -1    FR32X -1
  Ready @8c
  BotQ.A BotLatency SU(6) 8c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Scheduling SU(5) %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %37
  UpdateRegP: SU(5) %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
              to 
  LiveReg: %31
  UpdateRegP: SU(5) %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
              to FR32 -1    FR32X -1
  Ready @9c
  BotQ.A BotLatency SU(5) 9c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Scheduling SU(4) %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
Bottom Pressure:
FR32=3
FR32X=3
  LiveReg: %37
  UpdateRegP: SU(4) %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
              to 
  LiveReg: %34
  UpdateRegP: SU(4) %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
              to FR32 -1    FR32X -1
  Ready @10c
  BotQ.A BotLatency SU(4) 10c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %37:fr64 = CVTSI2SDrm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
Bottom Pressure:
FR32=2
FR32X=2
  Ready @14c
  BotQ.A BotLatency SU(3) 14c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %34
  UpdateRegP: SU(2) %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
              to FR32 -1    FR32X -1
  Ready @14c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
Bottom Pressure:
FR32=2
FR32X=2
  LiveReg: %34
  UpdateRegP: SU(1) %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
              to FR32 -1    FR32X -1
  Ready @18c
  BotQ.A BotLatency SU(1) 18c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
Bottom Pressure:
FR32=2
FR32X=2
  Ready @18c
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
SU(1):   %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
SU(2):   %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
SU(3):   %37:fr64 = CVTSI2SDrm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
SU(4):   %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
SU(5):   %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
SU(6):   %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
SU(7):   %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
SU(8):   MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
    To: ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 7
  Successors:
    SU(1): Data Latency=0 Reg=%31
    SU(1): Out  Latency=0
  Single Issue       : false;
SU(1):   %31:fr64 = MULSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.1, $noreg, debug-location !76 :: (load 8 from constant-pool); mainft.c:83:37
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Predecessors:
    SU(0): Data Latency=0 Reg=%31
    SU(0): Out  Latency=0
  Successors:
    SU(2): Data Latency=4 Reg=%31
    SU(2): Out  Latency=0
  Single Issue       : false;
SU(2):   %31:fr64 = ADDSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.2, $noreg, debug-location !77 :: (load 8 from constant-pool); mainft.c:83:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%31
    SU(1): Out  Latency=0
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Scheduling SU(2) %31:fr64 = ADDSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.2, $noreg, debug-location !77 :: (load 8 from constant-pool); mainft.c:83:27
  Ready @3c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) %31:fr64 = MULSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.1, $noreg, debug-location !76 :: (load 8 from constant-pool); mainft.c:83:37
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
  Ready @7c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
SU(1):   %31:fr64 = MULSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.1, $noreg, debug-location !76 :: (load 8 from constant-pool); mainft.c:83:37
SU(2):   %31:fr64 = ADDSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.2, $noreg, debug-location !77 :: (load 8 from constant-pool); mainft.c:83:27

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
    To: CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !74; mainft.c:83:39
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%28
  Single Issue       : false;
SU(1):   $xmm0 = COPY %28:fr64, debug-location !74; mainft.c:83:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%28
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !74; mainft.c:83:39
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) $xmm0 = COPY %28:fr64, debug-location !74; mainft.c:83:39
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
SU(1):   $xmm0 = COPY %28:fr64, debug-location !74; mainft.c:83:39

********** MI Scheduling **********
main:%bb.6 if.end17
  From: %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
    To: CALL64pcrel32 @print_results, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $r8d, implicit killed $r9d, implicit killed $xmm0, implicit killed $xmm1, implicit-def $rsp, implicit-def $ssp, debug-location !96; mainft.c:91:5
 RegionInstrs: 29
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=1
Max Pressure: GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
FR32X=4
GR16=14
Live In: %44 %43 %42 %40 %45 
Live Out: %44 %43 %42 %40 %45 
Live Thru: FR32=2
FR32X=2
GR16=6
  LiveReg: %44
  UpdateRegP: SU(28) $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5
              to FR32 -1    FR32X -1
  LiveReg: %43
  UpdateRegP: SU(27) $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
              to FR32 -1    FR32X -1
  LiveReg: %42
  UpdateRegP: SU(26) $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
              to GR64_TCW64 -1    GR32_BPSP+GR64_TCW64 -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1    GR8+GR64_TCW64 -1    GR8+GR64_TC -1    GR32temp+GR64_TC -1    GR8+GR32temp -1    GR16 -1
  LiveReg: %40
  UpdateRegP: SU(22) $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
              to GR32_BSI -1    GR32_SIDI -1    GR32_DIBP+GR32_SIDI -1    GR8_ABCD_H+GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -1    GR64_NOREX -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1
  LiveReg: %45
  UpdateRegP: SU(18) MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
              to 
Top Pressure:
FR32=2
FR32X=2
GR16=6
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=4
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
FR32X=4
GR16=14
Excess PSets: 
SU(0):   %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%46
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(1):   MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%46
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(2):   %48:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_15__O3__mcmod, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=%48
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(3):   MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%48
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(4):   %49:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_14__g__Wall__, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(5): Data Latency=1 Reg=%49
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(5):   MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%49
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(6):   %50:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_13__I___commo, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%50
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(7):   MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%50
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(8):   %51:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_12__lm_, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(9): Data Latency=1 Reg=%51
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(9):   MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%51
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(10):   %52:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_11___CC__, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(11): Data Latency=1 Reg=%52
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(11):   MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%52
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(12):   %53:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_10_gcc_, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(13): Data Latency=1 Reg=%53
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(13):   MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=%53
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(14):   %54:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_9_03_Nov_201, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(15): Data Latency=1 Reg=%54
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(15):   MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%54
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(16):   %55:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_8_3_3_1_, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(17): Data Latency=1 Reg=%55
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(17):   MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%55
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(18):   MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %56:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_7___________, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(20): Data Latency=1 Reg=%56
  Pressure Diff      : GR16 -2
  Single Issue       : false;
SU(20):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(19): Data Latency=1 Reg=%56
  Pressure Diff      : GR16 2
  Single Issue       : false;
SU(21):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_6_FT_, $noreg, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GR32_BPSP -1    GR32_SIDI -1    GR32_DIBP+GR32_SIDI -1    GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR64_NOREX -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1    GR8+GR64_TCW64 -1    GR8+GR64_TC -1
  Single Issue       : false;
SU(22):   $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : GR32_BSI -1    GR32_SIDI -1    GR32_DIBP+GR32_SIDI -1    GR8_ABCD_H+GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -1    GR64_NOREX -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1
  Single Issue       : false;
SU(23):   $edx = MOV32ri 512, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GR8_ABCD_H+GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -2    GR32_TC -2    GR32_BPSP+GR32_TC -2    GR64_NOREX -2    GR64_TCW64 -2    GR32_BPSP+GR64_TCW64 -2    GR8 -2    GR8+GR32_DIBP -2    GR8+GR32_BSI -2    GR64_TC+GR64_TCW64 -2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -2    GR8+GR64_NOREX -2    GR32temp -2    GR32temp+GR32_DIBP -2
  Single Issue       : false;
SU(24):   $ecx = MOV32ri 256, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GR32_BSI -2    GR8_ABCD_H+GR32_BSI -1    GR8_ABCD_L+GR32_BSI -1    GR8_NOREX -2    GR32_TC -2    GR32_BPSP+GR32_TC -2    GR64_NOREX -2    GR64_TCW64 -2    GR32_BPSP+GR64_TCW64 -2    GR8 -2    GR8+GR32_DIBP -2    GR8+GR32_BSI -2    GR64_TC+GR64_TCW64 -2    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -2    GR8+GR64_NOREX -2    GR32temp -2
  Single Issue       : false;
SU(25):   $r8d = MOV32ri 256, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GR64_TCW64 -1    GR32_BPSP+GR64_TCW64 -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1    GR8+GR64_TCW64 -1    GR8+GR64_TC -1    GR32temp+GR64_TC -1    GR8+GR32temp -1    GR16 -1
  Single Issue       : false;
SU(26):   $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : GR64_TCW64 -1    GR32_BPSP+GR64_TCW64 -1    GR8 -1    GR8+GR32_DIBP -1    GR8+GR32_BSI -1    GR64_TC+GR64_TCW64 -1    GR8+LOW32_ADDR_ACCESS_with_sub_32bit -1    GR8+GR64_NOREX -1    GR32temp -1    GR32temp+GR32_DIBP -1    GR64_TC -1    GR8+GR64_TCW64 -1    GR8+GR64_TC -1    GR32temp+GR64_TC -1    GR8+GR32temp -1    GR16 -1
  Single Issue       : false;
SU(27):   $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
SU(28):   $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : FR32 -1    FR32X -1
  Single Issue       : false;
ExitSU:   CALL64pcrel32 @print_results, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $r8d, implicit killed $r9d, implicit killed $xmm0, implicit killed $xmm1, implicit-def $rsp, implicit-def $ssp, debug-location !96; mainft.c:91:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(28): Ord  Latency=0 Artificial
    SU(27): Ord  Latency=0 Artificial
    SU(26): Ord  Latency=0 Artificial
    SU(25): Ord  Latency=1 Artificial
    SU(24): Ord  Latency=1 Artificial
    SU(23): Ord  Latency=1 Artificial
    SU(22): Ord  Latency=0 Artificial
    SU(21): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 28 27 26 25 24 23 22 21 
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(28) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(28) $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=3
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
FR32X=3
GR16=14
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 27 26 25 24 23 22 
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(21) ORDER                              
  Cand SU(27) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(27) $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=2
GR64_NOREX=6
GR64_TCW64=6
GR32_BPSP+GR64_TCW64=6
GR8=8
GR8+GR32_DIBP=8
GR8+GR32_BSI=8
GR64_TC+GR64_TCW64=8
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=8
GR8+GR64_NOREX=8
GR32temp=8
GR32temp+GR32_DIBP=8
GR64_TC=8
GR8+GR64_TCW64=8
GR8+GR64_TC=8
GR32temp+GR64_TC=8
GR8+GR32temp=8
FR32X=2
GR16=14
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 22 26 25 24 23 
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(21) ORDER                              
  Cand SU(22) PHYS-REG                           
  Cand SU(26) ORDER                              
Pick Bot ORDER     
Scheduling SU(26) $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=2
GR64_NOREX=6
GR64_TCW64=5
GR32_BPSP+GR64_TCW64=5
GR8=7
GR8+GR32_DIBP=7
GR8+GR32_BSI=7
GR64_TC+GR64_TCW64=7
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=7
GR8+GR64_NOREX=7
GR32temp=7
GR32temp+GR32_DIBP=7
GR64_TC=7
GR8+GR64_TCW64=7
GR8+GR64_TC=7
GR32temp+GR64_TC=7
GR8+GR32temp=7
FR32X=2
GR16=13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 22 23 25 24 
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(21) ORDER                              
  Cand SU(22) PHYS-REG                           
  Cand SU(23) ORDER                              
  Cand SU(25) ORDER                              
Pick Bot ORDER     
Scheduling SU(25) $r8d = MOV32ri 256, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=3
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=3
GR8_ABCD_L+GR32_BSI=3
GR8_NOREX=5
GR32_TC=4
GR32_BPSP+GR32_TC=4
FR32=2
GR64_NOREX=6
GR64_TCW64=4
GR32_BPSP+GR64_TCW64=4
GR8=6
GR8+GR32_DIBP=6
GR8+GR32_BSI=6
GR64_TC+GR64_TCW64=6
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=6
GR8+GR64_NOREX=6
GR32temp=6
GR32temp+GR32_DIBP=6
GR64_TC=6
GR8+GR64_TCW64=6
GR8+GR64_TC=6
GR32temp+GR64_TC=6
GR8+GR32temp=6
FR32X=2
GR16=12
  Ready @1c
  BotQ.A BotLatency SU(25) 1c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 22 23 24 
  Cand SU(20) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(22) PHYS-REG                           
  Cand SU(23) ORDER                              
  Cand SU(24) ORDER                              
Pick Bot ORDER     
Scheduling SU(24) $ecx = MOV32ri 256, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=2
GR8_ABCD_L+GR32_BSI=2
GR8_NOREX=3
GR32_TC=2
GR32_BPSP+GR32_TC=2
FR32=2
GR64_NOREX=4
GR64_TCW64=2
GR32_BPSP+GR64_TCW64=2
GR8=4
GR8+GR32_DIBP=4
GR8+GR32_BSI=4
GR64_TC+GR64_TCW64=4
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=4
GR8+GR64_NOREX=4
GR32temp=4
GR32temp+GR32_DIBP=4
GR64_TC=4
GR8+GR64_TCW64=4
GR8+GR64_TC=4
GR32temp+GR64_TC=4
GR8+GR32temp=4
FR32X=2
GR16=10
  GR8_NOREX: 5 <= 6(+ 0 livethru)
  Ready @1c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 22 23 
  Cand SU(20) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(22) PHYS-REG                           
  Cand SU(23) ORDER                              
Pick Bot ORDER     
Scheduling SU(23) $edx = MOV32ri 512, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_BSI=1
GR32_SIDI=2
GR32_DIBP+GR32_SIDI=2
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8_ABCD_H+GR32_BSI=1
GR8_ABCD_L+GR32_BSI=1
GR8_NOREX=1
FR32=2
GR64_NOREX=2
GR8=2
GR8+GR32_DIBP=2
GR8+GR32_BSI=2
GR64_TC+GR64_TCW64=2
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=2
GR8+GR64_NOREX=2
GR32temp=2
GR32temp+GR32_DIBP=2
GR64_TC=2
GR8+GR64_TCW64=2
GR8+GR64_TC=2
GR32temp+GR64_TC=2
GR8+GR32temp=2
FR32X=2
GR16=8
  GR8_NOREX: 5 <= 6(+ 0 livethru)
  Ready @1c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 22 
  Cand SU(20) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(22) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(22) $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
Bottom Pressure:
GR32_BPSP=1
GR32_SIDI=1
GR32_DIBP+GR32_SIDI=1
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit=1
FR32=2
GR64_NOREX=1
GR8=1
GR8+GR32_DIBP=1
GR8+GR32_BSI=1
GR64_TC+GR64_TCW64=1
GR8+LOW32_ADDR_ACCESS_with_sub_32bit=1
GR8+GR64_NOREX=1
GR32temp=1
GR32temp+GR32_DIBP=1
GR64_TC=1
GR8+GR64_TCW64=1
GR8+GR64_TC=1
GR32temp+GR64_TC=1
GR8+GR32temp=1
FR32X=2
GR16=7
  GR32_DIBP+GR32_SIDI: 2 <= 4(+ 0 livethru)
  GR8_NOREX: 5 <= 6(+ 0 livethru)
  Ready @0c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 21 
  Cand SU(20) ORDER                              
  Cand SU(21) ORDER                              
Pick Bot ORDER     
Scheduling SU(21) $rdi = LEA64r $rip, 1, $noreg, @mainft__str_6_FT_, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  GR32_BPSP: 1 <= 2(+ 0 livethru)
  GR32_DIBP+GR32_SIDI: 2 <= 4(+ 0 livethru)
  Ready @1c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 
  Cand SU(20) ORDER                              
Pick Bot ORDER     
Scheduling SU(20) MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %56
  UpdateRegP: SU(20) MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
              to 
  Ready @1c
  BotQ.A TopLatency SU(20) 1c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 19 
  Cand SU(1) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(19) ORDER                              
Pick Bot ORDER     
Scheduling SU(19) %56:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_7___________, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @2c
BotQ.A @1c
  Retired: 6
  Executed: 1c
  Critical: 1c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 
  Cand SU(1) ORDER                              
  Cand SU(18) ORDER                              
Pick Bot ORDER     
Scheduling SU(18) MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @1c
BotQ.A @1c
  Retired: 7
  Executed: 1c
  Critical: 1c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 17 15 13 11 9 7 5 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(17) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %55
  UpdateRegP: SU(17) MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
              to 
  Ready @1c
  *** Max MOps 4 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 8
  Executed: 2c
  Critical: 2c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 15 13 11 9 7 16 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(16) ORDER                              
Pick Bot ORDER     
Scheduling SU(16) %55:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_8_3_3_1_, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @2c
BotQ.A @2c
  Retired: 9
  Executed: 2c
  Critical: 2c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 15 13 11 9 7 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(15) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %54
  UpdateRegP: SU(15) MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
              to 
  Ready @2c
  BotQ.A TopLatency SU(15) 1c
BotQ.A @2c
  Retired: 10
  Executed: 2c
  Critical: 2c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 13 11 9 14 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(14) ORDER                              
Pick Bot ORDER     
Scheduling SU(14) %54:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_9_03_Nov_201, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @3c
BotQ.A @2c
  Retired: 11
  Executed: 2c
  Critical: 2c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 13 11 9 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(13) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %53
  UpdateRegP: SU(13) MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
              to 
  Ready @2c
  *** Max MOps 4 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 12
  Executed: 3c
  Critical: 3c, 12 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 9 11 12 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(12) ORDER                              
Pick Bot ORDER     
Scheduling SU(12) %53:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_10_gcc_, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @3c
BotQ.A @3c
  Retired: 13
  Executed: 3c
  Critical: 3c, 13 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 9 11 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(11) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %52
  UpdateRegP: SU(11) MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
              to 
  Ready @3c
  BotQ.A TopLatency SU(11) 1c
BotQ.A @3c
  Retired: 14
  Executed: 3c
  Critical: 3c, 14 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 9 10 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %52:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_11___CC__, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @4c
BotQ.A @3c
  Retired: 15
  Executed: 3c
  Critical: 3c, 15 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 9 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(9) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %51
  UpdateRegP: SU(9) MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
              to 
  Ready @3c
  *** Max MOps 4 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 16
  Executed: 4c
  Critical: 4c, 16 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 8 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) %51:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_12__lm_, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @4c
BotQ.A @4c
  Retired: 17
  Executed: 4c
  Critical: 4c, 17 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 7 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %50
  UpdateRegP: SU(7) MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
              to 
  Ready @4c
  BotQ.A TopLatency SU(7) 1c
BotQ.A @4c
  Retired: 18
  Executed: 4c
  Critical: 4c, 18 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 6 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %50:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_13__I___commo, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @5c
BotQ.A @4c
  Retired: 19
  Executed: 4c
  Critical: 4c, 19 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %49
  UpdateRegP: SU(5) MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
              to 
  Ready @4c
  *** Max MOps 4 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 20
  Executed: 5c
  Critical: 5c, 20 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 4 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %49:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_14__g__Wall__, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @5c
BotQ.A @5c
  Retired: 21
  Executed: 5c
  Critical: 5c, 21 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %48
  UpdateRegP: SU(3) MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
              to 
  Ready @5c
  BotQ.A TopLatency SU(3) 1c
BotQ.A @5c
  Retired: 22
  Executed: 5c
  Critical: 5c, 22 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %48:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_15__O3__mcmod, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @6c
BotQ.A @5c
  Retired: 23
  Executed: 5c
  Critical: 5c, 23 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Scheduling SU(1) MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=8
  LiveReg: %46
  UpdateRegP: SU(1) MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
              to 
  Ready @5c
  *** Max MOps 4 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 24
  Executed: 6c
  Critical: 6c, 24 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
Bottom Pressure:
FR32=2
FR32X=2
GR16=6
  Ready @6c
BotQ.A @6c
  Retired: 25
  Executed: 6c
  Critical: 6c, 25 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
SU(1):   MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
SU(2):   %48:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_15__O3__mcmod, $noreg, debug-location !96; mainft.c:91:5
SU(3):   MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
SU(4):   %49:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_14__g__Wall__, $noreg, debug-location !96; mainft.c:91:5
SU(5):   MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
SU(6):   %50:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_13__I___commo, $noreg, debug-location !96; mainft.c:91:5
SU(7):   MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
SU(8):   %51:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_12__lm_, $noreg, debug-location !96; mainft.c:91:5
SU(9):   MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
SU(10):   %52:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_11___CC__, $noreg, debug-location !96; mainft.c:91:5
SU(11):   MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
SU(12):   %53:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_10_gcc_, $noreg, debug-location !96; mainft.c:91:5
SU(13):   MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
SU(14):   %54:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_9_03_Nov_201, $noreg, debug-location !96; mainft.c:91:5
SU(15):   MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
SU(16):   %55:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_8_3_3_1_, $noreg, debug-location !96; mainft.c:91:5
SU(17):   MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
SU(18):   MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
SU(19):   %56:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_7___________, $noreg, debug-location !96; mainft.c:91:5
SU(20):   MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
SU(21):   $rdi = LEA64r $rip, 1, $noreg, @mainft__str_6_FT_, $noreg, debug-location !96; mainft.c:91:5
SU(22):   $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
SU(23):   $edx = MOV32ri 512, debug-location !96; mainft.c:91:5
SU(24):   $ecx = MOV32ri 256, debug-location !96; mainft.c:91:5
SU(25):   $r8d = MOV32ri 256, debug-location !96; mainft.c:91:5
SU(26):   $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
SU(27):   $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
SU(28):   $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5

********** MI Scheduling **********
main:%bb.6 if.end17
  From: %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
    To: ADJCALLSTACKDOWN64 88, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=1
SU(0):   %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %42:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %43:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %44:fr64 = MOVSDrm_alt %stack.6.mflops, 1, $noreg, 0, $noreg, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %45:gr32 = MOV32rm %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN64 88, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 1 0 
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %45:gr32 = MOV32rm %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  Ready @3c
  BotQ.A BotLatency SU(4) 3c
BotQ.A @0c
  Retired: 1
  Executed: 0c
  Critical: 0c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 2 1 
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %44:fr64 = MOVSDrm_alt %stack.6.mflops, 1, $noreg, 0, $noreg, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  Ready @3c
BotQ.A @0c
  Retired: 2
  Executed: 0c
  Critical: 0c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %43:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  Ready @3c
BotQ.A @0c
  Retired: 3
  Executed: 0c
  Critical: 0c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %42:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  Ready @3c
  *** Max MOps 4 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 4
  Executed: 1c
  Critical: 1c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Scheduling SU(0) %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  Ready @3c
BotQ.A @1c
  Retired: 5
  Executed: 1c
  Critical: 1c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
SU(1):   %42:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
SU(2):   %43:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
SU(3):   %44:fr64 = MOVSDrm_alt %stack.6.mflops, 1, $noreg, 0, $noreg, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
SU(4):   %45:gr32 = MOV32rm %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47

********** INTERVALS **********
DIL [0B,32r:0)[144r,176r:8)[416r,432r:7)[672r,704r:6)[848r,928r:5)[1056r,1104r:4)[1216r,1248r:3)[1560r,1568r:1)[2896r,3024r:2)  0@0B-phi 1@1560r 2@2896r 3@1216r 4@1056r 5@848r 6@672r 7@416r 8@144r
DIH [0B,32r:0)[144r,176r:8)[416r,432r:7)[672r,704r:6)[848r,928r:5)[1056r,1104r:4)[1216r,1248r:3)[1560r,1568r:1)[2896r,3024r:2)  0@0B-phi 1@1560r 2@2896r 3@1216r 4@1056r 5@848r 6@672r 7@416r 8@144r
HDI [0B,32r:0)[144r,176r:8)[416r,432r:7)[672r,704r:6)[848r,928r:5)[1056r,1104r:4)[1216r,1248r:3)[1560r,1568r:1)[2896r,3024r:2)  0@0B-phi 1@1560r 2@2896r 3@1216r 4@1056r 5@848r 6@672r 7@416r 8@144r
SIL [0B,16r:0)[160r,176r:5)[864r,928r:3)[1072r,1104r:2)[1536r,1568r:4)[2912r,3024r:1)  0@0B-phi 1@2912r 2@1072r 3@864r 4@1536r 5@160r
SIH [0B,16r:0)[160r,176r:5)[864r,928r:3)[1072r,1104r:2)[1536r,1568r:4)[2912r,3024r:1)  0@0B-phi 1@2912r 2@1072r 3@864r 4@1536r 5@160r
HSI [0B,16r:0)[160r,176r:5)[864r,928r:3)[1072r,1104r:2)[1536r,1568r:4)[2912r,3024r:1)  0@0B-phi 1@2912r 2@1072r 3@864r 4@1536r 5@160r
SPL [96r,96d:54)[176r,176d:53)[192r,192d:52)[208r,208d:51)[240r,240d:50)[400r,400d:49)[432r,432d:48)[448r,448d:47)[464r,464d:46)[496r,496d:45)[608r,608d:44)[704r,704d:43)[720r,720d:42)[736r,736d:41)[768r,768d:40)[784r,784d:39)[928r,928d:38)[944r,944d:37)[960r,960d:36)[992r,992d:35)[1024r,1024d:34)[1104r,1104d:33)[1120r,1120d:32)[1136r,1136d:31)[1168r,1168d:30)[1184r,1184d:29)[1248r,1248d:28)[1264r,1264d:27)[1280r,1280d:26)[1312r,1312d:25)[1328r,1328d:24)[1344r,1344d:23)[1360r,1360d:22)[1376r,1376d:21)[1408r,1408d:20)[1472r,1472d:19)[1568r,1568d:18)[1584r,1584d:17)[1600r,1600d:16)[1632r,1632d:15)[1760r,1760d:14)[1808r,1808d:13)[1824r,1824d:12)[1840r,1840d:11)[1872r,1872d:10)[1968r,1968d:9)[2000r,2000d:8)[2016r,2016d:7)[2032r,2032d:6)[2064r,2064d:5)[2480r,2480d:4)[3024r,3024d:3)[3040r,3040d:2)[3056r,3056d:1)[3088r,3088d:0)  0@3088r 1@3056r 2@3040r 3@3024r 4@2480r 5@2064r 6@2032r 7@2016r 8@2000r 9@1968r 10@1872r 11@1840r 12@1824r 13@1808r 14@1760r 15@1632r 16@1600r 17@1584r 18@1568r 19@1472r 20@1408r 21@1376r 22@1360r 23@1344r 24@1328r 25@1312r 26@1280r 27@1264r 28@1248r 29@1184r 30@1168r 31@1136r 32@1120r 33@1104r 34@1024r 35@992r 36@960r 37@944r 38@928r 39@784r 40@768r 41@736r 42@720r 43@704r 44@608r 45@496r 46@464r 47@448r 48@432r 49@400r 50@240r 51@208r 52@192r 53@176r 54@96r
SPH [96r,96d:54)[176r,176d:53)[192r,192d:52)[208r,208d:51)[240r,240d:50)[400r,400d:49)[432r,432d:48)[448r,448d:47)[464r,464d:46)[496r,496d:45)[608r,608d:44)[704r,704d:43)[720r,720d:42)[736r,736d:41)[768r,768d:40)[784r,784d:39)[928r,928d:38)[944r,944d:37)[960r,960d:36)[992r,992d:35)[1024r,1024d:34)[1104r,1104d:33)[1120r,1120d:32)[1136r,1136d:31)[1168r,1168d:30)[1184r,1184d:29)[1248r,1248d:28)[1264r,1264d:27)[1280r,1280d:26)[1312r,1312d:25)[1328r,1328d:24)[1344r,1344d:23)[1360r,1360d:22)[1376r,1376d:21)[1408r,1408d:20)[1472r,1472d:19)[1568r,1568d:18)[1584r,1584d:17)[1600r,1600d:16)[1632r,1632d:15)[1760r,1760d:14)[1808r,1808d:13)[1824r,1824d:12)[1840r,1840d:11)[1872r,1872d:10)[1968r,1968d:9)[2000r,2000d:8)[2016r,2016d:7)[2032r,2032d:6)[2064r,2064d:5)[2480r,2480d:4)[3024r,3024d:3)[3040r,3040d:2)[3056r,3056d:1)[3088r,3088d:0)  0@3088r 1@3056r 2@3040r 3@3024r 4@2480r 5@2064r 6@2032r 7@2016r 8@2000r 9@1968r 10@1872r 11@1840r 12@1824r 13@1808r 14@1760r 15@1632r 16@1600r 17@1584r 18@1568r 19@1472r 20@1408r 21@1376r 22@1360r 23@1344r 24@1328r 25@1312r 26@1280r 27@1264r 28@1248r 29@1184r 30@1168r 31@1136r 32@1120r 33@1104r 34@1024r 35@992r 36@960r 37@944r 38@928r 39@784r 40@768r 41@736r 42@720r 43@704r 44@608r 45@496r 46@464r 47@448r 48@432r 49@400r 50@240r 51@208r 52@192r 53@176r 54@96r
HSP [96r,96d:54)[176r,176d:53)[192r,192d:52)[208r,208d:51)[240r,240d:50)[400r,400d:49)[432r,432d:48)[448r,448d:47)[464r,464d:46)[496r,496d:45)[608r,608d:44)[704r,704d:43)[720r,720d:42)[736r,736d:41)[768r,768d:40)[784r,784d:39)[928r,928d:38)[944r,944d:37)[960r,960d:36)[992r,992d:35)[1024r,1024d:34)[1104r,1104d:33)[1120r,1120d:32)[1136r,1136d:31)[1168r,1168d:30)[1184r,1184d:29)[1248r,1248d:28)[1264r,1264d:27)[1280r,1280d:26)[1312r,1312d:25)[1328r,1328d:24)[1344r,1344d:23)[1360r,1360d:22)[1376r,1376d:21)[1408r,1408d:20)[1472r,1472d:19)[1568r,1568d:18)[1584r,1584d:17)[1600r,1600d:16)[1632r,1632d:15)[1760r,1760d:14)[1808r,1808d:13)[1824r,1824d:12)[1840r,1840d:11)[1872r,1872d:10)[1968r,1968d:9)[2000r,2000d:8)[2016r,2016d:7)[2032r,2032d:6)[2064r,2064d:5)[2480r,2480d:4)[3024r,3024d:3)[3040r,3040d:2)[3056r,3056d:1)[3088r,3088d:0)  0@3088r 1@3056r 2@3040r 3@3024r 4@2480r 5@2064r 6@2032r 7@2016r 8@2000r 9@1968r 10@1872r 11@1840r 12@1824r 13@1808r 14@1760r 15@1632r 16@1600r 17@1584r 18@1568r 19@1472r 20@1408r 21@1376r 22@1360r 23@1344r 24@1328r 25@1312r 26@1280r 27@1264r 28@1248r 29@1184r 30@1168r 31@1136r 32@1120r 33@1104r 34@1024r 35@992r 36@960r 37@944r 38@928r 39@784r 40@768r 41@736r 42@720r 43@704r 44@608r 45@496r 46@464r 47@448r 48@432r 49@400r 50@240r 51@208r 52@192r 53@176r 54@96r
%0 [32r,64r:0)  0@32r weight:0.000000e+00
%1 [16r,80r:0)  0@16r weight:0.000000e+00
%4 [256r,288r:0)  0@256r weight:0.000000e+00
%5 [352r,368r:0)  0@352r weight:0.000000e+00
%6 [384r,480r:0)  0@384r weight:0.000000e+00
%8 [576r,592r:0)  0@576r weight:0.000000e+00
%17 [1008r,1152r:0)  0@1008r weight:0.000000e+00
%22 [1424r,1440r:0)  0@1424r weight:0.000000e+00
%23 [1456r,1616r:0)  0@1456r weight:0.000000e+00
%26 [1648r,1680r:0)  0@1648r weight:0.000000e+00
%27 [1664r,1680r:0)  0@1664r weight:0.000000e+00
%28 [1776r,1984r:0)  0@1776r weight:0.000000e+00
%31 [1888r,1920r:2)[1920r,1952r:0)[1952r,2224r:1)  0@1920r 1@1952r 2@1888r weight:0.000000e+00
%34 [2080r,2112r:2)[2112r,2144r:0)[2144r,2192r:1)  0@2112r 1@2144r 2@2080r weight:0.000000e+00
%37 [2160r,2192r:2)[2192r,2224r:0)[2224r,2256r:1)[2256r,2288r:3)[2288r,2304r:4)  0@2192r 1@2224r 2@2160r 3@2256r 4@2288r weight:0.000000e+00
%40 [2384r,3072r:0)  0@2384r weight:0.000000e+00
%42 [2416r,3072r:0)  0@2416r weight:0.000000e+00
%43 [2432r,3072r:0)  0@2432r weight:0.000000e+00
%44 [2448r,3072r:0)  0@2448r weight:0.000000e+00
%45 [2464r,3072r:0)  0@2464r weight:0.000000e+00
%46 [2496r,2528r:0)  0@2496r weight:0.000000e+00
%48 [2544r,2560r:0)  0@2544r weight:0.000000e+00
%49 [2576r,2592r:0)  0@2576r weight:0.000000e+00
%50 [2608r,2624r:0)  0@2608r weight:0.000000e+00
%51 [2640r,2656r:0)  0@2640r weight:0.000000e+00
%52 [2672r,2688r:0)  0@2672r weight:0.000000e+00
%53 [2704r,2720r:0)  0@2704r weight:0.000000e+00
%54 [2736r,2752r:0)  0@2736r weight:0.000000e+00
%55 [2768r,2784r:0)  0@2768r weight:0.000000e+00
%56 [2816r,2832r:0)  0@2816r weight:0.000000e+00
RegMasks: 176r 432r 704r 928r 1104r 1248r 1344r 1568r 1808r 2000r 3024r
********** MACHINEINSTRS **********
# Machine code for function main: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP+8]
  fi#1: size=4, align=4, at location [SP+8]
  fi#2: size=8, align=8, at location [SP+8]
  fi#3: size=4, align=4, at location [SP+8]
  fi#4: size=1, align=4, at location [SP+8]
  fi#5: size=8, align=8, at location [SP+8]
  fi#6: size=8, align=8, at location [SP+8]
  fi#7: size=4, align=4, at location [SP+8]
  fi#8: size=8, align=8, at location [SP+8]
Constant Pool:
  cp#0: 0x4180000000000000, align=8
  cp#1: 7.196410e+00, align=8
  cp#2: 1.481570e+01, align=8
  cp#3: 7.211130e+00, align=8
  cp#4: 5.235180e+00, align=8
  cp#5: 0x4040C6F7A0B5ED8D, align=8
Function Live Ins: $edi in %0, $rsi in %1

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $edi, $rsi
16B	  %1:gr64 = COPY $rsi
32B	  %0:gr32 = COPY $edi
48B	  MOV32mi %stack.0.retval, 1, $noreg, 0, $noreg, 0 :: (store 4 into %ir.retval)
64B	  MOV32mr %stack.1.argc.addr, 1, $noreg, 0, $noreg, %0:gr32 :: (store 4 into %ir.argc.addr)
80B	  MOV64mr %stack.2.argv.addr, 1, $noreg, 0, $noreg, %1:gr64 :: (store 8 into %ir.argv.addr)
96B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
144B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_timer_flag, $noreg, debug-location !48; mainft.c:62:15
160B	  $rsi = LEA64r $rip, 1, $noreg, @mainft__str_1_r_, $noreg, debug-location !48; mainft.c:62:15
176B	  CALL64pcrel32 @fopen, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $rsi, implicit-def $rsp, implicit-def $ssp, implicit-def $rax, debug-location !48; mainft.c:62:15
192B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !48; mainft.c:62:15
208B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !50; mainft.c:62:13
224B	  PCN_STACKMAP 0, 0, 0, %stack.4.Class, 0, 0, %stack.8.fp, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !50 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.8.fp), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:62:13
240B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !50; mainft.c:62:13
256B	  %4:gr64 = COPY killed $rax, debug-location !48; mainft.c:62:15
272B	  MOV64mr %stack.8.fp, 1, $noreg, 0, $noreg, %4:gr64, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
288B	  TEST64rr %4:gr64, %4:gr64, implicit-def $eflags, debug-location !51; mainft.c:62:41
304B	  JCC_1 %bb.2, 4, implicit killed $eflags, debug-location !52; mainft.c:62:9
320B	  JMP_1 %bb.1, debug-location !52; mainft.c:62:9

336B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

352B	  %5:gr32 = MOV32ri 1
368B	  MOV32mr $rip, 1, $noreg, @timers_enabled, $noreg, %5:gr32, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
384B	  %6:gr64 = MOV64rm %stack.8.fp, 1, $noreg, 0, $noreg, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
400B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
416B	  $rdi = COPY %6:gr64, debug-location !56; mainft.c:64:9
432B	  CALL64pcrel32 @fclose, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !56; mainft.c:64:9
448B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !56; mainft.c:64:9
464B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !57; mainft.c:65:5
480B	  PCN_STACKMAP 1, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %6:gr64, implicit-def dead early-clobber $r11, debug-location !57 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:65:5
496B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !57; mainft.c:65:5
512B	  JMP_1 %bb.3, debug-location !57; mainft.c:65:5

528B	bb.2.if.else:
	; predecessors: %bb.0
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

544B	  MOV32mi $rip, 1, $noreg, @timers_enabled, $noreg, 0, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

560B	bb.3.if.end:
	; predecessors: %bb.2, %bb.1
	  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

576B	  %8:gr32 = MOV32ri 20
592B	  MOV32mr %stack.3.niter, 1, $noreg, 0, $noreg, %8:gr32, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
608B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
672B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_2____NAS_Par, $noreg, debug-location !61; mainft.c:72:5
688B	  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !61; mainft.c:72:5
704B	  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !61; mainft.c:72:5
720B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !61; mainft.c:72:5
736B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
752B	  PCN_STACKMAP 2, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !62 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:73:5
768B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
784B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
848B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_3__Size_____, $noreg, debug-location !62; mainft.c:73:5
864B	  $esi = MOV32ri 512, debug-location !62; mainft.c:73:5
880B	  $edx = MOV32ri 256, debug-location !62; mainft.c:73:5
896B	  $ecx = MOV32ri 256, debug-location !62; mainft.c:73:5
912B	  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !62; mainft.c:73:5
928B	  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !62; mainft.c:73:5
944B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !62; mainft.c:73:5
960B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !63; mainft.c:74:49
976B	  PCN_STACKMAP 3, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !63 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:74:49
992B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !63; mainft.c:74:49
1008B	  %17:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
1024B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !64; mainft.c:74:5
1056B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_4__Iteration, $noreg, debug-location !64; mainft.c:74:5
1072B	  $esi = COPY %17:gr32, debug-location !64; mainft.c:74:5
1088B	  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !64; mainft.c:74:5
1104B	  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !64; mainft.c:74:5
1120B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !64; mainft.c:74:5
1136B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
1152B	  PCN_STACKMAP 4, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %17:gr32, implicit-def dead early-clobber $r11, debug-location !65 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:75:5
1168B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
1184B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
1216B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_5___, $noreg, debug-location !65; mainft.c:75:5
1232B	  dead $eax = MOV32r0 implicit-def dead $eflags, implicit-def $al, debug-location !65; mainft.c:75:5
1248B	  CALL64pcrel32 @printf, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit killed $al, implicit-def $rsp, implicit-def $ssp, implicit-def dead $eax, debug-location !65; mainft.c:75:5
1264B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !65; mainft.c:75:5
1280B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
1296B	  PCN_STACKMAP 5, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !66 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:13
1312B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
1328B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
1344B	  CALL64pcrel32 @getclass, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit-def $rsp, implicit-def $ssp, implicit-def $al, debug-location !66; mainft.c:77:13
1360B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !66; mainft.c:77:13
1376B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !67; mainft.c:77:11
1392B	  PCN_STACKMAP 6, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !67 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:11
1408B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !67; mainft.c:77:11
1424B	  %22:gr8 = COPY killed $al, debug-location !66; mainft.c:77:13
1440B	  MOV8mr %stack.4.Class, 1, $noreg, 0, $noreg, %22:gr8, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
1456B	  %23:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
1472B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
1536B	  $rsi = LEA64r %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
1552B	  $rdx = LEA64r %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !69; mainft.c:79:5
1560B	  $edi = COPY %23:gr32, debug-location !69; mainft.c:79:5
1568B	  CALL64pcrel32 @appft, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $edi, implicit $rsi, implicit killed $rdx, implicit-def $rsp, implicit-def $ssp, debug-location !69; mainft.c:79:5
1584B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !69; mainft.c:79:5
1600B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !70; mainft.c:81:9
1616B	  PCN_STACKMAP 7, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %23:gr32, implicit-def dead early-clobber $r11, debug-location !70 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:81:9
1632B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !70; mainft.c:81:9
1648B	  %26:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
1664B	  %27:fr64 = FsFLD0SD
1680B	  UCOMISDrr %26:fr64, %27:fr64, implicit-def $eflags, debug-location !73; mainft.c:81:9
1696B	  JCC_1 %bb.4, 5, implicit $eflags, debug-location !73; mainft.c:81:9
1712B	  JCC_1 %bb.4, 10, implicit killed $eflags, debug-location !73; mainft.c:81:9
1728B	  JMP_1 %bb.5, debug-location !73; mainft.c:81:9

1744B	bb.4.if.then8:
	; predecessors: %bb.3
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

1760B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !74; mainft.c:83:39
1776B	  %28:fr64 = MOVSDrm_alt $rip, 1, $noreg, %const.0, $noreg :: (load 8 from constant-pool)
1792B	  $xmm0 = COPY %28:fr64, debug-location !74; mainft.c:83:39
1808B	  CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !74; mainft.c:83:39
1824B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !74; mainft.c:83:39
1840B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !76; mainft.c:83:37
1856B	  PCN_STACKMAP 8, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !76 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:83:37
1872B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !76; mainft.c:83:37
1888B	  %31:fr64 = COPY killed $xmm0, debug-location !74; mainft.c:83:39
1920B	  %31:fr64 = MULSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.1, $noreg, debug-location !76 :: (load 8 from constant-pool); mainft.c:83:37
1952B	  %31:fr64 = ADDSDrm %31:fr64(tied-def 0), $rip, 1, $noreg, %const.2, $noreg, debug-location !77 :: (load 8 from constant-pool); mainft.c:83:27
1968B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
1984B	  $xmm0 = COPY %28:fr64, debug-location !78; mainft.c:84:40
2000B	  CALL64pcrel32 @log, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit killed $xmm0, implicit-def $rsp, implicit-def $ssp, implicit-def $xmm0, debug-location !78; mainft.c:84:40
2016B	  ADJCALLSTACKUP64 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !78; mainft.c:84:40
2032B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !79; mainft.c:84:38
2048B	  PCN_STACKMAP 9, 0, 0, %stack.4.Class, 0, %31:fr64, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $r11, debug-location !79 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:84:38
2064B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !79; mainft.c:84:38
2080B	  %34:fr64 = COPY killed $xmm0, debug-location !78; mainft.c:84:40
2112B	  %34:fr64 = MULSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.3, $noreg, debug-location !79 :: (load 8 from constant-pool); mainft.c:84:38
2144B	  %34:fr64 = ADDSDrm %34:fr64(tied-def 0), $rip, 1, $noreg, %const.4, $noreg, debug-location !80 :: (load 8 from constant-pool); mainft.c:84:28
2160B	  %37:fr64 = CVTSI2SDrm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
2192B	  %37:fr64 = MULSDrr %37:fr64(tied-def 0), %34:fr64, debug-location !82; mainft.c:84:61
2224B	  %37:fr64 = ADDSDrr %37:fr64(tied-def 0), %31:fr64, debug-location !83; mainft.c:83:59
2256B	  %37:fr64 = MULSDrm %37:fr64(tied-def 0), $rip, 1, $noreg, %const.5, $noreg, debug-location !84 :: (load 8 from constant-pool); mainft.c:82:42
2288B	  %37:fr64 = DIVSDrm %37:fr64(tied-def 0), %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !86 :: (dereferenceable load 8 from %ir.total_time); mainft.c:84:70
2304B	  MOVSDmr %stack.6.mflops, 1, $noreg, 0, $noreg, %37:fr64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
2320B	  JMP_1 %bb.6, debug-location !88; mainft.c:86:5

2336B	bb.5.if.else16:
	; predecessors: %bb.3
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

2352B	  MOV64mi32 %stack.6.mflops, 1, $noreg, 0, $noreg, 0, debug-location !89 :: (store 8 into %ir.mflops); mainft.c:88:16

2368B	bb.6.if.end17:
	; predecessors: %bb.5, %bb.4

2384B	  %40:gr32 = MOVSX32rm8 %stack.4.Class, 1, $noreg, 0, $noreg, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
2416B	  %42:gr32 = MOV32rm %stack.3.niter, 1, $noreg, 0, $noreg, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
2432B	  %43:fr64 = MOVSDrm_alt %stack.5.total_time, 1, $noreg, 0, $noreg, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
2448B	  %44:fr64 = MOVSDrm_alt %stack.6.mflops, 1, $noreg, 0, $noreg, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
2464B	  %45:gr32 = MOV32rm %stack.7.verified, 1, $noreg, 0, $noreg, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
2480B	  ADJCALLSTACKDOWN64 88, 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
2496B	  %46:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_16_randdp_, $noreg, debug-location !96; mainft.c:91:5
2528B	  MOV64mr $rsp, 1, $noreg, 80, $noreg, %46:gr64, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
2544B	  %48:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_15__O3__mcmod, $noreg, debug-location !96; mainft.c:91:5
2560B	  MOV64mr $rsp, 1, $noreg, 72, $noreg, %48:gr64, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
2576B	  %49:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_14__g__Wall__, $noreg, debug-location !96; mainft.c:91:5
2592B	  MOV64mr $rsp, 1, $noreg, 64, $noreg, %49:gr64, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
2608B	  %50:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_13__I___commo, $noreg, debug-location !96; mainft.c:91:5
2624B	  MOV64mr $rsp, 1, $noreg, 56, $noreg, %50:gr64, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
2640B	  %51:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_12__lm_, $noreg, debug-location !96; mainft.c:91:5
2656B	  MOV64mr $rsp, 1, $noreg, 48, $noreg, %51:gr64, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
2672B	  %52:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_11___CC__, $noreg, debug-location !96; mainft.c:91:5
2688B	  MOV64mr $rsp, 1, $noreg, 40, $noreg, %52:gr64, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
2704B	  %53:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_10_gcc_, $noreg, debug-location !96; mainft.c:91:5
2720B	  MOV64mr $rsp, 1, $noreg, 32, $noreg, %53:gr64, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
2736B	  %54:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_9_03_Nov_201, $noreg, debug-location !96; mainft.c:91:5
2752B	  MOV64mr $rsp, 1, $noreg, 24, $noreg, %54:gr64, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
2768B	  %55:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_8_3_3_1_, $noreg, debug-location !96; mainft.c:91:5
2784B	  MOV64mr $rsp, 1, $noreg, 16, $noreg, %55:gr64, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
2800B	  MOV32mr $rsp, 1, $noreg, 8, $noreg, %45:gr32, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
2816B	  %56:gr64 = LEA64r $rip, 1, $noreg, @mainft__str_7___________, $noreg, debug-location !96; mainft.c:91:5
2832B	  MOV64mr $rsp, 1, $noreg, 0, $noreg, %56:gr64, debug-location !96 :: (store 8 into stack); mainft.c:91:5
2896B	  $rdi = LEA64r $rip, 1, $noreg, @mainft__str_6_FT_, $noreg, debug-location !96; mainft.c:91:5
2912B	  $esi = COPY %40:gr32, debug-location !96; mainft.c:91:5
2928B	  $edx = MOV32ri 512, debug-location !96; mainft.c:91:5
2944B	  $ecx = MOV32ri 256, debug-location !96; mainft.c:91:5
2960B	  $r8d = MOV32ri 256, debug-location !96; mainft.c:91:5
2976B	  $r9d = COPY %42:gr32, debug-location !96; mainft.c:91:5
2992B	  $xmm0 = COPY %43:fr64, debug-location !96; mainft.c:91:5
3008B	  $xmm1 = COPY %44:fr64, debug-location !96; mainft.c:91:5
3024B	  CALL64pcrel32 @print_results, <regmask $bh $bl $bp $bph $bpl $bx $ebp $ebx $hbp $hbx $rbp $rbx $r15 $r15b $r15bh $r15d $r15w $r15wh>, implicit $rsp, implicit $ssp, implicit $rdi, implicit $esi, implicit killed $edx, implicit killed $ecx, implicit killed $r8d, implicit killed $r9d, implicit killed $xmm0, implicit killed $xmm1, implicit-def $rsp, implicit-def $ssp, debug-location !96; mainft.c:91:5
3040B	  ADJCALLSTACKUP64 88, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !96; mainft.c:91:5
3056B	  ADJCALLSTACKDOWN64 0, 0, 0, implicit-def $rsp, implicit-def dead $eflags, implicit-def $ssp, implicit $rsp, implicit $ssp, debug-location !97; mainft.c:95:5
3072B	  PCN_STACKMAP 10, 0, %40.sub_8bit:gr32, %42:gr32, %43:fr64, %44:fr64, %45:gr32, implicit-def dead early-clobber $r11, debug-location !97; mainft.c:95:5
3088B	  ADJCALLSTACKUP64 0, 0, implicit-def dead $rsp, implicit-def dead $eflags, implicit-def dead $ssp, implicit $rsp, implicit $ssp, debug-location !97; mainft.c:95:5
3120B	  $eax = MOV32r0 implicit-def dead $eflags, debug-location !98; mainft.c:98:5
3136B	  RET 0, killed $eax, debug-location !98; mainft.c:98:5

# End machine code for function main.

Before MISched:
# Machine code for function getclass: NoPHIs, TracksLiveness

bb.0.entry:
  $al = MOV8ri 66, debug-location !102; mainft.c:115:9
  RET 0, killed $al, debug-location !102; mainft.c:115:9

# End machine code for function getclass.

********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function getclass: NoPHIs, TracksLiveness

0B	bb.0.entry:
32B	  $al = MOV8ri 66, debug-location !102; mainft.c:115:9
48B	  RET 0, killed $al, debug-location !102; mainft.c:115:9

# End machine code for function getclass.

