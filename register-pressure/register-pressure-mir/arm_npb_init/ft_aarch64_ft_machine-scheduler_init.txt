Before MISched:
# Machine code for function appft: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=8, align=8, at location [SP]
  fi#2: size=8, align=8, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
  fi#6: size=4, align=4, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=8, align=8, at location [SP]
  fi#16: size=8192, align=16, at location [SP]
  fi#17: size=4096, align=16, at location [SP]
  fi#18: size=4096, align=16, at location [SP]
Function Live Ins: $w0 in %1, $x1 in %2, $x2 in %3

bb.0.entry:
  successors: %bb.1(0x80000000); %bb.1(100.00%)
  liveins: $w0, $x1, $x2
  %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
  %3:gpr64 = COPY $x2
  %2:gpr64 = COPY $x1
  %1:gpr32 = COPY $w0
  STRWui %1:gpr32, %220:gpr64sp, 17 :: (store 4 into %ir.niter.addr)
  STRXui %2:gpr64, %stack.1.total_time.addr, 0 :: (store 8 into %ir.total_time.addr)
  STRXui %3:gpr64, %stack.2.verified.addr, 0 :: (store 8 into %ir.verified.addr)
  %4:gpr32 = MOVi32imm 1
  STRWui %4:gpr32, %220:gpr64sp, 11, debug-location !89 :: (store 4 into %ir.i); appft.c:61:12

bb.1.for.cond:
; predecessors: %bb.0, %bb.2
  successors: %bb.2(0x7c000000), %bb.3(0x04000000); %bb.2(96.88%), %bb.3(3.12%)

  %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
  dead $wzr = SUBSWri %5:gpr32common, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  Bcc 12, %bb.3, implicit killed $nzcv, debug-location !95; appft.c:61:5
  B %bb.2, debug-location !95; appft.c:61:5

bb.2.for.body:
; predecessors: %bb.1
  successors: %bb.1(0x80000000); %bb.1(100.00%)

  %217:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !96 :: (dereferenceable load 4 from %ir.i); appft.c:62:21
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !98; appft.c:62:9
  $w0 = COPY %217:gpr32, debug-location !98; appft.c:62:9
  BL @timer_clear, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !98; appft.c:62:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !98; appft.c:62:9
  %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !99; appft.c:61:27
  STRWui %219:gpr32common, %220:gpr64sp, 11, debug-location !99 :: (store 4 into %ir.i); appft.c:61:27
  B %bb.1, debug-location !100; appft.c:61:5

bb.3.for.end:
; predecessors: %bb.1
  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !103; appft.c:65:5
  $w0 = MOVi32imm 2, debug-location !103; appft.c:65:5
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !103; appft.c:65:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !103; appft.c:65:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; appft.c:66:5
  %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
  %10:gpr32 = MOVi32imm 256
  $w0 = MOVi32imm 512, debug-location !104; appft.c:66:5
  $w1 = MOVi32imm 256, debug-location !104; appft.c:66:5
  $w2 = MOVi32imm 256, debug-location !104; appft.c:66:5
  $x3 = COPY %8:gpr64, debug-location !104; appft.c:66:5
  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $x3, implicit-def $sp, debug-location !104; appft.c:66:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; appft.c:66:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !106; appft.c:68:5
  $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5
  $x1 = ADDXri %stack.16.exp1, 0, 0, debug-location !106; appft.c:68:5
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !106; appft.c:68:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !108; appft.c:69:5
  $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5
  $x1 = ADDXri %stack.17.exp2, 0, 0, debug-location !108; appft.c:69:5
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !108; appft.c:69:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !110; appft.c:70:5
  %13:gpr64common = ADDXri %stack.18.exp3, 0, 0
  $w0 = MOVi32imm 256, debug-location !110; appft.c:70:5
  $x1 = ADDXri %stack.18.exp3, 0, 0, debug-location !110; appft.c:70:5
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !110; appft.c:70:5
  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !114; appft.c:71:5
  STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  %15:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !114; appft.c:71:5
  $w0 = MOVi32imm 1, debug-location !114; appft.c:71:5
  $w1 = MOVi32imm 512, debug-location !114; appft.c:71:5
  $w2 = MOVi32imm 256, debug-location !114; appft.c:71:5
  $w3 = MOVi32imm 256, debug-location !114; appft.c:71:5
  $x4 = COPY %8:gpr64, debug-location !114; appft.c:71:5
  $x5 = COPY %15:gpr64, debug-location !114; appft.c:71:5
  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !114; appft.c:71:5
  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !114; appft.c:71:5
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !114; appft.c:71:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !115; appft.c:72:5
  $w0 = MOVi32imm 2, debug-location !115; appft.c:72:5
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !115; appft.c:72:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !115; appft.c:72:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !116; appft.c:74:5
  $w0 = MOVi32imm 1, debug-location !116; appft.c:74:5
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !116; appft.c:74:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !116; appft.c:74:5
  %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  %18:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  CBZW %18:gpr32, %bb.5, debug-location !119; appft.c:78:9
  B %bb.4, debug-location !119; appft.c:78:9

bb.4.if.then:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !120; appft.c:79:9
  $w0 = MOVi32imm 13, debug-location !120; appft.c:79:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !120; appft.c:79:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !120; appft.c:79:9

bb.5.if.end:
; predecessors: %bb.3, %bb.4
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  %21:gpr32 = MOVi32imm 128
  STRWui %21:gpr32, %220:gpr64sp, 6, debug-location !122 :: (store 4 into %ir.n22); appft.c:82:9
  STRWui %21:gpr32, %220:gpr64sp, 5, debug-location !123 :: (store 4 into %ir.n32); appft.c:83:9
  %22:gpr64 = MOVi64imm -4682421225964825446
  STRXui %22:gpr64, %stack.15.ap, 0, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  STRWui $wzr, %220:gpr64sp, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  undef %205.sub_32:gpr64 = MOVi32imm 1050624
  %207:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  undef %211.sub_32:gpr64 = MOVi32imm 4104

bb.6.for.cond8:
; predecessors: %bb.5, %bb.13
  successors: %bb.7(0x7c000000), %bb.14(0x04000000); %bb.7(96.88%), %bb.14(3.12%)

  %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  dead $wzr = SUBSWri %24:gpr32common, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  Bcc 12, %bb.14, implicit killed $nzcv, debug-location !131; appft.c:85:5
  B %bb.7, debug-location !131; appft.c:85:5

bb.7.for.body10:
; predecessors: %bb.6
  successors: %bb.8(0x80000000); %bb.8(100.00%)

  %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  %171:gpr32 = LDRWui %220:gpr64sp, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  %172:gpr32 = SDIVWr %170:gpr32, %171:gpr32, debug-location !136; appft.c:86:21
  %173:gpr32 = nsw SUBWrs %170:gpr32, %172:gpr32, 8, debug-location !138; appft.c:86:16
  STRWui %173:gpr32, %220:gpr64sp, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  %174:gpr32 = nsw MADDWrrr %173:gpr32, %173:gpr32, $wzr, debug-location !142; appft.c:87:18
  STRWui %174:gpr32, %220:gpr64sp, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  STRWui $wzr, %220:gpr64sp, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16

bb.8.for.cond12:
; predecessors: %bb.7, %bb.12
  successors: %bb.9(0x7c000000), %bb.13(0x04000000); %bb.9(96.88%), %bb.13(3.12%)

  %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  dead $wzr = SUBSWri %176:gpr32common, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  Bcc 12, %bb.13, implicit killed $nzcv, debug-location !150; appft.c:88:9
  B %bb.9, debug-location !150; appft.c:88:9

bb.9.for.body14:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  %181:gpr32 = LDRWui %220:gpr64sp, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  %182:gpr32 = SDIVWr %180:gpr32, %181:gpr32, debug-location !155; appft.c:89:25
  %183:gpr32 = nsw SUBWrs %180:gpr32, %182:gpr32, 8, debug-location !157; appft.c:89:20
  STRWui %183:gpr32, %220:gpr64sp, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  %184:gpr32 = LDRWui %220:gpr64sp, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  %186:gpr32 = MADDWrrr %183:gpr32, %183:gpr32, %184:gpr32, debug-location !163; appft.c:90:23
  STRWui %186:gpr32, %220:gpr64sp, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  STRWui $wzr, %220:gpr64sp, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20

bb.10.for.cond19:
; predecessors: %bb.9, %bb.11
  successors: %bb.11(0x7c000000), %bb.12(0x04000000); %bb.11(96.88%), %bb.12(3.12%)

  %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  dead $wzr = SUBSWri %188:gpr32common, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  Bcc 12, %bb.12, implicit killed $nzcv, debug-location !171; appft.c:91:13
  B %bb.11, debug-location !171; appft.c:91:13

bb.11.for.body21:
; predecessors: %bb.10
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  %193:gpr32 = LDRWui %220:gpr64sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  %194:gpr32 = SDIVWr %192:gpr32, %193:gpr32, debug-location !176; appft.c:92:29
  %195:gpr32 = nsw SUBWrs %192:gpr32, %194:gpr32, 9, debug-location !178; appft.c:92:24
  STRWui %195:gpr32, %220:gpr64sp, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  %196:fpr64 = LDRDui %stack.15.ap, 0, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  %198:gpr32 = LDRWui %220:gpr64sp, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  %199:gpr32 = MADDWrrr %195:gpr32, %195:gpr32, %198:gpr32, debug-location !185; appft.c:93:62
  %200:fpr64 = SCVTFUWDri %199:gpr32, debug-location !186; appft.c:93:45
  %201:fpr64 = FMULDrr %196:fpr64, %200:fpr64, debug-location !187; appft.c:93:43
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
  $d0 = COPY %201:fpr64, debug-location !188; appft.c:93:36
  BL @exp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit killed $d0, implicit-def $sp, implicit-def $d0, debug-location !188; appft.c:93:36
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
  %202:fpr64 = COPY killed $d0, debug-location !188; appft.c:93:36
  %203:gpr64 = LDRSWui %220:gpr64sp, 11, debug-location !189 :: (dereferenceable load 4 from %ir.i); appft.c:93:25
  %208:gpr64 = MADDXrrr %203:gpr64, %205:gpr64, %207:gpr64, debug-location !190; appft.c:93:17
  %209:gpr64 = LDRSWui %220:gpr64sp, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k); appft.c:93:28
  %213:gpr64common = MADDXrrr %209:gpr64, %211:gpr64, %208:gpr64, debug-location !190; appft.c:93:17
  %214:gpr64 = LDRSWui %220:gpr64sp, 10, debug-location !192 :: (dereferenceable load 4 from %ir.j); appft.c:93:31
  STRDroX %202:fpr64, %213:gpr64common, %214:gpr64, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  %215:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !194 :: (dereferenceable load 4 from %ir.j); appft.c:91:34
  %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !194; appft.c:91:34
  STRWui %216:gpr32common, %220:gpr64sp, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  B %bb.10, debug-location !195; appft.c:91:13

bb.12.for.inc35:
; predecessors: %bb.10
  successors: %bb.8(0x80000000); %bb.8(100.00%)

  %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  %191:gpr32common = nsw ADDWri %190:gpr32common, 1, 0, debug-location !198; appft.c:88:30
  STRWui %191:gpr32common, %220:gpr64sp, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  B %bb.8, debug-location !199; appft.c:88:9

bb.13.for.inc38:
; predecessors: %bb.8
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  %179:gpr32common = nsw ADDWri %178:gpr32common, 1, 0, debug-location !202; appft.c:85:26
  STRWui %179:gpr32common, %220:gpr64sp, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  B %bb.6, debug-location !203; appft.c:85:5

bb.14.for.end40:
; predecessors: %bb.6
  successors: %bb.15(0x50000000), %bb.16(0x30000000); %bb.15(62.50%), %bb.16(37.50%)

  %27:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !206 :: (dereferenceable load 4 from @timers_enabled); appft.c:97:9
  CBZW %27:gpr32, %bb.16, debug-location !208; appft.c:97:9
  B %bb.15, debug-location !208; appft.c:97:9

bb.15.if.then42:
; predecessors: %bb.14
  successors: %bb.16(0x80000000); %bb.16(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !209; appft.c:98:9
  $w0 = MOVi32imm 13, debug-location !209; appft.c:98:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !209; appft.c:98:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !209; appft.c:98:9

bb.16.if.end43:
; predecessors: %bb.14, %bb.15
  successors: %bb.17(0x50000000), %bb.18(0x30000000); %bb.17(62.50%), %bb.18(37.50%)

  %30:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !210 :: (dereferenceable load 4 from @timers_enabled); appft.c:100:9
  CBZW %30:gpr32, %bb.18, debug-location !212; appft.c:100:9
  B %bb.17, debug-location !212; appft.c:100:9

bb.17.if.then45:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !213; appft.c:101:9
  $w0 = MOVi32imm 12, debug-location !213; appft.c:101:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !213; appft.c:101:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !213; appft.c:101:9

bb.18.if.end46:
; predecessors: %bb.16, %bb.17
  successors: %bb.19(0x50000000), %bb.20(0x30000000); %bb.19(62.50%), %bb.20(37.50%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !214; appft.c:102:5
  %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
  $w0 = MOVi32imm 512, debug-location !214; appft.c:102:5
  $w1 = MOVi32imm 256, debug-location !214; appft.c:102:5
  $w2 = MOVi32imm 256, debug-location !214; appft.c:102:5
  $x3 = COPY %32:gpr64, debug-location !214; appft.c:102:5
  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $x3, implicit-def $sp, debug-location !214; appft.c:102:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !214; appft.c:102:5
  %36:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !215 :: (dereferenceable load 4 from @timers_enabled); appft.c:103:9
  CBZW %36:gpr32, %bb.20, debug-location !217; appft.c:103:9
  B %bb.19, debug-location !217; appft.c:103:9

bb.19.if.then48:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !218; appft.c:104:9
  $w0 = MOVi32imm 12, debug-location !218; appft.c:104:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !218; appft.c:104:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !218; appft.c:104:9

bb.20.if.end49:
; predecessors: %bb.18, %bb.19
  successors: %bb.21(0x50000000), %bb.22(0x30000000); %bb.21(62.50%), %bb.22(37.50%)

  %39:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !219 :: (dereferenceable load 4 from @timers_enabled); appft.c:105:9
  CBZW %39:gpr32, %bb.22, debug-location !221; appft.c:105:9
  B %bb.21, debug-location !221; appft.c:105:9

bb.21.if.then51:
; predecessors: %bb.20
  successors: %bb.22(0x80000000); %bb.22(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !222; appft.c:106:9
  $w0 = MOVi32imm 15, debug-location !222; appft.c:106:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !222; appft.c:106:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !222; appft.c:106:9

bb.22.if.end52:
; predecessors: %bb.20, %bb.21
  successors: %bb.23(0x50000000), %bb.24(0x30000000); %bb.23(62.50%), %bb.24(37.50%)

  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !226; appft.c:107:5
  %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
  STRXui %42:gpr64common, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  %43:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !226; appft.c:107:5
  %44:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !226; appft.c:107:5
  %45:gpr32 = MOVi32imm 1
  $w0 = MOVi32imm 1, debug-location !226; appft.c:107:5
  $w1 = MOVi32imm 512, debug-location !226; appft.c:107:5
  $w2 = MOVi32imm 256, debug-location !226; appft.c:107:5
  $w3 = MOVi32imm 256, debug-location !226; appft.c:107:5
  $x4 = COPY %43:gpr64, debug-location !226; appft.c:107:5
  $x5 = COPY %44:gpr64, debug-location !226; appft.c:107:5
  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !226; appft.c:107:5
  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !226; appft.c:107:5
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !226; appft.c:107:5
  %51:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !227 :: (dereferenceable load 4 from @timers_enabled); appft.c:108:9
  CBZW %51:gpr32, %bb.24, debug-location !229; appft.c:108:9
  B %bb.23, debug-location !229; appft.c:108:9

bb.23.if.then57:
; predecessors: %bb.22
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !230; appft.c:109:9
  $w0 = MOVi32imm 15, debug-location !230; appft.c:109:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !230; appft.c:109:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !230; appft.c:109:9

bb.24.if.end58:
; predecessors: %bb.22, %bb.23
  successors: %bb.25(0x80000000); %bb.25(100.00%)

  STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  %133:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt
  %134:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y
  %135:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  %160:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums

bb.25.for.cond59:
; predecessors: %bb.24, %bb.38
  successors: %bb.26(0x7c000000), %bb.39(0x04000000); %bb.26(96.88%), %bb.39(3.12%)

  %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  %55:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  %57:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  dead $wzr = SUBSWrr %54:gpr32, %55:gpr32, implicit-def $nzcv, debug-location !239; appft.c:111:5
  Bcc 12, %bb.39, implicit killed $nzcv, debug-location !239; appft.c:111:5
  B %bb.26, debug-location !239; appft.c:111:5

bb.26.for.body62:
; predecessors: %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

  CBZW %57:gpr32, %bb.28, debug-location !240; appft.c:112:13
  B %bb.27, debug-location !240; appft.c:112:13

bb.27.if.then64:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !242; appft.c:113:13
  $w0 = MOVi32imm 11, debug-location !242; appft.c:113:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !242; appft.c:113:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !242; appft.c:113:13

bb.28.if.end65:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x50000000), %bb.30(0x30000000); %bb.29(62.50%), %bb.30(37.50%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; appft.c:114:9
  $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
  $w1 = MOVi32imm 256, debug-location !244; appft.c:114:9
  $w2 = MOVi32imm 256, debug-location !244; appft.c:114:9
  $x3 = COPY %133:gpr64, debug-location !244; appft.c:114:9
  $x4 = COPY %134:gpr64, debug-location !244; appft.c:114:9
  $x5 = COPY %135:gpr64, debug-location !244; appft.c:114:9
  BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $x3, implicit killed $x4, implicit killed $x5, implicit-def $sp, debug-location !244; appft.c:114:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; appft.c:114:9
  %139:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !245 :: (dereferenceable load 4 from @timers_enabled); appft.c:115:13
  CBZW %139:gpr32, %bb.30, debug-location !247; appft.c:115:13
  B %bb.29, debug-location !247; appft.c:115:13

bb.29.if.then67:
; predecessors: %bb.28
  successors: %bb.30(0x80000000); %bb.30(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !248; appft.c:116:13
  $w0 = MOVi32imm 11, debug-location !248; appft.c:116:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !248; appft.c:116:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !248; appft.c:116:13

bb.30.if.end68:
; predecessors: %bb.28, %bb.29
  successors: %bb.31(0x50000000), %bb.32(0x30000000); %bb.31(62.50%), %bb.32(37.50%)

  %142:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !249 :: (dereferenceable load 4 from @timers_enabled); appft.c:117:13
  CBZW %142:gpr32, %bb.32, debug-location !251; appft.c:117:13
  B %bb.31, debug-location !251; appft.c:117:13

bb.31.if.then70:
; predecessors: %bb.30
  successors: %bb.32(0x80000000); %bb.32(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !252; appft.c:118:13
  $w0 = MOVi32imm 15, debug-location !252; appft.c:118:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !252; appft.c:118:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !252; appft.c:118:13

bb.32.if.end71:
; predecessors: %bb.30, %bb.31
  successors: %bb.33(0x50000000), %bb.34(0x30000000); %bb.33(62.50%), %bb.34(37.50%)

  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !256; appft.c:119:9
  STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  $w0 = MOVi32imm -1, debug-location !256; appft.c:119:9
  $w1 = MOVi32imm 512, debug-location !256; appft.c:119:9
  $w2 = MOVi32imm 256, debug-location !256; appft.c:119:9
  $w3 = MOVi32imm 256, debug-location !256; appft.c:119:9
  $x4 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  $x5 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !256; appft.c:119:9
  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !256; appft.c:119:9
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !256; appft.c:119:9
  %153:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !257 :: (dereferenceable load 4 from @timers_enabled); appft.c:120:13
  CBZW %153:gpr32, %bb.34, debug-location !259; appft.c:120:13
  B %bb.33, debug-location !259; appft.c:120:13

bb.33.if.then76:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !260; appft.c:121:13
  $w0 = MOVi32imm 15, debug-location !260; appft.c:121:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !260; appft.c:121:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !260; appft.c:121:13

bb.34.if.end77:
; predecessors: %bb.32, %bb.33
  successors: %bb.35(0x50000000), %bb.36(0x30000000); %bb.35(62.50%), %bb.36(37.50%)

  %156:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); appft.c:122:13
  CBZW %156:gpr32, %bb.36, debug-location !263; appft.c:122:13
  B %bb.35, debug-location !263; appft.c:122:13

bb.35.if.then79:
; predecessors: %bb.34
  successors: %bb.36(0x80000000); %bb.36(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !264; appft.c:123:13
  $w0 = MOVi32imm 10, debug-location !264; appft.c:123:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !264; appft.c:123:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !264; appft.c:123:13

bb.36.if.end80:
; predecessors: %bb.34, %bb.35
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  %161:gpr64 = ADDXrs %160:gpr64, %158:gpr64, 4, debug-location !266; appft.c:124:28
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
  $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
  $w1 = COPY %158.sub_32:gpr64, debug-location !268; appft.c:124:9
  $w2 = MOVi32imm 512, debug-location !268; appft.c:124:9
  $w3 = MOVi32imm 256, debug-location !268; appft.c:124:9
  $w4 = MOVi32imm 256, debug-location !268; appft.c:124:9
  $x5 = COPY %133:gpr64, debug-location !268; appft.c:124:9
  BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $w4, implicit killed $x5, implicit-def $sp, debug-location !268; appft.c:124:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
  %166:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !269 :: (dereferenceable load 4 from @timers_enabled); appft.c:125:13
  CBZW %166:gpr32, %bb.38, debug-location !271; appft.c:125:13
  B %bb.37, debug-location !271; appft.c:125:13

bb.37.if.then84:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !272; appft.c:126:13
  $w0 = MOVi32imm 10, debug-location !272; appft.c:126:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !272; appft.c:126:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !272; appft.c:126:13

bb.38.for.inc86:
; predecessors: %bb.36, %bb.37
  successors: %bb.25(0x80000000); %bb.25(100.00%)

  %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !273; appft.c:111:33
  STRWui %169:gpr32common, %220:gpr64sp, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  B %bb.25, debug-location !274; appft.c:111:5

bb.39.do.end92:
; predecessors: %bb.25
  successors: %bb.40(0x50000000), %bb.41(0x30000000); %bb.40(62.50%), %bb.41(37.50%)

  CBZW %57:gpr32, %bb.41, debug-location !277; appft.c:133:9
  B %bb.40, debug-location !277; appft.c:133:9

bb.40.if.then94:
; predecessors: %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !278; appft.c:134:9
  $w0 = MOVi32imm 14, debug-location !278; appft.c:134:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !278; appft.c:134:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !278; appft.c:134:9

bb.41.if.end95:
; predecessors: %bb.39, %bb.40
  successors: %bb.42(0x50000000), %bb.43(0x30000000); %bb.42(62.50%), %bb.43(37.50%)

  %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  %61:gpr64 = LDRXui %stack.2.verified.addr, 0, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
  %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
  $w0 = MOVi32imm 512, debug-location !282; appft.c:135:5
  $w1 = MOVi32imm 256, debug-location !282; appft.c:135:5
  $w2 = MOVi32imm 256, debug-location !282; appft.c:135:5
  $w3 = COPY %60:gpr32, debug-location !282; appft.c:135:5
  $x4 = COPY %62:gpr64, debug-location !282; appft.c:135:5
  $x5 = COPY %61:gpr64, debug-location !282; appft.c:135:5
  BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit-def $sp, debug-location !282; appft.c:135:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
  %66:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !283 :: (dereferenceable load 4 from @timers_enabled); appft.c:136:9
  CBZW %66:gpr32, %bb.43, debug-location !285; appft.c:136:9
  B %bb.42, debug-location !285; appft.c:136:9

bb.42.if.then97:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !286; appft.c:137:9
  $w0 = MOVi32imm 14, debug-location !286; appft.c:137:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !286; appft.c:137:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !286; appft.c:137:9

bb.43.if.end98:
; predecessors: %bb.41, %bb.42
  successors: %bb.44(0x50000000), %bb.45(0x30000000); %bb.44(62.50%), %bb.45(37.50%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !287; appft.c:138:5
  $w0 = MOVi32imm 1, debug-location !287; appft.c:138:5
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !287; appft.c:138:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !287; appft.c:138:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !288; appft.c:140:19
  $w0 = MOVi32imm 1, debug-location !288; appft.c:140:19
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !288; appft.c:140:19
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !288; appft.c:140:19
  %69:fpr64 = COPY killed $d0, debug-location !288; appft.c:140:19
  %70:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  STRDui %69:fpr64, %70:gpr64common, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  %72:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  CBZW %72:gpr32, %bb.45, debug-location !293; appft.c:141:9
  B %bb.44, debug-location !293; appft.c:141:9

bb.44.if.end102:
; predecessors: %bb.43
  successors: %bb.45(0x80000000); %bb.45(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !294; appft.c:144:5
  %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
  $x0 = COPY %73:gpr64, debug-location !294; appft.c:144:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !294; appft.c:144:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !295; appft.c:145:60
  $w0 = MOVi32imm 1, debug-location !295; appft.c:145:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !295; appft.c:145:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !295; appft.c:145:60
  %76:fpr64 = COPY killed $d0, debug-location !295; appft.c:145:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !296; appft.c:145:5
  %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
  %78:gpr64 = MOVaddr target-flags(aarch64-page) @.str.2, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, debug-location !296; appft.c:145:5
  $x0 = COPY %77:gpr64, debug-location !296; appft.c:145:5
  $x1 = COPY %78:gpr64, debug-location !296; appft.c:145:5
  $d0 = COPY %76:fpr64, debug-location !296; appft.c:145:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !296; appft.c:145:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !297; appft.c:146:60
  $w0 = MOVi32imm 2, debug-location !297; appft.c:146:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !297; appft.c:146:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !297; appft.c:146:60
  %81:fpr64 = COPY killed $d0, debug-location !297; appft.c:146:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !298; appft.c:146:5
  %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
  $x0 = COPY %77:gpr64, debug-location !298; appft.c:146:5
  $x1 = COPY %82:gpr64, debug-location !298; appft.c:146:5
  $d0 = COPY %81:fpr64, debug-location !298; appft.c:146:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !298; appft.c:146:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !299; appft.c:147:60
  $w0 = MOVi32imm 3, debug-location !299; appft.c:147:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !299; appft.c:147:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !299; appft.c:147:60
  %85:fpr64 = COPY killed $d0, debug-location !299; appft.c:147:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !300; appft.c:147:5
  %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
  $x0 = COPY %77:gpr64, debug-location !300; appft.c:147:5
  $x1 = COPY %86:gpr64, debug-location !300; appft.c:147:5
  $d0 = COPY %85:fpr64, debug-location !300; appft.c:147:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !300; appft.c:147:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !301; appft.c:148:60
  $w0 = MOVi32imm 4, debug-location !301; appft.c:148:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !301; appft.c:148:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !301; appft.c:148:60
  %89:fpr64 = COPY killed $d0, debug-location !301; appft.c:148:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !302; appft.c:148:5
  %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
  $x0 = COPY %77:gpr64, debug-location !302; appft.c:148:5
  $x1 = COPY %90:gpr64, debug-location !302; appft.c:148:5
  $d0 = COPY %89:fpr64, debug-location !302; appft.c:148:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !302; appft.c:148:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !303; appft.c:149:60
  $w0 = MOVi32imm 7, debug-location !303; appft.c:149:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !303; appft.c:149:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !303; appft.c:149:60
  %93:fpr64 = COPY killed $d0, debug-location !303; appft.c:149:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !304; appft.c:149:5
  %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
  $x0 = COPY %77:gpr64, debug-location !304; appft.c:149:5
  $x1 = COPY %94:gpr64, debug-location !304; appft.c:149:5
  $d0 = COPY %93:fpr64, debug-location !304; appft.c:149:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !304; appft.c:149:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !305; appft.c:150:60
  $w0 = MOVi32imm 8, debug-location !305; appft.c:150:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !305; appft.c:150:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !305; appft.c:150:60
  %97:fpr64 = COPY killed $d0, debug-location !305; appft.c:150:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !306; appft.c:150:5
  %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
  $x0 = COPY %77:gpr64, debug-location !306; appft.c:150:5
  $x1 = COPY %98:gpr64, debug-location !306; appft.c:150:5
  $d0 = COPY %97:fpr64, debug-location !306; appft.c:150:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !306; appft.c:150:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !307; appft.c:151:60
  $w0 = MOVi32imm 9, debug-location !307; appft.c:151:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !307; appft.c:151:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !307; appft.c:151:60
  %101:fpr64 = COPY killed $d0, debug-location !307; appft.c:151:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !308; appft.c:151:5
  %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
  $x0 = COPY %77:gpr64, debug-location !308; appft.c:151:5
  $x1 = COPY %102:gpr64, debug-location !308; appft.c:151:5
  $d0 = COPY %101:fpr64, debug-location !308; appft.c:151:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !308; appft.c:151:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !309; appft.c:152:60
  $w0 = MOVi32imm 10, debug-location !309; appft.c:152:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !309; appft.c:152:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !309; appft.c:152:60
  %105:fpr64 = COPY killed $d0, debug-location !309; appft.c:152:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; appft.c:152:5
  %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
  $x0 = COPY %77:gpr64, debug-location !310; appft.c:152:5
  $x1 = COPY %106:gpr64, debug-location !310; appft.c:152:5
  $d0 = COPY %105:fpr64, debug-location !310; appft.c:152:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; appft.c:152:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; appft.c:153:60
  $w0 = MOVi32imm 11, debug-location !311; appft.c:153:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !311; appft.c:153:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; appft.c:153:60
  %109:fpr64 = COPY killed $d0, debug-location !311; appft.c:153:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !312; appft.c:153:5
  %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
  $x0 = COPY %77:gpr64, debug-location !312; appft.c:153:5
  $x1 = COPY %110:gpr64, debug-location !312; appft.c:153:5
  $d0 = COPY %109:fpr64, debug-location !312; appft.c:153:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !312; appft.c:153:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !313; appft.c:154:60
  $w0 = MOVi32imm 12, debug-location !313; appft.c:154:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !313; appft.c:154:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !313; appft.c:154:60
  %113:fpr64 = COPY killed $d0, debug-location !313; appft.c:154:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !314; appft.c:154:5
  %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
  $x0 = COPY %77:gpr64, debug-location !314; appft.c:154:5
  $x1 = COPY %114:gpr64, debug-location !314; appft.c:154:5
  $d0 = COPY %113:fpr64, debug-location !314; appft.c:154:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !314; appft.c:154:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !315; appft.c:155:60
  $w0 = MOVi32imm 13, debug-location !315; appft.c:155:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !315; appft.c:155:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !315; appft.c:155:60
  %117:fpr64 = COPY killed $d0, debug-location !315; appft.c:155:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !316; appft.c:155:5
  %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
  $x0 = COPY %77:gpr64, debug-location !316; appft.c:155:5
  $x1 = COPY %118:gpr64, debug-location !316; appft.c:155:5
  $d0 = COPY %117:fpr64, debug-location !316; appft.c:155:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !316; appft.c:155:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !317; appft.c:156:60
  $w0 = MOVi32imm 14, debug-location !317; appft.c:156:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !317; appft.c:156:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !317; appft.c:156:60
  %121:fpr64 = COPY killed $d0, debug-location !317; appft.c:156:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !318; appft.c:156:5
  %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
  $x0 = COPY %77:gpr64, debug-location !318; appft.c:156:5
  $x1 = COPY %122:gpr64, debug-location !318; appft.c:156:5
  $d0 = COPY %121:fpr64, debug-location !318; appft.c:156:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !318; appft.c:156:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !319; appft.c:157:60
  $w0 = MOVi32imm 15, debug-location !319; appft.c:157:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !319; appft.c:157:60
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !319; appft.c:157:60
  %125:fpr64 = COPY killed $d0, debug-location !319; appft.c:157:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !320; appft.c:157:5
  %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
  $x0 = COPY %77:gpr64, debug-location !320; appft.c:157:5
  $x1 = COPY %126:gpr64, debug-location !320; appft.c:157:5
  $d0 = COPY %125:fpr64, debug-location !320; appft.c:157:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !320; appft.c:157:5
  %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  %129:fpr64 = LDRDui %128:gpr64common, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5
  %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
  $x0 = COPY %77:gpr64, debug-location !323; appft.c:158:5
  $x1 = COPY %130:gpr64, debug-location !323; appft.c:158:5
  $d0 = COPY %129:fpr64, debug-location !323; appft.c:158:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit killed $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5

bb.45.return:
; predecessors: %bb.43, %bb.44

  RET_ReallyLR debug-location !324; appft.c:159:1

# End machine code for function appft.

********** MI Scheduling **********
appft:%bb.0 entry
  From: %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
    To: End RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(8): Data Latency=1 Reg=%220
    SU(4): Data Latency=1 Reg=%220
  Single Issue       : false;
SU(1):   %3:gpr64 = COPY $x2
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%3
  Single Issue       : false;
SU(2):   %2:gpr64 = COPY $x1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(5): Data Latency=0 Reg=%2
  Single Issue       : false;
SU(3):   %1:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(4): Data Latency=0 Reg=%1
  Single Issue       : false;
SU(4):   STRWui %1:gpr32, %220:gpr64sp, 17 :: (store 4 into %ir.niter.addr)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%1
    SU(0): Data Latency=1 Reg=%220
  Single Issue       : false;
SU(5):   STRXui %2:gpr64, %stack.1.total_time.addr, 0 :: (store 8 into %ir.total_time.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%2
  Single Issue       : false;
SU(6):   STRXui %3:gpr64, %stack.2.verified.addr, 0 :: (store 8 into %ir.verified.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%3
  Single Issue       : false;
SU(7):   %4:gpr32 = MOVi32imm 1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(8): Data Latency=1 Reg=%4
  Single Issue       : false;
SU(8):   STRWui %4:gpr32, %220:gpr64sp, 11, debug-location !89 :: (store 4 into %ir.i); appft.c:61:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%4
    SU(0): Data Latency=1 Reg=%220
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 7 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %3:gpr64 = COPY $x2
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 7 2 3 6 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(2) PHYS-REG                           
  Cand SU(2) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(2) %2:gpr64 = COPY $x1
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 7 6 3 5 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(3) PHYS-REG                           
  Cand SU(3) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(3) %1:gpr32 = COPY $w0
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 7 6 5 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) STRWui %4:gpr32, %220:gpr64sp, 11, debug-location !89 :: (store 4 into %ir.i); appft.c:61:12
  Ready @0c
  BotQ.A TopLatency SU(8) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 5 7 
Queue TopQ.P: 
Queue TopQ.A: 0 7 6 5 
BotQ.A RemLatency SU(4) 1c
  BotQ.A RemainingLatency 1 + 1c > CritPath 1
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) STRWui %1:gpr32, %220:gpr64sp, 17 :: (store 4 into %ir.niter.addr)
  Ready @1c
  BotQ.A TopLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 7 6 5 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %4:gpr32 = MOVi32imm 1
  Ready @2c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 5 
Queue TopQ.P: 
Queue TopQ.A: 0 5 6 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) STRXui %3:gpr64, %stack.2.verified.addr, 0 :: (store 8 into %ir.verified.addr)
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 5 
Queue TopQ.P: 
Queue TopQ.A: 0 5 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) STRXui %2:gpr64, %stack.1.total_time.addr, 0 :: (store 8 into %ir.total_time.addr)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(1):   %3:gpr64 = COPY $x2
SU(2):   %2:gpr64 = COPY $x1
SU(3):   %1:gpr32 = COPY $w0
SU(0):   %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
SU(5):   STRXui %2:gpr64, %stack.1.total_time.addr, 0 :: (store 8 into %ir.total_time.addr)
SU(6):   STRXui %3:gpr64, %stack.2.verified.addr, 0 :: (store 8 into %ir.verified.addr)
SU(7):   %4:gpr32 = MOVi32imm 1
SU(4):   STRWui %1:gpr32, %220:gpr64sp, 17 :: (store 4 into %ir.niter.addr)
SU(8):   STRWui %4:gpr32, %220:gpr64sp, 11, debug-location !89 :: (store 4 into %ir.i); appft.c:61:12

********** MI Scheduling **********
appft:%bb.1 for.cond
  From: %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
    To: Bcc 12, %bb.3, implicit killed $nzcv, debug-location !95; appft.c:61:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%5
  Single Issue       : false;
SU(1):   dead $wzr = SUBSWri %5:gpr32common, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.3, implicit killed $nzcv, debug-location !95; appft.c:61:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri %5:gpr32common, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  Ready @1c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.1 ***
SU(0):   %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
SU(1):   dead $wzr = SUBSWri %5:gpr32common, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5

********** MI Scheduling **********
appft:%bb.2 for.body
  From: %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
    To: B %bb.1, debug-location !100; appft.c:61:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%218
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !99; appft.c:61:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%218
  Successors:
    SU(2): Data Latency=1 Reg=%219
  Single Issue       : false;
SU(2):   STRWui %219:gpr32common, %220:gpr64sp, 11, debug-location !99 :: (store 4 into %ir.i); appft.c:61:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%219
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.1, debug-location !100; appft.c:61:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %219:gpr32common, %220:gpr64sp, 11, debug-location !99 :: (store 4 into %ir.i); appft.c:61:27
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !99; appft.c:61:27
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
SU(1):   %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !99; appft.c:61:27
SU(2):   STRWui %219:gpr32common, %220:gpr64sp, 11, debug-location !99 :: (store 4 into %ir.i); appft.c:61:27

********** MI Scheduling **********
appft:%bb.3 for.end
  From: %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
    To: CBZW %18:gpr32, %bb.5, debug-location !119; appft.c:78:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%17
  Single Issue       : false;
SU(1):   %18:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%17
  Successors:
    ExitSU: Data Latency=4 Reg=%18
  Single Issue       : false;
ExitSU:   CBZW %18:gpr32, %bb.5, debug-location !119; appft.c:78:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%18
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %18:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
SU(1):   %18:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9

********** MI Scheduling **********
appft:%bb.3 for.end
  From: STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %15:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%15
  Single Issue       : false;
SU(2):   $w0 = MOVi32imm 1, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w1 = MOVi32imm 512, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $w2 = MOVi32imm 256, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(5):   $w3 = MOVi32imm 256, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(6):   $x4 = COPY %8:gpr64, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(7):   $x5 = COPY %15:gpr64, debug-location !114; appft.c:71:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%15
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(8):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(9):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit killed $w3, implicit killed $x4, implicit killed $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(9): Ord  Latency=1 Artificial
    SU(8): Ord  Latency=1 Artificial
    SU(7): Ord  Latency=0 Artificial
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 8 5 4 3 2 
Queue BotQ.A: 0 7 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 8 9 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(7) $x5 = COPY %15:gpr64, debug-location !114; appft.c:71:5
  Ready @0c
  BotQ.A TopLatency SU(7) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 8 5 4 3 2 1 
Queue BotQ.A: 0 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 8 9 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(6) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(6) $x4 = COPY %8:gpr64, debug-location !114; appft.c:71:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 8 5 4 3 2 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 1 2 3 4 5 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 3 4 5 9 
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(2) PHYS-REG                           
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(8) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $w3 = MOVi32imm 256, debug-location !114; appft.c:71:5
  Ready @1c
  BotQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 1 2 3 4 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 3 4 9 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(2) PHYS-REG                           
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w2 = MOVi32imm 256, debug-location !114; appft.c:71:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 1 2 3 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 3 9 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(2) PHYS-REG                           
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w1 = MOVi32imm 512, debug-location !114; appft.c:71:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 1 2 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 9 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(2) PHYS-REG                           
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w0 = MOVi32imm 1, debug-location !114; appft.c:71:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 1 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 9 
  BotQ.A RemainingLatency 0 + 5c > CritPath 1
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !114; appft.c:71:5
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 1 
Queue TopQ.P: 
Queue TopQ.A: 8 1 
  BotQ.A RemainingLatency 0 + 6c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !114; appft.c:71:5
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %15:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !114; appft.c:71:5
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(1):   %15:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !114; appft.c:71:5
SU(8):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !114; appft.c:71:5
SU(9):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !114; appft.c:71:5
SU(2):   $w0 = MOVi32imm 1, debug-location !114; appft.c:71:5
SU(3):   $w1 = MOVi32imm 512, debug-location !114; appft.c:71:5
SU(4):   $w2 = MOVi32imm 256, debug-location !114; appft.c:71:5
SU(5):   $w3 = MOVi32imm 256, debug-location !114; appft.c:71:5
SU(0):   STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
SU(6):   $x4 = COPY %8:gpr64, debug-location !114; appft.c:71:5
SU(7):   $x5 = COPY %15:gpr64, debug-location !114; appft.c:71:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: %13:gpr64common = ADDXri %stack.18.exp3, 0, 0
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %13:gpr64common = ADDXri %stack.18.exp3, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $w0 = MOVi32imm 256, debug-location !110; appft.c:70:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $x1 = ADDXri %stack.18.exp3, 0, 0, debug-location !110; appft.c:70:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %13:gpr64common = ADDXri %stack.18.exp3, 0, 0
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(1) PHYS-REG                           
Picking from Top:
  Cand SU(2) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = MOVi32imm 256, debug-location !110; appft.c:70:5
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) $x1 = ADDXri %stack.18.exp3, 0, 0, debug-location !110; appft.c:70:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(2):   $x1 = ADDXri %stack.18.exp3, 0, 0, debug-location !110; appft.c:70:5
SU(1):   $w0 = MOVi32imm 256, debug-location !110; appft.c:70:5
SU(0):   %13:gpr64common = ADDXri %stack.18.exp3, 0, 0

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $x1 = ADDXri %stack.17.exp2, 0, 0, debug-location !108; appft.c:69:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(0) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(0) $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x1 = ADDXri %stack.17.exp2, 0, 0, debug-location !108; appft.c:69:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(1):   $x1 = ADDXri %stack.17.exp2, 0, 0, debug-location !108; appft.c:69:5
SU(0):   $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $x1 = ADDXri %stack.16.exp1, 0, 0, debug-location !106; appft.c:68:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(0) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Pick Bot PHYS-REG  
Scheduling SU(0) $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x1 = ADDXri %stack.16.exp1, 0, 0, debug-location !106; appft.c:68:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(1):   $x1 = ADDXri %stack.16.exp1, 0, 0, debug-location !106; appft.c:68:5
SU(0):   $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
    To: BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(5): Data Latency=1 Reg=%8
  Single Issue       : false;
SU(1):   %10:gpr32 = MOVi32imm 256
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   $w0 = MOVi32imm 512, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w1 = MOVi32imm 256, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $w2 = MOVi32imm 256, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(5):   $x3 = COPY %8:gpr64, debug-location !104; appft.c:66:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%8
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 3 2 
Queue BotQ.A: 1 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $x3 = COPY %8:gpr64, debug-location !104; appft.c:66:5
  Ready @0c
  BotQ.A TopLatency SU(5) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 3 2 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %10:gpr32 = MOVi32imm 256
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 2 3 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w2 = MOVi32imm 256, debug-location !104; appft.c:66:5
  Ready @1c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 2 
Queue TopQ.P: 
Queue TopQ.A: 0 3 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w1 = MOVi32imm 256, debug-location !104; appft.c:66:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w0 = MOVi32imm 512, debug-location !104; appft.c:66:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
SU(2):   $w0 = MOVi32imm 512, debug-location !104; appft.c:66:5
SU(3):   $w1 = MOVi32imm 256, debug-location !104; appft.c:66:5
SU(4):   $w2 = MOVi32imm 256, debug-location !104; appft.c:66:5
SU(1):   %10:gpr32 = MOVi32imm 256
SU(5):   $x3 = COPY %8:gpr64, debug-location !104; appft.c:66:5

********** MI Scheduling **********
appft:%bb.5 if.end
  From: STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
    To: End RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
Cluster ld/st SU(3) - SU(2)
SU(0):   STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %21:gpr32 = MOVi32imm 128
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=%21
    SU(2): Data Latency=1 Reg=%21
  Single Issue       : false;
SU(2):   STRWui %21:gpr32, %220:gpr64sp, 6, debug-location !122 :: (store 4 into %ir.n22); appft.c:82:9
  # preds left       : 1
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%21
    SU(3): Ord  Latency=0 Cluster
  Single Issue       : false;
SU(3):   STRWui %21:gpr32, %220:gpr64sp, 5, debug-location !123 :: (store 4 into %ir.n32); appft.c:83:9
  # preds left       : 1
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%21
  Successors:
    SU(2): Ord  Latency=0 Cluster
  Single Issue       : false;
SU(4):   %22:gpr64 = MOVi64imm -4682421225964825446
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(5): Data Latency=1 Reg=%22
  Single Issue       : false;
SU(5):   STRXui %22:gpr64, %stack.15.ap, 0, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%22
  Single Issue       : false;
SU(6):   STRWui $wzr, %220:gpr64sp, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(7):   undef %205.sub_32:gpr64 = MOVi32imm 1050624
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(8):   %207:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(9):   undef %211.sub_32:gpr64 = MOVi32imm 4104
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 8 7 6 5 3 2 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 8 9 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot WEAK      
Scheduling SU(9) undef %211.sub_32:gpr64 = MOVi32imm 4104
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 8 7 6 5 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 8 
BotQ.A RemLatency SU(5) 1c
  BotQ.A RemainingLatency 1 + 1c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(5) BOT-PATH                  1 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(5) STRXui %22:gpr64, %stack.15.ap, 0, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  Ready @1c
  BotQ.A TopLatency SU(5) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 8 7 6 2 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 8 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(2) BOT-PATH                  1 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(2) STRWui %21:gpr32, %220:gpr64sp, 6, debug-location !122 :: (store 4 into %ir.n22); appft.c:82:9
  Ready @2c
  BotQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 8 7 6 4 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 8 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(3) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(3) STRWui %21:gpr32, %220:gpr64sp, 5, debug-location !123 :: (store 4 into %ir.n32); appft.c:83:9
  Ready @3c
  BotQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 8 7 6 4 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 8 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %207:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 7 6 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 7 
  BotQ.A RemainingLatency 0 + 5c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) undef %205.sub_32:gpr64 = MOVi32imm 1050624
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 4 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 6 
  BotQ.A RemainingLatency 0 + 6c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) STRWui $wzr, %220:gpr64sp, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
  BotQ.A RemainingLatency 0 + 7c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %22:gpr64 = MOVi64imm -4682421225964825446
  Ready @7c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 8c > CritPath 1
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %21:gpr32 = MOVi32imm 128
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
SU(1):   %21:gpr32 = MOVi32imm 128
SU(4):   %22:gpr64 = MOVi64imm -4682421225964825446
SU(6):   STRWui $wzr, %220:gpr64sp, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
SU(7):   undef %205.sub_32:gpr64 = MOVi32imm 1050624
SU(8):   %207:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
SU(3):   STRWui %21:gpr32, %220:gpr64sp, 5, debug-location !123 :: (store 4 into %ir.n32); appft.c:83:9
SU(2):   STRWui %21:gpr32, %220:gpr64sp, 6, debug-location !122 :: (store 4 into %ir.n22); appft.c:82:9
SU(5):   STRXui %22:gpr64, %stack.15.ap, 0, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
SU(9):   undef %211.sub_32:gpr64 = MOVi32imm 4104

********** MI Scheduling **********
appft:%bb.6 for.cond8
  From: %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
    To: Bcc 12, %bb.14, implicit killed $nzcv, debug-location !131; appft.c:85:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%24
  Single Issue       : false;
SU(1):   dead $wzr = SUBSWri %24:gpr32common, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%24
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.14, implicit killed $nzcv, debug-location !131; appft.c:85:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri %24:gpr32common, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  Ready @1c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
SU(1):   dead $wzr = SUBSWri %24:gpr32common, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5

********** MI Scheduling **********
appft:%bb.7 for.body10
  From: %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
    To: End RegionInstrs: 8
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=%170
    SU(2): Data Latency=4 Reg=%170
  Single Issue       : false;
SU(1):   %171:gpr32 = LDRWui %220:gpr64sp, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%171
  Single Issue       : false;
SU(2):   %172:gpr32 = SDIVWr %170:gpr32, %171:gpr32, debug-location !136; appft.c:86:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%171
    SU(0): Data Latency=4 Reg=%170
  Successors:
    SU(3): Data Latency=1 Reg=%172
  Single Issue       : false;
SU(3):   %173:gpr32 = nsw SUBWrs %170:gpr32, %172:gpr32, 8, debug-location !138; appft.c:86:16
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%172
    SU(0): Data Latency=4 Reg=%170
  Successors:
    SU(5): Data Latency=1 Reg=%173
    SU(4): Data Latency=1 Reg=%173
  Single Issue       : false;
SU(4):   STRWui %173:gpr32, %220:gpr64sp, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%173
  Single Issue       : false;
SU(5):   %174:gpr32 = nsw MADDWrrr %173:gpr32, %173:gpr32, $wzr, debug-location !142; appft.c:87:18
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%173
  Successors:
    SU(6): Data Latency=1 Reg=%174
  Single Issue       : false;
SU(6):   STRWui %174:gpr32, %220:gpr64sp, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%174
  Single Issue       : false;
SU(7):   STRWui $wzr, %220:gpr64sp, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 6 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) STRWui $wzr, %220:gpr64sp, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
BotQ.A RemLatency SU(6) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(6) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRWui %174:gpr32, %220:gpr64sp, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  Ready @1c
  BotQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
BotQ.A RemLatency SU(4) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 7
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %174:gpr32 = nsw MADDWrrr %173:gpr32, %173:gpr32, $wzr, debug-location !142; appft.c:87:18
  Ready @2c
  BotQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %173:gpr32, %220:gpr64sp, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  Ready @3c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %173:gpr32 = nsw SUBWrs %170:gpr32, %172:gpr32, 8, debug-location !138; appft.c:86:16
  Ready @4c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %172:gpr32 = SDIVWr %170:gpr32, %171:gpr32, debug-location !136; appft.c:86:21
  Ready @5c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 9c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %171:gpr32 = LDRWui %220:gpr64sp, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  Ready @9c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
SU(1):   %171:gpr32 = LDRWui %220:gpr64sp, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
SU(2):   %172:gpr32 = SDIVWr %170:gpr32, %171:gpr32, debug-location !136; appft.c:86:21
SU(3):   %173:gpr32 = nsw SUBWrs %170:gpr32, %172:gpr32, 8, debug-location !138; appft.c:86:16
SU(4):   STRWui %173:gpr32, %220:gpr64sp, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
SU(5):   %174:gpr32 = nsw MADDWrrr %173:gpr32, %173:gpr32, $wzr, debug-location !142; appft.c:87:18
SU(6):   STRWui %174:gpr32, %220:gpr64sp, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
SU(7):   STRWui $wzr, %220:gpr64sp, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16

********** MI Scheduling **********
appft:%bb.8 for.cond12
  From: %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
    To: Bcc 12, %bb.13, implicit killed $nzcv, debug-location !150; appft.c:88:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%176
  Single Issue       : false;
SU(1):   dead $wzr = SUBSWri %176:gpr32common, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%176
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.13, implicit killed $nzcv, debug-location !150; appft.c:88:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri %176:gpr32common, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  Ready @1c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
SU(1):   dead $wzr = SUBSWri %176:gpr32common, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9

********** MI Scheduling **********
appft:%bb.9 for.body14
  From: %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
    To: End RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=%180
    SU(2): Data Latency=4 Reg=%180
  Single Issue       : false;
SU(1):   %181:gpr32 = LDRWui %220:gpr64sp, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%181
  Single Issue       : false;
SU(2):   %182:gpr32 = SDIVWr %180:gpr32, %181:gpr32, debug-location !155; appft.c:89:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%181
    SU(0): Data Latency=4 Reg=%180
  Successors:
    SU(3): Data Latency=1 Reg=%182
  Single Issue       : false;
SU(3):   %183:gpr32 = nsw SUBWrs %180:gpr32, %182:gpr32, 8, debug-location !157; appft.c:89:20
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%182
    SU(0): Data Latency=4 Reg=%180
  Successors:
    SU(6): Data Latency=1 Reg=%183
    SU(4): Data Latency=1 Reg=%183
  Single Issue       : false;
SU(4):   STRWui %183:gpr32, %220:gpr64sp, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%183
  Single Issue       : false;
SU(5):   %184:gpr32 = LDRWui %220:gpr64sp, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%184
  Single Issue       : false;
SU(6):   %186:gpr32 = MADDWrrr %183:gpr32, %183:gpr32, %184:gpr32, debug-location !163; appft.c:90:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%183
    SU(5): Data Latency=4 Reg=%184
  Successors:
    SU(7): Data Latency=1 Reg=%186
  Single Issue       : false;
SU(7):   STRWui %186:gpr32, %220:gpr64sp, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%186
  Single Issue       : false;
SU(8):   STRWui $wzr, %220:gpr64sp, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 7 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 8 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) STRWui $wzr, %220:gpr64sp, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 
BotQ.A RemLatency SU(7) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(7) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) STRWui %186:gpr32, %220:gpr64sp, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  Ready @1c
  BotQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 
BotQ.A RemLatency SU(4) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 7
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %186:gpr32 = MADDWrrr %183:gpr32, %183:gpr32, %184:gpr32, debug-location !163; appft.c:90:23
  Ready @2c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %183:gpr32, %220:gpr64sp, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  Ready @3c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %183:gpr32 = nsw SUBWrs %180:gpr32, %182:gpr32, 8, debug-location !157; appft.c:89:20
  Ready @4c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %182:gpr32 = SDIVWr %180:gpr32, %181:gpr32, debug-location !155; appft.c:89:25
  Ready @5c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %184:gpr32 = LDRWui %220:gpr64sp, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  Ready @6c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 9c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %181:gpr32 = LDRWui %220:gpr64sp, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  Ready @9c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
SU(1):   %181:gpr32 = LDRWui %220:gpr64sp, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
SU(5):   %184:gpr32 = LDRWui %220:gpr64sp, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
SU(2):   %182:gpr32 = SDIVWr %180:gpr32, %181:gpr32, debug-location !155; appft.c:89:25
SU(3):   %183:gpr32 = nsw SUBWrs %180:gpr32, %182:gpr32, 8, debug-location !157; appft.c:89:20
SU(4):   STRWui %183:gpr32, %220:gpr64sp, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
SU(6):   %186:gpr32 = MADDWrrr %183:gpr32, %183:gpr32, %184:gpr32, debug-location !163; appft.c:90:23
SU(7):   STRWui %186:gpr32, %220:gpr64sp, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
SU(8):   STRWui $wzr, %220:gpr64sp, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20

********** MI Scheduling **********
appft:%bb.10 for.cond19
  From: %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
    To: Bcc 12, %bb.12, implicit killed $nzcv, debug-location !171; appft.c:91:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%188
  Single Issue       : false;
SU(1):   dead $wzr = SUBSWri %188:gpr32common, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%188
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.12, implicit killed $nzcv, debug-location !171; appft.c:91:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri %188:gpr32common, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  Ready @1c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
SU(1):   dead $wzr = SUBSWri %188:gpr32common, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13

********** MI Scheduling **********
appft:%bb.11 for.body21
  From: %202:fpr64 = COPY killed $d0, debug-location !188; appft.c:93:36
    To: B %bb.10, debug-location !195; appft.c:91:13
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
Cluster ld/st SU(3) - SU(5)
  Copy Succ SU(4)
Cluster ld/st SU(7) - SU(1)
  Copy Succ SU(8)
  Copy Succ SU(9)
SU(0):   %202:fpr64 = COPY killed $d0, debug-location !188; appft.c:93:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%202
  Single Issue       : false;
SU(1):   %203:gpr64 = LDRSWui %220:gpr64sp, 11, debug-location !189 :: (dereferenceable load 4 from %ir.i); appft.c:93:25
  # preds left       : 0
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Predecessors:
    SU(7): Ord  Latency=0 Cluster
  Successors:
    SU(2): Data Latency=4 Reg=%203
    SU(8): Ord  Latency=0 Artificial
    SU(9): Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   %208:gpr64 = MADDXrrr %203:gpr64, %205:gpr64, %207:gpr64, debug-location !190; appft.c:93:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%203
  Successors:
    SU(4): Data Latency=1 Reg=%208
  Single Issue       : false;
SU(3):   %209:gpr64 = LDRSWui %220:gpr64sp, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k); appft.c:93:28
  # preds left       : 0
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(4): Data Latency=4 Reg=%209
    SU(5): Ord  Latency=0 Cluster
  Single Issue       : false;
SU(4):   %213:gpr64common = MADDXrrr %209:gpr64, %211:gpr64, %208:gpr64, debug-location !190; appft.c:93:17
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%208
    SU(3): Data Latency=4 Reg=%209
    SU(5): Ord  Latency=0 Artificial
  Successors:
    SU(6): Data Latency=1 Reg=%213
  Single Issue       : false;
SU(5):   %214:gpr64 = LDRSWui %220:gpr64sp, 10, debug-location !192 :: (dereferenceable load 4 from %ir.j); appft.c:93:31
  # preds left       : 0
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(3): Ord  Latency=0 Cluster
  Successors:
    SU(6): Data Latency=4 Reg=%214
    SU(9): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   STRDroX %202:fpr64, %213:gpr64common, %214:gpr64, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%213
    SU(5): Data Latency=4 Reg=%214
    SU(0): Data Latency=0 Reg=%202
  Single Issue       : false;
SU(7):   %215:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !194 :: (dereferenceable load 4 from %ir.j); appft.c:91:34
  # preds left       : 0
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%215
    SU(9): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Cluster
  Single Issue       : false;
SU(8):   %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !194; appft.c:91:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(7): Data Latency=4 Reg=%215
    SU(1): Ord  Latency=0 Artificial
  Successors:
    SU(9): Data Latency=1 Reg=%216
  Single Issue       : false;
SU(9):   STRWui %216:gpr32common, %220:gpr64sp, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%216
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   B %bb.10, debug-location !195; appft.c:91:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 7 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %202:fpr64 = COPY killed $d0, debug-location !188; appft.c:93:36
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 6 
Queue TopQ.P: 
Queue TopQ.A: 7 1 3 5 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(7) ORDER                              
  Cand SU(3) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) STRWui %216:gpr32common, %220:gpr64sp, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  Ready @0c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 8 
Queue TopQ.P: 
Queue TopQ.A: 7 1 3 5 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(3) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRDroX %202:fpr64, %213:gpr64common, %214:gpr64, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 4 
Queue TopQ.P: 
Queue TopQ.A: 7 1 3 5 
BotQ.A RemLatency SU(4) 5c
  BotQ.A RemainingLatency 5 + 2c > CritPath 6
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(3) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %213:gpr64common = MADDXrrr %209:gpr64, %211:gpr64, %208:gpr64, debug-location !190; appft.c:93:17
  Ready @2c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 5 
Queue BotQ.A: 8 2 
Queue TopQ.P: 
Queue TopQ.A: 7 1 3 5 
BotQ.A RemLatency SU(8) 4c
  BotQ.A RemainingLatency 4 + 3c > CritPath 6
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(3) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !194; appft.c:91:34
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 5 7 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %208:gpr64 = MADDXrrr %203:gpr64, %205:gpr64, %207:gpr64, debug-location !190; appft.c:93:17
  Ready @4c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 1 7 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %214:gpr64 = LDRSWui %220:gpr64sp, 10, debug-location !192 :: (dereferenceable load 4 from %ir.j); appft.c:93:31
  Ready @5c
  BotQ.A BotLatency SU(5) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 1 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %209:gpr64 = LDRSWui %220:gpr64sp, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k); appft.c:93:28
  Ready @6c
  BotQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %215:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !194 :: (dereferenceable load 4 from %ir.j); appft.c:91:34
  Ready @7c
  BotQ.A BotLatency SU(7) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %203:gpr64 = LDRSWui %220:gpr64sp, 11, debug-location !189 :: (dereferenceable load 4 from %ir.i); appft.c:93:25
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   %202:fpr64 = COPY killed $d0, debug-location !188; appft.c:93:36
SU(1):   %203:gpr64 = LDRSWui %220:gpr64sp, 11, debug-location !189 :: (dereferenceable load 4 from %ir.i); appft.c:93:25
SU(7):   %215:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !194 :: (dereferenceable load 4 from %ir.j); appft.c:91:34
SU(3):   %209:gpr64 = LDRSWui %220:gpr64sp, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k); appft.c:93:28
SU(5):   %214:gpr64 = LDRSWui %220:gpr64sp, 10, debug-location !192 :: (dereferenceable load 4 from %ir.j); appft.c:93:31
SU(2):   %208:gpr64 = MADDXrrr %203:gpr64, %205:gpr64, %207:gpr64, debug-location !190; appft.c:93:17
SU(8):   %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !194; appft.c:91:34
SU(4):   %213:gpr64common = MADDXrrr %209:gpr64, %211:gpr64, %208:gpr64, debug-location !190; appft.c:93:17
SU(6):   STRDroX %202:fpr64, %213:gpr64common, %214:gpr64, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
SU(9):   STRWui %216:gpr32common, %220:gpr64sp, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34

********** MI Scheduling **********
appft:%bb.11 for.body21
  From: %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(3): Data Latency=4 Reg=%192
    SU(2): Data Latency=4 Reg=%192
  Single Issue       : false;
SU(1):   %193:gpr32 = LDRWui %220:gpr64sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%193
  Single Issue       : false;
SU(2):   %194:gpr32 = SDIVWr %192:gpr32, %193:gpr32, debug-location !176; appft.c:92:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=4 Reg=%193
    SU(0): Data Latency=4 Reg=%192
  Successors:
    SU(3): Data Latency=1 Reg=%194
  Single Issue       : false;
SU(3):   %195:gpr32 = nsw SUBWrs %192:gpr32, %194:gpr32, 9, debug-location !178; appft.c:92:24
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%194
    SU(0): Data Latency=4 Reg=%192
  Successors:
    SU(7): Data Latency=1 Reg=%195
    SU(4): Data Latency=1 Reg=%195
  Single Issue       : false;
SU(4):   STRWui %195:gpr32, %220:gpr64sp, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%195
  Single Issue       : false;
SU(5):   %196:fpr64 = LDRDui %stack.15.ap, 0, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(9): Data Latency=4 Reg=%196
  Single Issue       : false;
SU(6):   %198:gpr32 = LDRWui %220:gpr64sp, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(7): Data Latency=4 Reg=%198
  Single Issue       : false;
SU(7):   %199:gpr32 = MADDWrrr %195:gpr32, %195:gpr32, %198:gpr32, debug-location !185; appft.c:93:62
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(3): Data Latency=1 Reg=%195
    SU(6): Data Latency=4 Reg=%198
  Successors:
    SU(8): Data Latency=1 Reg=%199
  Single Issue       : false;
SU(8):   %200:fpr64 = SCVTFUWDri %199:gpr32, debug-location !186; appft.c:93:45
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=%199
  Successors:
    SU(9): Data Latency=1 Reg=%200
  Single Issue       : false;
SU(9):   %201:fpr64 = FMULDrr %196:fpr64, %200:fpr64, debug-location !187; appft.c:93:43
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%200
    SU(5): Data Latency=4 Reg=%196
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) %201:fpr64 = FMULDrr %196:fpr64, %200:fpr64, debug-location !187; appft.c:93:43
  Ready @0c
  BotQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 4 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
BotQ.A RemLatency SU(8) 7c
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %200:fpr64 = SCVTFUWDri %199:gpr32, debug-location !186; appft.c:93:45
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 4 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
BotQ.A RemLatency SU(4) 6c
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %199:gpr32 = MADDWrrr %195:gpr32, %195:gpr32, %198:gpr32, debug-location !185; appft.c:93:62
  Ready @2c
  BotQ.A BotLatency SU(7) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %195:gpr32, %220:gpr64sp, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  Ready @3c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) %195:gpr32 = nsw SUBWrs %192:gpr32, %194:gpr32, 9, debug-location !178; appft.c:92:24
  Ready @4c
  BotQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %194:gpr32 = SDIVWr %192:gpr32, %193:gpr32, debug-location !176; appft.c:92:29
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %198:gpr32 = LDRWui %220:gpr64sp, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  Ready @6c
  BotQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %196:fpr64 = LDRDui %stack.15.ap, 0, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 9c > CritPath 8
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %193:gpr32 = LDRWui %220:gpr64sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  Ready @9c
  BotQ.A BotLatency SU(1) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
SU(1):   %193:gpr32 = LDRWui %220:gpr64sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
SU(5):   %196:fpr64 = LDRDui %stack.15.ap, 0, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
SU(6):   %198:gpr32 = LDRWui %220:gpr64sp, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
SU(2):   %194:gpr32 = SDIVWr %192:gpr32, %193:gpr32, debug-location !176; appft.c:92:29
SU(3):   %195:gpr32 = nsw SUBWrs %192:gpr32, %194:gpr32, 9, debug-location !178; appft.c:92:24
SU(4):   STRWui %195:gpr32, %220:gpr64sp, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
SU(7):   %199:gpr32 = MADDWrrr %195:gpr32, %195:gpr32, %198:gpr32, debug-location !185; appft.c:93:62
SU(8):   %200:fpr64 = SCVTFUWDri %199:gpr32, debug-location !186; appft.c:93:45
SU(9):   %201:fpr64 = FMULDrr %196:fpr64, %200:fpr64, debug-location !187; appft.c:93:43

********** MI Scheduling **********
appft:%bb.12 for.inc35
  From: %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
    To: B %bb.8, debug-location !199; appft.c:88:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%190
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %191:gpr32common = nsw ADDWri %190:gpr32common, 1, 0, debug-location !198; appft.c:88:30
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%190
  Successors:
    SU(2): Data Latency=1 Reg=%191
  Single Issue       : false;
SU(2):   STRWui %191:gpr32common, %220:gpr64sp, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%191
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.8, debug-location !199; appft.c:88:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %191:gpr32common, %220:gpr64sp, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %191:gpr32common = nsw ADDWri %190:gpr32common, 1, 0, debug-location !198; appft.c:88:30
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
SU(1):   %191:gpr32common = nsw ADDWri %190:gpr32common, 1, 0, debug-location !198; appft.c:88:30
SU(2):   STRWui %191:gpr32common, %220:gpr64sp, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30

********** MI Scheduling **********
appft:%bb.13 for.inc38
  From: %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
    To: B %bb.6, debug-location !203; appft.c:85:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%178
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %179:gpr32common = nsw ADDWri %178:gpr32common, 1, 0, debug-location !202; appft.c:85:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%178
  Successors:
    SU(2): Data Latency=1 Reg=%179
  Single Issue       : false;
SU(2):   STRWui %179:gpr32common, %220:gpr64sp, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%179
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.6, debug-location !203; appft.c:85:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %179:gpr32common, %220:gpr64sp, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %179:gpr32common = nsw ADDWri %178:gpr32common, 1, 0, debug-location !202; appft.c:85:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
SU(1):   %179:gpr32common = nsw ADDWri %178:gpr32common, 1, 0, debug-location !202; appft.c:85:26
SU(2):   STRWui %179:gpr32common, %220:gpr64sp, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26

********** MI Scheduling **********
appft:%bb.18 if.end46
  From: %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
    To: BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(4): Data Latency=1 Reg=%32
  Single Issue       : false;
SU(1):   $w0 = MOVi32imm 512, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $w1 = MOVi32imm 256, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w2 = MOVi32imm 256, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $x3 = COPY %32:gpr64, debug-location !214; appft.c:102:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%32
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 2 1 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) $x3 = COPY %32:gpr64, debug-location !214; appft.c:102:5
  Ready @0c
  BotQ.A TopLatency SU(4) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = MOVi32imm 256, debug-location !214; appft.c:102:5
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = MOVi32imm 256, debug-location !214; appft.c:102:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = MOVi32imm 512, debug-location !214; appft.c:102:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
SU(1):   $w0 = MOVi32imm 512, debug-location !214; appft.c:102:5
SU(2):   $w1 = MOVi32imm 256, debug-location !214; appft.c:102:5
SU(3):   $w2 = MOVi32imm 256, debug-location !214; appft.c:102:5
SU(4):   $x3 = COPY %32:gpr64, debug-location !214; appft.c:102:5

********** MI Scheduling **********
appft:%bb.22 if.end52
  From: %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
 RegionInstrs: 13
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%42
  Single Issue       : false;
SU(1):   STRXui %42:gpr64common, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%42
  Single Issue       : false;
SU(2):   %43:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(9): Data Latency=1 Reg=%43
  Single Issue       : false;
SU(3):   %44:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(10): Data Latency=1 Reg=%44
  Single Issue       : false;
SU(4):   %45:gpr32 = MOVi32imm 1
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(5):   $w0 = MOVi32imm 1, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(6):   $w1 = MOVi32imm 512, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(7):   $w2 = MOVi32imm 256, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(8):   $w3 = MOVi32imm 256, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(9):   $x4 = COPY %43:gpr64, debug-location !226; appft.c:107:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%43
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(10):   $x5 = COPY %44:gpr64, debug-location !226; appft.c:107:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%44
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(11):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(12):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(12): Ord  Latency=1 Artificial
    SU(11): Ord  Latency=1 Artificial
    SU(10): Ord  Latency=0 Artificial
    SU(9): Ord  Latency=0 Artificial
    SU(8): Ord  Latency=1 Artificial
    SU(7): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 11 8 7 6 5 
Queue BotQ.A: 4 1 10 9 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 5 6 7 8 11 12 
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(10) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(10) $x5 = COPY %44:gpr64, debug-location !226; appft.c:107:5
  Ready @0c
  BotQ.A TopLatency SU(10) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 11 8 7 6 5 3 
Queue BotQ.A: 4 1 9 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 5 6 7 8 11 12 
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(9) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(9) $x4 = COPY %43:gpr64, debug-location !226; appft.c:107:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 11 8 7 6 5 3 2 
Queue BotQ.A: 4 1 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 5 6 7 8 11 12 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %45:gpr32 = MOVi32imm 1
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 12 2 3 5 6 7 8 11 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 5 6 7 8 11 
BotQ.A RemLatency SU(1) 1c
  BotQ.A RemainingLatency 1 + 1c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(8) $w3 = MOVi32imm 256, debug-location !226; appft.c:107:5
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 12 2 3 5 6 7 11 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 5 6 7 11 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(7) $w2 = MOVi32imm 256, debug-location !226; appft.c:107:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 12 2 3 5 6 11 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 5 6 11 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(6) $w1 = MOVi32imm 512, debug-location !226; appft.c:107:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 12 2 3 5 11 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 5 11 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $w0 = MOVi32imm 1, debug-location !226; appft.c:107:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 12 2 3 11 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 11 
  BotQ.A RemainingLatency 0 + 5c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(1) STRXui %42:gpr64common, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  Ready @5c
  BotQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 12 2 3 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 12 11 
  BotQ.A RemainingLatency 0 + 6c > CritPath 1
Picking from Bot:
  Cand SU(11) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !226; appft.c:107:5
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 0 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 11 
  BotQ.A RemainingLatency 0 + 7c > CritPath 1
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !226; appft.c:107:5
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 
  BotQ.A RemainingLatency 0 + 8c > CritPath 1
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %44:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !226; appft.c:107:5
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  BotQ.A RemainingLatency 0 + 9c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %43:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !226; appft.c:107:5
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
SU(2):   %43:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !226; appft.c:107:5
SU(3):   %44:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !226; appft.c:107:5
SU(11):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !226; appft.c:107:5
SU(12):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !226; appft.c:107:5
SU(1):   STRXui %42:gpr64common, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
SU(5):   $w0 = MOVi32imm 1, debug-location !226; appft.c:107:5
SU(6):   $w1 = MOVi32imm 512, debug-location !226; appft.c:107:5
SU(7):   $w2 = MOVi32imm 256, debug-location !226; appft.c:107:5
SU(8):   $w3 = MOVi32imm 256, debug-location !226; appft.c:107:5
SU(4):   %45:gpr32 = MOVi32imm 1
SU(9):   $x4 = COPY %43:gpr64, debug-location !226; appft.c:107:5
SU(10):   $x5 = COPY %44:gpr64, debug-location !226; appft.c:107:5

********** MI Scheduling **********
appft:%bb.24 if.end58
  From: STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
    To: End RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %133:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %134:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(3):   %135:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(4):   %160:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %160:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %135:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %134:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 3c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %133:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
SU(1):   %133:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt
SU(2):   %134:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y
SU(3):   %135:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
SU(4):   %160:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums

********** MI Scheduling **********
appft:%bb.25 for.cond59
  From: %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
    To: Bcc 12, %bb.39, implicit killed $nzcv, debug-location !239; appft.c:111:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%54
  Single Issue       : false;
SU(1):   %55:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%55
  Single Issue       : false;
SU(2):   %57:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %54:gpr32, %55:gpr32, implicit-def $nzcv, debug-location !239; appft.c:111:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%55
    SU(0): Data Latency=4 Reg=%54
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.39, implicit killed $nzcv, debug-location !239; appft.c:111:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 2 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %54:gpr32, %55:gpr32, implicit-def $nzcv, debug-location !239; appft.c:111:5
  Ready @1c
  BotQ.A TopLatency SU(3) 4c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %57:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 2
  Executed: 4c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %55:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
SU(1):   %55:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
SU(2):   %57:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
SU(3):   dead $wzr = SUBSWrr %54:gpr32, %55:gpr32, implicit-def $nzcv, debug-location !239; appft.c:111:5

********** MI Scheduling **********
appft:%bb.28 if.end65
  From: $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
    To: BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $w1 = MOVi32imm 256, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $w2 = MOVi32imm 256, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $x3 = COPY %133:gpr64, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $x4 = COPY %134:gpr64, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $x5 = COPY %135:gpr64, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 1 0 
Queue BotQ.A: 5 4 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $x5 = COPY %135:gpr64, debug-location !244; appft.c:114:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 1 0 
Queue BotQ.A: 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $x4 = COPY %134:gpr64, debug-location !244; appft.c:114:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 1 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) $x3 = COPY %133:gpr64, debug-location !244; appft.c:114:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w2 = MOVi32imm 256, debug-location !244; appft.c:114:9
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = MOVi32imm 256, debug-location !244; appft.c:114:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
SU(1):   $w1 = MOVi32imm 256, debug-location !244; appft.c:114:9
SU(2):   $w2 = MOVi32imm 256, debug-location !244; appft.c:114:9
SU(3):   $x3 = COPY %133:gpr64, debug-location !244; appft.c:114:9
SU(4):   $x4 = COPY %134:gpr64, debug-location !244; appft.c:114:9
SU(5):   $x5 = COPY %135:gpr64, debug-location !244; appft.c:114:9

********** MI Scheduling **********
appft:%bb.32 if.end71
  From: STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
 RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $w0 = MOVi32imm -1, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $w1 = MOVi32imm 512, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w2 = MOVi32imm 256, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $w3 = MOVi32imm 256, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(5):   $x4 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x5 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(7):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(8):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(8): Ord  Latency=1 Artificial
    SU(7): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 7 4 3 2 1 
Queue BotQ.A: 0 6 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 7 8 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(6) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x5 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 7 4 3 2 1 
Queue BotQ.A: 0 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 8 7 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $x4 = COPY %133:gpr64, debug-location !256; appft.c:119:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 7 4 3 2 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 1 2 3 4 7 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 3 4 7 
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(4) $w3 = MOVi32imm 256, debug-location !256; appft.c:119:9
  Ready @1c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 1 2 3 7 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 3 7 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = MOVi32imm 256, debug-location !256; appft.c:119:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 1 2 7 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 7 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = MOVi32imm 512, debug-location !256; appft.c:119:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 1 7 
Queue TopQ.P: 
Queue TopQ.A: 8 1 7 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) PHYS-REG                           
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = MOVi32imm -1, debug-location !256; appft.c:119:9
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 7 
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  BotQ.A RemainingLatency 0 + 5c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !256; appft.c:119:9
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !256; appft.c:119:9
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(7):   $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !256; appft.c:119:9
SU(8):   $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !256; appft.c:119:9
SU(1):   $w0 = MOVi32imm -1, debug-location !256; appft.c:119:9
SU(2):   $w1 = MOVi32imm 512, debug-location !256; appft.c:119:9
SU(3):   $w2 = MOVi32imm 256, debug-location !256; appft.c:119:9
SU(4):   $w3 = MOVi32imm 256, debug-location !256; appft.c:119:9
SU(0):   STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
SU(5):   $x4 = COPY %133:gpr64, debug-location !256; appft.c:119:9
SU(6):   $x5 = COPY %133:gpr64, debug-location !256; appft.c:119:9

********** MI Scheduling **********
appft:%bb.36 if.end80
  From: $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
    To: BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $w1 = COPY %158.sub_32:gpr64, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w2 = MOVi32imm 512, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w3 = MOVi32imm 256, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $w4 = MOVi32imm 256, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(5):   $x5 = COPY %133:gpr64, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 3 2 
Queue BotQ.A: 5 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $x5 = COPY %133:gpr64, debug-location !268; appft.c:124:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 3 2 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = COPY %158.sub_32:gpr64, debug-location !268; appft.c:124:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 3 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 4 2 3 
Queue TopQ.P: 
Queue TopQ.A: 3 4 2 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(4) $w4 = MOVi32imm 256, debug-location !268; appft.c:124:9
  Ready @1c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(2) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w3 = MOVi32imm 256, debug-location !268; appft.c:124:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) $w2 = MOVi32imm 512, debug-location !268; appft.c:124:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.36 ***
SU(2):   $w2 = MOVi32imm 512, debug-location !268; appft.c:124:9
SU(3):   $w3 = MOVi32imm 256, debug-location !268; appft.c:124:9
SU(4):   $w4 = MOVi32imm 256, debug-location !268; appft.c:124:9
SU(0):   $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
SU(1):   $w1 = COPY %158.sub_32:gpr64, debug-location !268; appft.c:124:9
SU(5):   $x5 = COPY %133:gpr64, debug-location !268; appft.c:124:9

********** MI Scheduling **********
appft:%bb.36 if.end80
  From: %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%158
  Single Issue       : false;
SU(1):   %161:gpr64 = ADDXrs %160:gpr64, %158:gpr64, 4, debug-location !266; appft.c:124:28
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%158
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %161:gpr64 = ADDXrs %160:gpr64, %158:gpr64, 4, debug-location !266; appft.c:124:28
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
SU(1):   %161:gpr64 = ADDXrs %160:gpr64, %158:gpr64, 4, debug-location !266; appft.c:124:28

********** MI Scheduling **********
appft:%bb.38 for.inc86
  From: %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
    To: B %bb.25, debug-location !274; appft.c:111:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%168
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !273; appft.c:111:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%168
  Successors:
    SU(2): Data Latency=1 Reg=%169
  Single Issue       : false;
SU(2):   STRWui %169:gpr32common, %220:gpr64sp, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%169
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.25, debug-location !274; appft.c:111:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %169:gpr32common, %220:gpr64sp, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !273; appft.c:111:33
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
SU(1):   %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !273; appft.c:111:33
SU(2):   STRWui %169:gpr32common, %220:gpr64sp, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33

********** MI Scheduling **********
appft:%bb.41 if.end95
  From: %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
    To: BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(5): Data Latency=1 Reg=%62
  Single Issue       : false;
SU(1):   $w0 = MOVi32imm 512, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $w1 = MOVi32imm 256, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w2 = MOVi32imm 256, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(4):   $w3 = COPY %60:gpr32, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $x4 = COPY %62:gpr64, debug-location !282; appft.c:135:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%62
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x5 = COPY %61:gpr64, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 2 1 
Queue BotQ.A: 6 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 6 
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x5 = COPY %61:gpr64, debug-location !282; appft.c:135:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 2 1 
Queue BotQ.A: 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $x4 = COPY %62:gpr64, debug-location !282; appft.c:135:5
  Ready @0c
  BotQ.A TopLatency SU(5) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 2 1 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) $w3 = COPY %60:gpr32, debug-location !282; appft.c:135:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = MOVi32imm 256, debug-location !282; appft.c:135:5
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = MOVi32imm 256, debug-location !282; appft.c:135:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = MOVi32imm 512, debug-location !282; appft.c:135:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
SU(1):   $w0 = MOVi32imm 512, debug-location !282; appft.c:135:5
SU(2):   $w1 = MOVi32imm 256, debug-location !282; appft.c:135:5
SU(3):   $w2 = MOVi32imm 256, debug-location !282; appft.c:135:5
SU(4):   $w3 = COPY %60:gpr32, debug-location !282; appft.c:135:5
SU(5):   $x4 = COPY %62:gpr64, debug-location !282; appft.c:135:5
SU(6):   $x5 = COPY %61:gpr64, debug-location !282; appft.c:135:5

********** MI Scheduling **********
appft:%bb.41 if.end95
  From: %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %61:gpr64 = LDRXui %stack.2.verified.addr, 0, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %61:gpr64 = LDRXui %stack.2.verified.addr, 0, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  Ready @3c
  BotQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
SU(1):   %61:gpr64 = LDRXui %stack.2.verified.addr, 0, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37

********** MI Scheduling **********
appft:%bb.43 if.end98
  From: %69:fpr64 = COPY killed $d0, debug-location !288; appft.c:140:19
    To: CBZW %72:gpr32, %bb.45, debug-location !293; appft.c:141:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %69:fpr64 = COPY killed $d0, debug-location !288; appft.c:140:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=0 Reg=%69
  Single Issue       : false;
SU(1):   %70:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Data Latency=4 Reg=%70
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   STRDui %69:fpr64, %70:gpr64common, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(1): Data Latency=4 Reg=%70
    SU(1): Ord  Latency=0 Memory
    SU(0): Data Latency=0 Reg=%69
  Successors:
    SU(3): Ord  Latency=1 Memory
  Single Issue       : false;
SU(3):   %72:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(2): Ord  Latency=1 Memory
  Successors:
    ExitSU: Data Latency=4 Reg=%72
  Single Issue       : false;
ExitSU:   CBZW %72:gpr32, %bb.45, debug-location !293; appft.c:141:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=%72
Critical Path(GS-RR ): 9
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %72:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  Ready @4c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRDui %69:fpr64, %70:gpr64common, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %69:fpr64 = COPY killed $d0, debug-location !288; appft.c:140:19
  Ready @6c
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %70:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  Ready @9c
  BotQ.A BotLatency SU(1) 9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 3
  Executed: 10c
  Critical: 3c, 3 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.43 ***
SU(1):   %70:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
SU(0):   %69:fpr64 = COPY $d0, debug-location !288; appft.c:140:19
SU(2):   STRDui %69:fpr64, %70:gpr64common, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
SU(3):   %72:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%130
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !323; appft.c:158:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %130:gpr64, debug-location !323; appft.c:158:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%130
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %129:fpr64, debug-location !323; appft.c:158:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %129:fpr64, debug-location !323; appft.c:158:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %130:gpr64, debug-location !323; appft.c:158:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !323; appft.c:158:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !323; appft.c:158:5
SU(2):   $x1 = COPY %130:gpr64, debug-location !323; appft.c:158:5
SU(3):   $d0 = COPY %129:fpr64, debug-location !323; appft.c:158:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(1): Data Latency=4 Reg=%128
  Single Issue       : false;
SU(1):   %129:fpr64 = LDRDui %128:gpr64common, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=%128
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %129:fpr64 = LDRDui %128:gpr64common, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  Ready @3c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  Ready @7c
  BotQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 2
  Executed: 8c
  Critical: 2c, 2 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
SU(1):   %129:fpr64 = LDRDui %128:gpr64common, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%126
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !320; appft.c:157:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %126:gpr64, debug-location !320; appft.c:157:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%126
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %125:fpr64, debug-location !320; appft.c:157:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %125:fpr64, debug-location !320; appft.c:157:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %126:gpr64, debug-location !320; appft.c:157:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !320; appft.c:157:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !320; appft.c:157:5
SU(2):   $x1 = COPY %126:gpr64, debug-location !320; appft.c:157:5
SU(3):   $d0 = COPY %125:fpr64, debug-location !320; appft.c:157:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%122
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !318; appft.c:156:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %122:gpr64, debug-location !318; appft.c:156:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%122
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %121:fpr64, debug-location !318; appft.c:156:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %121:fpr64, debug-location !318; appft.c:156:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %122:gpr64, debug-location !318; appft.c:156:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !318; appft.c:156:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !318; appft.c:156:5
SU(2):   $x1 = COPY %122:gpr64, debug-location !318; appft.c:156:5
SU(3):   $d0 = COPY %121:fpr64, debug-location !318; appft.c:156:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%118
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !316; appft.c:155:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %118:gpr64, debug-location !316; appft.c:155:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%118
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %117:fpr64, debug-location !316; appft.c:155:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %117:fpr64, debug-location !316; appft.c:155:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %118:gpr64, debug-location !316; appft.c:155:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !316; appft.c:155:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !316; appft.c:155:5
SU(2):   $x1 = COPY %118:gpr64, debug-location !316; appft.c:155:5
SU(3):   $d0 = COPY %117:fpr64, debug-location !316; appft.c:155:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%114
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !314; appft.c:154:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %114:gpr64, debug-location !314; appft.c:154:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%114
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %113:fpr64, debug-location !314; appft.c:154:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %113:fpr64, debug-location !314; appft.c:154:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %114:gpr64, debug-location !314; appft.c:154:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !314; appft.c:154:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !314; appft.c:154:5
SU(2):   $x1 = COPY %114:gpr64, debug-location !314; appft.c:154:5
SU(3):   $d0 = COPY %113:fpr64, debug-location !314; appft.c:154:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%110
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !312; appft.c:153:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %110:gpr64, debug-location !312; appft.c:153:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%110
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %109:fpr64, debug-location !312; appft.c:153:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %109:fpr64, debug-location !312; appft.c:153:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %110:gpr64, debug-location !312; appft.c:153:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !312; appft.c:153:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !312; appft.c:153:5
SU(2):   $x1 = COPY %110:gpr64, debug-location !312; appft.c:153:5
SU(3):   $d0 = COPY %109:fpr64, debug-location !312; appft.c:153:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%106
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !310; appft.c:152:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %106:gpr64, debug-location !310; appft.c:152:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%106
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %105:fpr64, debug-location !310; appft.c:152:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %105:fpr64, debug-location !310; appft.c:152:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %106:gpr64, debug-location !310; appft.c:152:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !310; appft.c:152:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !310; appft.c:152:5
SU(2):   $x1 = COPY %106:gpr64, debug-location !310; appft.c:152:5
SU(3):   $d0 = COPY %105:fpr64, debug-location !310; appft.c:152:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%102
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !308; appft.c:151:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %102:gpr64, debug-location !308; appft.c:151:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%102
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %101:fpr64, debug-location !308; appft.c:151:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %101:fpr64, debug-location !308; appft.c:151:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %102:gpr64, debug-location !308; appft.c:151:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !308; appft.c:151:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !308; appft.c:151:5
SU(2):   $x1 = COPY %102:gpr64, debug-location !308; appft.c:151:5
SU(3):   $d0 = COPY %101:fpr64, debug-location !308; appft.c:151:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%98
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !306; appft.c:150:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %98:gpr64, debug-location !306; appft.c:150:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%98
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %97:fpr64, debug-location !306; appft.c:150:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %97:fpr64, debug-location !306; appft.c:150:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %98:gpr64, debug-location !306; appft.c:150:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !306; appft.c:150:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !306; appft.c:150:5
SU(2):   $x1 = COPY %98:gpr64, debug-location !306; appft.c:150:5
SU(3):   $d0 = COPY %97:fpr64, debug-location !306; appft.c:150:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%94
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !304; appft.c:149:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %94:gpr64, debug-location !304; appft.c:149:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%94
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %93:fpr64, debug-location !304; appft.c:149:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %93:fpr64, debug-location !304; appft.c:149:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %94:gpr64, debug-location !304; appft.c:149:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !304; appft.c:149:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !304; appft.c:149:5
SU(2):   $x1 = COPY %94:gpr64, debug-location !304; appft.c:149:5
SU(3):   $d0 = COPY %93:fpr64, debug-location !304; appft.c:149:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%90
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !302; appft.c:148:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %90:gpr64, debug-location !302; appft.c:148:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%90
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %89:fpr64, debug-location !302; appft.c:148:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %89:fpr64, debug-location !302; appft.c:148:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %90:gpr64, debug-location !302; appft.c:148:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !302; appft.c:148:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !302; appft.c:148:5
SU(2):   $x1 = COPY %90:gpr64, debug-location !302; appft.c:148:5
SU(3):   $d0 = COPY %89:fpr64, debug-location !302; appft.c:148:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%86
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !300; appft.c:147:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %86:gpr64, debug-location !300; appft.c:147:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%86
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %85:fpr64, debug-location !300; appft.c:147:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %85:fpr64, debug-location !300; appft.c:147:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %86:gpr64, debug-location !300; appft.c:147:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !300; appft.c:147:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !300; appft.c:147:5
SU(2):   $x1 = COPY %86:gpr64, debug-location !300; appft.c:147:5
SU(3):   $d0 = COPY %85:fpr64, debug-location !300; appft.c:147:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%82
  Single Issue       : false;
SU(1):   $x0 = COPY %77:gpr64, debug-location !298; appft.c:146:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $x1 = COPY %82:gpr64, debug-location !298; appft.c:146:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%82
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $d0 = COPY %81:fpr64, debug-location !298; appft.c:146:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $d0 = COPY %81:fpr64, debug-location !298; appft.c:146:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $x1 = COPY %82:gpr64, debug-location !298; appft.c:146:5
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %77:gpr64, debug-location !298; appft.c:146:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
SU(1):   $x0 = COPY %77:gpr64, debug-location !298; appft.c:146:5
SU(2):   $x1 = COPY %82:gpr64, debug-location !298; appft.c:146:5
SU(3):   $d0 = COPY %81:fpr64, debug-location !298; appft.c:146:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%77
  Single Issue       : false;
SU(1):   %78:gpr64 = MOVaddr target-flags(aarch64-page) @.str.2, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, debug-location !296; appft.c:145:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=%78
  Single Issue       : false;
SU(2):   $x0 = COPY %77:gpr64, debug-location !296; appft.c:145:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%77
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $x1 = COPY %78:gpr64, debug-location !296; appft.c:145:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%78
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $d0 = COPY %76:fpr64, debug-location !296; appft.c:145:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(4) $d0 = COPY %76:fpr64, debug-location !296; appft.c:145:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $x1 = COPY %78:gpr64, debug-location !296; appft.c:145:5
  Ready @0c
  BotQ.A TopLatency SU(3) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) $x0 = COPY %77:gpr64, debug-location !296; appft.c:145:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %78:gpr64 = MOVaddr target-flags(aarch64-page) @.str.2, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, debug-location !296; appft.c:145:5
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
SU(1):   %78:gpr64 = MOVaddr target-flags(aarch64-page) @.str.2, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, debug-location !296; appft.c:145:5
SU(2):   $x0 = COPY %77:gpr64, debug-location !296; appft.c:145:5
SU(3):   $x1 = COPY %78:gpr64, debug-location !296; appft.c:145:5
SU(4):   $d0 = COPY %76:fpr64, debug-location !296; appft.c:145:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%73
  Single Issue       : false;
SU(1):   $x0 = COPY %73:gpr64, debug-location !294; appft.c:144:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%73
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x0 = COPY %73:gpr64, debug-location !294; appft.c:144:5
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
SU(1):   $x0 = COPY %73:gpr64, debug-location !294; appft.c:144:5

********** INTERVALS **********
WSP [272r,272d:2)[304r,304d:1)[320r,320d:0)[416r,416d:179)[464r,464d:178)[480r,480d:177)[496r,496d:176)[624r,624d:175)[640r,640d:174)[656r,656d:173)[720r,720d:172)[736r,736d:171)[752r,752d:170)[816r,816d:169)[832r,832d:168)[848r,848d:167)[912r,912d:166)[928r,928d:165)[944r,944d:164)[1200r,1200d:163)[1208r,1208d:162)[1216r,1216d:161)[1232r,1232d:160)[1240r,1240d:159)[1248r,1248d:158)[1280r,1280d:157)[1296r,1296d:156)[1392r,1392d:155)[1440r,1440d:154)[1456r,1456d:153)[2448r,2448d:5)[2480r,2480d:4)[2496r,2496d:3)[2928r,2928d:152)[2976r,2976d:151)[2992r,2992d:150)[3088r,3088d:149)[3136r,3136d:148)[3152r,3152d:147)[3184r,3184d:146)[3312r,3312d:145)[3328r,3328d:144)[3408r,3408d:143)[3456r,3456d:142)[3472r,3472d:141)[3568r,3568d:140)[3616r,3616d:139)[3632r,3632d:138)[3664r,3664d:137)[4016r,4016d:136)[4024r,4024d:135)[4064r,4064d:134)[4112r,4112d:133)[4128r,4128d:132)[4544r,4544d:32)[4576r,4576d:31)[4592r,4592d:30)[4624r,4624d:29)[4736r,4736d:28)[4752r,4752d:27)[4832r,4832d:26)[4864r,4864d:25)[4880r,4880d:24)[4976r,4976d:23)[5008r,5008d:22)[5024r,5024d:21)[5056r,5056d:20)[5280r,5280d:19)[5288r,5288d:18)[5328r,5328d:17)[5360r,5360d:16)[5376r,5376d:15)[5472r,5472d:14)[5504r,5504d:13)[5520r,5520d:12)[5600r,5600d:11)[5712r,5712d:10)[5728r,5728d:9)[5808r,5808d:8)[5840r,5840d:7)[5856r,5856d:6)[6016r,6016d:131)[6064r,6064d:130)[6080r,6080d:129)[6144r,6144d:128)[6304r,6304d:127)[6320r,6320d:126)[6400r,6400d:125)[6448r,6448d:124)[6464r,6464d:123)[6496r,6496d:122)[6544r,6544d:121)[6560r,6560d:120)[6576r,6576d:119)[6608r,6608d:118)[6624r,6624d:117)[6752r,6752d:116)[6800r,6800d:115)[6816r,6816d:114)[6832r,6832d:113)[6880r,6880d:112)[6896r,6896d:111)[6928r,6928d:110)[7024r,7024d:109)[7040r,7040d:108)[7056r,7056d:107)[7104r,7104d:106)[7120r,7120d:105)[7152r,7152d:104)[7232r,7232d:103)[7248r,7248d:102)[7264r,7264d:101)[7312r,7312d:100)[7328r,7328d:99)[7360r,7360d:98)[7440r,7440d:97)[7456r,7456d:96)[7472r,7472d:95)[7520r,7520d:94)[7536r,7536d:93)[7568r,7568d:92)[7648r,7648d:91)[7664r,7664d:90)[7680r,7680d:89)[7728r,7728d:88)[7744r,7744d:87)[7776r,7776d:86)[7856r,7856d:85)[7872r,7872d:84)[7888r,7888d:83)[7936r,7936d:82)[7952r,7952d:81)[7984r,7984d:80)[8064r,8064d:79)[8080r,8080d:78)[8096r,8096d:77)[8144r,8144d:76)[8160r,8160d:75)[8192r,8192d:74)[8272r,8272d:73)[8288r,8288d:72)[8304r,8304d:71)[8352r,8352d:70)[8368r,8368d:69)[8400r,8400d:68)[8480r,8480d:67)[8496r,8496d:66)[8512r,8512d:65)[8560r,8560d:64)[8576r,8576d:63)[8608r,8608d:62)[8688r,8688d:61)[8704r,8704d:60)[8720r,8720d:59)[8768r,8768d:58)[8784r,8784d:57)[8816r,8816d:56)[8896r,8896d:55)[8912r,8912d:54)[8928r,8928d:53)[8976r,8976d:52)[8992r,8992d:51)[9024r,9024d:50)[9104r,9104d:49)[9120r,9120d:48)[9136r,9136d:47)[9184r,9184d:46)[9200r,9200d:45)[9232r,9232d:44)[9312r,9312d:43)[9328r,9328d:42)[9344r,9344d:41)[9392r,9392d:40)[9408r,9408d:39)[9440r,9440d:38)[9520r,9520d:37)[9536r,9536d:36)[9584r,9584d:35)[9664r,9664d:34)[9680r,9680d:33)  0@320r 1@304r 2@272r 3@2496r 4@2480r 5@2448r 6@5856r 7@5840r 8@5808r 9@5728r 10@5712r 11@5600r 12@5520r 13@5504r 14@5472r 15@5376r 16@5360r 17@5328r 18@5288r 19@5280r 20@5056r 21@5024r 22@5008r 23@4976r 24@4880r 25@4864r 26@4832r 27@4752r 28@4736r 29@4624r 30@4592r 31@4576r 32@4544r 33@9680r 34@9664r 35@9584r 36@9536r 37@9520r 38@9440r 39@9408r 40@9392r 41@9344r 42@9328r 43@9312r 44@9232r 45@9200r 46@9184r 47@9136r 48@9120r 49@9104r 50@9024r 51@8992r 52@8976r 53@8928r 54@8912r 55@8896r 56@8816r 57@8784r 58@8768r 59@8720r 60@8704r 61@8688r 62@8608r 63@8576r 64@8560r 65@8512r 66@8496r 67@8480r 68@8400r 69@8368r 70@8352r 71@8304r 72@8288r 73@8272r 74@8192r 75@8160r 76@8144r 77@8096r 78@8080r 79@8064r 80@7984r 81@7952r 82@7936r 83@7888r 84@7872r 85@7856r 86@7776r 87@7744r 88@7728r 89@7680r 90@7664r 91@7648r 92@7568r 93@7536r 94@7520r 95@7472r 96@7456r 97@7440r 98@7360r 99@7328r 100@7312r 101@7264r 102@7248r 103@7232r 104@7152r 105@7120r 106@7104r 107@7056r 108@7040r 109@7024r 110@6928r 111@6896r 112@6880r 113@6832r 114@6816r 115@6800r 116@6752r 117@6624r 118@6608r 119@6576r 120@6560r 121@6544r 122@6496r 123@6464r 124@6448r 125@6400r 126@6320r 127@6304r 128@6144r 129@6080r 130@6064r 131@6016r 132@4128r 133@4112r 134@4064r 135@4024r 136@4016r 137@3664r 138@3632r 139@3616r 140@3568r 141@3472r 142@3456r 143@3408r 144@3328r 145@3312r 146@3184r 147@3152r 148@3136r 149@3088r 150@2992r 151@2976r 152@2928r 153@1456r 154@1440r 155@1392r 156@1296r 157@1280r 158@1248r 159@1240r 160@1232r 161@1216r 162@1208r 163@1200r 164@944r 165@928r 166@912r 167@848r 168@832r 169@816r 170@752r 171@736r 172@720r 173@656r 174@640r 175@624r 176@496r 177@480r 178@464r 179@416r
B0 [2464r,2480r:1)[2480r,2512r:0)[6608r,6664r:29)[6880r,6912r:28)[7008r,7024r:27)[7104r,7136r:26)[7216r,7232r:25)[7312r,7344r:24)[7424r,7440r:23)[7520r,7552r:22)[7632r,7648r:21)[7728r,7760r:20)[7840r,7856r:19)[7936r,7968r:18)[8048r,8064r:17)[8144r,8176r:16)[8256r,8272r:15)[8352r,8384r:14)[8464r,8480r:13)[8560r,8592r:12)[8672r,8688r:11)[8768r,8800r:10)[8880r,8896r:9)[8976r,9008r:8)[9088r,9104r:7)[9184r,9216r:6)[9296r,9312r:5)[9392r,9424r:4)[9504r,9520r:3)[9648r,9664r:2)  0@2480r 1@2464r 2@9648r 3@9504r 4@9392r 5@9296r 6@9184r 7@9088r 8@8976r 9@8880r 10@8768r 11@8672r 12@8560r 13@8464r 14@8352r 15@8256r 16@8144r 17@8048r 18@7936r 19@7840r 20@7728r 21@7632r 22@7520r 23@7424r 24@7312r 25@7216r 26@7104r 27@7008r 28@6880r 29@6608r
W0 [0B,20r:0)[288r,304r:1)[448r,464r:58)[560r,624r:57)[712r,720r:56)[808r,816r:55)[900r,912r:54)[1144r,1200r:53)[1224r,1232r:52)[1264r,1280r:51)[1424r,1440r:50)[2960r,2976r:49)[3120r,3136r:48)[3248r,3312r:47)[3440r,3456r:46)[3600r,3616r:45)[3960r,4016r:44)[4096r,4112r:43)[4560r,4576r:9)[4640r,4736r:8)[4848r,4864r:7)[4992r,5008r:6)[5224r,5280r:5)[5344r,5360r:4)[5488r,5504r:3)[5684r,5712r:59)[5824r,5840r:2)[6048r,6064r:42)[6208r,6304r:41)[6432r,6448r:40)[6528r,6544r:39)[6592r,6608r:38)[6784r,6800r:74)[6800r,6800d:37)[6864r,6880r:36)[6976r,7024r:73)[7024r,7024d:35)[7088r,7104r:34)[7184r,7232r:72)[7232r,7232d:33)[7296r,7312r:32)[7392r,7440r:71)[7440r,7440d:31)[7504r,7520r:30)[7600r,7648r:70)[7648r,7648d:29)[7712r,7728r:28)[7808r,7856r:69)[7856r,7856d:27)[7920r,7936r:26)[8016r,8064r:68)[8064r,8064d:25)[8128r,8144r:24)[8224r,8272r:67)[8272r,8272d:23)[8336r,8352r:22)[8432r,8480r:66)[8480r,8480d:21)[8544r,8560r:20)[8640r,8688r:65)[8688r,8688d:19)[8752r,8768r:18)[8848r,8896r:64)[8896r,8896d:17)[8960r,8976r:16)[9056r,9104r:63)[9104r,9104d:15)[9168r,9184r:14)[9264r,9312r:62)[9312r,9312d:13)[9376r,9392r:12)[9472r,9520r:61)[9520r,9520d:11)[9616r,9664r:60)[9664r,9664d:10)  0@0B-phi 1@288r 2@5824r 3@5488r 4@5344r 5@5224r 6@4992r 7@4848r 8@4640r 9@4560r 10@9664r 11@9520r 12@9376r 13@9312r 14@9168r 15@9104r 16@8960r 17@8896r 18@8752r 19@8688r 20@8544r 21@8480r 22@8336r 23@8272r 24@8128r 25@8064r 26@7920r 27@7856r 28@7712r 29@7648r 30@7504r 31@7440r 32@7296r 33@7232r 34@7088r 35@7024r 36@6864r 37@6800r 38@6592r 39@6528r 40@6432r 41@6208r 42@6048r 43@4096r 44@3960r 45@3600r 46@3440r 47@3248r 48@3120r 49@2960r 50@1424r 51@1264r 52@1224r 53@1144r 54@900r 55@808r 56@712r 57@560r 58@448r 59@5684r 60@9616r 61@9472r 62@9264r 63@9056r 64@8848r 65@8640r 66@8432r 67@8224r 68@8016r 69@7808r 70@7600r 71@7392r 72@7184r 73@6976r 74@6784r
W1 [0B,12r:0)[576r,624r:8)[704r,720r:25)[800r,816r:24)[896r,912r:23)[1152r,1200r:7)[3264r,3312r:6)[3968r,4016r:5)[4656r,4736r:3)[5232r,5280r:2)[5688r,5712r:1)[6224r,6304r:4)[6992r,7024r:22)[7200r,7232r:21)[7408r,7440r:20)[7616r,7648r:19)[7824r,7856r:18)[8032r,8064r:17)[8240r,8272r:16)[8448r,8480r:15)[8656r,8688r:14)[8864r,8896r:13)[9072r,9104r:12)[9280r,9312r:11)[9488r,9520r:10)[9632r,9664r:9)  0@0B-phi 1@5688r 2@5232r 3@4656r 4@6224r 5@3968r 6@3264r 7@1152r 8@576r 9@9632r 10@9488r 11@9280r 12@9072r 13@8864r 14@8656r 15@8448r 16@8240r 17@8032r 18@7824r 19@7616r 20@7408r 21@7200r 22@6992r 23@896r 24@800r 25@704r
W2 [0B,8r:0)[592r,624r:8)[1160r,1200r:7)[3280r,3312r:6)[3976r,4016r:5)[4672r,4736r:3)[5240r,5280r:2)[5648r,5712r:1)[6240r,6304r:4)  0@0B-phi 1@5648r 2@5240r 3@4672r 4@6240r 5@3976r 6@3280r 7@1160r 8@592r
W3 [608r,624r:7)[1168r,1200r:0)[3296r,3312r:6)[3984r,4016r:1)[4688r,4736r:5)[5248r,5280r:3)[5664r,5712r:2)[6256r,6304r:4)  0@1168r 1@3984r 2@5664r 3@5248r 4@6256r 5@4688r 6@3296r 7@608r
W4 [1184r,1200r:5)[4000r,4016r:4)[4704r,4736r:2)[5264r,5280r:1)[5680r,5712r:0)[6272r,6304r:3)  0@5680r 1@5264r 2@4704r 3@6272r 4@4000r 5@1184r
W5 [1192r,1200r:5)[4008r,4016r:4)[4720r,4736r:2)[5272r,5280r:1)[5696r,5712r:0)[6288r,6304r:3)  0@5696r 1@5272r 2@4720r 3@6288r 4@4008r 5@1192r
%1 [20r,136r:0)  0@20r weight:0.000000e+00
%2 [12r,96r:0)  0@12r weight:0.000000e+00
%3 [8r,112r:0)  0@8r weight:0.000000e+00
%4 [128r,144r:0)  0@128r weight:0.000000e+00
%5 [176r,192r:0)  0@176r weight:0.000000e+00
%8 [512r,1184r:0)  0@512r weight:0.000000e+00
%10 [600r,1488r:0)  0@600r weight:0.000000e+00
%13 [904r,1176r:0)  0@904r weight:0.000000e+00
%15 [992r,1192r:0)  0@992r weight:0.000000e+00
%17 [1312r,6688r:0)  0@1312r weight:0.000000e+00
%18 [1328r,1344r:0)  0@1328r weight:0.000000e+00
%21 [1504r,1664r:0)  0@1504r weight:0.000000e+00
%22 [1552r,1672r:0)  0@1552r weight:0.000000e+00
%24 [1712r,1728r:0)  0@1712r weight:0.000000e+00
%27 [2864r,2880r:0)  0@2864r weight:0.000000e+00
%30 [3024r,3040r:0)  0@3024r weight:0.000000e+00
%32 [3200r,3296r:0)  0@3200r weight:0.000000e+00
%36 [3344r,3360r:0)  0@3344r weight:0.000000e+00
%39 [3504r,3520r:0)  0@3504r weight:0.000000e+00
%42 [3696r,5952B:0)  0@3696r weight:0.000000e+00
%43 [3728r,4000r:0)  0@3728r weight:0.000000e+00
%44 [3744r,4008r:0)  0@3744r weight:0.000000e+00
%45 [3992r,4160r:0)  0@3992r weight:0.000000e+00
%51 [4032r,4040r:0)  0@4032r weight:0.000000e+00
%54 [4384r,4432r:0)  0@4384r weight:0.000000e+00
%55 [4400r,4432r:0)  0@4400r weight:0.000000e+00
%57 [4416r,4496r:0)[5952B,5968r:0)  0@4416r weight:0.000000e+00
%60 [6112r,6256r:0)  0@6112r weight:0.000000e+00
%61 [6128r,6288r:0)  0@6128r weight:0.000000e+00
%62 [6160r,6272r:0)  0@6160r weight:0.000000e+00
%66 [6336r,6352r:0)  0@6336r weight:0.000000e+00
%69 [6664r,6672r:0)  0@6664r weight:0.000000e+00
%70 [6656r,6672r:0)  0@6656r weight:0.000000e+00
%72 [6688r,6704r:0)  0@6688r weight:0.000000e+00
%73 [6768r,6784r:0)  0@6768r weight:0.000000e+00
%76 [6912r,7008r:0)  0@6912r weight:0.000000e+00
%77 [6944r,9616r:0)  0@6944r weight:0.000000e+00
%78 [6960r,6992r:0)  0@6960r weight:0.000000e+00
%81 [7136r,7216r:0)  0@7136r weight:0.000000e+00
%82 [7168r,7200r:0)  0@7168r weight:0.000000e+00
%85 [7344r,7424r:0)  0@7344r weight:0.000000e+00
%86 [7376r,7408r:0)  0@7376r weight:0.000000e+00
%89 [7552r,7632r:0)  0@7552r weight:0.000000e+00
%90 [7584r,7616r:0)  0@7584r weight:0.000000e+00
%93 [7760r,7840r:0)  0@7760r weight:0.000000e+00
%94 [7792r,7824r:0)  0@7792r weight:0.000000e+00
%97 [7968r,8048r:0)  0@7968r weight:0.000000e+00
%98 [8000r,8032r:0)  0@8000r weight:0.000000e+00
%101 [8176r,8256r:0)  0@8176r weight:0.000000e+00
%102 [8208r,8240r:0)  0@8208r weight:0.000000e+00
%105 [8384r,8464r:0)  0@8384r weight:0.000000e+00
%106 [8416r,8448r:0)  0@8416r weight:0.000000e+00
%109 [8592r,8672r:0)  0@8592r weight:0.000000e+00
%110 [8624r,8656r:0)  0@8624r weight:0.000000e+00
%113 [8800r,8880r:0)  0@8800r weight:0.000000e+00
%114 [8832r,8864r:0)  0@8832r weight:0.000000e+00
%117 [9008r,9088r:0)  0@9008r weight:0.000000e+00
%118 [9040r,9072r:0)  0@9040r weight:0.000000e+00
%121 [9216r,9296r:0)  0@9216r weight:0.000000e+00
%122 [9248r,9280r:0)  0@9248r weight:0.000000e+00
%125 [9424r,9504r:0)  0@9424r weight:0.000000e+00
%126 [9456r,9488r:0)  0@9456r weight:0.000000e+00
%128 [9552r,9568r:0)  0@9552r weight:0.000000e+00
%129 [9568r,9648r:0)  0@9568r weight:0.000000e+00
%130 [9600r,9632r:0)  0@9600r weight:0.000000e+00
%133 [4192r,5952B:0)  0@4192r weight:0.000000e+00
%134 [4208r,5952B:0)  0@4208r weight:0.000000e+00
%135 [4224r,5952B:0)  0@4224r weight:0.000000e+00
%139 [4768r,4784r:0)  0@4768r weight:0.000000e+00
%142 [4912r,4928r:0)  0@4912r weight:0.000000e+00
%153 [5296r,5304r:0)  0@5296r weight:0.000000e+00
%156 [5408r,5424r:0)  0@5408r weight:0.000000e+00
%158 [5552r,5688r:0)  0@5552r weight:0.000000e+00
%160 [4352r,5952B:0)  0@4352r weight:0.000000e+00
%161 [5584r,5684r:0)  0@5584r weight:0.000000e+00
%166 [5744r,5760r:0)  0@5744r weight:0.000000e+00
%168 [5888r,5904r:0)  0@5888r weight:0.000000e+00
%169 [5904r,5920r:0)  0@5904r weight:0.000000e+00
%170 [1792r,1840r:0)  0@1792r weight:0.000000e+00
%171 [1808r,1824r:0)  0@1808r weight:0.000000e+00
%172 [1824r,1840r:0)  0@1824r weight:0.000000e+00
%173 [1840r,1872r:0)  0@1840r weight:0.000000e+00
%174 [1872r,1888r:0)  0@1872r weight:0.000000e+00
%176 [1952r,1968r:0)  0@1952r weight:0.000000e+00
%178 [2784r,2800r:0)  0@2784r weight:0.000000e+00
%179 [2800r,2816r:0)  0@2800r weight:0.000000e+00
%180 [2032r,2128r:0)  0@2032r weight:0.000000e+00
%181 [2048r,2120r:0)  0@2048r weight:0.000000e+00
%182 [2120r,2128r:0)  0@2120r weight:0.000000e+00
%183 [2128r,2144r:0)  0@2128r weight:0.000000e+00
%184 [2112r,2144r:0)  0@2112r weight:0.000000e+00
%186 [2144r,2152r:0)  0@2144r weight:0.000000e+00
%188 [2208r,2224r:0)  0@2208r weight:0.000000e+00
%190 [2704r,2720r:0)  0@2704r weight:0.000000e+00
%191 [2720r,2736r:0)  0@2720r weight:0.000000e+00
%192 [2288r,2400r:0)  0@2288r weight:0.000000e+00
%193 [2304r,2392r:0)  0@2304r weight:0.000000e+00
%194 [2392r,2400r:0)  0@2392r weight:0.000000e+00
%195 [2400r,2416r:0)  0@2400r weight:0.000000e+00
%196 [2368r,2432r:0)  0@2368r weight:0.000000e+00
%198 [2384r,2416r:0)  0@2384r weight:0.000000e+00
%199 [2416r,2424r:0)  0@2416r weight:0.000000e+00
%200 [2424r,2432r:0)  0@2424r weight:0.000000e+00
%201 [2432r,2464r:0)  0@2432r weight:0.000000e+00
%202 [2512r,2672r:0)  0@2512r weight:0.000000e+00
%203 [2528r,2648r:0)  0@2528r weight:0.000000e+00
%205 [1616r,2848B:0)  0@1616r weight:0.000000e+00
%207 [1648r,2848B:0)  0@1648r weight:0.000000e+00
%208 [2648r,2664r:0)  0@2648r weight:0.000000e+00
%209 [2632r,2664r:0)  0@2632r weight:0.000000e+00
%211 [1680r,2848B:0)  0@1680r weight:0.000000e+00
%213 [2664r,2672r:0)  0@2664r weight:0.000000e+00
%214 [2640r,2672r:0)  0@2640r weight:0.000000e+00
%215 [2624r,2656r:0)  0@2624r weight:0.000000e+00
%216 [2656r,2680r:0)  0@2656r weight:0.000000e+00
%217 [256r,288r:0)  0@256r weight:0.000000e+00
%218 [336r,352r:0)  0@336r weight:0.000000e+00
%219 [352r,368r:0)  0@352r weight:0.000000e+00
%220 [28r,6112r:0)  0@28r weight:0.000000e+00
RegMasks: 304r 464r 624r 720r 816r 912r 1200r 1232r 1280r 1440r 2480r 2976r 3136r 3312r 3456r 3616r 4016r 4112r 4576r 4736r 4864r 5008r 5280r 5360r 5504r 5712r 5840r 6064r 6304r 6448r 6544r 6608r 6800r 6880r 7024r 7104r 7232r 7312r 7440r 7520r 7648r 7728r 7856r 7936r 8064r 8144r 8272r 8352r 8480r 8560r 8688r 8768r 8896r 8976r 9104r 9184r 9312r 9392r 9520r 9664r
********** MACHINEINSTRS **********
# Machine code for function appft: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=8, align=8, at location [SP]
  fi#2: size=8, align=8, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=4, align=4, at location [SP]
  fi#6: size=4, align=4, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=8, align=8, at location [SP]
  fi#16: size=8192, align=16, at location [SP]
  fi#17: size=4096, align=16, at location [SP]
  fi#18: size=4096, align=16, at location [SP]
Function Live Ins: $w0 in %1, $x1 in %2, $x2 in %3

0B	bb.0.entry:
	  successors: %bb.1(0x80000000); %bb.1(100.00%)
	  liveins: $w0, $x1, $x2
8B	  %3:gpr64 = COPY $x2
12B	  %2:gpr64 = COPY $x1
20B	  %1:gpr32 = COPY $w0
28B	  %220:gpr64sp = ADDXri %stack.14.ik2, 0, 0
96B	  STRXui %2:gpr64, %stack.1.total_time.addr, 0 :: (store 8 into %ir.total_time.addr)
112B	  STRXui %3:gpr64, %stack.2.verified.addr, 0 :: (store 8 into %ir.verified.addr)
128B	  %4:gpr32 = MOVi32imm 1
136B	  STRWui %1:gpr32, %220:gpr64sp, 17 :: (store 4 into %ir.niter.addr)
144B	  STRWui %4:gpr32, %220:gpr64sp, 11, debug-location !89 :: (store 4 into %ir.i); appft.c:61:12

160B	bb.1.for.cond:
	; predecessors: %bb.0, %bb.2
	  successors: %bb.2(0x7c000000), %bb.3(0x04000000); %bb.2(96.88%), %bb.3(3.12%)

176B	  %5:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !92 :: (dereferenceable load 4 from %ir.i); appft.c:61:17
192B	  dead $wzr = SUBSWri %5:gpr32common, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
208B	  Bcc 12, %bb.3, implicit killed $nzcv, debug-location !95; appft.c:61:5
224B	  B %bb.2, debug-location !95; appft.c:61:5

240B	bb.2.for.body:
	; predecessors: %bb.1
	  successors: %bb.1(0x80000000); %bb.1(100.00%)

256B	  %217:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !96 :: (dereferenceable load 4 from %ir.i); appft.c:62:21
272B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !98; appft.c:62:9
288B	  $w0 = COPY %217:gpr32, debug-location !98; appft.c:62:9
304B	  BL @timer_clear, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !98; appft.c:62:9
320B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !98; appft.c:62:9
336B	  %218:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
352B	  %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !99; appft.c:61:27
368B	  STRWui %219:gpr32common, %220:gpr64sp, 11, debug-location !99 :: (store 4 into %ir.i); appft.c:61:27
384B	  B %bb.1, debug-location !100; appft.c:61:5

400B	bb.3.for.end:
	; predecessors: %bb.1
	  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

416B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !103; appft.c:65:5
448B	  $w0 = MOVi32imm 2, debug-location !103; appft.c:65:5
464B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !103; appft.c:65:5
480B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !103; appft.c:65:5
496B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; appft.c:66:5
512B	  %8:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !104; appft.c:66:5
560B	  $w0 = MOVi32imm 512, debug-location !104; appft.c:66:5
576B	  $w1 = MOVi32imm 256, debug-location !104; appft.c:66:5
592B	  $w2 = MOVi32imm 256, debug-location !104; appft.c:66:5
600B	  %10:gpr32 = MOVi32imm 256
608B	  $x3 = COPY %8:gpr64, debug-location !104; appft.c:66:5
624B	  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
640B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; appft.c:66:5
656B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !106; appft.c:68:5
704B	  $x1 = ADDXri %stack.16.exp1, 0, 0, debug-location !106; appft.c:68:5
712B	  $w0 = MOVi32imm 512, debug-location !106; appft.c:68:5
720B	  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
736B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !106; appft.c:68:5
752B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !108; appft.c:69:5
800B	  $x1 = ADDXri %stack.17.exp2, 0, 0, debug-location !108; appft.c:69:5
808B	  $w0 = MOVi32imm 256, debug-location !108; appft.c:69:5
816B	  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
832B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !108; appft.c:69:5
848B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !110; appft.c:70:5
896B	  $x1 = ADDXri %stack.18.exp3, 0, 0, debug-location !110; appft.c:70:5
900B	  $w0 = MOVi32imm 256, debug-location !110; appft.c:70:5
904B	  %13:gpr64common = ADDXri %stack.18.exp3, 0, 0
912B	  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
928B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !110; appft.c:70:5
944B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !114; appft.c:71:5
992B	  %15:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !114; appft.c:71:5
1120B	  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !114; appft.c:71:5
1136B	  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !114; appft.c:71:5
1144B	  $w0 = MOVi32imm 1, debug-location !114; appft.c:71:5
1152B	  $w1 = MOVi32imm 512, debug-location !114; appft.c:71:5
1160B	  $w2 = MOVi32imm 256, debug-location !114; appft.c:71:5
1168B	  $w3 = MOVi32imm 256, debug-location !114; appft.c:71:5
1176B	  STRXui %13:gpr64common, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
1184B	  $x4 = COPY %8:gpr64, debug-location !114; appft.c:71:5
1192B	  $x5 = COPY %15:gpr64, debug-location !114; appft.c:71:5
1200B	  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
1208B	  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !114; appft.c:71:5
1216B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !115; appft.c:72:5
1224B	  $w0 = MOVi32imm 2, debug-location !115; appft.c:72:5
1232B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !115; appft.c:72:5
1240B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !115; appft.c:72:5
1248B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !116; appft.c:74:5
1264B	  $w0 = MOVi32imm 1, debug-location !116; appft.c:74:5
1280B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !116; appft.c:74:5
1296B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !116; appft.c:74:5
1312B	  %17:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
1328B	  %18:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
1344B	  CBZW %18:gpr32, %bb.5, debug-location !119; appft.c:78:9
1360B	  B %bb.4, debug-location !119; appft.c:78:9

1376B	bb.4.if.then:
	; predecessors: %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

1392B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !120; appft.c:79:9
1424B	  $w0 = MOVi32imm 13, debug-location !120; appft.c:79:9
1440B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !120; appft.c:79:9
1456B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !120; appft.c:79:9

1472B	bb.5.if.end:
	; predecessors: %bb.3, %bb.4
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

1488B	  STRWui %10:gpr32, %220:gpr64sp, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
1504B	  %21:gpr32 = MOVi32imm 128
1552B	  %22:gpr64 = MOVi64imm -4682421225964825446
1600B	  STRWui $wzr, %220:gpr64sp, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
1616B	  undef %205.sub_32:gpr64 = MOVi32imm 1050624
1648B	  %207:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
1656B	  STRWui %21:gpr32, %220:gpr64sp, 5, debug-location !123 :: (store 4 into %ir.n32); appft.c:83:9
1664B	  STRWui %21:gpr32, %220:gpr64sp, 6, debug-location !122 :: (store 4 into %ir.n22); appft.c:82:9
1672B	  STRXui %22:gpr64, %stack.15.ap, 0, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
1680B	  undef %211.sub_32:gpr64 = MOVi32imm 4104

1696B	bb.6.for.cond8:
	; predecessors: %bb.5, %bb.13
	  successors: %bb.7(0x7c000000), %bb.14(0x04000000); %bb.7(96.88%), %bb.14(3.12%)

1712B	  %24:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
1728B	  dead $wzr = SUBSWri %24:gpr32common, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
1744B	  Bcc 12, %bb.14, implicit killed $nzcv, debug-location !131; appft.c:85:5
1760B	  B %bb.7, debug-location !131; appft.c:85:5

1776B	bb.7.for.body10:
	; predecessors: %bb.6
	  successors: %bb.8(0x80000000); %bb.8(100.00%)

1792B	  %170:gpr32 = LDRWui %220:gpr64sp, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
1808B	  %171:gpr32 = LDRWui %220:gpr64sp, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
1824B	  %172:gpr32 = SDIVWr %170:gpr32, %171:gpr32, debug-location !136; appft.c:86:21
1840B	  %173:gpr32 = nsw SUBWrs %170:gpr32, %172:gpr32, 8, debug-location !138; appft.c:86:16
1856B	  STRWui %173:gpr32, %220:gpr64sp, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
1872B	  %174:gpr32 = nsw MADDWrrr %173:gpr32, %173:gpr32, $wzr, debug-location !142; appft.c:87:18
1888B	  STRWui %174:gpr32, %220:gpr64sp, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
1920B	  STRWui $wzr, %220:gpr64sp, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16

1936B	bb.8.for.cond12:
	; predecessors: %bb.7, %bb.12
	  successors: %bb.9(0x7c000000), %bb.13(0x04000000); %bb.9(96.88%), %bb.13(3.12%)

1952B	  %176:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
1968B	  dead $wzr = SUBSWri %176:gpr32common, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
1984B	  Bcc 12, %bb.13, implicit killed $nzcv, debug-location !150; appft.c:88:9
2000B	  B %bb.9, debug-location !150; appft.c:88:9

2016B	bb.9.for.body14:
	; predecessors: %bb.8
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

2032B	  %180:gpr32 = LDRWui %220:gpr64sp, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
2048B	  %181:gpr32 = LDRWui %220:gpr64sp, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
2112B	  %184:gpr32 = LDRWui %220:gpr64sp, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
2120B	  %182:gpr32 = SDIVWr %180:gpr32, %181:gpr32, debug-location !155; appft.c:89:25
2128B	  %183:gpr32 = nsw SUBWrs %180:gpr32, %182:gpr32, 8, debug-location !157; appft.c:89:20
2136B	  STRWui %183:gpr32, %220:gpr64sp, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
2144B	  %186:gpr32 = MADDWrrr %183:gpr32, %183:gpr32, %184:gpr32, debug-location !163; appft.c:90:23
2152B	  STRWui %186:gpr32, %220:gpr64sp, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
2176B	  STRWui $wzr, %220:gpr64sp, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20

2192B	bb.10.for.cond19:
	; predecessors: %bb.9, %bb.11
	  successors: %bb.11(0x7c000000), %bb.12(0x04000000); %bb.11(96.88%), %bb.12(3.12%)

2208B	  %188:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
2224B	  dead $wzr = SUBSWri %188:gpr32common, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
2240B	  Bcc 12, %bb.12, implicit killed $nzcv, debug-location !171; appft.c:91:13
2256B	  B %bb.11, debug-location !171; appft.c:91:13

2272B	bb.11.for.body21:
	; predecessors: %bb.10
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

2288B	  %192:gpr32 = LDRWui %220:gpr64sp, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
2304B	  %193:gpr32 = LDRWui %220:gpr64sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
2368B	  %196:fpr64 = LDRDui %stack.15.ap, 0, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
2384B	  %198:gpr32 = LDRWui %220:gpr64sp, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
2392B	  %194:gpr32 = SDIVWr %192:gpr32, %193:gpr32, debug-location !176; appft.c:92:29
2400B	  %195:gpr32 = nsw SUBWrs %192:gpr32, %194:gpr32, 9, debug-location !178; appft.c:92:24
2408B	  STRWui %195:gpr32, %220:gpr64sp, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
2416B	  %199:gpr32 = MADDWrrr %195:gpr32, %195:gpr32, %198:gpr32, debug-location !185; appft.c:93:62
2424B	  %200:fpr64 = SCVTFUWDri %199:gpr32, debug-location !186; appft.c:93:45
2432B	  %201:fpr64 = FMULDrr %196:fpr64, %200:fpr64, debug-location !187; appft.c:93:43
2448B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
2464B	  $d0 = COPY %201:fpr64, debug-location !188; appft.c:93:36
2480B	  BL @exp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !188; appft.c:93:36
2496B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !188; appft.c:93:36
2512B	  %202:fpr64 = COPY $d0, debug-location !188; appft.c:93:36
2528B	  %203:gpr64 = LDRSWui %220:gpr64sp, 11, debug-location !189 :: (dereferenceable load 4 from %ir.i); appft.c:93:25
2624B	  %215:gpr32common = LDRWui %220:gpr64sp, 10, debug-location !194 :: (dereferenceable load 4 from %ir.j); appft.c:91:34
2632B	  %209:gpr64 = LDRSWui %220:gpr64sp, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k); appft.c:93:28
2640B	  %214:gpr64 = LDRSWui %220:gpr64sp, 10, debug-location !192 :: (dereferenceable load 4 from %ir.j); appft.c:93:31
2648B	  %208:gpr64 = MADDXrrr %203:gpr64, %205:gpr64, %207:gpr64, debug-location !190; appft.c:93:17
2656B	  %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !194; appft.c:91:34
2664B	  %213:gpr64common = MADDXrrr %209:gpr64, %211:gpr64, %208:gpr64, debug-location !190; appft.c:93:17
2672B	  STRDroX %202:fpr64, %213:gpr64common, %214:gpr64, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
2680B	  STRWui %216:gpr32common, %220:gpr64sp, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
2688B	  B %bb.10, debug-location !195; appft.c:91:13

2696B	bb.12.for.inc35:
	; predecessors: %bb.10
	  successors: %bb.8(0x80000000); %bb.8(100.00%)

2704B	  %190:gpr32common = LDRWui %220:gpr64sp, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
2720B	  %191:gpr32common = nsw ADDWri %190:gpr32common, 1, 0, debug-location !198; appft.c:88:30
2736B	  STRWui %191:gpr32common, %220:gpr64sp, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
2752B	  B %bb.8, debug-location !199; appft.c:88:9

2768B	bb.13.for.inc38:
	; predecessors: %bb.8
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

2784B	  %178:gpr32common = LDRWui %220:gpr64sp, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
2800B	  %179:gpr32common = nsw ADDWri %178:gpr32common, 1, 0, debug-location !202; appft.c:85:26
2816B	  STRWui %179:gpr32common, %220:gpr64sp, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
2832B	  B %bb.6, debug-location !203; appft.c:85:5

2848B	bb.14.for.end40:
	; predecessors: %bb.6
	  successors: %bb.15(0x50000000), %bb.16(0x30000000); %bb.15(62.50%), %bb.16(37.50%)

2864B	  %27:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !206 :: (dereferenceable load 4 from @timers_enabled); appft.c:97:9
2880B	  CBZW %27:gpr32, %bb.16, debug-location !208; appft.c:97:9
2896B	  B %bb.15, debug-location !208; appft.c:97:9

2912B	bb.15.if.then42:
	; predecessors: %bb.14
	  successors: %bb.16(0x80000000); %bb.16(100.00%)

2928B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !209; appft.c:98:9
2960B	  $w0 = MOVi32imm 13, debug-location !209; appft.c:98:9
2976B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !209; appft.c:98:9
2992B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !209; appft.c:98:9

3008B	bb.16.if.end43:
	; predecessors: %bb.14, %bb.15
	  successors: %bb.17(0x50000000), %bb.18(0x30000000); %bb.17(62.50%), %bb.18(37.50%)

3024B	  %30:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !210 :: (dereferenceable load 4 from @timers_enabled); appft.c:100:9
3040B	  CBZW %30:gpr32, %bb.18, debug-location !212; appft.c:100:9
3056B	  B %bb.17, debug-location !212; appft.c:100:9

3072B	bb.17.if.then45:
	; predecessors: %bb.16
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

3088B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !213; appft.c:101:9
3120B	  $w0 = MOVi32imm 12, debug-location !213; appft.c:101:9
3136B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !213; appft.c:101:9
3152B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !213; appft.c:101:9

3168B	bb.18.if.end46:
	; predecessors: %bb.16, %bb.17
	  successors: %bb.19(0x50000000), %bb.20(0x30000000); %bb.19(62.50%), %bb.20(37.50%)

3184B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !214; appft.c:102:5
3200B	  %32:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !214; appft.c:102:5
3248B	  $w0 = MOVi32imm 512, debug-location !214; appft.c:102:5
3264B	  $w1 = MOVi32imm 256, debug-location !214; appft.c:102:5
3280B	  $w2 = MOVi32imm 256, debug-location !214; appft.c:102:5
3296B	  $x3 = COPY %32:gpr64, debug-location !214; appft.c:102:5
3312B	  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
3328B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !214; appft.c:102:5
3344B	  %36:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !215 :: (dereferenceable load 4 from @timers_enabled); appft.c:103:9
3360B	  CBZW %36:gpr32, %bb.20, debug-location !217; appft.c:103:9
3376B	  B %bb.19, debug-location !217; appft.c:103:9

3392B	bb.19.if.then48:
	; predecessors: %bb.18
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

3408B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !218; appft.c:104:9
3440B	  $w0 = MOVi32imm 12, debug-location !218; appft.c:104:9
3456B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !218; appft.c:104:9
3472B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !218; appft.c:104:9

3488B	bb.20.if.end49:
	; predecessors: %bb.18, %bb.19
	  successors: %bb.21(0x50000000), %bb.22(0x30000000); %bb.21(62.50%), %bb.22(37.50%)

3504B	  %39:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !219 :: (dereferenceable load 4 from @timers_enabled); appft.c:105:9
3520B	  CBZW %39:gpr32, %bb.22, debug-location !221; appft.c:105:9
3536B	  B %bb.21, debug-location !221; appft.c:105:9

3552B	bb.21.if.then51:
	; predecessors: %bb.20
	  successors: %bb.22(0x80000000); %bb.22(100.00%)

3568B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !222; appft.c:106:9
3600B	  $w0 = MOVi32imm 15, debug-location !222; appft.c:106:9
3616B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !222; appft.c:106:9
3632B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !222; appft.c:106:9

3648B	bb.22.if.end52:
	; predecessors: %bb.20, %bb.21
	  successors: %bb.23(0x50000000), %bb.24(0x30000000); %bb.23(62.50%), %bb.24(37.50%)

3664B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !226; appft.c:107:5
3696B	  %42:gpr64common = ADDXri %stack.18.exp3, 0, 0
3728B	  %43:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt, debug-location !226; appft.c:107:5
3744B	  %44:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y, debug-location !226; appft.c:107:5
3936B	  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !226; appft.c:107:5
3952B	  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !226; appft.c:107:5
3956B	  STRXui %42:gpr64common, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
3960B	  $w0 = MOVi32imm 1, debug-location !226; appft.c:107:5
3968B	  $w1 = MOVi32imm 512, debug-location !226; appft.c:107:5
3976B	  $w2 = MOVi32imm 256, debug-location !226; appft.c:107:5
3984B	  $w3 = MOVi32imm 256, debug-location !226; appft.c:107:5
3992B	  %45:gpr32 = MOVi32imm 1
4000B	  $x4 = COPY %43:gpr64, debug-location !226; appft.c:107:5
4008B	  $x5 = COPY %44:gpr64, debug-location !226; appft.c:107:5
4016B	  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
4024B	  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !226; appft.c:107:5
4032B	  %51:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !227 :: (dereferenceable load 4 from @timers_enabled); appft.c:108:9
4040B	  CBZW %51:gpr32, %bb.24, debug-location !229; appft.c:108:9
4048B	  B %bb.23, debug-location !229; appft.c:108:9

4056B	bb.23.if.then57:
	; predecessors: %bb.22
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

4064B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !230; appft.c:109:9
4096B	  $w0 = MOVi32imm 15, debug-location !230; appft.c:109:9
4112B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !230; appft.c:109:9
4128B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !230; appft.c:109:9

4144B	bb.24.if.end58:
	; predecessors: %bb.22, %bb.23
	  successors: %bb.25(0x80000000); %bb.25(100.00%)

4160B	  STRWui %45:gpr32, %220:gpr64sp, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
4192B	  %133:gpr64 = MOVaddr target-flags(aarch64-page) @xnt, target-flags(aarch64-pageoff, aarch64-nc) @xnt
4208B	  %134:gpr64 = MOVaddr target-flags(aarch64-page) @y, target-flags(aarch64-pageoff, aarch64-nc) @y
4224B	  %135:gpr64 = MOVaddr target-flags(aarch64-page) @twiddle, target-flags(aarch64-pageoff, aarch64-nc) @twiddle
4352B	  %160:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums

4368B	bb.25.for.cond59:
	; predecessors: %bb.24, %bb.38
	  successors: %bb.26(0x7c000000), %bb.39(0x04000000); %bb.26(96.88%), %bb.39(3.12%)

4384B	  %54:gpr32 = LDRWui %220:gpr64sp, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
4400B	  %55:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
4416B	  %57:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
4432B	  dead $wzr = SUBSWrr %54:gpr32, %55:gpr32, implicit-def $nzcv, debug-location !239; appft.c:111:5
4448B	  Bcc 12, %bb.39, implicit killed $nzcv, debug-location !239; appft.c:111:5
4464B	  B %bb.26, debug-location !239; appft.c:111:5

4480B	bb.26.for.body62:
	; predecessors: %bb.25
	  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

4496B	  CBZW %57:gpr32, %bb.28, debug-location !240; appft.c:112:13
4512B	  B %bb.27, debug-location !240; appft.c:112:13

4528B	bb.27.if.then64:
	; predecessors: %bb.26
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4544B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !242; appft.c:113:13
4560B	  $w0 = MOVi32imm 11, debug-location !242; appft.c:113:13
4576B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !242; appft.c:113:13
4592B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !242; appft.c:113:13

4608B	bb.28.if.end65:
	; predecessors: %bb.26, %bb.27
	  successors: %bb.29(0x50000000), %bb.30(0x30000000); %bb.29(62.50%), %bb.30(37.50%)

4624B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; appft.c:114:9
4640B	  $w0 = MOVi32imm 512, debug-location !244; appft.c:114:9
4656B	  $w1 = MOVi32imm 256, debug-location !244; appft.c:114:9
4672B	  $w2 = MOVi32imm 256, debug-location !244; appft.c:114:9
4688B	  $x3 = COPY %133:gpr64, debug-location !244; appft.c:114:9
4704B	  $x4 = COPY %134:gpr64, debug-location !244; appft.c:114:9
4720B	  $x5 = COPY %135:gpr64, debug-location !244; appft.c:114:9
4736B	  BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
4752B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; appft.c:114:9
4768B	  %139:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !245 :: (dereferenceable load 4 from @timers_enabled); appft.c:115:13
4784B	  CBZW %139:gpr32, %bb.30, debug-location !247; appft.c:115:13
4800B	  B %bb.29, debug-location !247; appft.c:115:13

4816B	bb.29.if.then67:
	; predecessors: %bb.28
	  successors: %bb.30(0x80000000); %bb.30(100.00%)

4832B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !248; appft.c:116:13
4848B	  $w0 = MOVi32imm 11, debug-location !248; appft.c:116:13
4864B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !248; appft.c:116:13
4880B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !248; appft.c:116:13

4896B	bb.30.if.end68:
	; predecessors: %bb.28, %bb.29
	  successors: %bb.31(0x50000000), %bb.32(0x30000000); %bb.31(62.50%), %bb.32(37.50%)

4912B	  %142:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !249 :: (dereferenceable load 4 from @timers_enabled); appft.c:117:13
4928B	  CBZW %142:gpr32, %bb.32, debug-location !251; appft.c:117:13
4944B	  B %bb.31, debug-location !251; appft.c:117:13

4960B	bb.31.if.then70:
	; predecessors: %bb.30
	  successors: %bb.32(0x80000000); %bb.32(100.00%)

4976B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !252; appft.c:118:13
4992B	  $w0 = MOVi32imm 15, debug-location !252; appft.c:118:13
5008B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !252; appft.c:118:13
5024B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !252; appft.c:118:13

5040B	bb.32.if.end71:
	; predecessors: %bb.30, %bb.31
	  successors: %bb.33(0x50000000), %bb.34(0x30000000); %bb.33(62.50%), %bb.34(37.50%)

5056B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !256; appft.c:119:9
5200B	  $x6 = ADDXri %stack.16.exp1, 0, 0, debug-location !256; appft.c:119:9
5216B	  $x7 = ADDXri %stack.17.exp2, 0, 0, debug-location !256; appft.c:119:9
5224B	  $w0 = MOVi32imm -1, debug-location !256; appft.c:119:9
5232B	  $w1 = MOVi32imm 512, debug-location !256; appft.c:119:9
5240B	  $w2 = MOVi32imm 256, debug-location !256; appft.c:119:9
5248B	  $w3 = MOVi32imm 256, debug-location !256; appft.c:119:9
5256B	  STRXui %42:gpr64common, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
5264B	  $x4 = COPY %133:gpr64, debug-location !256; appft.c:119:9
5272B	  $x5 = COPY %133:gpr64, debug-location !256; appft.c:119:9
5280B	  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
5288B	  ADJCALLSTACKUP 8, 0, implicit-def dead $sp, implicit $sp, debug-location !256; appft.c:119:9
5296B	  %153:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !257 :: (dereferenceable load 4 from @timers_enabled); appft.c:120:13
5304B	  CBZW %153:gpr32, %bb.34, debug-location !259; appft.c:120:13
5312B	  B %bb.33, debug-location !259; appft.c:120:13

5320B	bb.33.if.then76:
	; predecessors: %bb.32
	  successors: %bb.34(0x80000000); %bb.34(100.00%)

5328B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !260; appft.c:121:13
5344B	  $w0 = MOVi32imm 15, debug-location !260; appft.c:121:13
5360B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !260; appft.c:121:13
5376B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !260; appft.c:121:13

5392B	bb.34.if.end77:
	; predecessors: %bb.32, %bb.33
	  successors: %bb.35(0x50000000), %bb.36(0x30000000); %bb.35(62.50%), %bb.36(37.50%)

5408B	  %156:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); appft.c:122:13
5424B	  CBZW %156:gpr32, %bb.36, debug-location !263; appft.c:122:13
5440B	  B %bb.35, debug-location !263; appft.c:122:13

5456B	bb.35.if.then79:
	; predecessors: %bb.34
	  successors: %bb.36(0x80000000); %bb.36(100.00%)

5472B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !264; appft.c:123:13
5488B	  $w0 = MOVi32imm 10, debug-location !264; appft.c:123:13
5504B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !264; appft.c:123:13
5520B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !264; appft.c:123:13

5536B	bb.36.if.end80:
	; predecessors: %bb.34, %bb.35
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

5552B	  %158:gpr64 = LDRSWui %220:gpr64sp, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
5584B	  %161:gpr64 = ADDXrs %160:gpr64, %158:gpr64, 4, debug-location !266; appft.c:124:28
5600B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
5648B	  $w2 = MOVi32imm 512, debug-location !268; appft.c:124:9
5664B	  $w3 = MOVi32imm 256, debug-location !268; appft.c:124:9
5680B	  $w4 = MOVi32imm 256, debug-location !268; appft.c:124:9
5684B	  $x0 = COPY %161:gpr64, debug-location !268; appft.c:124:9
5688B	  $w1 = COPY %158.sub_32:gpr64, debug-location !268; appft.c:124:9
5696B	  $x5 = COPY %133:gpr64, debug-location !268; appft.c:124:9
5712B	  BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
5728B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !268; appft.c:124:9
5744B	  %166:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !269 :: (dereferenceable load 4 from @timers_enabled); appft.c:125:13
5760B	  CBZW %166:gpr32, %bb.38, debug-location !271; appft.c:125:13
5776B	  B %bb.37, debug-location !271; appft.c:125:13

5792B	bb.37.if.then84:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

5808B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !272; appft.c:126:13
5824B	  $w0 = MOVi32imm 10, debug-location !272; appft.c:126:13
5840B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !272; appft.c:126:13
5856B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !272; appft.c:126:13

5872B	bb.38.for.inc86:
	; predecessors: %bb.36, %bb.37
	  successors: %bb.25(0x80000000); %bb.25(100.00%)

5888B	  %168:gpr32common = LDRWui %220:gpr64sp, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
5904B	  %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !273; appft.c:111:33
5920B	  STRWui %169:gpr32common, %220:gpr64sp, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
5936B	  B %bb.25, debug-location !274; appft.c:111:5

5952B	bb.39.do.end92:
	; predecessors: %bb.25
	  successors: %bb.40(0x50000000), %bb.41(0x30000000); %bb.40(62.50%), %bb.41(37.50%)

5968B	  CBZW %57:gpr32, %bb.41, debug-location !277; appft.c:133:9
5984B	  B %bb.40, debug-location !277; appft.c:133:9

6000B	bb.40.if.then94:
	; predecessors: %bb.39
	  successors: %bb.41(0x80000000); %bb.41(100.00%)

6016B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !278; appft.c:134:9
6048B	  $w0 = MOVi32imm 14, debug-location !278; appft.c:134:9
6064B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !278; appft.c:134:9
6080B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !278; appft.c:134:9

6096B	bb.41.if.end95:
	; predecessors: %bb.39, %bb.40
	  successors: %bb.42(0x50000000), %bb.43(0x30000000); %bb.42(62.50%), %bb.43(37.50%)

6112B	  %60:gpr32 = LDRWui %220:gpr64sp, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
6128B	  %61:gpr64 = LDRXui %stack.2.verified.addr, 0, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
6144B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
6160B	  %62:gpr64 = MOVaddr target-flags(aarch64-page) @sums, target-flags(aarch64-pageoff, aarch64-nc) @sums, debug-location !282; appft.c:135:5
6208B	  $w0 = MOVi32imm 512, debug-location !282; appft.c:135:5
6224B	  $w1 = MOVi32imm 256, debug-location !282; appft.c:135:5
6240B	  $w2 = MOVi32imm 256, debug-location !282; appft.c:135:5
6256B	  $w3 = COPY %60:gpr32, debug-location !282; appft.c:135:5
6272B	  $x4 = COPY %62:gpr64, debug-location !282; appft.c:135:5
6288B	  $x5 = COPY %61:gpr64, debug-location !282; appft.c:135:5
6304B	  BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
6320B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !282; appft.c:135:5
6336B	  %66:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !283 :: (dereferenceable load 4 from @timers_enabled); appft.c:136:9
6352B	  CBZW %66:gpr32, %bb.43, debug-location !285; appft.c:136:9
6368B	  B %bb.42, debug-location !285; appft.c:136:9

6384B	bb.42.if.then97:
	; predecessors: %bb.41
	  successors: %bb.43(0x80000000); %bb.43(100.00%)

6400B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !286; appft.c:137:9
6432B	  $w0 = MOVi32imm 14, debug-location !286; appft.c:137:9
6448B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !286; appft.c:137:9
6464B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !286; appft.c:137:9

6480B	bb.43.if.end98:
	; predecessors: %bb.41, %bb.42
	  successors: %bb.44(0x50000000), %bb.45(0x30000000); %bb.44(62.50%), %bb.45(37.50%)

6496B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !287; appft.c:138:5
6528B	  $w0 = MOVi32imm 1, debug-location !287; appft.c:138:5
6544B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !287; appft.c:138:5
6560B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !287; appft.c:138:5
6576B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !288; appft.c:140:19
6592B	  $w0 = MOVi32imm 1, debug-location !288; appft.c:140:19
6608B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !288; appft.c:140:19
6624B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !288; appft.c:140:19
6656B	  %70:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
6664B	  %69:fpr64 = COPY $d0, debug-location !288; appft.c:140:19
6672B	  STRDui %69:fpr64, %70:gpr64common, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
6688B	  %72:gpr32 = LDRWui %17:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
6704B	  CBZW %72:gpr32, %bb.45, debug-location !293; appft.c:141:9
6720B	  B %bb.44, debug-location !293; appft.c:141:9

6736B	bb.44.if.end102:
	; predecessors: %bb.43
	  successors: %bb.45(0x80000000); %bb.45(100.00%)

6752B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !294; appft.c:144:5
6768B	  %73:gpr64 = MOVaddr target-flags(aarch64-page) @.str, target-flags(aarch64-pageoff, aarch64-nc) @.str, debug-location !294; appft.c:144:5
6784B	  $x0 = COPY %73:gpr64, debug-location !294; appft.c:144:5
6800B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
6816B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !294; appft.c:144:5
6832B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !295; appft.c:145:60
6864B	  $w0 = MOVi32imm 1, debug-location !295; appft.c:145:60
6880B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !295; appft.c:145:60
6896B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !295; appft.c:145:60
6912B	  %76:fpr64 = COPY $d0, debug-location !295; appft.c:145:60
6928B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !296; appft.c:145:5
6944B	  %77:gpr64 = MOVaddr target-flags(aarch64-page) @.str.1, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, debug-location !296; appft.c:145:5
6960B	  %78:gpr64 = MOVaddr target-flags(aarch64-page) @.str.2, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, debug-location !296; appft.c:145:5
6976B	  $x0 = COPY %77:gpr64, debug-location !296; appft.c:145:5
6992B	  $x1 = COPY %78:gpr64, debug-location !296; appft.c:145:5
7008B	  $d0 = COPY %76:fpr64, debug-location !296; appft.c:145:5
7024B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
7040B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !296; appft.c:145:5
7056B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !297; appft.c:146:60
7088B	  $w0 = MOVi32imm 2, debug-location !297; appft.c:146:60
7104B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !297; appft.c:146:60
7120B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !297; appft.c:146:60
7136B	  %81:fpr64 = COPY $d0, debug-location !297; appft.c:146:60
7152B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !298; appft.c:146:5
7168B	  %82:gpr64 = MOVaddr target-flags(aarch64-page) @.str.3, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, debug-location !298; appft.c:146:5
7184B	  $x0 = COPY %77:gpr64, debug-location !298; appft.c:146:5
7200B	  $x1 = COPY %82:gpr64, debug-location !298; appft.c:146:5
7216B	  $d0 = COPY %81:fpr64, debug-location !298; appft.c:146:5
7232B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
7248B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !298; appft.c:146:5
7264B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !299; appft.c:147:60
7296B	  $w0 = MOVi32imm 3, debug-location !299; appft.c:147:60
7312B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !299; appft.c:147:60
7328B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !299; appft.c:147:60
7344B	  %85:fpr64 = COPY $d0, debug-location !299; appft.c:147:60
7360B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !300; appft.c:147:5
7376B	  %86:gpr64 = MOVaddr target-flags(aarch64-page) @.str.4, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, debug-location !300; appft.c:147:5
7392B	  $x0 = COPY %77:gpr64, debug-location !300; appft.c:147:5
7408B	  $x1 = COPY %86:gpr64, debug-location !300; appft.c:147:5
7424B	  $d0 = COPY %85:fpr64, debug-location !300; appft.c:147:5
7440B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
7456B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !300; appft.c:147:5
7472B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !301; appft.c:148:60
7504B	  $w0 = MOVi32imm 4, debug-location !301; appft.c:148:60
7520B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !301; appft.c:148:60
7536B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !301; appft.c:148:60
7552B	  %89:fpr64 = COPY $d0, debug-location !301; appft.c:148:60
7568B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !302; appft.c:148:5
7584B	  %90:gpr64 = MOVaddr target-flags(aarch64-page) @.str.5, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, debug-location !302; appft.c:148:5
7600B	  $x0 = COPY %77:gpr64, debug-location !302; appft.c:148:5
7616B	  $x1 = COPY %90:gpr64, debug-location !302; appft.c:148:5
7632B	  $d0 = COPY %89:fpr64, debug-location !302; appft.c:148:5
7648B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
7664B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !302; appft.c:148:5
7680B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !303; appft.c:149:60
7712B	  $w0 = MOVi32imm 7, debug-location !303; appft.c:149:60
7728B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !303; appft.c:149:60
7744B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !303; appft.c:149:60
7760B	  %93:fpr64 = COPY $d0, debug-location !303; appft.c:149:60
7776B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !304; appft.c:149:5
7792B	  %94:gpr64 = MOVaddr target-flags(aarch64-page) @.str.6, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, debug-location !304; appft.c:149:5
7808B	  $x0 = COPY %77:gpr64, debug-location !304; appft.c:149:5
7824B	  $x1 = COPY %94:gpr64, debug-location !304; appft.c:149:5
7840B	  $d0 = COPY %93:fpr64, debug-location !304; appft.c:149:5
7856B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
7872B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !304; appft.c:149:5
7888B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !305; appft.c:150:60
7920B	  $w0 = MOVi32imm 8, debug-location !305; appft.c:150:60
7936B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !305; appft.c:150:60
7952B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !305; appft.c:150:60
7968B	  %97:fpr64 = COPY $d0, debug-location !305; appft.c:150:60
7984B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !306; appft.c:150:5
8000B	  %98:gpr64 = MOVaddr target-flags(aarch64-page) @.str.7, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, debug-location !306; appft.c:150:5
8016B	  $x0 = COPY %77:gpr64, debug-location !306; appft.c:150:5
8032B	  $x1 = COPY %98:gpr64, debug-location !306; appft.c:150:5
8048B	  $d0 = COPY %97:fpr64, debug-location !306; appft.c:150:5
8064B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
8080B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !306; appft.c:150:5
8096B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !307; appft.c:151:60
8128B	  $w0 = MOVi32imm 9, debug-location !307; appft.c:151:60
8144B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !307; appft.c:151:60
8160B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !307; appft.c:151:60
8176B	  %101:fpr64 = COPY $d0, debug-location !307; appft.c:151:60
8192B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !308; appft.c:151:5
8208B	  %102:gpr64 = MOVaddr target-flags(aarch64-page) @.str.8, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, debug-location !308; appft.c:151:5
8224B	  $x0 = COPY %77:gpr64, debug-location !308; appft.c:151:5
8240B	  $x1 = COPY %102:gpr64, debug-location !308; appft.c:151:5
8256B	  $d0 = COPY %101:fpr64, debug-location !308; appft.c:151:5
8272B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
8288B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !308; appft.c:151:5
8304B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !309; appft.c:152:60
8336B	  $w0 = MOVi32imm 10, debug-location !309; appft.c:152:60
8352B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !309; appft.c:152:60
8368B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !309; appft.c:152:60
8384B	  %105:fpr64 = COPY $d0, debug-location !309; appft.c:152:60
8400B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; appft.c:152:5
8416B	  %106:gpr64 = MOVaddr target-flags(aarch64-page) @.str.9, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, debug-location !310; appft.c:152:5
8432B	  $x0 = COPY %77:gpr64, debug-location !310; appft.c:152:5
8448B	  $x1 = COPY %106:gpr64, debug-location !310; appft.c:152:5
8464B	  $d0 = COPY %105:fpr64, debug-location !310; appft.c:152:5
8480B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
8496B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; appft.c:152:5
8512B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; appft.c:153:60
8544B	  $w0 = MOVi32imm 11, debug-location !311; appft.c:153:60
8560B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !311; appft.c:153:60
8576B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; appft.c:153:60
8592B	  %109:fpr64 = COPY $d0, debug-location !311; appft.c:153:60
8608B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !312; appft.c:153:5
8624B	  %110:gpr64 = MOVaddr target-flags(aarch64-page) @.str.10, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, debug-location !312; appft.c:153:5
8640B	  $x0 = COPY %77:gpr64, debug-location !312; appft.c:153:5
8656B	  $x1 = COPY %110:gpr64, debug-location !312; appft.c:153:5
8672B	  $d0 = COPY %109:fpr64, debug-location !312; appft.c:153:5
8688B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
8704B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !312; appft.c:153:5
8720B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !313; appft.c:154:60
8752B	  $w0 = MOVi32imm 12, debug-location !313; appft.c:154:60
8768B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !313; appft.c:154:60
8784B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !313; appft.c:154:60
8800B	  %113:fpr64 = COPY $d0, debug-location !313; appft.c:154:60
8816B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !314; appft.c:154:5
8832B	  %114:gpr64 = MOVaddr target-flags(aarch64-page) @.str.11, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, debug-location !314; appft.c:154:5
8848B	  $x0 = COPY %77:gpr64, debug-location !314; appft.c:154:5
8864B	  $x1 = COPY %114:gpr64, debug-location !314; appft.c:154:5
8880B	  $d0 = COPY %113:fpr64, debug-location !314; appft.c:154:5
8896B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
8912B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !314; appft.c:154:5
8928B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !315; appft.c:155:60
8960B	  $w0 = MOVi32imm 13, debug-location !315; appft.c:155:60
8976B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !315; appft.c:155:60
8992B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !315; appft.c:155:60
9008B	  %117:fpr64 = COPY $d0, debug-location !315; appft.c:155:60
9024B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !316; appft.c:155:5
9040B	  %118:gpr64 = MOVaddr target-flags(aarch64-page) @.str.12, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, debug-location !316; appft.c:155:5
9056B	  $x0 = COPY %77:gpr64, debug-location !316; appft.c:155:5
9072B	  $x1 = COPY %118:gpr64, debug-location !316; appft.c:155:5
9088B	  $d0 = COPY %117:fpr64, debug-location !316; appft.c:155:5
9104B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
9120B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !316; appft.c:155:5
9136B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !317; appft.c:156:60
9168B	  $w0 = MOVi32imm 14, debug-location !317; appft.c:156:60
9184B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !317; appft.c:156:60
9200B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !317; appft.c:156:60
9216B	  %121:fpr64 = COPY $d0, debug-location !317; appft.c:156:60
9232B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !318; appft.c:156:5
9248B	  %122:gpr64 = MOVaddr target-flags(aarch64-page) @.str.13, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, debug-location !318; appft.c:156:5
9264B	  $x0 = COPY %77:gpr64, debug-location !318; appft.c:156:5
9280B	  $x1 = COPY %122:gpr64, debug-location !318; appft.c:156:5
9296B	  $d0 = COPY %121:fpr64, debug-location !318; appft.c:156:5
9312B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
9328B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !318; appft.c:156:5
9344B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !319; appft.c:157:60
9376B	  $w0 = MOVi32imm 15, debug-location !319; appft.c:157:60
9392B	  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !319; appft.c:157:60
9408B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !319; appft.c:157:60
9424B	  %125:fpr64 = COPY $d0, debug-location !319; appft.c:157:60
9440B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !320; appft.c:157:5
9456B	  %126:gpr64 = MOVaddr target-flags(aarch64-page) @.str.14, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, debug-location !320; appft.c:157:5
9472B	  $x0 = COPY %77:gpr64, debug-location !320; appft.c:157:5
9488B	  $x1 = COPY %126:gpr64, debug-location !320; appft.c:157:5
9504B	  $d0 = COPY %125:fpr64, debug-location !320; appft.c:157:5
9520B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
9536B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !320; appft.c:157:5
9552B	  %128:gpr64common = LDRXui %stack.1.total_time.addr, 0, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
9568B	  %129:fpr64 = LDRDui %128:gpr64common, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
9584B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5
9600B	  %130:gpr64 = MOVaddr target-flags(aarch64-page) @.str.15, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, debug-location !323; appft.c:158:5
9616B	  $x0 = COPY %77:gpr64, debug-location !323; appft.c:158:5
9632B	  $x1 = COPY %130:gpr64, debug-location !323; appft.c:158:5
9648B	  $d0 = COPY %129:fpr64, debug-location !323; appft.c:158:5
9664B	  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
9680B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; appft.c:158:5

9696B	bb.45.return:
	; predecessors: %bb.43, %bb.44

9712B	  RET_ReallyLR debug-location !324; appft.c:159:1

# End machine code for function appft.

Before post-MI-sched:
# Machine code for function appft: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#0: size=4, align=4, at location [SP-84]
  fi#1: size=8, align=8, at location [SP-96]
  fi#2: size=8, align=8, at location [SP-104]
  fi#3: size=4, align=4, at location [SP-108]
  fi#4: size=4, align=4, at location [SP-112]
  fi#5: size=4, align=4, at location [SP-116]
  fi#6: size=4, align=4, at location [SP-120]
  fi#7: size=4, align=4, at location [SP-124]
  fi#8: size=4, align=4, at location [SP-128]
  fi#9: size=4, align=4, at location [SP-132]
  fi#10: size=4, align=4, at location [SP-136]
  fi#11: size=4, align=4, at location [SP-140]
  fi#12: size=4, align=4, at location [SP-144]
  fi#13: size=4, align=4, at location [SP-148]
  fi#14: size=4, align=4, at location [SP-152]
  fi#15: size=8, align=8, at location [SP-160]
  fi#16: size=8192, align=16, at location [SP-8352]
  fi#17: size=4096, align=16, at location [SP-12448]
  fi#18: size=4096, align=16, at location [SP-16544]
  fi#19: size=8, align=8, at location [SP-8]
  fi#20: size=8, align=8, at location [SP-16]
  fi#21: size=8, align=8, at location [SP-24]
  fi#22: size=8, align=8, at location [SP-32]
  fi#23: size=8, align=8, at location [SP-40]
  fi#24: size=8, align=8, at location [SP-48]
  fi#25: size=8, align=8, at location [SP-56]
  fi#26: size=8, align=8, at location [SP-64]
  fi#27: size=8, align=8, at location [SP-72]
  fi#28: size=8, align=8, at location [SP-80]
Function Live Ins: $w0, $x1, $x2

bb.0.entry:
  successors: %bb.1(0x80000000); %bb.1(100.00%)
  liveins: $w0, $x1, $x2, $x25, $x28, $x23, $x24, $x21, $x22, $x19, $x20, $lr
  early-clobber $sp = frame-setup STPXpre killed $x28, killed $x25, $sp(tied-def 0), -10 :: (store 8 into %stack.28), (store 8 into %stack.27)
  frame-setup STPXi killed $x24, killed $x23, $sp, 2 :: (store 8 into %stack.26), (store 8 into %stack.25)
  frame-setup STPXi killed $x22, killed $x21, $sp, 4 :: (store 8 into %stack.24), (store 8 into %stack.23)
  frame-setup STPXi killed $x20, killed $x19, $sp, 6 :: (store 8 into %stack.22), (store 8 into %stack.21)
  frame-setup STPXi killed $fp, killed $lr, $sp, 8 :: (store 8 into %stack.20), (store 8 into %stack.19)
  $fp = frame-setup ADDXri $sp, 64, 0
  $sp = frame-setup SUBXri $sp, 4, 12
  $sp = frame-setup SUBXri $sp, 96, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  frame-setup CFI_INSTRUCTION offset $w20, -32
  frame-setup CFI_INSTRUCTION offset $w21, -40
  frame-setup CFI_INSTRUCTION offset $w22, -48
  frame-setup CFI_INSTRUCTION offset $w23, -56
  frame-setup CFI_INSTRUCTION offset $w24, -64
  frame-setup CFI_INSTRUCTION offset $w25, -72
  frame-setup CFI_INSTRUCTION offset $w28, -80
  $x22 = SUBXri $fp, 136, 0
  STPXi renamable $x2, renamable $x1, $fp, -11 :: (store 8 into %ir.total_time.addr), (store 8 into %ir.verified.addr)
  $w8 = MOVZWi 1, 0
  STRWui killed renamable $w0, renamable $x22, 17 :: (store 4 into %ir.niter.addr)

bb.1.for.cond:
; predecessors: %bb.0, %bb.2
  successors: %bb.2(0x7c000000), %bb.3(0x04000000); %bb.2(96.88%), %bb.3(3.12%)
  liveins: $x22, $w8
  STRWui renamable $w8, renamable $x22, 11, debug-location !DILocation(line: 0, scope: !90) :: (store 4 into %ir.i); appft.c:0
  $w8 = ORRWrs $wzr, killed renamable $w8, 0, debug-location !92; appft.c:61:17
  dead $wzr = SUBSWri killed renamable $w8, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  Bcc 12, %bb.3, implicit $nzcv, debug-location !95; appft.c:61:5

bb.2.for.body:
; predecessors: %bb.1
  successors: %bb.1(0x80000000); %bb.1(100.00%)
  liveins: $x22
  renamable $w0 = LDRWui renamable $x22, 11, debug-location !96 :: (dereferenceable load 4 from %ir.i); appft.c:62:21
  BL @timer_clear, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !98; appft.c:62:9
  renamable $w8 = LDRWui renamable $x22, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !99; appft.c:61:27
  B %bb.1

bb.3.for.end:
; predecessors: %bb.1
  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)
  liveins: $x22
  $w0 = MOVZWi 2, 0, debug-location !103; appft.c:65:5
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !103; appft.c:65:5
  $x19 = ADRP target-flags(aarch64-page) @xnt, debug-location !104; appft.c:66:5
  renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !104; appft.c:66:5
  $w0 = MOVZWi 512, 0, debug-location !104; appft.c:66:5
  $w1 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  $w2 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  $w20 = MOVZWi 256, 0
  $x3 = ORRXrs $xzr, $x19, 0, debug-location !104; appft.c:66:5
  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
  $x1 = ADDXri $sp, 2, 12, debug-location !106; appft.c:68:5
  $x1 = ADDXri $x1, 16, 0, debug-location !106; appft.c:68:5
  $w0 = MOVZWi 512, 0, debug-location !106; appft.c:68:5
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
  $x1 = ADDXri $sp, 1, 12, debug-location !108; appft.c:69:5
  $x1 = ADDXri $x1, 16, 0, debug-location !108; appft.c:69:5
  $w0 = MOVZWi 256, 0, debug-location !108; appft.c:69:5
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
  $x1 = ADDXri $sp, 16, 0, debug-location !110; appft.c:70:5
  $w0 = MOVZWi 256, 0, debug-location !110; appft.c:70:5
  $x21 = ADDXri $sp, 16, 0
  BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
  $x5 = ADRP target-flags(aarch64-page) @y, debug-location !114; appft.c:71:5
  renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !114; appft.c:71:5
  $x6 = ADDXri $sp, 2, 12, debug-location !114; appft.c:71:5
  $x6 = ADDXri $x6, 16, 0, debug-location !114; appft.c:71:5
  $x7 = ADDXri $sp, 1, 12, debug-location !114; appft.c:71:5
  $x7 = ADDXri $x7, 16, 0, debug-location !114; appft.c:71:5
  $w0 = MOVZWi 1, 0, debug-location !114; appft.c:71:5
  $w1 = MOVZWi 512, 0, debug-location !114; appft.c:71:5
  $w2 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  $w3 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  STRXui killed renamable $x21, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  $x4 = ORRXrs $xzr, killed $x19, 0, debug-location !114; appft.c:71:5
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
  $w0 = MOVZWi 2, 0, debug-location !115; appft.c:72:5
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !115; appft.c:72:5
  $w0 = MOVZWi 1, 0, debug-location !116; appft.c:74:5
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !116; appft.c:74:5
  renamable $x23 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  CBZW killed renamable $w8, %bb.5, debug-location !119; appft.c:78:9

bb.4.if.then:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $w20, $x22, $x23
  $w0 = MOVZWi 13, 0, debug-location !120; appft.c:79:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !120; appft.c:79:9

bb.5.if.end:
; predecessors: %bb.3, %bb.4
  successors: %bb.6(0x80000000); %bb.6(100.00%)
  liveins: $w20, $x22, $x23
  STRWui killed renamable $w20, renamable $x22, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  $w8 = MOVZWi 128, 0
  $x9 = MOVZXi 5274, 0
  $x9 = MOVKXi $x9(tied-def 0), 6558, 16
  $x9 = MOVKXi $x9(tied-def 0), 45748, 32
  $x9 = MOVKXi $x9(tied-def 0), 48900, 48
  STRWui $wzr, renamable $x22, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  $w19 = MOVZWi 2048, 0
  $w19 = MOVKWi $w19(tied-def 0), 16, 16, implicit-def $x19
  $x20 = ADRP target-flags(aarch64-page) @twiddle
  renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  STPWi renamable $w8, renamable $w8, renamable $x22, 5, debug-location !123 :: (store 4 into %ir.n32), (store 4 into %ir.n22); appft.c:83:9
  STURXi killed renamable $x9, $fp, -144, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  $w21 = MOVZWi 4104, 0, implicit-def $x21

bb.6.for.cond8:
; predecessors: %bb.5, %bb.13
  successors: %bb.7(0x7c000000), %bb.14(0x04000000); %bb.7(96.88%), %bb.14(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  dead $wzr = SUBSWri killed renamable $w8, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  Bcc 12, %bb.14, implicit $nzcv, debug-location !131; appft.c:85:5

bb.7.for.body10:
; predecessors: %bb.6
  successors: %bb.8(0x80000000); %bb.8(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  renamable $w9 = LDRWui renamable $x22, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  renamable $w9 = SDIVWr renamable $w8, killed renamable $w9, debug-location !136; appft.c:86:21
  renamable $w8 = nsw SUBWrs killed renamable $w8, killed renamable $w9, 8, debug-location !138; appft.c:86:16
  STRWui renamable $w8, renamable $x22, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  renamable $w8 = nsw MADDWrrr killed renamable $w8, renamable $w8, $wzr, debug-location !142; appft.c:87:18
  STRWui killed renamable $w8, renamable $x22, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  STRWui $wzr, renamable $x22, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16

bb.8.for.cond12:
; predecessors: %bb.7, %bb.12
  successors: %bb.9(0x7c000000), %bb.13(0x04000000); %bb.9(96.88%), %bb.13(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  dead $wzr = SUBSWri killed renamable $w8, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  Bcc 12, %bb.13, implicit $nzcv, debug-location !150; appft.c:88:9

bb.9.for.body14:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  renamable $w9 = LDRWui renamable $x22, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  renamable $w10 = LDRWui renamable $x22, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  renamable $w9 = SDIVWr renamable $w8, killed renamable $w9, debug-location !155; appft.c:89:25
  renamable $w8 = nsw SUBWrs killed renamable $w8, killed renamable $w9, 8, debug-location !157; appft.c:89:20
  STRWui renamable $w8, renamable $x22, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  renamable $w8 = MADDWrrr killed renamable $w8, renamable $w8, killed renamable $w10, debug-location !163; appft.c:90:23
  STRWui killed renamable $w8, renamable $x22, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  STRWui $wzr, renamable $x22, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20

bb.10.for.cond19:
; predecessors: %bb.9, %bb.11
  successors: %bb.11(0x7c000000), %bb.12(0x04000000); %bb.11(96.88%), %bb.12(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  dead $wzr = SUBSWri killed renamable $w8, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  Bcc 12, %bb.12, implicit $nzcv, debug-location !171; appft.c:91:13

bb.11.for.body21:
; predecessors: %bb.10
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  renamable $w9 = LDRWui renamable $x22, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  renamable $d0 = LDURDi $fp, -144, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  renamable $w10 = LDRWui renamable $x22, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  renamable $w9 = SDIVWr renamable $w8, killed renamable $w9, debug-location !176; appft.c:92:29
  renamable $w8 = nsw SUBWrs killed renamable $w8, killed renamable $w9, 9, debug-location !178; appft.c:92:24
  STRWui renamable $w8, renamable $x22, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  renamable $w8 = MADDWrrr killed renamable $w8, renamable $w8, killed renamable $w10, debug-location !185; appft.c:93:62
  renamable $d1 = SCVTFUWDri killed renamable $w8, debug-location !186; appft.c:93:45
  renamable $d0 = FMULDrr killed renamable $d0, killed renamable $d1, debug-location !187; appft.c:93:43
  BL @exp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !188; appft.c:93:36
  renamable $w9, $w8 = LDPWi renamable $x22, 10, debug-location !189 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); appft.c:93:25
  $w8 = KILL $w8, implicit-def $x8, debug-location !189; appft.c:93:25
  $x8 = SBFMXri $x8, 0, 31, debug-location !189; appft.c:93:25
  renamable $x10, renamable $x11 = LDPSWi renamable $x22, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); appft.c:93:28
  renamable $x8 = MADDXrrr killed renamable $x8, renamable $x19, renamable $x20, debug-location !190; appft.c:93:17
  renamable $w9 = nsw ADDWri killed renamable $w9, 1, 0, debug-location !194; appft.c:91:34
  renamable $x8 = MADDXrrr killed renamable $x10, renamable $x21, killed renamable $x8, debug-location !190; appft.c:93:17
  STRDroX killed renamable $d0, killed renamable $x8, killed renamable $x11, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  STRWui killed renamable $w9, renamable $x22, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  B %bb.10

bb.12.for.inc35:
; predecessors: %bb.10
  successors: %bb.8(0x80000000); %bb.8(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !198; appft.c:88:30
  STRWui killed renamable $w8, renamable $x22, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  B %bb.8

bb.13.for.inc38:
; predecessors: %bb.8
  successors: %bb.6(0x80000000); %bb.6(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !202; appft.c:85:26
  STRWui killed renamable $w8, renamable $x22, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  B %bb.6

bb.14.for.end40:
; predecessors: %bb.6
  successors: %bb.15(0x50000000), %bb.16(0x30000000); %bb.15(62.50%), %bb.16(37.50%)
  liveins: $x22, $x23
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !206 :: (dereferenceable load 4 from @timers_enabled); appft.c:97:9
  CBZW killed renamable $w8, %bb.16, debug-location !208; appft.c:97:9

bb.15.if.then42:
; predecessors: %bb.14
  successors: %bb.16(0x80000000); %bb.16(100.00%)
  liveins: $x22, $x23
  $w0 = MOVZWi 13, 0, debug-location !209; appft.c:98:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !209; appft.c:98:9

bb.16.if.end43:
; predecessors: %bb.14, %bb.15
  successors: %bb.17(0x50000000), %bb.18(0x30000000); %bb.17(62.50%), %bb.18(37.50%)
  liveins: $x22, $x23
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !210 :: (dereferenceable load 4 from @timers_enabled); appft.c:100:9
  CBZW killed renamable $w8, %bb.18, debug-location !212; appft.c:100:9

bb.17.if.then45:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)
  liveins: $x22, $x23
  $w0 = MOVZWi 12, 0, debug-location !213; appft.c:101:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !213; appft.c:101:9

bb.18.if.end46:
; predecessors: %bb.16, %bb.17
  successors: %bb.19(0x50000000), %bb.20(0x30000000); %bb.19(62.50%), %bb.20(37.50%)
  liveins: $x22, $x23
  $x3 = ADRP target-flags(aarch64-page) @xnt, debug-location !214; appft.c:102:5
  renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !214; appft.c:102:5
  $w0 = MOVZWi 512, 0, debug-location !214; appft.c:102:5
  $w1 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  $w2 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !215 :: (dereferenceable load 4 from @timers_enabled); appft.c:103:9
  CBZW killed renamable $w8, %bb.20, debug-location !217; appft.c:103:9

bb.19.if.then48:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)
  liveins: $x22, $x23
  $w0 = MOVZWi 12, 0, debug-location !218; appft.c:104:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !218; appft.c:104:9

bb.20.if.end49:
; predecessors: %bb.18, %bb.19
  successors: %bb.21(0x50000000), %bb.22(0x30000000); %bb.21(62.50%), %bb.22(37.50%)
  liveins: $x22, $x23
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !219 :: (dereferenceable load 4 from @timers_enabled); appft.c:105:9
  CBZW killed renamable $w8, %bb.22, debug-location !221; appft.c:105:9

bb.21.if.then51:
; predecessors: %bb.20
  successors: %bb.22(0x80000000); %bb.22(100.00%)
  liveins: $x22, $x23
  $w0 = MOVZWi 15, 0, debug-location !222; appft.c:106:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !222; appft.c:106:9

bb.22.if.end52:
; predecessors: %bb.20, %bb.21
  successors: %bb.23(0x50000000), %bb.24(0x30000000); %bb.23(62.50%), %bb.24(37.50%)
  liveins: $x22, $x23
  $x24 = ADDXri $sp, 16, 0
  $x4 = ADRP target-flags(aarch64-page) @xnt, debug-location !226; appft.c:107:5
  renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !226; appft.c:107:5
  $x5 = ADRP target-flags(aarch64-page) @y, debug-location !226; appft.c:107:5
  renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !226; appft.c:107:5
  $x6 = ADDXri $sp, 2, 12, debug-location !226; appft.c:107:5
  $x6 = ADDXri $x6, 16, 0, debug-location !226; appft.c:107:5
  $x7 = ADDXri $sp, 1, 12, debug-location !226; appft.c:107:5
  $x7 = ADDXri $x7, 16, 0, debug-location !226; appft.c:107:5
  STRXui renamable $x24, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  $w0 = MOVZWi 1, 0, debug-location !226; appft.c:107:5
  $w1 = MOVZWi 512, 0, debug-location !226; appft.c:107:5
  $w2 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  $w3 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  $w19 = MOVZWi 1, 0
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !227 :: (dereferenceable load 4 from @timers_enabled); appft.c:108:9
  CBZW killed renamable $w8, %bb.24, debug-location !229; appft.c:108:9

bb.23.if.then57:
; predecessors: %bb.22
  successors: %bb.24(0x80000000); %bb.24(100.00%)
  liveins: $w19, $x22, $x23, $x24
  $w0 = MOVZWi 15, 0, debug-location !230; appft.c:109:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !230; appft.c:109:9

bb.24.if.end58:
; predecessors: %bb.22, %bb.23
  successors: %bb.25(0x80000000); %bb.25(100.00%)
  liveins: $w19, $x22, $x23, $x24
  STRWui killed renamable $w19, renamable $x22, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  $x19 = ADRP target-flags(aarch64-page) @xnt
  renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0
  $x20 = ADRP target-flags(aarch64-page) @y
  renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @y, 0
  $x21 = ADRP target-flags(aarch64-page) @twiddle
  renamable $x21 = ADDXri $x21, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  $x25 = ADRP target-flags(aarch64-page) @sums
  renamable $x25 = ADDXri $x25, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0

bb.25.for.cond59:
; predecessors: %bb.24, %bb.38
  successors: %bb.26(0x7c000000), %bb.39(0x04000000); %bb.26(96.88%), %bb.39(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  renamable $w9 = LDRWui renamable $x22, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  renamable $w10 = LDRWui renamable $x22, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  $wzr = SUBSWrs killed renamable $w9, killed renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !239; appft.c:111:5
  Bcc 12, %bb.39, implicit $nzcv, debug-location !239; appft.c:111:5

bb.26.for.body62:
; predecessors: %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)
  liveins: $w8, $x19, $x20, $x21, $x22, $x23, $x24, $x25
  CBZW killed renamable $w8, %bb.28, debug-location !240; appft.c:112:13

bb.27.if.then64:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 11, 0, debug-location !242; appft.c:113:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !242; appft.c:113:13

bb.28.if.end65:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x50000000), %bb.30(0x30000000); %bb.29(62.50%), %bb.30(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 512, 0, debug-location !244; appft.c:114:9
  $w1 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  $w2 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  $x3 = ORRXrs $xzr, $x19, 0, debug-location !244; appft.c:114:9
  $x4 = ORRXrs $xzr, $x20, 0, debug-location !244; appft.c:114:9
  $x5 = ORRXrs $xzr, $x21, 0, debug-location !244; appft.c:114:9
  BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !245 :: (dereferenceable load 4 from @timers_enabled); appft.c:115:13
  CBZW killed renamable $w8, %bb.30, debug-location !247; appft.c:115:13

bb.29.if.then67:
; predecessors: %bb.28
  successors: %bb.30(0x80000000); %bb.30(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 11, 0, debug-location !248; appft.c:116:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !248; appft.c:116:13

bb.30.if.end68:
; predecessors: %bb.28, %bb.29
  successors: %bb.31(0x50000000), %bb.32(0x30000000); %bb.31(62.50%), %bb.32(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !249 :: (dereferenceable load 4 from @timers_enabled); appft.c:117:13
  CBZW killed renamable $w8, %bb.32, debug-location !251; appft.c:117:13

bb.31.if.then70:
; predecessors: %bb.30
  successors: %bb.32(0x80000000); %bb.32(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 15, 0, debug-location !252; appft.c:118:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !252; appft.c:118:13

bb.32.if.end71:
; predecessors: %bb.30, %bb.31
  successors: %bb.33(0x50000000), %bb.34(0x30000000); %bb.33(62.50%), %bb.34(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $x6 = ADDXri $sp, 2, 12, debug-location !256; appft.c:119:9
  $x6 = ADDXri $x6, 16, 0, debug-location !256; appft.c:119:9
  $x7 = ADDXri $sp, 1, 12, debug-location !256; appft.c:119:9
  $x7 = ADDXri $x7, 16, 0, debug-location !256; appft.c:119:9
  $w0 = MOVNWi 0, 0, debug-location !256; appft.c:119:9
  $w1 = MOVZWi 512, 0, debug-location !256; appft.c:119:9
  $w2 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  $w3 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  STRXui renamable $x24, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  $x4 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  $x5 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !257 :: (dereferenceable load 4 from @timers_enabled); appft.c:120:13
  CBZW killed renamable $w8, %bb.34, debug-location !259; appft.c:120:13

bb.33.if.then76:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 15, 0, debug-location !260; appft.c:121:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !260; appft.c:121:13

bb.34.if.end77:
; predecessors: %bb.32, %bb.33
  successors: %bb.35(0x50000000), %bb.36(0x30000000); %bb.35(62.50%), %bb.36(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !261 :: (dereferenceable load 4 from @timers_enabled); appft.c:122:13
  CBZW killed renamable $w8, %bb.36, debug-location !263; appft.c:122:13

bb.35.if.then79:
; predecessors: %bb.34
  successors: %bb.36(0x80000000); %bb.36(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 10, 0, debug-location !264; appft.c:123:13
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !264; appft.c:123:13

bb.36.if.end80:
; predecessors: %bb.34, %bb.35
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  renamable $x1 = LDRSWui renamable $x22, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  renamable $x0 = ADDXrs renamable $x25, renamable $x1, 4, debug-location !266; appft.c:124:28
  $w2 = MOVZWi 512, 0, debug-location !268; appft.c:124:9
  $w3 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  $w4 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  $w1 = KILL renamable $w1, implicit killed $x1, debug-location !268; appft.c:124:9
  $x5 = ORRXrs $xzr, $x19, 0, debug-location !268; appft.c:124:9
  BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !269 :: (dereferenceable load 4 from @timers_enabled); appft.c:125:13
  CBZW killed renamable $w8, %bb.38, debug-location !271; appft.c:125:13

bb.37.if.then84:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  $w0 = MOVZWi 10, 0, debug-location !272; appft.c:126:13
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !272; appft.c:126:13

bb.38.for.inc86:
; predecessors: %bb.36, %bb.37
  successors: %bb.25(0x80000000); %bb.25(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23, $x24, $x25
  renamable $w8 = LDRWui renamable $x22, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !273; appft.c:111:33
  STRWui killed renamable $w8, renamable $x22, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  B %bb.25

bb.39.do.end92:
; predecessors: %bb.25
  successors: %bb.40(0x50000000), %bb.41(0x30000000); %bb.40(62.50%), %bb.41(37.50%)
  liveins: $w8, $x22, $x23
  CBZW killed renamable $w8, %bb.41, debug-location !277; appft.c:133:9

bb.40.if.then94:
; predecessors: %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)
  liveins: $x22, $x23
  $w0 = MOVZWi 14, 0, debug-location !278; appft.c:134:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !278; appft.c:134:9

bb.41.if.end95:
; predecessors: %bb.39, %bb.40
  successors: %bb.42(0x50000000), %bb.43(0x30000000); %bb.42(62.50%), %bb.43(37.50%)
  liveins: $x22, $x23
  renamable $w3 = LDRWui killed renamable $x22, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  renamable $x5 = LDURXi $fp, -88, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  $x4 = ADRP target-flags(aarch64-page) @sums, debug-location !282; appft.c:135:5
  renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0, debug-location !282; appft.c:135:5
  $w0 = MOVZWi 512, 0, debug-location !282; appft.c:135:5
  $w1 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  $w2 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
  renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !283 :: (dereferenceable load 4 from @timers_enabled); appft.c:136:9
  CBZW killed renamable $w8, %bb.43, debug-location !285; appft.c:136:9

bb.42.if.then97:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)
  liveins: $x23
  $w0 = MOVZWi 14, 0, debug-location !286; appft.c:137:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !286; appft.c:137:9

bb.43.if.end98:
; predecessors: %bb.41, %bb.42
  successors: %bb.44(0x50000000), %bb.45(0x30000000); %bb.44(62.50%), %bb.45(37.50%)
  liveins: $x23
  $w0 = MOVZWi 1, 0, debug-location !287; appft.c:138:5
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !287; appft.c:138:5
  $w0 = MOVZWi 1, 0, debug-location !288; appft.c:140:19
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !288; appft.c:140:19
  renamable $x8 = LDURXi $fp, -80, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  STRDui killed renamable $d0, killed renamable $x8, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  renamable $w8 = LDRWui killed renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  CBZW killed renamable $w8, %bb.45, debug-location !293; appft.c:141:9

bb.44.if.end102:
; predecessors: %bb.43
  successors: %bb.45(0x80000000); %bb.45(100.00%)

  $x0 = ADRP target-flags(aarch64-page) @.str, debug-location !294; appft.c:144:5
  renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @.str, 0, debug-location !294; appft.c:144:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
  $w0 = MOVZWi 1, 0, debug-location !295; appft.c:145:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !295; appft.c:145:60
  $x19 = ADRP target-flags(aarch64-page) @.str.1, debug-location !296; appft.c:145:5
  renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, 0, debug-location !296; appft.c:145:5
  $x1 = ADRP target-flags(aarch64-page) @.str.2, debug-location !296; appft.c:145:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, 0, debug-location !296; appft.c:145:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !296; appft.c:145:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
  $w0 = MOVZWi 2, 0, debug-location !297; appft.c:146:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !297; appft.c:146:60
  $x1 = ADRP target-flags(aarch64-page) @.str.3, debug-location !298; appft.c:146:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, 0, debug-location !298; appft.c:146:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !298; appft.c:146:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
  $w0 = MOVZWi 3, 0, debug-location !299; appft.c:147:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !299; appft.c:147:60
  $x1 = ADRP target-flags(aarch64-page) @.str.4, debug-location !300; appft.c:147:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, 0, debug-location !300; appft.c:147:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !300; appft.c:147:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
  $w0 = MOVZWi 4, 0, debug-location !301; appft.c:148:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !301; appft.c:148:60
  $x1 = ADRP target-flags(aarch64-page) @.str.5, debug-location !302; appft.c:148:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, 0, debug-location !302; appft.c:148:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !302; appft.c:148:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
  $w0 = MOVZWi 7, 0, debug-location !303; appft.c:149:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !303; appft.c:149:60
  $x1 = ADRP target-flags(aarch64-page) @.str.6, debug-location !304; appft.c:149:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, 0, debug-location !304; appft.c:149:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !304; appft.c:149:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
  $w0 = MOVZWi 8, 0, debug-location !305; appft.c:150:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !305; appft.c:150:60
  $x1 = ADRP target-flags(aarch64-page) @.str.7, debug-location !306; appft.c:150:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, 0, debug-location !306; appft.c:150:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !306; appft.c:150:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
  $w0 = MOVZWi 9, 0, debug-location !307; appft.c:151:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !307; appft.c:151:60
  $x1 = ADRP target-flags(aarch64-page) @.str.8, debug-location !308; appft.c:151:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, 0, debug-location !308; appft.c:151:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !308; appft.c:151:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
  $w0 = MOVZWi 10, 0, debug-location !309; appft.c:152:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !309; appft.c:152:60
  $x1 = ADRP target-flags(aarch64-page) @.str.9, debug-location !310; appft.c:152:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, 0, debug-location !310; appft.c:152:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !310; appft.c:152:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
  $w0 = MOVZWi 11, 0, debug-location !311; appft.c:153:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !311; appft.c:153:60
  $x1 = ADRP target-flags(aarch64-page) @.str.10, debug-location !312; appft.c:153:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, 0, debug-location !312; appft.c:153:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !312; appft.c:153:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
  $w0 = MOVZWi 12, 0, debug-location !313; appft.c:154:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !313; appft.c:154:60
  $x1 = ADRP target-flags(aarch64-page) @.str.11, debug-location !314; appft.c:154:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, 0, debug-location !314; appft.c:154:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !314; appft.c:154:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
  $w0 = MOVZWi 13, 0, debug-location !315; appft.c:155:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !315; appft.c:155:60
  $x1 = ADRP target-flags(aarch64-page) @.str.12, debug-location !316; appft.c:155:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, 0, debug-location !316; appft.c:155:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !316; appft.c:155:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
  $w0 = MOVZWi 14, 0, debug-location !317; appft.c:156:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !317; appft.c:156:60
  $x1 = ADRP target-flags(aarch64-page) @.str.13, debug-location !318; appft.c:156:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, 0, debug-location !318; appft.c:156:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !318; appft.c:156:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
  $w0 = MOVZWi 15, 0, debug-location !319; appft.c:157:60
  BL @timer_read, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $d0, debug-location !319; appft.c:157:60
  $x1 = ADRP target-flags(aarch64-page) @.str.14, debug-location !320; appft.c:157:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, 0, debug-location !320; appft.c:157:5
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !320; appft.c:157:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
  renamable $x8 = LDURXi $fp, -80, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  renamable $d0 = LDRDui killed renamable $x8, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  $x1 = ADRP target-flags(aarch64-page) @.str.15, debug-location !323; appft.c:158:5
  renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, 0, debug-location !323; appft.c:158:5
  $x0 = ORRXrs $xzr, killed $x19, 0, debug-location !323; appft.c:158:5
  BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5

bb.45.return:
; predecessors: %bb.43, %bb.44

  $sp = frame-destroy ADDXri $sp, 4, 12, debug-location !324; appft.c:159:1
  $sp = frame-destroy ADDXri $sp, 96, 0, debug-location !324; appft.c:159:1
  $fp, $lr = frame-destroy LDPXi $sp, 8, debug-location !324 :: (load 8 from %stack.20), (load 8 from %stack.19); appft.c:159:1
  $x20, $x19 = frame-destroy LDPXi $sp, 6, debug-location !324 :: (load 8 from %stack.22), (load 8 from %stack.21); appft.c:159:1
  $x22, $x21 = frame-destroy LDPXi $sp, 4, debug-location !324 :: (load 8 from %stack.24), (load 8 from %stack.23); appft.c:159:1
  $x24, $x23 = frame-destroy LDPXi $sp, 2, debug-location !324 :: (load 8 from %stack.26), (load 8 from %stack.25); appft.c:159:1
  early-clobber $sp, $x28, $x25 = frame-destroy LDPXpost $sp(tied-def 0), 10, debug-location !324 :: (load 8 from %stack.28), (load 8 from %stack.27); appft.c:159:1
  RET undef $lr, debug-location !324; appft.c:159:1

# End machine code for function appft.

********** MI Scheduling **********
appft:%bb.0 entry
  From: $x22 = SUBXri $fp, 136, 0
    To: End RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   $x22 = SUBXri $fp, 136, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(3): Data Latency=1 Reg=$x22
SU(1):   STPXi renamable $x2, renamable $x1, $fp, -11 :: (store 8 into %ir.total_time.addr), (store 8 into %ir.verified.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   $w8 = MOVZWi 1, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   STRWui renamable $w0, renamable $x22, 17 :: (store 4 into %ir.niter.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=$x22
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 1
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x22 = SUBXri $fp, 136, 0
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 1
  Cand SU(2) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(2) $w8 = MOVZWi 1, 0
  Ready @1c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 
  TopQ.A RemainingLatency 0 + 2c > CritPath 1
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STPXi renamable $x2, renamable $x1, $fp, -11 :: (store 8 into %ir.total_time.addr), (store 8 into %ir.verified.addr)
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w0, renamable $x22, 17 :: (store 4 into %ir.niter.addr)
  Ready @3c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   $x22 = SUBXri $fp, 136, 0
SU(2):   $w8 = MOVZWi 1, 0
SU(1):   STPXi renamable $x2, renamable $x1, $fp, -11 :: (store 8 into %ir.total_time.addr), (store 8 into %ir.verified.addr)
SU(3):   STRWui renamable $w0, renamable $x22, 17 :: (store 4 into %ir.niter.addr)

********** MI Scheduling **********
appft:%bb.0 entry
  From: frame-setup STPXi killed $x24, killed $x23, $sp, 2 :: (store 8 into %stack.26), (store 8 into %stack.25)
    To: $sp = frame-setup SUBXri $sp, 4, 12
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STPXi $x24, $x23, $sp, 2 :: (store 8 into %stack.26), (store 8 into %stack.25)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $x22, $x21, $sp, 4 :: (store 8 into %stack.24), (store 8 into %stack.23)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   frame-setup STPXi $x20, $x19, $sp, 6 :: (store 8 into %stack.22), (store 8 into %stack.21)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   frame-setup STPXi $fp, $lr, $sp, 8 :: (store 8 into %stack.20), (store 8 into %stack.19)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(4): Anti Latency=0
SU(4):   $fp = frame-setup ADDXri $sp, 64, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Anti Latency=0
ExitSU:   $sp = frame-setup SUBXri $sp, 4, 12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STPXi $x24, $x23, $sp, 2 :: (store 8 into %stack.26), (store 8 into %stack.25)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 0
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) frame-setup STPXi $x22, $x21, $sp, 4 :: (store 8 into %stack.24), (store 8 into %stack.23)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 0
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) frame-setup STPXi $x20, $x19, $sp, 6 :: (store 8 into %stack.22), (store 8 into %stack.21)
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) frame-setup STPXi $fp, $lr, $sp, 8 :: (store 8 into %stack.20), (store 8 into %stack.19)
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $fp = frame-setup ADDXri $sp, 64, 0
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STPXi $x24, $x23, $sp, 2 :: (store 8 into %stack.26), (store 8 into %stack.25)
SU(1):   frame-setup STPXi $x22, $x21, $sp, 4 :: (store 8 into %stack.24), (store 8 into %stack.23)
SU(2):   frame-setup STPXi $x20, $x19, $sp, 6 :: (store 8 into %stack.22), (store 8 into %stack.21)
SU(3):   frame-setup STPXi $fp, $lr, $sp, 8 :: (store 8 into %stack.20), (store 8 into %stack.19)
SU(4):   $fp = frame-setup ADDXri $sp, 64, 0

Fixup kills for %bb.0
********** MI Scheduling **********
appft:%bb.1 for.cond
  From: STRWui renamable $w8, renamable $x22, 11, debug-location !DILocation(line: 0, scope: !90) :: (store 4 into %ir.i); appft.c:0
    To: Bcc 12, %bb.3, implicit $nzcv, debug-location !95; appft.c:61:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   STRWui renamable $w8, renamable $x22, 11, debug-location !DILocation(line: 0, scope: !90) :: (store 4 into %ir.i); appft.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !92; appft.c:61:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   dead $wzr = SUBSWri renamable $w8, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.3, implicit $nzcv, debug-location !95; appft.c:61:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STRWui renamable $w8, renamable $x22, 11, debug-location !DILocation(line: 0, scope: !90) :: (store 4 into %ir.i); appft.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !92; appft.c:61:17
  Ready @1c
  TopQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) dead $wzr = SUBSWri renamable $w8, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5
  Ready @2c
  TopQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.1 ***
SU(0):   STRWui renamable $w8, renamable $x22, 11, debug-location !DILocation(line: 0, scope: !90) :: (store 4 into %ir.i); appft.c:0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !92; appft.c:61:17
SU(2):   dead $wzr = SUBSWri renamable $w8, 15, 0, implicit-def $nzcv, debug-location !95; appft.c:61:5

Fixup kills for %bb.1
********** MI Scheduling **********
appft:%bb.2 for.body
  From: renamable $w8 = LDRWui renamable $x22, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
    To: B %bb.1
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !99; appft.c:61:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
ExitSU:   B %bb.1
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !99; appft.c:61:27
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !99 :: (dereferenceable load 4 from %ir.i); appft.c:61:27
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !99; appft.c:61:27

Fixup kills for %bb.2
********** MI Scheduling **********
appft:%bb.3 for.end
  From: renamable $x23 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
    To: CBZW killed renamable $w8, %bb.5, debug-location !119; appft.c:78:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $x23 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(1): Data Latency=1 Reg=$x23
SU(1):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=$x23
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.5, debug-location !119; appft.c:78:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x23 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $x23 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !117; appft.c:78:9
SU(1):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !117 :: (dereferenceable load 4 from @timers_enabled); appft.c:78:9

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $x5 = ADRP target-flags(aarch64-page) @y, debug-location !114; appft.c:71:5
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   $x5 = ADRP target-flags(aarch64-page) @y, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x5
SU(1):   renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !114; appft.c:71:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x6 = ADDXri $sp, 2, 12, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x6
SU(3):   $x6 = ADDXri $x6, 16, 0, debug-location !114; appft.c:71:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x6
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $x7 = ADDXri $sp, 1, 12, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x7
SU(5):   $x7 = ADDXri $x7, 16, 0, debug-location !114; appft.c:71:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x7
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   $w0 = MOVZWi 1, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $w1 = MOVZWi 512, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(8):   $w2 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(9):   $w3 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(10):   STRXui renamable $x21, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(11):   $x4 = ORRXrs $xzr, $x19, 0, debug-location !114; appft.c:71:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !114; appft.c:71:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(11): Ord  Latency=1 Artificial
    SU(9): Ord  Latency=1 Artificial
    SU(8): Ord  Latency=1 Artificial
    SU(7): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 7 8 9 10 11 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x5 = ADRP target-flags(aarch64-page) @y, debug-location !114; appft.c:71:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 2 4 6 7 8 9 10 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x6 = ADDXri $sp, 2, 12, debug-location !114; appft.c:71:5
  Ready @1c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 1 4 6 7 8 9 10 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) $x7 = ADDXri $sp, 1, 12, debug-location !114; appft.c:71:5
  Ready @2c
  TopQ.A BotLatency SU(4) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 1 3 6 7 8 9 10 5 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(1) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !114; appft.c:71:5
  Ready @3c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 5 3 6 7 8 9 10 
  TopQ.A RemainingLatency 0 + 4c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x6 = ADDXri $x6, 16, 0, debug-location !114; appft.c:71:5
  Ready @4c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 5 10 6 7 8 9 
  TopQ.A RemainingLatency 0 + 5c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) $x7 = ADDXri $x7, 16, 0, debug-location !114; appft.c:71:5
  Ready @5c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 9 10 6 7 8 
  TopQ.A RemainingLatency 0 + 6c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) $w0 = MOVZWi 1, 0, debug-location !114; appft.c:71:5
  Ready @6c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 9 10 8 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) $w1 = MOVZWi 512, 0, debug-location !114; appft.c:71:5
  Ready @7c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 9 10 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
Pick Top ORDER     
Scheduling SU(8) $w2 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  Ready @8c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 9 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) $w3 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
  Ready @9c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 10 
  TopQ.A RemainingLatency 0 + 10c > CritPath 2
  Cand SU(11) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(11) $x4 = ORRXrs $xzr, $x19, 0, debug-location !114; appft.c:71:5
  Ready @10c
  TopQ.A BotLatency SU(11) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) STRXui renamable $x21, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x5 = ADRP target-flags(aarch64-page) @y, debug-location !114; appft.c:71:5
SU(2):   $x6 = ADDXri $sp, 2, 12, debug-location !114; appft.c:71:5
SU(4):   $x7 = ADDXri $sp, 1, 12, debug-location !114; appft.c:71:5
SU(1):   renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !114; appft.c:71:5
SU(3):   $x6 = ADDXri $x6, 16, 0, debug-location !114; appft.c:71:5
SU(5):   $x7 = ADDXri $x7, 16, 0, debug-location !114; appft.c:71:5
SU(6):   $w0 = MOVZWi 1, 0, debug-location !114; appft.c:71:5
SU(7):   $w1 = MOVZWi 512, 0, debug-location !114; appft.c:71:5
SU(8):   $w2 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
SU(9):   $w3 = MOVZWi 256, 0, debug-location !114; appft.c:71:5
SU(11):   $x4 = ORRXrs $xzr, $x19, 0, debug-location !114; appft.c:71:5
SU(10):   STRXui renamable $x21, $sp, 0, debug-location !114 :: (store 8 into stack); appft.c:71:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $x1 = ADDXri $sp, 16, 0, debug-location !110; appft.c:70:5
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADDXri $sp, 16, 0, debug-location !110; appft.c:70:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(1):   $w0 = MOVZWi 256, 0, debug-location !110; appft.c:70:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x21 = ADDXri $sp, 16, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !110; appft.c:70:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 1
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADDXri $sp, 16, 0, debug-location !110; appft.c:70:5
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 1
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w0 = MOVZWi 256, 0, debug-location !110; appft.c:70:5
  Ready @1c
  TopQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x21 = ADDXri $sp, 16, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x1 = ADDXri $sp, 16, 0, debug-location !110; appft.c:70:5
SU(1):   $w0 = MOVZWi 256, 0, debug-location !110; appft.c:70:5
SU(2):   $x21 = ADDXri $sp, 16, 0

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $x1 = ADDXri $sp, 1, 12, debug-location !108; appft.c:69:5
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADDXri $sp, 1, 12, debug-location !108; appft.c:69:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   $x1 = ADDXri $x1, 16, 0, debug-location !108; appft.c:69:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $w0 = MOVZWi 256, 0, debug-location !108; appft.c:69:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !108; appft.c:69:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADDXri $sp, 1, 12, debug-location !108; appft.c:69:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x1 = ADDXri $x1, 16, 0, debug-location !108; appft.c:69:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w0 = MOVZWi 256, 0, debug-location !108; appft.c:69:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x1 = ADDXri $sp, 1, 12, debug-location !108; appft.c:69:5
SU(1):   $x1 = ADDXri $x1, 16, 0, debug-location !108; appft.c:69:5
SU(2):   $w0 = MOVZWi 256, 0, debug-location !108; appft.c:69:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $x1 = ADDXri $sp, 2, 12, debug-location !106; appft.c:68:5
    To: BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADDXri $sp, 2, 12, debug-location !106; appft.c:68:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   $x1 = ADDXri $x1, 16, 0, debug-location !106; appft.c:68:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $w0 = MOVZWi 512, 0, debug-location !106; appft.c:68:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @CompExp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit-def $sp, debug-location !106; appft.c:68:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADDXri $sp, 2, 12, debug-location !106; appft.c:68:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x1 = ADDXri $x1, 16, 0, debug-location !106; appft.c:68:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w0 = MOVZWi 512, 0, debug-location !106; appft.c:68:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x1 = ADDXri $sp, 2, 12, debug-location !106; appft.c:68:5
SU(1):   $x1 = ADDXri $x1, 16, 0, debug-location !106; appft.c:68:5
SU(2):   $w0 = MOVZWi 512, 0, debug-location !106; appft.c:68:5

********** MI Scheduling **********
appft:%bb.3 for.end
  From: $x19 = ADRP target-flags(aarch64-page) @xnt, debug-location !104; appft.c:66:5
    To: BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   $x19 = ADRP target-flags(aarch64-page) @xnt, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x19
SU(1):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !104; appft.c:66:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x19
  Successors:
    SU(6): Data Latency=1 Reg=$x19
SU(2):   $w0 = MOVZWi 512, 0, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $w1 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w2 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $w20 = MOVZWi 256, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(6):   $x3 = ORRXrs $xzr, $x19, 0, debug-location !104; appft.c:66:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(1): Data Latency=1 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !104; appft.c:66:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 5 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x19 = ADRP target-flags(aarch64-page) @xnt, debug-location !104; appft.c:66:5
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 2 3 4 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(5) ORDER                              
  Cand SU(2) TOP-PATH                  1 cycles 
  Cand SU(1) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !104; appft.c:66:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 2 3 4 6 
  TopQ.A RemainingLatency 0 + 2c > CritPath 3
  Cand SU(5) ORDER                              
  Cand SU(2) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w0 = MOVZWi 512, 0, debug-location !104; appft.c:66:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 3 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 3
  Cand SU(5) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $w1 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  Ready @3c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 3
  Cand SU(5) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) $w2 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
  Ready @4c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 3
  Cand SU(5) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) $x3 = ORRXrs $xzr, $x19, 0, debug-location !104; appft.c:66:5
  Ready @5c
  TopQ.A TopLatency SU(6) 2c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $w20 = MOVZWi 256, 0
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x19 = ADRP target-flags(aarch64-page) @xnt, debug-location !104; appft.c:66:5
SU(1):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !104; appft.c:66:5
SU(2):   $w0 = MOVZWi 512, 0, debug-location !104; appft.c:66:5
SU(3):   $w1 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
SU(4):   $w2 = MOVZWi 256, 0, debug-location !104; appft.c:66:5
SU(6):   $x3 = ORRXrs $xzr, $x19, 0, debug-location !104; appft.c:66:5
SU(5):   $w20 = MOVZWi 256, 0

Fixup kills for %bb.3
Fixup kills for %bb.4
********** MI Scheduling **********
appft:%bb.5 if.end
  From: STRWui killed renamable $w20, renamable $x22, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
    To: End RegionInstrs: 14
ScheduleDAGMI::schedule starting
SU(0):   STRWui renamable $w20, renamable $x22, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(9): Anti Latency=0
SU(1):   $w8 = MOVZWi 128, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(11): Data Latency=1 Reg=$w8
SU(2):   $x9 = MOVZXi 5274, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x9
SU(3):   $x9 = MOVKXi $x9(tied-def 0), 6558, 16
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x9
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x9
SU(4):   $x9 = MOVKXi $x9(tied-def 0), 45748, 32
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x9
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x9
SU(5):   $x9 = MOVKXi $x9(tied-def 0), 48900, 48
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x9
  Successors:
    SU(12): Data Latency=1 Reg=$x9
SU(6):   STRWui $wzr, renamable $x22, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(7):   $w19 = MOVZWi 2048, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w19
SU(8):   $w19 = MOVKWi $w19(tied-def 0), 16, 16, implicit-def $x19
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(9):   $x20 = ADRP target-flags(aarch64-page) @twiddle
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x20
SU(10):   renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x20
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(11):   STPWi renamable $w8, renamable $w8, renamable $x22, 5, debug-location !123 :: (store 4 into %ir.n32), (store 4 into %ir.n22); appft.c:83:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
SU(12):   STURXi renamable $x9, $fp, -144, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=$x9
SU(13):   $w21 = MOVZWi 4104, 0, implicit-def $x21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 7 13 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x9 = MOVZXi 5274, 0
  Ready @0c
  TopQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 13 6 7 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) $x9 = MOVKXi $x9(tied-def 0), 6558, 16
  Ready @1c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 13 6 7 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) STRWui renamable $w20, renamable $x22, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 13 6 7 9 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $x9 = MOVKXi $x9(tied-def 0), 45748, 32
  Ready @3c
  TopQ.A TopLatency SU(4) 2c
  TopQ.A BotLatency SU(4) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 1 13 6 7 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 4
  Cand SU(9) ORDER                              
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) $w19 = MOVZWi 2048, 0
  Ready @4c
  TopQ.A BotLatency SU(7) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 1 13 6 5 8 
  TopQ.A RemainingLatency 0 + 5c > CritPath 4
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) $x20 = ADRP target-flags(aarch64-page) @twiddle
  Ready @5c
  TopQ.A BotLatency SU(9) 2c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 1 13 6 5 10 
  TopQ.A RemainingLatency 0 + 6c > CritPath 4
  Cand SU(8) ORDER                              
  Cand SU(1) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = MOVZWi 128, 0
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 13 6 5 11 
  TopQ.A RemainingLatency 0 + 7c > CritPath 4
  Cand SU(8) ORDER                              
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) $x9 = MOVKXi $x9(tied-def 0), 48900, 48
  Ready @7c
  TopQ.A TopLatency SU(5) 3c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 13 6 11 12 
  TopQ.A RemainingLatency 0 + 8c > CritPath 4
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) $w19 = MOVKWi $w19(tied-def 0), 16, 16, implicit-def $x19
  Ready @8c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 10 13 6 11 
  TopQ.A RemainingLatency 0 + 9c > CritPath 4
  Cand SU(12) ORDER                              
  Cand SU(10) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  Ready @9c
  TopQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 11 13 6 
  TopQ.A RemainingLatency 0 + 10c > CritPath 4
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(13) $w21 = MOVZWi 4104, 0, implicit-def $x21
  Ready @10c
  TopQ.A BotLatency SU(13) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 11 6 
  TopQ.A RemainingLatency 0 + 11c > CritPath 4
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) STRWui $wzr, renamable $x22, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 11 
  TopQ.A RemainingLatency 0 + 12c > CritPath 4
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
Pick Top ORDER     
Scheduling SU(11) STPWi renamable $w8, renamable $w8, renamable $x22, 5, debug-location !123 :: (store 4 into %ir.n32), (store 4 into %ir.n22); appft.c:83:9
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) STURXi renamable $x9, $fp, -144, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8
  Ready @13c
  TopQ.A TopLatency SU(12) 4c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.5 ***
SU(2):   $x9 = MOVZXi 5274, 0
SU(3):   $x9 = MOVKXi $x9(tied-def 0), 6558, 16
SU(0):   STRWui renamable $w20, renamable $x22, 7, debug-location !121 :: (store 4 into %ir.n12); appft.c:81:9
SU(4):   $x9 = MOVKXi $x9(tied-def 0), 45748, 32
SU(7):   $w19 = MOVZWi 2048, 0
SU(9):   $x20 = ADRP target-flags(aarch64-page) @twiddle
SU(1):   $w8 = MOVZWi 128, 0
SU(5):   $x9 = MOVKXi $x9(tied-def 0), 48900, 48
SU(8):   $w19 = MOVKWi $w19(tied-def 0), 16, 16, implicit-def $x19
SU(10):   renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
SU(13):   $w21 = MOVZWi 4104, 0, implicit-def $x21
SU(6):   STRWui $wzr, renamable $x22, 11, debug-location !125 :: (store 4 into %ir.i); appft.c:85:12
SU(11):   STPWi renamable $w8, renamable $w8, renamable $x22, 5, debug-location !123 :: (store 4 into %ir.n32), (store 4 into %ir.n22); appft.c:83:9
SU(12):   STURXi renamable $x9, $fp, -144, debug-location !124 :: (store 8 into %ir.ap); appft.c:84:8

Fixup kills for %bb.5
********** MI Scheduling **********
appft:%bb.6 for.cond8
  From: renamable $w8 = LDRWui renamable $x22, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
    To: Bcc 12, %bb.14, implicit $nzcv, debug-location !131; appft.c:85:5
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=$w8
SU(1):   dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.14, implicit $nzcv, debug-location !131; appft.c:85:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !128 :: (dereferenceable load 4 from %ir.i); appft.c:85:17
SU(1):   dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !131; appft.c:85:5

Fixup kills for %bb.6
********** MI Scheduling **********
appft:%bb.7 for.body10
  From: renamable $w8 = LDRWui renamable $x22, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
    To: End RegionInstrs: 8
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w9
SU(2):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !136; appft.c:86:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w9
    SU(3): Anti Latency=0
SU(3):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !138; appft.c:86:16
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w9
    SU(2): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w8
SU(4):   STRWui renamable $w8, renamable $x22, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(5): Anti Latency=0
SU(5):   renamable $w8 = nsw MADDWrrr renamable $w8, renamable $w8, $wzr, debug-location !142; appft.c:87:18
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
SU(6):   STRWui renamable $w8, renamable $x22, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
SU(7):   STRWui $wzr, renamable $x22, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(7) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STRWui $wzr, renamable $x22, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !136; appft.c:86:21
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !138; appft.c:86:16
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STRWui renamable $w8, renamable $x22, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
  Ready @7c
  TopQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w8 = nsw MADDWrrr renamable $w8, renamable $w8, $wzr, debug-location !142; appft.c:87:18
  Ready @8c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, renamable $x22, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13
  Ready @9c
  TopQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !132 :: (dereferenceable load 4 from %ir.i); appft.c:86:14
SU(1):   renamable $w9 = LDRWui renamable $x22, 5, debug-location !135 :: (dereferenceable load 4 from %ir.n32); appft.c:86:23
SU(7):   STRWui $wzr, renamable $x22, 9, debug-location !144 :: (store 4 into %ir.k); appft.c:88:16
SU(2):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !136; appft.c:86:21
SU(3):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !138; appft.c:86:16
SU(4):   STRWui renamable $w8, renamable $x22, 4, debug-location !139 :: (store 4 into %ir.ii); appft.c:86:12
SU(5):   renamable $w8 = nsw MADDWrrr renamable $w8, renamable $w8, $wzr, debug-location !142; appft.c:87:18
SU(6):   STRWui renamable $w8, renamable $x22, 1, debug-location !143 :: (store 4 into %ir.ii2); appft.c:87:13

Fixup kills for %bb.7
********** MI Scheduling **********
appft:%bb.8 for.cond12
  From: renamable $w8 = LDRWui renamable $x22, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
    To: Bcc 12, %bb.13, implicit $nzcv, debug-location !150; appft.c:88:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=$w8
SU(1):   dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.13, implicit $nzcv, debug-location !150; appft.c:88:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !147 :: (dereferenceable load 4 from %ir.k); appft.c:88:21
SU(1):   dead $wzr = SUBSWri renamable $w8, 255, 0, implicit-def $nzcv, debug-location !150; appft.c:88:9

Fixup kills for %bb.8
********** MI Scheduling **********
appft:%bb.9 for.body14
  From: renamable $w8 = LDRWui renamable $x22, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
    To: End RegionInstrs: 9
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w8
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w9
SU(2):   renamable $w10 = LDRWui renamable $x22, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=$w10
SU(3):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !155; appft.c:89:25
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Data Latency=1 Reg=$w9
    SU(4): Anti Latency=0
SU(4):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !157; appft.c:89:20
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Data Latency=1 Reg=$w9
    SU(3): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   STRWui renamable $w8, renamable $x22, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Anti Latency=0
SU(6):   renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !163; appft.c:90:23
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w10
  Successors:
    SU(7): Data Latency=1 Reg=$w8
SU(7):   STRWui renamable $w8, renamable $x22, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w8
SU(8):   STRWui $wzr, renamable $x22, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 8 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 8 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w10 = LDRWui renamable $x22, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRWui $wzr, renamable $x22, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !155; appft.c:89:25
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !157; appft.c:89:20
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) STRWui renamable $w8, renamable $x22, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !163; appft.c:90:23
  Ready @8c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STRWui renamable $w8, renamable $x22, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17
  Ready @9c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !151 :: (dereferenceable load 4 from %ir.k); appft.c:89:18
SU(1):   renamable $w9 = LDRWui renamable $x22, 6, debug-location !154 :: (dereferenceable load 4 from %ir.n22); appft.c:89:27
SU(2):   renamable $w10 = LDRWui renamable $x22, 1, debug-location !159 :: (dereferenceable load 4 from %ir.ii2); appft.c:90:19
SU(8):   STRWui $wzr, renamable $x22, 10, debug-location !165 :: (store 4 into %ir.j); appft.c:91:20
SU(3):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !155; appft.c:89:25
SU(4):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 8, debug-location !157; appft.c:89:20
SU(5):   STRWui renamable $w8, renamable $x22, 2, debug-location !158 :: (store 4 into %ir.kk); appft.c:89:16
SU(6):   renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !163; appft.c:90:23
SU(7):   STRWui renamable $w8, renamable $x22, 0, debug-location !164 :: (store 4 into %ir.ik2); appft.c:90:17

Fixup kills for %bb.9
********** MI Scheduling **********
appft:%bb.10 for.cond19
  From: renamable $w8 = LDRWui renamable $x22, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
    To: Bcc 12, %bb.12, implicit $nzcv, debug-location !171; appft.c:91:13
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=$w8
SU(1):   dead $wzr = SUBSWri renamable $w8, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.12, implicit $nzcv, debug-location !171; appft.c:91:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) dead $wzr = SUBSWri renamable $w8, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 10, debug-location !168 :: (dereferenceable load 4 from %ir.j); appft.c:91:25
SU(1):   dead $wzr = SUBSWri renamable $w8, 511, 0, implicit-def $nzcv, debug-location !171; appft.c:91:13

Fixup kills for %bb.10
********** MI Scheduling **********
appft:%bb.11 for.body21
  From: renamable $w9, $w8 = LDPWi renamable $x22, 10, debug-location !189 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); appft.c:93:25
    To: B %bb.10
 RegionInstrs: 9
ScheduleDAGMI::schedule starting
SU(0):   renamable $w9, $w8 = LDPWi renamable $x22, 10, debug-location !189 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); appft.c:93:25
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w9
    SU(1): Out  Latency=1
    SU(1): Data Latency=0 Reg=$w8
    SU(8): Ord  Latency=0 Memory
SU(1):   $w8 = KILL $w8, implicit-def $x8, debug-location !189; appft.c:93:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=0 Reg=$w8
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=0 Reg=$x8
SU(2):   $x8 = SBFMXri $x8, 0, 31, debug-location !189; appft.c:93:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 3
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=0 Reg=$x8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x8
SU(3):   renamable $x10, renamable $x11 = LDPSWi renamable $x22, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); appft.c:93:28
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=$x10
    SU(7): Data Latency=4 Reg=$x11
    SU(8): Ord  Latency=0 Memory
SU(4):   renamable $x8 = MADDXrrr renamable $x8, renamable $x19, renamable $x20, debug-location !190; appft.c:93:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 2
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x8
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x8
SU(5):   renamable $w9 = nsw ADDWri renamable $w9, 1, 0, debug-location !194; appft.c:91:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(8): Data Latency=1 Reg=$w9
SU(6):   renamable $x8 = MADDXrrr renamable $x10, renamable $x21, renamable $x8, debug-location !190; appft.c:93:17
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x8
    SU(3): Data Latency=4 Reg=$x10
  Successors:
    SU(7): Data Latency=1 Reg=$x8
SU(7):   STRDroX renamable $d0, renamable $x8, renamable $x11, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$x8
    SU(3): Data Latency=4 Reg=$x11
SU(8):   STRWui renamable $w9, renamable $x22, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=$w9
    SU(3): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.10
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w9, $w8 = LDPWi renamable $x22, 10, debug-location !189 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); appft.c:93:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 3 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x10, renamable $x11 = LDPSWi renamable $x22, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); appft.c:93:28
  Ready @1c
  TopQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = KILL $w8, implicit-def $x8, debug-location !189; appft.c:93:25
  Ready @2c
  TopQ.A TopLatency SU(1) 1c
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 3 TopQ.A
Queue TopQ.P: 5 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x8 = SBFMXri $x8, 0, 31, debug-location !189; appft.c:93:25
  Ready @3c
  TopQ.A TopLatency SU(2) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x8 = MADDXrrr renamable $x8, renamable $x19, renamable $x20, debug-location !190; appft.c:93:17
  Ready @4c
  TopQ.A TopLatency SU(4) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $w9 = nsw ADDWri renamable $w9, 1, 0, debug-location !194; appft.c:91:34
  Ready @5c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 8 
  TopQ.A RemainingLatency 0 + 6c > CritPath 5
  Cand SU(6) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(6) renamable $x8 = MADDXrrr renamable $x10, renamable $x21, renamable $x8, debug-location !190; appft.c:93:17
  Ready @6c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 5
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STRDroX renamable $d0, renamable $x8, renamable $x11, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
  Ready @7c
  TopQ.A TopLatency SU(7) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRWui renamable $w9, renamable $x22, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   renamable $w9, $w8 = LDPWi renamable $x22, 10, debug-location !189 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); appft.c:93:25
SU(3):   renamable $x10, renamable $x11 = LDPSWi renamable $x22, 9, debug-location !191 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); appft.c:93:28
SU(1):   $w8 = KILL $w8, implicit-def $x8, debug-location !189; appft.c:93:25
SU(2):   $x8 = SBFMXri $x8, 0, 31, debug-location !189; appft.c:93:25
SU(4):   renamable $x8 = MADDXrrr renamable $x8, renamable $x19, renamable $x20, debug-location !190; appft.c:93:17
SU(5):   renamable $w9 = nsw ADDWri renamable $w9, 1, 0, debug-location !194; appft.c:91:34
SU(6):   renamable $x8 = MADDXrrr renamable $x10, renamable $x21, renamable $x8, debug-location !190; appft.c:93:17
SU(7):   STRDroX renamable $d0, renamable $x8, renamable $x11, 0, 1, debug-location !193 :: (store 8 into %ir.arrayidx31); appft.c:93:34
SU(8):   STRWui renamable $w9, renamable $x22, 10, debug-location !194 :: (store 4 into %ir.j); appft.c:91:34

********** MI Scheduling **********
appft:%bb.11 for.body21
  From: renamable $w8 = LDRWui renamable $x22, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
    To: BL @exp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !188; appft.c:93:36
 RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w8
    SU(4): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w9
SU(2):   renamable $d0 = LDURDi $fp, -144, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=4 Reg=$d0
SU(3):   renamable $w10 = LDRWui renamable $x22, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(7): Data Latency=4 Reg=$w10
SU(4):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !176; appft.c:92:29
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(5): Data Latency=1 Reg=$w9
    SU(5): Anti Latency=0
SU(5):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 9, debug-location !178; appft.c:92:24
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(4): Data Latency=1 Reg=$w9
    SU(4): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   STRWui renamable $w8, renamable $x22, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 3
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !185; appft.c:93:62
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 3
  Predecessors:
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(3): Data Latency=4 Reg=$w10
  Successors:
    SU(8): Data Latency=1 Reg=$w8
SU(8):   renamable $d1 = SCVTFUWDri renamable $w8, debug-location !186; appft.c:93:45
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 2
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
  Successors:
    SU(9): Data Latency=1 Reg=$d1
SU(9):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !187; appft.c:93:43
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=$d1
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$d0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @exp, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !188; appft.c:93:36
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(9): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 9
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 9
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
  Ready @0c
  TopQ.A BotLatency SU(0) 9c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 9
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
  Ready @1c
  TopQ.A BotLatency SU(1) 9c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 9
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) renamable $w10 = LDRWui renamable $x22, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $d0 = LDURDi $fp, -144, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !176; appft.c:92:29
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 9, debug-location !178; appft.c:92:24
  Ready @6c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, renamable $x22, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
  Ready @7c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !185; appft.c:93:62
  Ready @8c
  TopQ.A BotLatency SU(7) 3c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $d1 = SCVTFUWDri renamable $w8, debug-location !186; appft.c:93:45
  Ready @9c
  TopQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !187; appft.c:93:43
  Ready @10c
  TopQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 10, debug-location !172 :: (dereferenceable load 4 from %ir.j); appft.c:92:22
SU(1):   renamable $w9 = LDRWui renamable $x22, 7, debug-location !175 :: (dereferenceable load 4 from %ir.n12); appft.c:92:31
SU(3):   renamable $w10 = LDRWui renamable $x22, 0, debug-location !184 :: (dereferenceable load 4 from %ir.ik2); appft.c:93:64
SU(2):   renamable $d0 = LDURDi $fp, -144, debug-location !180 :: (dereferenceable load 8 from %ir.ap); appft.c:93:40
SU(4):   renamable $w9 = SDIVWr renamable $w8, renamable $w9, debug-location !176; appft.c:92:29
SU(5):   renamable $w8 = nsw SUBWrs renamable $w8, renamable $w9, 9, debug-location !178; appft.c:92:24
SU(6):   STRWui renamable $w8, renamable $x22, 3, debug-location !179 :: (store 4 into %ir.jj); appft.c:92:20
SU(7):   renamable $w8 = MADDWrrr renamable $w8, renamable $w8, renamable $w10, debug-location !185; appft.c:93:62
SU(8):   renamable $d1 = SCVTFUWDri renamable $w8, debug-location !186; appft.c:93:45
SU(9):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !187; appft.c:93:43

Fixup kills for %bb.11
********** MI Scheduling **********
appft:%bb.12 for.inc35
  From: renamable $w8 = LDRWui renamable $x22, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
    To: B %bb.8
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !198; appft.c:88:30
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, renamable $x22, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.8
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !198; appft.c:88:30
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, renamable $x22, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 9, debug-location !198 :: (dereferenceable load 4 from %ir.k); appft.c:88:30
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !198; appft.c:88:30
SU(2):   STRWui renamable $w8, renamable $x22, 9, debug-location !198 :: (store 4 into %ir.k); appft.c:88:30

Fixup kills for %bb.12
********** MI Scheduling **********
appft:%bb.13 for.inc38
  From: renamable $w8 = LDRWui renamable $x22, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
    To: B %bb.6
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !202; appft.c:85:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, renamable $x22, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.6
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !202; appft.c:85:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, renamable $x22, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 11, debug-location !202 :: (dereferenceable load 4 from %ir.i); appft.c:85:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !202; appft.c:85:26
SU(2):   STRWui renamable $w8, renamable $x22, 11, debug-location !202 :: (store 4 into %ir.i); appft.c:85:26

Fixup kills for %bb.13
Fixup kills for %bb.14
Fixup kills for %bb.15
Fixup kills for %bb.16
Fixup kills for %bb.17
********** MI Scheduling **********
appft:%bb.18 if.end46
  From: $x3 = ADRP target-flags(aarch64-page) @xnt, debug-location !214; appft.c:102:5
    To: BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   $x3 = ADRP target-flags(aarch64-page) @xnt, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x3
SU(1):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !214; appft.c:102:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x3
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $w0 = MOVZWi 512, 0, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $w1 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w2 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @compute_initial_conditions, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit-def $sp, debug-location !214; appft.c:102:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x3 = ADRP target-flags(aarch64-page) @xnt, debug-location !214; appft.c:102:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !214; appft.c:102:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $w0 = MOVZWi 512, 0, debug-location !214; appft.c:102:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $w1 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  Ready @3c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w2 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
  Ready @4c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   $x3 = ADRP target-flags(aarch64-page) @xnt, debug-location !214; appft.c:102:5
SU(1):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !214; appft.c:102:5
SU(2):   $w0 = MOVZWi 512, 0, debug-location !214; appft.c:102:5
SU(3):   $w1 = MOVZWi 256, 0, debug-location !214; appft.c:102:5
SU(4):   $w2 = MOVZWi 256, 0, debug-location !214; appft.c:102:5

Fixup kills for %bb.18
Fixup kills for %bb.19
Fixup kills for %bb.20
Fixup kills for %bb.21
********** MI Scheduling **********
appft:%bb.22 if.end52
  From: $x24 = ADDXri $sp, 16, 0
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   $x24 = ADDXri $sp, 16, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(9): Data Latency=1 Reg=$x24
SU(1):   $x4 = ADRP target-flags(aarch64-page) @xnt, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x4
SU(2):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !226; appft.c:107:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x4
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $x5 = ADRP target-flags(aarch64-page) @y, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x5
SU(4):   renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !226; appft.c:107:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $x6 = ADDXri $sp, 2, 12, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x6
SU(6):   $x6 = ADDXri $x6, 16, 0, debug-location !226; appft.c:107:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x6
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $x7 = ADDXri $sp, 1, 12, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x7
SU(8):   $x7 = ADDXri $x7, 16, 0, debug-location !226; appft.c:107:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x7
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(9):   STRXui renamable $x24, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=$x24
SU(10):   $w0 = MOVZWi 1, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(11):   $w1 = MOVZWi 512, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(12):   $w2 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(13):   $w3 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(14):   $w19 = MOVZWi 1, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !226; appft.c:107:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(13): Ord  Latency=1 Artificial
    SU(12): Ord  Latency=1 Artificial
    SU(11): Ord  Latency=1 Artificial
    SU(10): Ord  Latency=1 Artificial
    SU(8): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 7 10 11 12 13 14 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $x4 = ADRP target-flags(aarch64-page) @xnt, debug-location !226; appft.c:107:5
  Ready @0c
  TopQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 14 3 5 7 10 11 12 13 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) $x5 = ADRP target-flags(aarch64-page) @y, debug-location !226; appft.c:107:5
  Ready @1c
  TopQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 14 2 5 7 10 11 12 13 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(5) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $x6 = ADDXri $sp, 2, 12, debug-location !226; appft.c:107:5
  Ready @2c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 14 2 4 7 10 11 12 13 6 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(7) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) $x7 = ADDXri $sp, 1, 12, debug-location !226; appft.c:107:5
  Ready @3c
  TopQ.A BotLatency SU(7) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 14 2 4 6 10 11 12 13 8 
  TopQ.A RemainingLatency 0 + 4c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x24 = ADDXri $sp, 16, 0
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 14 2 4 6 10 11 12 13 9 
  TopQ.A RemainingLatency 0 + 5c > CritPath 2
  Cand SU(8) ORDER                              
  Cand SU(2) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !226; appft.c:107:5
  Ready @5c
  TopQ.A TopLatency SU(2) 1c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 14 9 4 6 10 11 12 13 
  TopQ.A RemainingLatency 0 + 6c > CritPath 2
  Cand SU(8) ORDER                              
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !226; appft.c:107:5
  Ready @6c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 14 9 13 6 10 11 12 
  TopQ.A RemainingLatency 0 + 7c > CritPath 2
  Cand SU(8) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) $x6 = ADDXri $x6, 16, 0, debug-location !226; appft.c:107:5
  Ready @7c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 14 9 13 12 10 11 
  TopQ.A RemainingLatency 0 + 8c > CritPath 2
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) $x7 = ADDXri $x7, 16, 0, debug-location !226; appft.c:107:5
  Ready @8c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 14 9 13 12 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 2
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
Pick Top ORDER     
Scheduling SU(10) $w0 = MOVZWi 1, 0, debug-location !226; appft.c:107:5
  Ready @9c
  TopQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 14 9 13 12 
  TopQ.A RemainingLatency 0 + 10c > CritPath 2
  Cand SU(11) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(11) $w1 = MOVZWi 512, 0, debug-location !226; appft.c:107:5
  Ready @10c
  TopQ.A BotLatency SU(11) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 14 9 13 
  TopQ.A RemainingLatency 0 + 11c > CritPath 2
  Cand SU(12) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(12) $w2 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  Ready @11c
  TopQ.A BotLatency SU(12) 1c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 14 9 
  TopQ.A RemainingLatency 0 + 12c > CritPath 2
  Cand SU(13) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(13) $w3 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
  Ready @12c
  TopQ.A BotLatency SU(13) 1c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 14 
  TopQ.A RemainingLatency 0 + 13c > CritPath 2
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) STRXui renamable $x24, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) $w19 = MOVZWi 1, 0
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.22 ***
SU(1):   $x4 = ADRP target-flags(aarch64-page) @xnt, debug-location !226; appft.c:107:5
SU(3):   $x5 = ADRP target-flags(aarch64-page) @y, debug-location !226; appft.c:107:5
SU(5):   $x6 = ADDXri $sp, 2, 12, debug-location !226; appft.c:107:5
SU(7):   $x7 = ADDXri $sp, 1, 12, debug-location !226; appft.c:107:5
SU(0):   $x24 = ADDXri $sp, 16, 0
SU(2):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0, debug-location !226; appft.c:107:5
SU(4):   renamable $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @y, 0, debug-location !226; appft.c:107:5
SU(6):   $x6 = ADDXri $x6, 16, 0, debug-location !226; appft.c:107:5
SU(8):   $x7 = ADDXri $x7, 16, 0, debug-location !226; appft.c:107:5
SU(10):   $w0 = MOVZWi 1, 0, debug-location !226; appft.c:107:5
SU(11):   $w1 = MOVZWi 512, 0, debug-location !226; appft.c:107:5
SU(12):   $w2 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
SU(13):   $w3 = MOVZWi 256, 0, debug-location !226; appft.c:107:5
SU(9):   STRXui renamable $x24, $sp, 0, debug-location !226 :: (store 8 into stack); appft.c:107:5
SU(14):   $w19 = MOVZWi 1, 0

Fixup kills for %bb.22
Fixup kills for %bb.23
********** MI Scheduling **********
appft:%bb.24 if.end58
  From: STRWui killed renamable $w19, renamable $x22, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
    To: End RegionInstrs: 9
ScheduleDAGMI::schedule starting
SU(0):   STRWui renamable $w19, renamable $x22, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $x19 = ADRP target-flags(aarch64-page) @xnt
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x19
SU(2):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $x20 = ADRP target-flags(aarch64-page) @y
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x20
SU(4):   renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @y, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x20
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $x21 = ADRP target-flags(aarch64-page) @twiddle
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x21
SU(6):   renamable $x21 = ADDXri $x21, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x21
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $x25 = ADRP target-flags(aarch64-page) @sums
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x25
SU(8):   renamable $x25 = ADDXri $x25, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x25
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 5 7 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STRWui renamable $w19, renamable $x22, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 3 5 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(7) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x19 = ADRP target-flags(aarch64-page) @xnt
  Ready @1c
  TopQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 3 5 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(7) ORDER                              
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x20 = ADRP target-flags(aarch64-page) @y
  Ready @2c
  TopQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 2 5 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(7) ORDER                              
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) $x21 = ADRP target-flags(aarch64-page) @twiddle
  Ready @3c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 2 4 6 
  TopQ.A RemainingLatency 0 + 4c > CritPath 2
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) $x25 = ADRP target-flags(aarch64-page) @sums
  Ready @4c
  TopQ.A BotLatency SU(7) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 2 4 8 
  TopQ.A RemainingLatency 0 + 5c > CritPath 2
  Cand SU(6) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0
  Ready @5c
  TopQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 8 4 
  TopQ.A RemainingLatency 0 + 6c > CritPath 2
  Cand SU(6) ORDER                              
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @y, 0
  Ready @6c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 2
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) renamable $x21 = ADDXri $x21, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
  Ready @7c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $x25 = ADDXri $x25, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0
  Ready @8c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   STRWui renamable $w19, renamable $x22, 8, debug-location !231 :: (store 4 into %ir.kt); appft.c:111:13
SU(1):   $x19 = ADRP target-flags(aarch64-page) @xnt
SU(3):   $x20 = ADRP target-flags(aarch64-page) @y
SU(5):   $x21 = ADRP target-flags(aarch64-page) @twiddle
SU(7):   $x25 = ADRP target-flags(aarch64-page) @sums
SU(2):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @xnt, 0
SU(4):   renamable $x20 = ADDXri $x20, target-flags(aarch64-pageoff, aarch64-nc) @y, 0
SU(6):   renamable $x21 = ADDXri $x21, target-flags(aarch64-pageoff, aarch64-nc) @twiddle, 0
SU(8):   renamable $x25 = ADDXri $x25, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0

Fixup kills for %bb.24
********** MI Scheduling **********
appft:%bb.25 for.cond59
  From: renamable $w9 = LDRWui renamable $x22, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
    To: Bcc 12, %bb.39, implicit $nzcv, debug-location !239; appft.c:111:5
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w9 = LDRWui renamable $x22, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(1):   renamable $w10 = LDRWui renamable $x22, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w10
SU(2):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(3):   $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !239; appft.c:111:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w10
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.39, implicit $nzcv, debug-location !239; appft.c:111:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w9 = LDRWui renamable $x22, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w10 = LDRWui renamable $x22, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !239; appft.c:111:5
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   renamable $w9 = LDRWui renamable $x22, 8, debug-location !234 :: (dereferenceable load 4 from %ir.kt); appft.c:111:18
SU(1):   renamable $w10 = LDRWui renamable $x22, 17, debug-location !236 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:111:24
SU(2):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !238 :: (dereferenceable load 4 from @timers_enabled); appft.c:0
SU(3):   $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !239; appft.c:111:5

Fixup kills for %bb.25
Fixup kills for %bb.26
Fixup kills for %bb.27
********** MI Scheduling **********
appft:%bb.28 if.end65
  From: $w0 = MOVZWi 512, 0, debug-location !244; appft.c:114:9
    To: BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
 RegionInstrs: 6
ScheduleDAGMI::schedule starting
SU(0):   $w0 = MOVZWi 512, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(1):   $w1 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $w2 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $x3 = ORRXrs $xzr, $x19, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $x4 = ORRXrs $xzr, $x20, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $x5 = ORRXrs $xzr, $x21, 0, debug-location !244; appft.c:114:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @evolve, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $x3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !244; appft.c:114:9
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
  TopQ.A RemainingLatency 0 + 0c > CritPath 1
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $w0 = MOVZWi 512, 0, debug-location !244; appft.c:114:9
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 1 2 3 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 1
  Cand SU(5) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $w1 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  Ready @1c
  TopQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 2 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 1
  Cand SU(5) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $w2 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 1
  Cand SU(5) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $x3 = ORRXrs $xzr, $x19, 0, debug-location !244; appft.c:114:9
  Ready @3c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 1
  Cand SU(5) ORDER                              
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) $x4 = ORRXrs $xzr, $x20, 0, debug-location !244; appft.c:114:9
  Ready @4c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $x5 = ORRXrs $xzr, $x21, 0, debug-location !244; appft.c:114:9
  Ready @5c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   $w0 = MOVZWi 512, 0, debug-location !244; appft.c:114:9
SU(1):   $w1 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
SU(2):   $w2 = MOVZWi 256, 0, debug-location !244; appft.c:114:9
SU(3):   $x3 = ORRXrs $xzr, $x19, 0, debug-location !244; appft.c:114:9
SU(4):   $x4 = ORRXrs $xzr, $x20, 0, debug-location !244; appft.c:114:9
SU(5):   $x5 = ORRXrs $xzr, $x21, 0, debug-location !244; appft.c:114:9

Fixup kills for %bb.28
Fixup kills for %bb.29
Fixup kills for %bb.30
Fixup kills for %bb.31
********** MI Scheduling **********
appft:%bb.32 if.end71
  From: $x6 = ADDXri $sp, 2, 12, debug-location !256; appft.c:119:9
    To: BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
 RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   $x6 = ADDXri $sp, 2, 12, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x6
SU(1):   $x6 = ADDXri $x6, 16, 0, debug-location !256; appft.c:119:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x6
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x7 = ADDXri $sp, 1, 12, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x7
SU(3):   $x7 = ADDXri $x7, 16, 0, debug-location !256; appft.c:119:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x7
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w0 = MOVNWi 0, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $w1 = MOVZWi 512, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   $w2 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $w3 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(8):   STRXui renamable $x24, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(9):   $x4 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(10):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @fftXYZ, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit killed $x6, implicit killed $x7, implicit-def $sp, debug-location !256; appft.c:119:9
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(10): Ord  Latency=1 Artificial
    SU(9): Ord  Latency=1 Artificial
    SU(7): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 5 6 7 8 9 10 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x6 = ADDXri $sp, 2, 12, debug-location !256; appft.c:119:9
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 2 4 5 6 7 8 9 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x7 = ADDXri $sp, 1, 12, debug-location !256; appft.c:119:9
  Ready @1c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 1 4 5 6 7 8 9 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(1) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(1) $x6 = ADDXri $x6, 16, 0, debug-location !256; appft.c:119:9
  Ready @2c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 3 4 5 6 7 8 9 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x7 = ADDXri $x7, 16, 0, debug-location !256; appft.c:119:9
  Ready @3c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 4 5 6 7 8 
  TopQ.A RemainingLatency 0 + 4c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $w0 = MOVNWi 0, 0, debug-location !256; appft.c:119:9
  Ready @4c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 8 5 6 7 
  TopQ.A RemainingLatency 0 + 5c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) $w1 = MOVZWi 512, 0, debug-location !256; appft.c:119:9
  Ready @5c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 8 7 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) $w2 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  Ready @6c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 8 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) $w3 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
  Ready @7c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 2
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) $x4 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  Ready @8c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 2
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) $x5 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
  Ready @9c
  TopQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRXui renamable $x24, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   $x6 = ADDXri $sp, 2, 12, debug-location !256; appft.c:119:9
SU(2):   $x7 = ADDXri $sp, 1, 12, debug-location !256; appft.c:119:9
SU(1):   $x6 = ADDXri $x6, 16, 0, debug-location !256; appft.c:119:9
SU(3):   $x7 = ADDXri $x7, 16, 0, debug-location !256; appft.c:119:9
SU(4):   $w0 = MOVNWi 0, 0, debug-location !256; appft.c:119:9
SU(5):   $w1 = MOVZWi 512, 0, debug-location !256; appft.c:119:9
SU(6):   $w2 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
SU(7):   $w3 = MOVZWi 256, 0, debug-location !256; appft.c:119:9
SU(9):   $x4 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
SU(10):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !256; appft.c:119:9
SU(8):   STRXui renamable $x24, $sp, 0, debug-location !256 :: (store 8 into stack); appft.c:119:9

Fixup kills for %bb.32
Fixup kills for %bb.33
Fixup kills for %bb.34
Fixup kills for %bb.35
********** MI Scheduling **********
appft:%bb.36 if.end80
  From: renamable $x1 = LDRSWui renamable $x22, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
    To: BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $x1 = LDRSWui renamable $x22, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=0 Reg=$w1
    SU(5): Data Latency=0 Reg=$x1
    SU(1): Data Latency=4 Reg=$x1
SU(1):   renamable $x0 = ADDXrs renamable $x25, renamable $x1, 4, debug-location !266; appft.c:124:28
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(5): Anti Latency=0
SU(2):   $w2 = MOVZWi 512, 0, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $w3 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w4 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $w1 = KILL renamable $w1, implicit $x1, debug-location !268; appft.c:124:9
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=0 Reg=$w1
    SU(0): Data Latency=0 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=0 Artificial
SU(6):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !268; appft.c:124:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @CalculateChecksum, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !268; appft.c:124:9
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 6 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x1 = LDRSWui renamable $x22, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 6 2 3 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(6) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $w2 = MOVZWi 512, 0, debug-location !268; appft.c:124:9
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 6 4 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(6) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $w3 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 6 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(6) ORDER                              
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) $w4 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 1 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(6) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x0 = ADDXrs renamable $x25, renamable $x1, 4, debug-location !266; appft.c:124:28
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(6) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(6) $x5 = ORRXrs $xzr, $x19, 0, debug-location !268; appft.c:124:9
  Ready @5c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $w1 = KILL renamable $w1, implicit $x1, debug-location !268; appft.c:124:9
  Ready @6c
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   renamable $x1 = LDRSWui renamable $x22, 8, debug-location !265 :: (dereferenceable load 4 from %ir.kt); appft.c:124:33
SU(2):   $w2 = MOVZWi 512, 0, debug-location !268; appft.c:124:9
SU(3):   $w3 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
SU(4):   $w4 = MOVZWi 256, 0, debug-location !268; appft.c:124:9
SU(1):   renamable $x0 = ADDXrs renamable $x25, renamable $x1, 4, debug-location !266; appft.c:124:28
SU(6):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !268; appft.c:124:9
SU(5):   $w1 = KILL renamable $w1, implicit $x1, debug-location !268; appft.c:124:9

Fixup kills for %bb.36
Fixup kills for %bb.37
********** MI Scheduling **********
appft:%bb.38 for.inc86
  From: renamable $w8 = LDRWui renamable $x22, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
    To: B %bb.25
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !273; appft.c:111:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, renamable $x22, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.25
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !273; appft.c:111:33
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, renamable $x22, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, 8, debug-location !273 :: (dereferenceable load 4 from %ir.kt); appft.c:111:33
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !273; appft.c:111:33
SU(2):   STRWui renamable $w8, renamable $x22, 8, debug-location !273 :: (store 4 into %ir.kt); appft.c:111:33

Fixup kills for %bb.38
Fixup kills for %bb.39
Fixup kills for %bb.40
********** MI Scheduling **********
appft:%bb.41 if.end95
  From: renamable $w3 = LDRWui killed renamable $x22, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
    To: BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w3 = LDRWui renamable $x22, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   renamable $x5 = LDURXi $fp, -88, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   $x4 = ADRP target-flags(aarch64-page) @sums, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x4
SU(3):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0, debug-location !282; appft.c:135:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x4
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w0 = MOVZWi 512, 0, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(5):   $w1 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   $w2 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @verify, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $x4, implicit $x5, implicit-def $sp, debug-location !282; appft.c:135:5
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w3 = LDRWui renamable $x22, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 1 2 4 5 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(6) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x5 = LDURXi $fp, -88, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
  Ready @1c
  TopQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 2 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(6) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x4 = ADRP target-flags(aarch64-page) @sums, debug-location !282; appft.c:135:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(6) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0, debug-location !282; appft.c:135:5
  Ready @3c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 4
  Cand SU(6) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) $w0 = MOVZWi 512, 0, debug-location !282; appft.c:135:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 5c > CritPath 4
  Cand SU(6) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) $w1 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  Ready @5c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) $w2 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
  Ready @6c
  TopQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   renamable $w3 = LDRWui renamable $x22, 17, debug-location !280 :: (dereferenceable load 4 from %ir.niter.addr); appft.c:135:24
SU(1):   renamable $x5 = LDURXi $fp, -88, debug-location !281 :: (dereferenceable load 8 from %ir.verified.addr); appft.c:135:37
SU(2):   $x4 = ADRP target-flags(aarch64-page) @sums, debug-location !282; appft.c:135:5
SU(3):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @sums, 0, debug-location !282; appft.c:135:5
SU(4):   $w0 = MOVZWi 512, 0, debug-location !282; appft.c:135:5
SU(5):   $w1 = MOVZWi 256, 0, debug-location !282; appft.c:135:5
SU(6):   $w2 = MOVZWi 256, 0, debug-location !282; appft.c:135:5

Fixup kills for %bb.41
Fixup kills for %bb.42
********** MI Scheduling **********
appft:%bb.43 if.end98
  From: renamable $x8 = LDURXi $fp, -80, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
    To: CBZW killed renamable $w8, %bb.45, debug-location !293; appft.c:141:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = LDURXi $fp, -80, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(2): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x8
    SU(1): Ord  Latency=0 Memory
SU(1):   STRDui renamable $d0, renamable $x8, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=$x8
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(2): Anti Latency=0
    SU(2): Ord  Latency=1 Memory
SU(2):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 4
  Predecessors:
    SU(1): Anti Latency=0
    SU(1): Ord  Latency=1 Memory
    SU(0): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.45, debug-location !293; appft.c:141:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 9
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = LDURXi $fp, -80, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
  Ready @0c
  TopQ.A BotLatency SU(0) 9c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRDui renamable $d0, renamable $x8, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   renamable $x8 = LDURXi $fp, -80, debug-location !289 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:140:6
SU(1):   STRDui renamable $d0, renamable $x8, 0, debug-location !290 :: (store 8 into %ir.52); appft.c:140:17
SU(2):   renamable $w8 = LDRWui renamable $x23, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !291 :: (dereferenceable load 4 from @timers_enabled); appft.c:141:10

Fixup kills for %bb.43
********** MI Scheduling **********
appft:%bb.44 if.end102
  From: renamable $x8 = LDURXi $fp, -80, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = LDURXi $fp, -80, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(1): Data Latency=4 Reg=$x8
SU(1):   renamable $d0 = LDRDui renamable $x8, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   $x1 = ADRP target-flags(aarch64-page) @.str.15, debug-location !323; appft.c:158:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x1
SU(3):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, 0, debug-location !323; appft.c:158:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !323; appft.c:158:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !323; appft.c:158:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8 = LDURXi $fp, -80, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x1 = ADRP target-flags(aarch64-page) @.str.15, debug-location !323; appft.c:158:5
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, 0, debug-location !323; appft.c:158:5
  Ready @2c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $x0 = ORRXrs $xzr, $x19, 0, debug-location !323; appft.c:158:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $d0 = LDRDui renamable $x8, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   renamable $x8 = LDURXi $fp, -80, debug-location !321 :: (dereferenceable load 8 from %ir.total_time.addr); appft.c:158:61
SU(2):   $x1 = ADRP target-flags(aarch64-page) @.str.15, debug-location !323; appft.c:158:5
SU(3):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.15, 0, debug-location !323; appft.c:158:5
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !323; appft.c:158:5
SU(1):   renamable $d0 = LDRDui renamable $x8, 0, debug-location !322 :: (load 8 from %ir.54); appft.c:158:60

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.14, debug-location !320; appft.c:157:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.14, debug-location !320; appft.c:157:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, 0, debug-location !320; appft.c:157:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !320; appft.c:157:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !320; appft.c:157:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.14, debug-location !320; appft.c:157:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, 0, debug-location !320; appft.c:157:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !320; appft.c:157:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.14, debug-location !320; appft.c:157:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.14, 0, debug-location !320; appft.c:157:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !320; appft.c:157:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.13, debug-location !318; appft.c:156:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.13, debug-location !318; appft.c:156:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, 0, debug-location !318; appft.c:156:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !318; appft.c:156:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !318; appft.c:156:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.13, debug-location !318; appft.c:156:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, 0, debug-location !318; appft.c:156:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !318; appft.c:156:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.13, debug-location !318; appft.c:156:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.13, 0, debug-location !318; appft.c:156:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !318; appft.c:156:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.12, debug-location !316; appft.c:155:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.12, debug-location !316; appft.c:155:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, 0, debug-location !316; appft.c:155:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !316; appft.c:155:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !316; appft.c:155:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.12, debug-location !316; appft.c:155:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, 0, debug-location !316; appft.c:155:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !316; appft.c:155:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.12, debug-location !316; appft.c:155:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.12, 0, debug-location !316; appft.c:155:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !316; appft.c:155:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.11, debug-location !314; appft.c:154:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.11, debug-location !314; appft.c:154:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, 0, debug-location !314; appft.c:154:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !314; appft.c:154:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !314; appft.c:154:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.11, debug-location !314; appft.c:154:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, 0, debug-location !314; appft.c:154:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !314; appft.c:154:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.11, debug-location !314; appft.c:154:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.11, 0, debug-location !314; appft.c:154:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !314; appft.c:154:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.10, debug-location !312; appft.c:153:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.10, debug-location !312; appft.c:153:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, 0, debug-location !312; appft.c:153:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !312; appft.c:153:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !312; appft.c:153:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.10, debug-location !312; appft.c:153:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, 0, debug-location !312; appft.c:153:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !312; appft.c:153:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.10, debug-location !312; appft.c:153:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.10, 0, debug-location !312; appft.c:153:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !312; appft.c:153:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.9, debug-location !310; appft.c:152:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.9, debug-location !310; appft.c:152:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, 0, debug-location !310; appft.c:152:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !310; appft.c:152:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !310; appft.c:152:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.9, debug-location !310; appft.c:152:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, 0, debug-location !310; appft.c:152:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !310; appft.c:152:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.9, debug-location !310; appft.c:152:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.9, 0, debug-location !310; appft.c:152:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !310; appft.c:152:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.8, debug-location !308; appft.c:151:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.8, debug-location !308; appft.c:151:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, 0, debug-location !308; appft.c:151:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !308; appft.c:151:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !308; appft.c:151:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.8, debug-location !308; appft.c:151:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, 0, debug-location !308; appft.c:151:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !308; appft.c:151:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.8, debug-location !308; appft.c:151:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.8, 0, debug-location !308; appft.c:151:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !308; appft.c:151:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.7, debug-location !306; appft.c:150:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.7, debug-location !306; appft.c:150:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, 0, debug-location !306; appft.c:150:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !306; appft.c:150:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !306; appft.c:150:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.7, debug-location !306; appft.c:150:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, 0, debug-location !306; appft.c:150:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !306; appft.c:150:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.7, debug-location !306; appft.c:150:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.7, 0, debug-location !306; appft.c:150:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !306; appft.c:150:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.6, debug-location !304; appft.c:149:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.6, debug-location !304; appft.c:149:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, 0, debug-location !304; appft.c:149:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !304; appft.c:149:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !304; appft.c:149:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.6, debug-location !304; appft.c:149:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, 0, debug-location !304; appft.c:149:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !304; appft.c:149:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.6, debug-location !304; appft.c:149:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.6, 0, debug-location !304; appft.c:149:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !304; appft.c:149:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.5, debug-location !302; appft.c:148:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.5, debug-location !302; appft.c:148:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, 0, debug-location !302; appft.c:148:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !302; appft.c:148:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !302; appft.c:148:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.5, debug-location !302; appft.c:148:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, 0, debug-location !302; appft.c:148:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !302; appft.c:148:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.5, debug-location !302; appft.c:148:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.5, 0, debug-location !302; appft.c:148:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !302; appft.c:148:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.4, debug-location !300; appft.c:147:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.4, debug-location !300; appft.c:147:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, 0, debug-location !300; appft.c:147:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !300; appft.c:147:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !300; appft.c:147:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.4, debug-location !300; appft.c:147:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, 0, debug-location !300; appft.c:147:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !300; appft.c:147:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.4, debug-location !300; appft.c:147:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.4, 0, debug-location !300; appft.c:147:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !300; appft.c:147:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x1 = ADRP target-flags(aarch64-page) @.str.3, debug-location !298; appft.c:146:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.3, debug-location !298; appft.c:146:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x1
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, 0, debug-location !298; appft.c:146:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !298; appft.c:146:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !298; appft.c:146:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x1 = ADRP target-flags(aarch64-page) @.str.3, debug-location !298; appft.c:146:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, 0, debug-location !298; appft.c:146:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ORRXrs $xzr, $x19, 0, debug-location !298; appft.c:146:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x1 = ADRP target-flags(aarch64-page) @.str.3, debug-location !298; appft.c:146:5
SU(1):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.3, 0, debug-location !298; appft.c:146:5
SU(2):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !298; appft.c:146:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x19 = ADRP target-flags(aarch64-page) @.str.1, debug-location !296; appft.c:145:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   $x19 = ADRP target-flags(aarch64-page) @.str.1, debug-location !296; appft.c:145:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x19
SU(1):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, 0, debug-location !296; appft.c:145:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x19
  Successors:
    SU(4): Data Latency=1 Reg=$x19
SU(2):   $x1 = ADRP target-flags(aarch64-page) @.str.2, debug-location !296; appft.c:145:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x1
SU(3):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, 0, debug-location !296; appft.c:145:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !296; appft.c:145:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(1): Data Latency=1 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit $d0, implicit-def $sp, implicit-def dead $w0, debug-location !296; appft.c:145:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x19 = ADRP target-flags(aarch64-page) @.str.1, debug-location !296; appft.c:145:5
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, 0, debug-location !296; appft.c:145:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 3
  Cand SU(2) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(2) $x1 = ADRP target-flags(aarch64-page) @.str.2, debug-location !296; appft.c:145:5
  Ready @2c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 3
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, 0, debug-location !296; appft.c:145:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $x0 = ORRXrs $xzr, $x19, 0, debug-location !296; appft.c:145:5
  Ready @4c
  TopQ.A TopLatency SU(4) 2c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x19 = ADRP target-flags(aarch64-page) @.str.1, debug-location !296; appft.c:145:5
SU(1):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @.str.1, 0, debug-location !296; appft.c:145:5
SU(2):   $x1 = ADRP target-flags(aarch64-page) @.str.2, debug-location !296; appft.c:145:5
SU(3):   renamable $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @.str.2, 0, debug-location !296; appft.c:145:5
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !296; appft.c:145:5

********** MI Scheduling **********
appft:%bb.44 if.end102
  From: $x0 = ADRP target-flags(aarch64-page) @.str, debug-location !294; appft.c:144:5
    To: BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   $x0 = ADRP target-flags(aarch64-page) @.str, debug-location !294; appft.c:144:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x0
SU(1):   renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @.str, 0, debug-location !294; appft.c:144:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w0, debug-location !294; appft.c:144:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) $x0 = ADRP target-flags(aarch64-page) @.str, debug-location !294; appft.c:144:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @.str, 0, debug-location !294; appft.c:144:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   $x0 = ADRP target-flags(aarch64-page) @.str, debug-location !294; appft.c:144:5
SU(1):   renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @.str, 0, debug-location !294; appft.c:144:5

Fixup kills for %bb.44
********** MI Scheduling **********
appft:%bb.45 return
  From: $fp, $lr = frame-destroy LDPXi $sp, 8, debug-location !324 :: (load 8 from %stack.20), (load 8 from %stack.19); appft.c:159:1
    To: early-clobber $sp, $x28, $x25 = frame-destroy LDPXpost $sp(tied-def 0), 10, debug-location !324 :: (load 8 from %stack.28), (load 8 from %stack.27); appft.c:159:1
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 8, debug-location !324 :: (load 8 from %stack.20), (load 8 from %stack.19); appft.c:159:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 6, debug-location !324 :: (load 8 from %stack.22), (load 8 from %stack.21); appft.c:159:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(2):   $x22, $x21 = frame-destroy LDPXi $sp, 4, debug-location !324 :: (load 8 from %stack.24), (load 8 from %stack.23); appft.c:159:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(3):   $x24, $x23 = frame-destroy LDPXi $sp, 2, debug-location !324 :: (load 8 from %stack.26), (load 8 from %stack.25); appft.c:159:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   early-clobber $sp, $x28, $x25 = frame-destroy LDPXpost $sp(tied-def 0), 10, debug-location !324 :: (load 8 from %stack.28), (load 8 from %stack.27); appft.c:159:1
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $fp, $lr = frame-destroy LDPXi $sp, 8, debug-location !324 :: (load 8 from %stack.20), (load 8 from %stack.19); appft.c:159:1
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x20, $x19 = frame-destroy LDPXi $sp, 6, debug-location !324 :: (load 8 from %stack.22), (load 8 from %stack.21); appft.c:159:1
  Ready @1c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 3
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $x22, $x21 = frame-destroy LDPXi $sp, 4, debug-location !324 :: (load 8 from %stack.24), (load 8 from %stack.23); appft.c:159:1
  Ready @2c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $x24, $x23 = frame-destroy LDPXi $sp, 2, debug-location !324 :: (load 8 from %stack.26), (load 8 from %stack.25); appft.c:159:1
  Ready @3c
  TopQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.45 ***
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 8, debug-location !324 :: (load 8 from %stack.20), (load 8 from %stack.19); appft.c:159:1
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 6, debug-location !324 :: (load 8 from %stack.22), (load 8 from %stack.21); appft.c:159:1
SU(2):   $x22, $x21 = frame-destroy LDPXi $sp, 4, debug-location !324 :: (load 8 from %stack.24), (load 8 from %stack.23); appft.c:159:1
SU(3):   $x24, $x23 = frame-destroy LDPXi $sp, 2, debug-location !324 :: (load 8 from %stack.26), (load 8 from %stack.25); appft.c:159:1

Fixup kills for %bb.45

Before MISched:
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=8, align=8, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=8, align=8, at location [SP]
  fi#8: dead
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
Function Live Ins: $w0 in %3, $w1 in %4, $w2 in %5, $w3 in %6, $x4 in %7, $x5 in %8, $x6 in %9, $x7 in %10

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $x4, $x5, $x6, $x7
  %10:gpr64 = COPY $x7
  %9:gpr64 = COPY $x6
  %8:gpr64 = COPY $x5
  %7:gpr64 = COPY $x4
  %6:gpr32 = COPY $w3
  %5:gpr32 = COPY $w2
  %4:gpr32common = COPY $w1
  %3:gpr32 = COPY $w0
  STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
  STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
  STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
  STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
  STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
  STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
  STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
  STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
  undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
  undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
  %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  CBZW %14:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
  B %bb.1, debug-location !90; fft3d.c:151:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9
  $w0 = MOVi32imm 3, debug-location !91; fft3d.c:152:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)

  %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  %17:gpr32 = MOVi32imm 8192
  %18:gpr32common = SDIVWr %17:gpr32, %16:gpr32, debug-location !93; fft3d.c:154:26
  %19:gpr64common = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  dead $wzr = SUBSWri %18:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  %21:gpr32 = MOVi32imm 32
  %22:gpr32common = CSELWr %21:gpr32, %18:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
  STRWui %22:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %23:gpr32common = nsw ADDWri %22:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
  STRWui %23:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  $w0 = COPY %16:gpr32, debug-location !104; fft3d.c:158:11
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !104; fft3d.c:158:11
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
  STRWui %24:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  %26:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  CBZW %26:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
  B %bb.3, debug-location !108; fft3d.c:159:9

bb.3.if.then7:
; predecessors: %bb.2
  successors: %bb.4(0x80000000); %bb.4(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9
  $w0 = MOVi32imm 7, debug-location !109; fft3d.c:160:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9

bb.4.if.end8:
; predecessors: %bb.2, %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  %278:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  %281:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

bb.5.for.cond:
; predecessors: %bb.4, %bb.23
  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)

  %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  %30:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  dead $wzr = SUBSWrr %29:gpr32, %30:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Bcc 10, %bb.24, implicit killed $nzcv, debug-location !117; fft3d.c:161:5
  B %bb.6, debug-location !117; fft3d.c:161:5

bb.6.for.body:
; predecessors: %bb.5
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

bb.7.for.cond10:
; predecessors: %bb.6, %bb.22
  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)

  %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  %204:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  dead $wzr = SUBSWrr %203:gpr32, %204:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Bcc 10, %bb.23, implicit killed $nzcv, debug-location !126; fft3d.c:162:9
  B %bb.8, debug-location !126; fft3d.c:162:9

bb.8.for.body12:
; predecessors: %bb.7
  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)

  %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  %210:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  %211:gpr32common = nsw ADDWrr %208:gpr32, %210:gpr32, debug-location !130; fft3d.c:163:23
  %212:gpr32common = SUBWri %211:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  STRWui %212:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  %213:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  dead $wzr = SUBSWrr %212:gpr32common, %213:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Bcc 13, %bb.10, implicit killed $nzcv, debug-location !137; fft3d.c:164:17
  B %bb.9, debug-location !137; fft3d.c:164:17

bb.9.if.then15:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  %216:gpr32common = SUBWri %215:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  STRWui %216:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

bb.10.if.end17:
; predecessors: %bb.8, %bb.9
  successors: %bb.11(0x80000000); %bb.11(100.00%)

  %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  %218:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  %219:gpr32common = nsw SUBWrr %217:gpr32, %218:gpr32, debug-location !144; fft3d.c:166:23
  %220:gpr32common = nsw ADDWri %219:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  STRWui %220:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  STRWui %218:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

bb.11.for.cond20:
; predecessors: %bb.10, %bb.15
  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)

  %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  %222:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  dead $wzr = SUBSWrr %221:gpr32, %222:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Bcc 12, %bb.16, implicit killed $nzcv, debug-location !155; fft3d.c:167:13
  B %bb.12, debug-location !155; fft3d.c:167:13

bb.12.for.body22:
; predecessors: %bb.11
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  STRWui $wzr, %stack.9.i, 0, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

bb.13.for.cond23:
; predecessors: %bb.12, %bb.14
  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)

  %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  %268:gpr32common = LDRWui %stack.10.j, 0, debug-location !164 :: (dereferenceable load 4 from %ir.j); fft3d.c:0
  dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  Bcc 10, %bb.15, implicit killed $nzcv, debug-location !165; fft3d.c:168:17
  B %bb.14, debug-location !165; fft3d.c:168:17

bb.14.for.body25:
; predecessors: %bb.13
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
  %273:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  %274:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
  %279:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  %280:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
  %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
  %284:gpr64 = LDRSWui %stack.10.j, 0, debug-location !176 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:54
  %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
  %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
  %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
  STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  B %bb.13, debug-location !179; fft3d.c:168:17

bb.15.for.inc35:
; predecessors: %bb.13
  successors: %bb.11(0x80000000); %bb.11(100.00%)

  %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  B %bb.11, debug-location !183; fft3d.c:167:13

bb.16.for.end37:
; predecessors: %bb.11
  successors: %bb.17(0x80000000); %bb.17(100.00%)

  %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  %225:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  %226:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  %227:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  %228:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  %229:gpr64 = LDRXui %stack.6.exp1.addr, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  $w1 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  $w2 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  $w3 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  $w4 = COPY %228:gpr32, debug-location !192; fft3d.c:172:13
  $x5 = COPY %278:gpr64common, debug-location !192; fft3d.c:172:13
  $x6 = COPY %229:gpr64, debug-location !192; fft3d.c:172:13
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

bb.17.for.cond38:
; predecessors: %bb.16, %bb.21
  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)

  %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Bcc 12, %bb.22, implicit killed $nzcv, debug-location !201; fft3d.c:173:13
  B %bb.18, debug-location !201; fft3d.c:173:13

bb.18.for.body40:
; predecessors: %bb.17
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  STRWui $wzr, %stack.9.i, 0, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

bb.19.for.cond41:
; predecessors: %bb.18, %bb.20
  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)

  %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Bcc 10, %bb.21, implicit killed $nzcv, debug-location !210; fft3d.c:174:17
  B %bb.20, debug-location !210; fft3d.c:174:17

bb.20.for.body43:
; predecessors: %bb.19
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
  %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
  %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
  %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
  %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
  %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
  STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
  %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
  STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  B %bb.19, debug-location !225; fft3d.c:174:17

bb.21.for.inc58:
; predecessors: %bb.19
  successors: %bb.17(0x80000000); %bb.17(100.00%)

  %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  B %bb.17, debug-location !229; fft3d.c:173:13

bb.22.for.inc61:
; predecessors: %bb.17
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  B %bb.7, debug-location !234; fft3d.c:162:9

bb.23.for.inc64:
; predecessors: %bb.7
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  %207:gpr32common = nsw ADDWri %206:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  STRWui %207:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  B %bb.5, debug-location !238; fft3d.c:161:5

bb.24.for.end66:
; predecessors: %bb.5
  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)

  %33:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  CBZW %33:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
  B %bb.25, debug-location !243; fft3d.c:180:9

bb.25.if.then68:
; predecessors: %bb.24
  successors: %bb.26(0x80000000); %bb.26(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9
  $w0 = MOVi32imm 7, debug-location !244; fft3d.c:181:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9

bb.26.if.end69:
; predecessors: %bb.24, %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

  %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  %36:gpr32 = MOVi32imm 8192
  %37:gpr32common = SDIVWr %36:gpr32, %35:gpr32, debug-location !246; fft3d.c:183:26
  dead $wzr = SUBSWri %37:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  %40:gpr32 = MOVi32imm 32
  %41:gpr32common = CSELWr %40:gpr32, %37:gpr32common, 12, implicit killed $nzcv, debug-location !251; fft3d.c:184:9
  STRWui %41:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %42:gpr32common = nsw ADDWri %41:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
  STRWui %42:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  $w0 = COPY %35:gpr32, debug-location !256; fft3d.c:187:11
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !256; fft3d.c:187:11
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
  STRWui %43:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  %45:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  CBZW %45:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
  B %bb.27, debug-location !260; fft3d.c:188:9

bb.27.if.then77:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9
  $w0 = MOVi32imm 8, debug-location !261; fft3d.c:189:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9

bb.28.if.end78:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12

bb.29.for.cond79:
; predecessors: %bb.28, %bb.35
  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)

  %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  %49:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  dead $wzr = SUBSWrr %48:gpr32, %49:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Bcc 10, %bb.36, implicit killed $nzcv, debug-location !269; fft3d.c:190:5
  B %bb.30, debug-location !269; fft3d.c:190:5

bb.30.for.body81:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

bb.31.for.cond82:
; predecessors: %bb.30, %bb.34
  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)

  %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  %168:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  dead $wzr = SUBSWrr %167:gpr32, %168:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Bcc 10, %bb.35, implicit killed $nzcv, debug-location !278; fft3d.c:191:9
  B %bb.32, debug-location !278; fft3d.c:191:9

bb.32.for.body84:
; predecessors: %bb.31
  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)

  %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  %174:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  %175:gpr32common = nsw ADDWrr %172:gpr32, %174:gpr32, debug-location !282; fft3d.c:192:23
  %176:gpr32common = SUBWri %175:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  STRWui %176:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  %177:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  dead $wzr = SUBSWrr %176:gpr32common, %177:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Bcc 13, %bb.34, implicit killed $nzcv, debug-location !289; fft3d.c:193:17
  B %bb.33, debug-location !289; fft3d.c:193:17

bb.33.if.then88:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)

  %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  %180:gpr32common = SUBWri %179:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  STRWui %180:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

bb.34.if.end90:
; predecessors: %bb.32, %bb.33
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  %182:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
  %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
  %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
  STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  %185:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  %186:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  %187:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  %188:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
  %190:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  %191:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
  %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
  %195:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
  %197:gpr64 = LDRXui %stack.7.exp2.addr, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  $w1 = COPY %186:gpr32, debug-location !310; fft3d.c:196:13
  $w2 = COPY %184:gpr32common, debug-location !310; fft3d.c:196:13
  $w3 = COPY %187:gpr32, debug-location !310; fft3d.c:196:13
  $w4 = COPY %189:gpr32sp, debug-location !310; fft3d.c:196:13
  $x5 = COPY %196:gpr64, debug-location !310; fft3d.c:196:13
  $x6 = COPY %197:gpr64, debug-location !310; fft3d.c:196:13
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  %200:gpr32 = LDRWui %stack.13.bls, 0, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  %201:gpr32 = nsw ADDWrr %200:gpr32, %199:gpr32, debug-location !312; fft3d.c:191:37
  STRWui %201:gpr32, %stack.13.bls, 0, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  B %bb.31, debug-location !313; fft3d.c:191:9

bb.35.for.inc102:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  %171:gpr32common = nsw ADDWri %170:gpr32common, 1, 0, debug-location !316; fft3d.c:190:26
  STRWui %171:gpr32common, %stack.11.k, 0, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  B %bb.29, debug-location !317; fft3d.c:190:5

bb.36.for.end104:
; predecessors: %bb.29
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  %52:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !320 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  CBZW %52:gpr32, %bb.38, debug-location !322; fft3d.c:199:9
  B %bb.37, debug-location !322; fft3d.c:199:9

bb.37.if.then106:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; fft3d.c:200:9
  $w0 = MOVi32imm 8, debug-location !323; fft3d.c:200:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !323; fft3d.c:200:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; fft3d.c:200:9

bb.38.if.end107:
; predecessors: %bb.36, %bb.37
  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)

  %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  %55:gpr32 = MOVi32imm 8192
  %56:gpr32common = SDIVWr %55:gpr32, %54:gpr32, debug-location !325; fft3d.c:202:26
  dead $wzr = SUBSWri %56:gpr32common, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  %59:gpr32 = MOVi32imm 32
  %60:gpr32common = CSELWr %59:gpr32, %56:gpr32common, 12, implicit killed $nzcv, debug-location !330; fft3d.c:203:9
  STRWui %60:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %61:gpr32common = nsw ADDWri %60:gpr32common, 1, 0, debug-location !332; fft3d.c:205:21
  STRWui %61:gpr32common, %stack.16.blkp, 0, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
  $w0 = COPY %54:gpr32, debug-location !335; fft3d.c:206:11
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !335; fft3d.c:206:11
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
  %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
  STRWui %62:gpr32, %stack.12.log, 0, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  %64:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  CBZW %64:gpr32, %bb.40, debug-location !339; fft3d.c:207:9
  B %bb.39, debug-location !339; fft3d.c:207:9

bb.39.if.then115:
; predecessors: %bb.38
  successors: %bb.40(0x80000000); %bb.40(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !340; fft3d.c:208:9
  $w0 = MOVi32imm 9, debug-location !340; fft3d.c:208:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !340; fft3d.c:208:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !340; fft3d.c:208:9

bb.40.if.end116:
; predecessors: %bb.38, %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !341 :: (store 4 into %ir.k); fft3d.c:209:12

bb.41.for.cond117:
; predecessors: %bb.40, %bb.59
  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)

  %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  %68:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  dead $wzr = SUBSWrr %67:gpr32, %68:gpr32, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  Bcc 10, %bb.60, implicit killed $nzcv, debug-location !348; fft3d.c:209:5
  B %bb.42, debug-location !348; fft3d.c:209:5

bb.42.for.body119:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !349 :: (store 4 into %ir.bls); fft3d.c:210:18

bb.43.for.cond120:
; predecessors: %bb.42, %bb.58
  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)

  %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  %78:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  dead $wzr = SUBSWrr %77:gpr32, %78:gpr32, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  Bcc 10, %bb.59, implicit killed $nzcv, debug-location !357; fft3d.c:210:9
  B %bb.44, debug-location !357; fft3d.c:210:9

bb.44.for.body122:
; predecessors: %bb.43
  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)

  %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  %84:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  %85:gpr32common = nsw ADDWrr %82:gpr32, %84:gpr32, debug-location !361; fft3d.c:211:23
  %86:gpr32common = SUBWri %85:gpr32common, 1, 0, debug-location !362; fft3d.c:211:34
  STRWui %86:gpr32common, %stack.14.ble, 0, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  %87:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  dead $wzr = SUBSWrr %86:gpr32common, %87:gpr32, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  Bcc 13, %bb.46, implicit killed $nzcv, debug-location !368; fft3d.c:212:17
  B %bb.45, debug-location !368; fft3d.c:212:17

bb.45.if.then126:
; predecessors: %bb.44
  successors: %bb.46(0x80000000); %bb.46(100.00%)

  %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  %90:gpr32common = SUBWri %89:gpr32common, 1, 0, debug-location !370; fft3d.c:213:26
  STRWui %90:gpr32common, %stack.14.ble, 0, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21

bb.46.if.end128:
; predecessors: %bb.44, %bb.45
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  %92:gpr32 = LDRWui %stack.13.bls, 0, debug-location !374 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  %93:gpr32common = nsw SUBWrr %91:gpr32, %92:gpr32, debug-location !375; fft3d.c:214:23
  %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !376; fft3d.c:214:29
  STRWui %94:gpr32common, %stack.15.len, 0, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  STRWui $wzr, %stack.9.i, 0, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20

bb.47.for.cond131:
; predecessors: %bb.46, %bb.51
  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)

  %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  %97:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  dead $wzr = SUBSWrr %96:gpr32, %97:gpr32, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  Bcc 10, %bb.52, implicit killed $nzcv, debug-location !385; fft3d.c:215:13
  B %bb.48, debug-location !385; fft3d.c:215:13

bb.48.for.body133:
; predecessors: %bb.47
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  STRWui %141:gpr32, %stack.10.j, 0, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24

bb.49.for.cond134:
; predecessors: %bb.48, %bb.50
  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)

  %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  %143:gpr32 = LDRWui %stack.14.ble, 0, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  dead $wzr = SUBSWrr %142:gpr32, %143:gpr32, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  Bcc 12, %bb.51, implicit killed $nzcv, debug-location !395; fft3d.c:216:17
  B %bb.50, debug-location !395; fft3d.c:216:17

bb.50.for.body136:
; predecessors: %bb.49
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  %149:gpr32 = LDRWui %stack.13.bls, 0, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
  %151:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  %152:gpr64 = LDRSWui %stack.9.i, 0, debug-location !401 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
  %157:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
  %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
  %161:gpr64 = LDRSWui %stack.11.k, 0, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
  %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
  %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
  STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
  %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
  STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
  B %bb.49, debug-location !410; fft3d.c:216:17

bb.51.for.inc151:
; predecessors: %bb.49
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  %146:gpr32common = nsw ADDWri %145:gpr32common, 1, 0, debug-location !413; fft3d.c:215:34
  STRWui %146:gpr32common, %stack.9.i, 0, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  B %bb.47, debug-location !414; fft3d.c:215:13

bb.52.for.end153:
; predecessors: %bb.47
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  %100:gpr32 = LDRWui %stack.12.log, 0, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  %101:gpr32 = LDRWui %stack.15.len, 0, debug-location !419 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  %102:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  %103:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !421 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  %104:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
  $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
  $w1 = COPY %100:gpr32, debug-location !423; fft3d.c:220:13
  $w2 = COPY %101:gpr32, debug-location !423; fft3d.c:220:13
  $w3 = COPY %102:gpr32, debug-location !423; fft3d.c:220:13
  $w4 = COPY %103:gpr32, debug-location !423; fft3d.c:220:13
  $x5 = COPY %278:gpr64common, debug-location !423; fft3d.c:220:13
  $x6 = COPY %104:gpr64, debug-location !423; fft3d.c:220:13
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
  STRWui $wzr, %stack.9.i, 0, debug-location !424 :: (store 4 into %ir.i); fft3d.c:221:20

bb.53.for.cond154:
; predecessors: %bb.52, %bb.57
  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

  %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  %108:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  %109:gpr32common = SUBWri %108:gpr32common, 1, 0, debug-location !430; fft3d.c:221:33
  dead $wzr = SUBSWrr %107:gpr32, %109:gpr32common, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  Bcc 12, %bb.58, implicit killed $nzcv, debug-location !432; fft3d.c:221:13
  B %bb.54, debug-location !432; fft3d.c:221:13

bb.54.for.body157:
; predecessors: %bb.53
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  STRWui %115:gpr32, %stack.10.j, 0, debug-location !436 :: (store 4 into %ir.j); fft3d.c:222:24

bb.55.for.cond158:
; predecessors: %bb.54, %bb.56
  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

  %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  %117:gpr32 = LDRWui %stack.14.ble, 0, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  dead $wzr = SUBSWrr %116:gpr32, %117:gpr32, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  Bcc 12, %bb.57, implicit killed $nzcv, debug-location !442; fft3d.c:222:17
  B %bb.56, debug-location !442; fft3d.c:222:17

bb.56.for.body160:
; predecessors: %bb.55
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  %122:gpr32 = LDRWui %stack.10.j, 0, debug-location !445 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  %123:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
  %125:gpr32 = LDRWui %stack.11.k, 0, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  %126:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  %127:gpr32 = LDRWui %stack.9.i, 0, debug-location !450 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
  %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
  %132:gpr32 = LDRWui %stack.13.bls, 0, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
  %134:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
  %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
  STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
  %139:gpr32common = LDRWui %stack.10.j, 0, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
  STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42
  B %bb.55, debug-location !464; fft3d.c:222:17

bb.57.for.inc176:
; predecessors: %bb.55
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  %120:gpr32common = nsw ADDWri %119:gpr32common, 1, 0, debug-location !467; fft3d.c:221:39
  STRWui %120:gpr32common, %stack.9.i, 0, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  B %bb.53, debug-location !468; fft3d.c:221:13

bb.58.for.inc179:
; predecessors: %bb.53
  successors: %bb.43(0x80000000); %bb.43(100.00%)

  %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  %114:gpr32 = nsw ADDWrr %113:gpr32, %112:gpr32, debug-location !472; fft3d.c:210:37
  STRWui %114:gpr32, %stack.13.bls, 0, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  B %bb.43, debug-location !473; fft3d.c:210:9

bb.59.for.inc182:
; predecessors: %bb.43
  successors: %bb.41(0x80000000); %bb.41(100.00%)

  %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  %81:gpr32common = nsw ADDWri %80:gpr32common, 1, 0, debug-location !476; fft3d.c:209:26
  STRWui %81:gpr32common, %stack.11.k, 0, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  B %bb.41, debug-location !477; fft3d.c:209:5

bb.60.for.end184:
; predecessors: %bb.41
  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)

  %71:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !480 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  CBZW %71:gpr32, %bb.62, debug-location !482; fft3d.c:229:9
  B %bb.61, debug-location !482; fft3d.c:229:9

bb.61.if.then186:
; predecessors: %bb.60
  successors: %bb.62(0x80000000); %bb.62(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !483; fft3d.c:230:9
  $w0 = MOVi32imm 9, debug-location !483; fft3d.c:230:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !483; fft3d.c:230:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !483; fft3d.c:230:9

bb.62.if.end187:
; predecessors: %bb.60, %bb.61
  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)

  %74:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !484 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  CBZW %74:gpr32, %bb.64, debug-location !486; fft3d.c:231:9
  B %bb.63, debug-location !486; fft3d.c:231:9

bb.63.if.then189:
; predecessors: %bb.62
  successors: %bb.64(0x80000000); %bb.64(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !487; fft3d.c:232:9
  $w0 = MOVi32imm 3, debug-location !487; fft3d.c:232:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !487; fft3d.c:232:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !487; fft3d.c:232:9

bb.64.if.end190:
; predecessors: %bb.62, %bb.63

  RET_ReallyLR debug-location !488; fft3d.c:233:1

# End machine code for function fftXYZ.

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: %10:gpr64 = COPY $x7
    To: CBZW %14:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
 RegionInstrs: 20
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32arg=8
tcGPR64=8
GPR32=8
Live In: W0 W1 W2 W3 W4 W5 W6 W7 
Live Out: %13 %1 %0 
Live Thru: 
  LiveReg: %13
  UpdateRegP: SU(19) %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
              to GPR32 -1
  LiveReg: %1
  LiveReg: %0
  LiveReg: %14
Top Pressure:
GPR32arg=8
tcGPR64=8
GPR32=8
Bottom Pressure:
GPR32=4
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %10:gpr64 = COPY $x7
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(15): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(1):   %9:gpr64 = COPY $x6
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(14): Data Latency=0 Reg=%9
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(2):   %8:gpr64 = COPY $x5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(13): Data Latency=0 Reg=%8
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(3):   %7:gpr64 = COPY $x4
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(12): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(4):   %6:gpr32 = COPY $w3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(11): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(5):   %5:gpr32 = COPY $w2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(16): Data Latency=0 Reg=%5
    SU(10): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(6):   %4:gpr32common = COPY $w1
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(17): Data Latency=0 Reg=%4
    SU(9): Data Latency=0 Reg=%4
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(7):   %3:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(8): Data Latency=0 Reg=%3
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(8):   STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(7): Data Latency=0 Reg=%3
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Data Latency=0 Reg=%4
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(13):   STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%8
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%9
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(15):   STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(16):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%5
  Pressure Diff      : 
  Single Issue       : false;
SU(17):   undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Data Latency=0 Reg=%4
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(19): Data Latency=1 Reg=%13
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(19):   %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(18): Data Latency=1 Reg=%13
  Successors:
    ExitSU: Data Latency=4 Reg=%14
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
ExitSU:   CBZW %14:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(19): Data Latency=4 Reg=%14
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 7 18 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %10:gpr64 = COPY $x7
Top Pressure:
GPR32arg=7
tcGPR64=7
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 1 2 3 4 5 6 7 15 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %9:gpr64 = COPY $x6
Top Pressure:
GPR32arg=6
tcGPR64=6
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 2 3 4 5 6 7 14 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(2) PHYS-REG                           
  Cand SU(2) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(2) %8:gpr64 = COPY $x5
Top Pressure:
GPR32arg=5
tcGPR64=5
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 3 4 5 6 7 13 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(3) PHYS-REG                           
  Cand SU(3) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(3) %7:gpr64 = COPY $x4
Top Pressure:
GPR32arg=4
tcGPR64=4
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 4 5 6 7 12 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(4) PHYS-REG                           
  Cand SU(4) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(4) %6:gpr32 = COPY $w3
Top Pressure:
GPR32arg=3
tcGPR64=3
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 5 6 7 11 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(5) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(5) %5:gpr32 = COPY $w2
Top Pressure:
GPR32arg=2
tcGPR64=2
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 11 6 7 16 10 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(6) PHYS-REG                           
  Cand SU(6) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(6) %4:gpr32common = COPY $w1
Top Pressure:
GPR32arg=1
tcGPR64=1
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 11 10 7 16 17 9 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(7) PHYS-REG                           
  Cand SU(7) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(7) %3:gpr32 = COPY $w0
Top Pressure:
GPR32=8
  GPR32arg: 8 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 17 16 15 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 11 10 9 16 17 8 
Picking from Bot:
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(18) ORDER                              
  Cand SU(15) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
Pick Bot ORDER     
Scheduling SU(17) undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
Bottom Pressure:
GPR32=4
  LiveReg: %4
  UpdateRegP: SU(9) STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
              to 
  UpdateRegP: SU(17) undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
              to GPR32 -1
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 8 16 15 14 13 12 11 10 9 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 11 10 9 16 8 
BotQ.A RemLatency SU(19) 1c
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(16) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(16) undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
Bottom Pressure:
GPR32=4
  LiveReg: %5
  UpdateRegP: SU(10) STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
              to 
  UpdateRegP: SU(16) undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
              to GPR32 -1
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 8 9 15 14 13 12 11 10 
Queue TopQ.P: 
Queue TopQ.A: 18 15 14 13 12 11 10 9 8 
BotQ.A RemLatency SU(19) 1c
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(15) STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %10
  UpdateRegP: SU(15) STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
              to 
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 
Queue BotQ.A: 8 9 10 14 13 12 11 
Queue TopQ.P: 
Queue TopQ.A: 18 8 14 13 12 11 10 9 
BotQ.A RemLatency SU(19) 1c
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
Bottom Pressure:
GPR32=6
  LiveReg: %9
  UpdateRegP: SU(14) STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
              to 
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 11 13 12 19 
Queue TopQ.P: 
Queue TopQ.A: 18 8 9 13 12 11 10 
BotQ.A RemLatency SU(19) 1c
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(19) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(19) %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
Bottom Pressure:
GPR32=5
  Ready @4c
  BotQ.A TopLatency SU(19) 1c
  BotQ.A BotLatency SU(19) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 11 13 12 18 
Queue TopQ.P: 
Queue TopQ.A: 18 8 9 13 12 11 10 
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
  Cand SU(18) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(18) %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A BotLatency SU(18) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 11 13 12 
Queue TopQ.P: 
Queue TopQ.A: 10 8 9 13 12 11 
  BotQ.A RemainingLatency 0 + 6c > CritPath 5
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(13) STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %8
  UpdateRegP: SU(13) STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
              to 
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 11 12 
Queue TopQ.P: 
Queue TopQ.A: 10 8 9 11 12 
  BotQ.A RemainingLatency 0 + 7c > CritPath 5
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
Bottom Pressure:
GPR32=6
  LiveReg: %7
  UpdateRegP: SU(12) STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
              to 
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 11 
Queue TopQ.P: 
Queue TopQ.A: 10 8 9 11 
  BotQ.A RemainingLatency 0 + 8c > CritPath 5
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
Bottom Pressure:
GPR32=7
  LiveReg: %6
  UpdateRegP: SU(11) STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
              to 
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 10 
Queue TopQ.P: 
Queue TopQ.A: 10 8 9 
  BotQ.A RemainingLatency 0 + 9c > CritPath 5
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
Bottom Pressure:
GPR32=7
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 9 
Queue TopQ.P: 
Queue TopQ.A: 9 8 
  BotQ.A RemainingLatency 0 + 10c > CritPath 5
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(8) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
Bottom Pressure:
GPR32=7
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
Bottom Pressure:
GPR32=8
  LiveReg: %3
  UpdateRegP: SU(8) STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
              to 
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %10:gpr64 = COPY $x7
SU(1):   %9:gpr64 = COPY $x6
SU(2):   %8:gpr64 = COPY $x5
SU(3):   %7:gpr64 = COPY $x4
SU(4):   %6:gpr32 = COPY $w3
SU(5):   %5:gpr32 = COPY $w2
SU(6):   %4:gpr32common = COPY $w1
SU(7):   %3:gpr32 = COPY $w0
SU(8):   STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
SU(9):   STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
SU(10):   STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
SU(11):   STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
SU(12):   STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
SU(13):   STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
SU(18):   %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
SU(19):   %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
SU(14):   STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
SU(15):   STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
SU(16):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
SU(17):   undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
    To: CBZW %26:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%24
  Single Issue       : false;
SU(1):   STRWui %24:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%24
  Single Issue       : false;
SU(2):   %26:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Data Latency=4 Reg=%26
  Single Issue       : false;
ExitSU:   CBZW %26:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Data Latency=4 Reg=%26
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %24:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %26:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(2):   %26:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
SU(0):   %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
SU(1):   STRWui %24:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%16
  Single Issue       : false;
SU(1):   %17:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%17
  Single Issue       : false;
SU(2):   %18:gpr32common = SDIVWr %17:gpr32, %16:gpr32, debug-location !93; fft3d.c:154:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%17
    SU(0): Data Latency=4 Reg=%16
  Successors:
    SU(6): Data Latency=1 Reg=%18
    SU(4): Data Latency=1 Reg=%18
  Single Issue       : false;
SU(3):   %19:gpr64common = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%19
  Single Issue       : false;
SU(4):   dead $wzr = SUBSWri %18:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%18
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(5):   %21:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(6): Data Latency=1 Reg=%21
  Single Issue       : false;
SU(6):   %22:gpr32common = CSELWr %21:gpr32, %18:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%18
    SU(4): Data Latency=1 Reg=$nzcv
    SU(5): Data Latency=1 Reg=%21
  Successors:
    SU(8): Data Latency=1 Reg=%22
    SU(7): Data Latency=1 Reg=%22
  Single Issue       : false;
SU(7):   STRWui %22:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%22
    SU(3): Data Latency=1 Reg=%19
  Single Issue       : false;
SU(8):   %23:gpr32common = nsw ADDWri %22:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%22
  Successors:
    SU(9): Data Latency=1 Reg=%23
  Single Issue       : false;
SU(9):   STRWui %23:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%23
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) STRWui %23:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  Ready @0c
  BotQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(7) 7c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %23:gpr32common = nsw ADDWri %22:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) STRWui %22:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @2c
  BotQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 8
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) %22:gpr32common = CSELWr %21:gpr32, %18:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
  Ready @3c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(4) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) dead $wzr = SUBSWri %18:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  Ready @4c
  BotQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %18:gpr32common = SDIVWr %17:gpr32, %16:gpr32, debug-location !93; fft3d.c:154:26
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 5 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %21:gpr32 = MOVi32imm 32
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
  BotQ.A RemainingLatency 2 + 7c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %19:gpr64common = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %17:gpr32 = MOVi32imm 8192
  Ready @8c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
SU(1):   %17:gpr32 = MOVi32imm 8192
SU(3):   %19:gpr64common = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
SU(5):   %21:gpr32 = MOVi32imm 32
SU(2):   %18:gpr32common = SDIVWr %17:gpr32, %16:gpr32, debug-location !93; fft3d.c:154:26
SU(4):   dead $wzr = SUBSWri %18:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
SU(6):   %22:gpr32common = CSELWr %21:gpr32, %18:gpr32common, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
SU(7):   STRWui %22:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(8):   %23:gpr32common = nsw ADDWri %22:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
SU(9):   STRWui %23:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10

********** MI Scheduling **********
fftXYZ:%bb.4 if.end8
  From: STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %278:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %281:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %281:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %278:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
SU(1):   %278:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
SU(2):   %281:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

********** MI Scheduling **********
fftXYZ:%bb.5 for.cond
  From: %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
    To: Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%29
  Single Issue       : false;
SU(1):   %30:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%30
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %29:gpr32, %30:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%30
    SU(0): Data Latency=4 Reg=%29
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %29:gpr32, %30:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %30:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
SU(1):   %30:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
SU(2):   dead $wzr = SUBSWrr %29:gpr32, %30:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5

********** MI Scheduling **********
fftXYZ:%bb.7 for.cond10
  From: %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
    To: Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%203
  Single Issue       : false;
SU(1):   %204:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%204
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %203:gpr32, %204:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%204
    SU(0): Data Latency=4 Reg=%203
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %203:gpr32, %204:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %204:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
SU(1):   %204:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
SU(2):   dead $wzr = SUBSWrr %203:gpr32, %204:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9

********** MI Scheduling **********
fftXYZ:%bb.8 for.body12
  From: %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
    To: Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%208
  Single Issue       : false;
SU(1):   %210:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%210
  Single Issue       : false;
SU(2):   %211:gpr32common = nsw ADDWrr %208:gpr32, %210:gpr32, debug-location !130; fft3d.c:163:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%210
    SU(0): Data Latency=4 Reg=%208
  Successors:
    SU(3): Data Latency=1 Reg=%211
  Single Issue       : false;
SU(3):   %212:gpr32common = SUBWri %211:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%211
  Successors:
    SU(6): Data Latency=1 Reg=%212
    SU(4): Data Latency=1 Reg=%212
  Single Issue       : false;
SU(4):   STRWui %212:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%212
  Single Issue       : false;
SU(5):   %213:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%213
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %212:gpr32common, %213:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%212
    SU(5): Data Latency=4 Reg=%213
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %212:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %212:gpr32common, %213:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %212:gpr32common = SUBWri %211:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %211:gpr32common = nsw ADDWrr %208:gpr32, %210:gpr32, debug-location !130; fft3d.c:163:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %213:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %210:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
SU(1):   %210:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
SU(5):   %213:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
SU(2):   %211:gpr32common = nsw ADDWrr %208:gpr32, %210:gpr32, debug-location !130; fft3d.c:163:23
SU(3):   %212:gpr32common = SUBWri %211:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
SU(6):   dead $wzr = SUBSWrr %212:gpr32common, %213:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
SU(4):   STRWui %212:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17

********** MI Scheduling **********
fftXYZ:%bb.9 if.then15
  From: %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%215
  Single Issue       : false;
SU(1):   %216:gpr32common = SUBWri %215:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%215
  Successors:
    SU(2): Data Latency=1 Reg=%216
  Single Issue       : false;
SU(2):   STRWui %216:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%216
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %216:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %216:gpr32common = SUBWri %215:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
SU(1):   %216:gpr32common = SUBWri %215:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
SU(2):   STRWui %216:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

********** MI Scheduling **********
fftXYZ:%bb.10 if.end17
  From: %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
    To: End RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%217
  Single Issue       : false;
SU(1):   %218:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Data Latency=4 Reg=%218
    SU(2): Data Latency=4 Reg=%218
  Single Issue       : false;
SU(2):   %219:gpr32common = nsw SUBWrr %217:gpr32, %218:gpr32, debug-location !144; fft3d.c:166:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%218
    SU(0): Data Latency=4 Reg=%217
  Successors:
    SU(3): Data Latency=1 Reg=%219
  Single Issue       : false;
SU(3):   %220:gpr32common = nsw ADDWri %219:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%219
  Successors:
    SU(4): Data Latency=1 Reg=%220
  Single Issue       : false;
SU(4):   STRWui %220:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%220
  Single Issue       : false;
SU(5):   STRWui %218:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%218
  Single Issue       : false;
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) STRWui %218:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  Ready @0c
  BotQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %220:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %220:gpr32common = nsw ADDWri %219:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %219:gpr32common = nsw SUBWrr %217:gpr32, %218:gpr32, debug-location !144; fft3d.c:166:23
  Ready @3c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %218:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  Ready @7c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
SU(1):   %218:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
SU(2):   %219:gpr32common = nsw SUBWrr %217:gpr32, %218:gpr32, debug-location !144; fft3d.c:166:23
SU(3):   %220:gpr32common = nsw ADDWri %219:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
SU(4):   STRWui %220:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
SU(5):   STRWui %218:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

********** MI Scheduling **********
fftXYZ:%bb.11 for.cond20
  From: %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%221
  Single Issue       : false;
SU(1):   %222:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%222
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %221:gpr32, %222:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%222
    SU(0): Data Latency=4 Reg=%221
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %221:gpr32, %222:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %222:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
SU(1):   %222:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
SU(2):   dead $wzr = SUBSWrr %221:gpr32, %222:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13

********** MI Scheduling **********
fftXYZ:%bb.13 for.cond23
  From: %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
    To: Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%266
  Single Issue       : false;
SU(1):   %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%267
  Single Issue       : false;
SU(2):   %268:gpr32common = LDRWui %stack.10.j, 0, debug-location !164 :: (dereferenceable load 4 from %ir.j); fft3d.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%267
    SU(0): Data Latency=4 Reg=%266
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 2 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  Ready @1c
  BotQ.A TopLatency SU(3) 4c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %268:gpr32common = LDRWui %stack.10.j, 0, debug-location !164 :: (dereferenceable load 4 from %ir.j); fft3d.c:0
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 2
  Executed: 4c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
SU(1):   %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
SU(2):   %268:gpr32common = LDRWui %stack.10.j, 0, debug-location !164 :: (dereferenceable load 4 from %ir.j); fft3d.c:0
SU(3):   dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !165; fft3d.c:168:17

********** MI Scheduling **********
fftXYZ:%bb.14 for.body25
  From: %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
    To: B %bb.13, debug-location !179; fft3d.c:168:17
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
Live In: %278 %1 %281 %268 
Live Out: %278 %1 %281 
Live Thru: GPR32=3
  LiveReg: %278
  UpdateRegP: SU(13) STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  LiveReg: %1
  UpdateRegP: SU(10) %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %281
  UpdateRegP: SU(7) %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
              to 
Top Pressure:
GPR32=4
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Data Latency=4 Reg=%271
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Data Latency=4 Reg=%271
  Successors:
    SU(4): Data Latency=1 Reg=%272
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(2):   %273:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(4): Data Latency=4 Reg=%273
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %274:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(14): Data Latency=4 Reg=%274
    SU(12): Data Latency=4 Reg=%274
    SU(4): Data Latency=4 Reg=%274
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(4):   %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Data Latency=1 Reg=%272
    SU(2): Data Latency=4 Reg=%273
    SU(3): Data Latency=4 Reg=%274
  Successors:
    SU(13): Data Latency=1 Reg=%277
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(5):   %279:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(8): Data Latency=4 Reg=%279
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %280:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(7): Data Latency=4 Reg=%280
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(6): Data Latency=4 Reg=%280
  Successors:
    SU(8): Data Latency=1 Reg=%282
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(7): Data Latency=1 Reg=%282
    SU(5): Data Latency=4 Reg=%279
  Successors:
    SU(11): Data Latency=1 Reg=%283
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   %284:gpr64 = LDRSWui %stack.10.j, 0, debug-location !176 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:54
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(10): Data Latency=4 Reg=%284
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(9): Data Latency=4 Reg=%284
  Successors:
    SU(11): Data Latency=1 Reg=%285
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%283
    SU(10): Data Latency=1 Reg=%285
  Successors:
    SU(12): Data Latency=1 Reg=%286
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(11): Data Latency=1 Reg=%286
    SU(3): Data Latency=4 Reg=%274
  Successors:
    SU(13): Data Latency=4 Reg=%287
    SU(15): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(13):   STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=4 Reg=%287
    SU(12): Ord  Latency=0 Memory
    SU(4): Data Latency=1 Reg=%277
  Pressure Diff      : FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(14):   %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(3): Data Latency=4 Reg=%274
  Successors:
    SU(15): Data Latency=1 Reg=%288
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%288
    SU(12): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.13, debug-location !179; fft3d.c:168:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 11
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 13 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 5 6 9 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
Bottom Pressure:
GPR32=4
  LiveReg: %288
  UpdateRegP: SU(15) STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
              to 
  Ready @0c
  BotQ.A TopLatency SU(15) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 5 6 9 
BotQ.A RemLatency SU(13) 11c
  BotQ.A RemainingLatency 11 + 1c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %287
  UpdateRegP: SU(13) STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to GPR32 1
  LiveReg: %277
  UpdateRegP: SU(13) STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to 
  Ready @1c
  BotQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 14 4 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 5 6 9 
BotQ.A RemLatency SU(4) 5c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 10 + 2c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %273
  UpdateRegP: SU(4) %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
              to GPR32 1
  LiveReg: %274
  UpdateRegP: SU(4) %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
              to 
  UpdateRegP: SU(12) %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(14) %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
              to GPR32 -1
  LiveReg: %272
  UpdateRegP: SU(4) %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 2 
Queue BotQ.A: 14 1 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 5 6 9 
BotQ.A RemLatency SU(14) 4c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 9 + 3c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(14) %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 2 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %268
  UpdateRegP: SU(1) %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
              to 
  LiveReg: %271
  UpdateRegP: SU(1) %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 2 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %286
  UpdateRegP: SU(12) %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @5c
  BotQ.A BotLatency SU(12) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 3 
Queue BotQ.A: 11 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 5 6 9 
BotQ.A RemLatency SU(11) 6c
  BotQ.A RemainingLatency 6 + 6c > CritPath 11
Picking from Bot:
  Cand SU(11) ORDER                              
  Cand SU(2) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %273:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
Bottom Pressure:
GPR32=7
  Ready @6c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 3 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %283
  UpdateRegP: SU(11) %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %285
  UpdateRegP: SU(11) %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 8 10 0 
Queue TopQ.P: 
Queue TopQ.A: 0 9 3 5 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 8c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(10) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(10) %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %284
  UpdateRegP: SU(10) %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(10) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 0 3 
Queue TopQ.P: 
Queue TopQ.A: 0 9 3 5 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 9c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(0) REG-MAX                            
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %274:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
Bottom Pressure:
GPR32=7
  Ready @9c
  BotQ.A BotLatency SU(3) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 0 
Queue TopQ.P: 
Queue TopQ.A: 0 9 6 5 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 10c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %279
  UpdateRegP: SU(8) %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %282
  UpdateRegP: SU(8) %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @10c
  BotQ.A TopLatency SU(8) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 5 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 9 6 5 
BotQ.A RemLatency SU(7) 4c
  BotQ.A RemainingLatency 4 + 11c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %280
  UpdateRegP: SU(7) %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 5 
Queue BotQ.A: 0 9 
Queue TopQ.P: 
Queue TopQ.A: 0 9 6 5 
  BotQ.A RemainingLatency 0 + 12c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %284:gpr64 = LDRSWui %stack.10.j, 0, debug-location !176 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:54
Bottom Pressure:
GPR32=7
  Ready @12c
  BotQ.A BotLatency SU(9) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 5 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
Bottom Pressure:
GPR32=6
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %279:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
Bottom Pressure:
GPR32=5
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %280:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
Bottom Pressure:
GPR32=4
  Ready @15c
  BotQ.A BotLatency SU(6) 11c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.14 ***
SU(6):   %280:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
SU(5):   %279:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
SU(0):   %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
SU(9):   %284:gpr64 = LDRSWui %stack.10.j, 0, debug-location !176 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:54
SU(7):   %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
SU(8):   %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
SU(3):   %274:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
SU(10):   %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
SU(11):   %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
SU(2):   %273:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
SU(12):   %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
SU(1):   %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
SU(14):   %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
SU(4):   %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
SU(13):   STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
SU(15):   STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38

********** MI Scheduling **********
fftXYZ:%bb.15 for.inc35
  From: %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
    To: B %bb.11, debug-location !183; fft3d.c:167:13
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%270
  Single Issue       : false;
SU(1):   STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%270
  Single Issue       : false;
ExitSU:   B %bb.11, debug-location !183; fft3d.c:167:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
SU(1):   STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%231
  Single Issue       : false;
SU(1):   STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%231
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
SU(1):   STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $w1 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w2 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w3 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w4 = COPY %228:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $x5 = COPY %278:gpr64common, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x6 = COPY %229:gpr64, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 7
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 5 4 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x6 = COPY %229:gpr64, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $x5 = COPY %278:gpr64common, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w4 = COPY %228:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w3 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w2 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
SU(1):   $w1 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
SU(2):   $w2 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
SU(3):   $w3 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
SU(4):   $w4 = COPY %228:gpr32, debug-location !192; fft3d.c:172:13
SU(5):   $x5 = COPY %278:gpr64common, debug-location !192; fft3d.c:172:13
SU(6):   $x6 = COPY %229:gpr64, debug-location !192; fft3d.c:172:13

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %225:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %226:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %227:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %228:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %229:gpr64 = LDRXui %stack.6.exp1.addr, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 0 1 2 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %229:gpr64 = LDRXui %stack.6.exp1.addr, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  BotQ.A RemainingLatency 0 + 4c > CritPath 3
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %228:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 5c > CritPath 3
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %227:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 6c > CritPath 3
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %226:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 3
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %225:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
SU(1):   %225:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
SU(2):   %226:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
SU(3):   %227:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
SU(4):   %228:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
SU(5):   %229:gpr64 = LDRXui %stack.6.exp1.addr, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59

********** MI Scheduling **********
fftXYZ:%bb.17 for.cond38
  From: %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
    To: Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%232
  Single Issue       : false;
SU(1):   %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%233
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%233
    SU(0): Data Latency=4 Reg=%232
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.17 ***
SU(0):   %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
SU(1):   %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
SU(2):   dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13

********** MI Scheduling **********
fftXYZ:%bb.19 for.cond41
  From: %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
    To: Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%240
  Single Issue       : false;
SU(1):   %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%241
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%241
    SU(0): Data Latency=4 Reg=%240
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.19 ***
SU(0):   %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
SU(1):   %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
SU(2):   dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17

********** MI Scheduling **********
fftXYZ:%bb.20 for.body43
  From: %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
    To: B %bb.19, debug-location !225; fft3d.c:174:17
 RegionInstrs: 17
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
Live In: %278 %1 %281 
Live Out: %278 %1 %281 
Live Thru: GPR32=3
  LiveReg: %278
  UpdateRegP: SU(12) %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  LiveReg: %1
  UpdateRegP: SU(5) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %281
  UpdateRegP: SU(2) %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
              to 
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(3): Data Latency=4 Reg=%245
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 13
  Successors:
    SU(2): Data Latency=4 Reg=%246
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(1): Data Latency=4 Reg=%246
  Successors:
    SU(3): Data Latency=1 Reg=%248
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(2): Data Latency=1 Reg=%248
    SU(0): Data Latency=4 Reg=%245
  Successors:
    SU(6): Data Latency=1 Reg=%249
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(9): Data Latency=4 Reg=%250
    SU(5): Data Latency=4 Reg=%250
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(4): Data Latency=4 Reg=%250
  Successors:
    SU(6): Data Latency=1 Reg=%252
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
    SU(3): Data Latency=1 Reg=%249
    SU(5): Data Latency=1 Reg=%252
  Successors:
    SU(13): Data Latency=1 Reg=%253
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(13): Data Latency=4 Reg=%254
    SU(11): Data Latency=4 Reg=%254
    SU(16): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(9): Data Latency=4 Reg=%256
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(8): Data Latency=4 Reg=%256
    SU(4): Data Latency=4 Reg=%250
  Successors:
    SU(11): Data Latency=1 Reg=%257
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(11): Data Latency=4 Reg=%258
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(9): Data Latency=1 Reg=%257
    SU(10): Data Latency=4 Reg=%258
    SU(7): Data Latency=4 Reg=%254
  Successors:
    SU(12): Data Latency=1 Reg=%260
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(12):   %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(11): Data Latency=1 Reg=%260
  Successors:
    SU(13): Data Latency=4 Reg=%262
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(13):   STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
  # preds left       : 10
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(12): Data Latency=4 Reg=%262
    SU(12): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Data Latency=4 Reg=%254
    SU(7): Ord  Latency=0 Memory
    SU(6): Data Latency=1 Reg=%253
    SU(4): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(16): Ord  Latency=0 Memory
    SU(14): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(14):   %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(13): Ord  Latency=1 Memory
  Successors:
    SU(15): Data Latency=4 Reg=%263
    SU(16): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(14): Data Latency=4 Reg=%263
  Successors:
    SU(16): Data Latency=1 Reg=%264
  Pressure Diff      : 
  Single Issue       : false;
SU(16):   STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(15): Data Latency=1 Reg=%264
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.19, debug-location !225; fft3d.c:174:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
Bottom Pressure:
GPR32=4
  LiveReg: %264
  UpdateRegP: SU(16) STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
              to 
  Ready @0c
  BotQ.A TopLatency SU(16) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
Bottom Pressure:
GPR32=4
  LiveReg: %263
  UpdateRegP: SU(15) %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(15) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
Bottom Pressure:
GPR32=3
  Ready @5c
  BotQ.A BotLatency SU(14) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %262
  UpdateRegP: SU(13) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
              to GPR32 2
  LiveReg: %253
  UpdateRegP: SU(13) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
              to GPR32 1
  LiveReg: %254
  UpdateRegP: SU(11) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to GPR32 1
  UpdateRegP: SU(13) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
              to 
  Ready @6c
  BotQ.A BotLatency SU(13) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %249
  UpdateRegP: SU(6) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %252
  UpdateRegP: SU(6) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @7c
  BotQ.A BotLatency SU(6) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 8 10 
BotQ.A RemLatency SU(3) 5c
BotQ.A RemLatency SU(12) 6c
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %250
  UpdateRegP: SU(5) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  UpdateRegP: SU(9) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
              to 
  Ready @8c
  BotQ.A BotLatency SU(5) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %245
  UpdateRegP: SU(3) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %248
  UpdateRegP: SU(3) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 8 10 
BotQ.A RemLatency SU(12) 6c
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %246
  UpdateRegP: SU(2) %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @10c
  BotQ.A BotLatency SU(2) 9c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
Bottom Pressure:
GPR32=8
  LiveReg: %260
  UpdateRegP: SU(12) %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @11c
  BotQ.A TopLatency SU(12) 6c
  BotQ.A BotLatency SU(12) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
Bottom Pressure:
GPR32=9
  LiveReg: %258
  UpdateRegP: SU(11) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to 
  LiveReg: %257
  UpdateRegP: SU(11) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to GPR32 -1
  Ready @12c
  BotQ.A BotLatency SU(11) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 1 10 
Queue BotQ.A: 9 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 8 10 
BotQ.A RemLatency SU(9) 4c
  BotQ.A RemainingLatency 4 + 13c > CritPath 16
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
Bottom Pressure:
GPR32=9
  LiveReg: %256
  UpdateRegP: SU(9) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
              to GPR32 -1
  Ready @13c
  BotQ.A BotLatency SU(9) 12c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 4 10 8 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 8 10 
  BotQ.A RemainingLatency 3 + 14c > CritPath 16
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
Bottom Pressure:
GPR32=8
  Ready @14c
  BotQ.A BotLatency SU(1) 13c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 4 10 8 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
Bottom Pressure:
GPR32=7
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 4 
Queue BotQ.A: 7 10 
Queue TopQ.P: 
Queue TopQ.A: 8 10 4 7 
  BotQ.A RemainingLatency 1 + 16c > CritPath 16
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(8) ORDER                              
  Cand SU(4) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
Bottom Pressure:
GPR32=6
  Ready @16c
  BotQ.A BotLatency SU(10) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 4 
Queue TopQ.P: 
Queue TopQ.A: 8 7 4 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(4) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
Bottom Pressure:
GPR32=5
  Ready @17c
  BotQ.A BotLatency SU(8) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 4 
Queue TopQ.P: 
Queue TopQ.A: 4 7 
  BotQ.A RemainingLatency 0 + 18c > CritPath 16
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(4) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
Bottom Pressure:
GPR32=4
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
Bottom Pressure:
GPR32=3
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.20 ***
SU(4):   %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
SU(7):   %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
SU(8):   %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
SU(10):   %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
SU(0):   %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
SU(1):   %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
SU(9):   %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
SU(11):   %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
SU(12):   %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
SU(2):   %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
SU(3):   %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
SU(5):   %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
SU(6):   %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
SU(13):   STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
SU(14):   %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
SU(15):   %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
SU(16):   STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38

********** MI Scheduling **********
fftXYZ:%bb.21 for.inc58
  From: %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
    To: B %bb.17, debug-location !229; fft3d.c:173:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%243
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%243
  Successors:
    SU(2): Data Latency=1 Reg=%244
  Single Issue       : false;
SU(2):   STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%244
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.17, debug-location !229; fft3d.c:173:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
SU(1):   %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
SU(2):   STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38

********** MI Scheduling **********
fftXYZ:%bb.22 for.inc61
  From: %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
    To: B %bb.7, debug-location !234; fft3d.c:162:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%236
  Single Issue       : false;
SU(1):   %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%237
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%237
    SU(0): Data Latency=4 Reg=%236
  Successors:
    SU(3): Data Latency=1 Reg=%238
  Single Issue       : false;
SU(3):   STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%238
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.7, debug-location !234; fft3d.c:162:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
SU(1):   %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
SU(2):   %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
SU(3):   STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37

********** MI Scheduling **********
fftXYZ:%bb.23 for.inc64
  From: %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
    To: B %bb.5, debug-location !238; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%206
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %207:gpr32common = nsw ADDWri %206:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%206
  Successors:
    SU(2): Data Latency=1 Reg=%207
  Single Issue       : false;
SU(2):   STRWui %207:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%207
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.5, debug-location !238; fft3d.c:161:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %207:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %207:gpr32common = nsw ADDWri %206:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
SU(1):   %207:gpr32common = nsw ADDWri %206:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
SU(2):   STRWui %207:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
    To: CBZW %45:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%43
  Single Issue       : false;
SU(1):   STRWui %43:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%43
  Single Issue       : false;
SU(2):   %45:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Data Latency=4 Reg=%45
  Single Issue       : false;
ExitSU:   CBZW %45:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Data Latency=4 Reg=%45
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %43:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %45:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(2):   %45:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
SU(0):   %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
SU(1):   STRWui %43:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
 RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%35
  Single Issue       : false;
SU(1):   %36:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%36
  Single Issue       : false;
SU(2):   %37:gpr32common = SDIVWr %36:gpr32, %35:gpr32, debug-location !246; fft3d.c:183:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%36
    SU(0): Data Latency=4 Reg=%35
  Successors:
    SU(5): Data Latency=1 Reg=%37
    SU(3): Data Latency=1 Reg=%37
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWri %37:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%37
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(4):   %40:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(5): Data Latency=1 Reg=%40
  Single Issue       : false;
SU(5):   %41:gpr32common = CSELWr %40:gpr32, %37:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%37
    SU(3): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=1 Reg=%40
  Successors:
    SU(7): Data Latency=1 Reg=%41
    SU(6): Data Latency=1 Reg=%41
  Single Issue       : false;
SU(6):   STRWui %41:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%41
  Single Issue       : false;
SU(7):   %42:gpr32common = nsw ADDWri %41:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=%41
  Successors:
    SU(8): Data Latency=1 Reg=%42
  Single Issue       : false;
SU(8):   STRWui %42:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%42
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) STRWui %42:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  Ready @0c
  BotQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(6) 7c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %42:gpr32common = nsw ADDWri %41:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
  Ready @1c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRWui %41:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @2c
  BotQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %41:gpr32common = CSELWr %40:gpr32, %37:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  Ready @3c
  BotQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) dead $wzr = SUBSWri %37:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  Ready @4c
  BotQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %37:gpr32common = SDIVWr %36:gpr32, %35:gpr32, debug-location !246; fft3d.c:183:26
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 4 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %40:gpr32 = MOVi32imm 32
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %36:gpr32 = MOVi32imm 8192
  Ready @7c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
SU(1):   %36:gpr32 = MOVi32imm 8192
SU(4):   %40:gpr32 = MOVi32imm 32
SU(2):   %37:gpr32common = SDIVWr %36:gpr32, %35:gpr32, debug-location !246; fft3d.c:183:26
SU(3):   dead $wzr = SUBSWri %37:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
SU(5):   %41:gpr32common = CSELWr %40:gpr32, %37:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
SU(6):   STRWui %41:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(7):   %42:gpr32common = nsw ADDWri %41:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
SU(8):   STRWui %42:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10

********** MI Scheduling **********
fftXYZ:%bb.29 for.cond79
  From: %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
    To: Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%48
  Single Issue       : false;
SU(1):   %49:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%49
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %48:gpr32, %49:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%49
    SU(0): Data Latency=4 Reg=%48
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %48:gpr32, %49:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %49:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
SU(1):   %49:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
SU(2):   dead $wzr = SUBSWrr %48:gpr32, %49:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5

********** MI Scheduling **********
fftXYZ:%bb.31 for.cond82
  From: %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%167
  Single Issue       : false;
SU(1):   %168:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%168
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %167:gpr32, %168:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%168
    SU(0): Data Latency=4 Reg=%167
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %167:gpr32, %168:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %168:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
SU(1):   %168:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
SU(2):   dead $wzr = SUBSWrr %167:gpr32, %168:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9

********** MI Scheduling **********
fftXYZ:%bb.32 for.body84
  From: %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
    To: Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%172
  Single Issue       : false;
SU(1):   %174:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%174
  Single Issue       : false;
SU(2):   %175:gpr32common = nsw ADDWrr %172:gpr32, %174:gpr32, debug-location !282; fft3d.c:192:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%174
    SU(0): Data Latency=4 Reg=%172
  Successors:
    SU(3): Data Latency=1 Reg=%175
  Single Issue       : false;
SU(3):   %176:gpr32common = SUBWri %175:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%175
  Successors:
    SU(6): Data Latency=1 Reg=%176
    SU(4): Data Latency=1 Reg=%176
  Single Issue       : false;
SU(4):   STRWui %176:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%176
  Single Issue       : false;
SU(5):   %177:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%177
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %176:gpr32common, %177:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%176
    SU(5): Data Latency=4 Reg=%177
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %176:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %176:gpr32common, %177:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %176:gpr32common = SUBWri %175:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %175:gpr32common = nsw ADDWrr %172:gpr32, %174:gpr32, debug-location !282; fft3d.c:192:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %177:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %174:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
SU(1):   %174:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
SU(5):   %177:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
SU(2):   %175:gpr32common = nsw ADDWrr %172:gpr32, %174:gpr32, debug-location !282; fft3d.c:192:23
SU(3):   %176:gpr32common = SUBWri %175:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
SU(6):   dead $wzr = SUBSWrr %176:gpr32common, %177:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
SU(4):   STRWui %176:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17

********** MI Scheduling **********
fftXYZ:%bb.33 if.then88
  From: %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%179
  Single Issue       : false;
SU(1):   %180:gpr32common = SUBWri %179:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%179
  Successors:
    SU(2): Data Latency=1 Reg=%180
  Single Issue       : false;
SU(2):   STRWui %180:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%180
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %180:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %180:gpr32common = SUBWri %179:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
SU(1):   %180:gpr32common = SUBWri %179:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
SU(2):   STRWui %180:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
    To: B %bb.31, debug-location !313; fft3d.c:191:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%199
  Single Issue       : false;
SU(1):   %200:gpr32 = LDRWui %stack.13.bls, 0, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%200
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %201:gpr32 = nsw ADDWrr %200:gpr32, %199:gpr32, debug-location !312; fft3d.c:191:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%200
    SU(0): Data Latency=4 Reg=%199
  Successors:
    SU(3): Data Latency=1 Reg=%201
  Single Issue       : false;
SU(3):   STRWui %201:gpr32, %stack.13.bls, 0, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%201
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.31, debug-location !313; fft3d.c:191:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %201:gpr32, %stack.13.bls, 0, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %201:gpr32 = nsw ADDWrr %200:gpr32, %199:gpr32, debug-location !312; fft3d.c:191:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %200:gpr32 = LDRWui %stack.13.bls, 0, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
SU(1):   %200:gpr32 = LDRWui %stack.13.bls, 0, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
SU(2):   %201:gpr32 = nsw ADDWrr %200:gpr32, %199:gpr32, debug-location !312; fft3d.c:191:37
SU(3):   STRWui %201:gpr32, %stack.13.bls, 0, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $w1 = COPY %186:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w2 = COPY %184:gpr32common, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w3 = COPY %187:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w4 = COPY %189:gpr32sp, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $x5 = COPY %196:gpr64, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x6 = COPY %197:gpr64, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 7
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 5 4 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x6 = COPY %197:gpr64, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $x5 = COPY %196:gpr64, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w4 = COPY %189:gpr32sp, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w3 = COPY %187:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w2 = COPY %184:gpr32common, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = COPY %186:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
SU(1):   $w1 = COPY %186:gpr32, debug-location !310; fft3d.c:196:13
SU(2):   $w2 = COPY %184:gpr32common, debug-location !310; fft3d.c:196:13
SU(3):   $w3 = COPY %187:gpr32, debug-location !310; fft3d.c:196:13
SU(4):   $w4 = COPY %189:gpr32sp, debug-location !310; fft3d.c:196:13
SU(5):   $x5 = COPY %196:gpr64, debug-location !310; fft3d.c:196:13
SU(6):   $x6 = COPY %197:gpr64, debug-location !310; fft3d.c:196:13

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 17
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=8
Live In: %281 
Live Out: %197 %196 %281 %189 %187 %186 %185 %184 
Live Thru: GPR32=1
  LiveReg: %197
  LiveReg: %196
  LiveReg: %281
  UpdateRegP: SU(12) %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %189
  LiveReg: %187
  LiveReg: %186
  LiveReg: %185
  LiveReg: %184
  UpdateRegP: SU(4) STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
              to 
Top Pressure:
GPR32=1
Bottom Pressure:
GPR32=8
Excess PSets: 
Cluster ld/st SU(1) - SU(14)
  Copy Succ SU(2)
SU(0):   %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%181
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %182:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
  # preds left       : 0
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%182
    SU(14): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%182
    SU(0): Data Latency=4 Reg=%181
    SU(14): Ord  Latency=0 Artificial
  Successors:
    SU(3): Data Latency=1 Reg=%183
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%183
  Successors:
    SU(4): Data Latency=1 Reg=%184
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%184
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %185:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %186:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %187:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %188:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(9): Data Latency=4 Reg=%188
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(8): Data Latency=4 Reg=%188
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %190:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%190
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   %191:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(12): Data Latency=4 Reg=%191
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(12):   %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(11): Data Latency=4 Reg=%191
  Successors:
    SU(13): Data Latency=1 Reg=%193
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(12): Data Latency=1 Reg=%193
    SU(10): Data Latency=4 Reg=%190
  Successors:
    SU(15): Data Latency=1 Reg=%194
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %195:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  # preds left       : 0
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(1): Ord  Latency=0 Cluster
  Successors:
    SU(15): Data Latency=4 Reg=%195
    SU(2): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(13): Data Latency=1 Reg=%194
    SU(14): Data Latency=4 Reg=%195
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(16):   %197:gpr64 = LDRXui %stack.7.exp2.addr, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(16): Ord  Latency=3 Artificial
    SU(7): Ord  Latency=3 Artificial
    SU(6): Ord  Latency=3 Artificial
    SU(5): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 
Queue BotQ.A: 15 9 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(9) REG-MAX                            
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(9) %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
Bottom Pressure:
GPR32=8
  LiveReg: %188
  UpdateRegP: SU(9) %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
              to GPR32 -1
  Ready @0c
  BotQ.A TopLatency SU(9) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 8 
Queue BotQ.A: 15 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(4) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(4) STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
Bottom Pressure:
GPR32=8
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 8 
Queue BotQ.A: 15 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(3) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
Bottom Pressure:
GPR32=8
  LiveReg: %183
  UpdateRegP: SU(3) %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 15 2 16 7 5 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(16) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(16) %197:gpr64 = LDRXui %stack.7.exp2.addr, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
Bottom Pressure:
GPR32=7
  Ready @3c
  BotQ.A BotLatency SU(16) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 2 6 7 5 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 4c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(15) %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %194
  UpdateRegP: SU(15) %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %195
  UpdateRegP: SU(15) %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(15) 6c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 2 6 7 5 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 
BotQ.A RemLatency SU(13) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) %188:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
Bottom Pressure:
GPR32=7
  Ready @5c
  BotQ.A BotLatency SU(8) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 2 6 7 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
BotQ.A RemLatency SU(13) 5c
  BotQ.A RemainingLatency 5 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %190
  UpdateRegP: SU(13) %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %193
  UpdateRegP: SU(13) %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @6c
  BotQ.A TopLatency SU(13) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 5 2 6 7 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(12) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(12) %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %191
  UpdateRegP: SU(12) %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 11 
Queue BotQ.A: 5 2 6 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %187:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
Bottom Pressure:
GPR32=7
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 11 
Queue BotQ.A: 5 2 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 14 10 
  BotQ.A RemainingLatency 0 + 9c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
Bottom Pressure:
GPR32=8
  LiveReg: %181
  UpdateRegP: SU(2) %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
              to 
  LiveReg: %182
  UpdateRegP: SU(2) %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
              to GPR32 -1
  Ready @9c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 11 1 
Queue BotQ.A: 5 6 14 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 14 10 
  BotQ.A RemainingLatency 0 + 10c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %195:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
Bottom Pressure:
GPR32=7
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 6 10 11 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 10 
  BotQ.A RemainingLatency 0 + 11c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) %191:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
Bottom Pressure:
GPR32=6
  Ready @11c
  BotQ.A BotLatency SU(11) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 6 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 10 
  BotQ.A RemainingLatency 0 + 12c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %190:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
Bottom Pressure:
GPR32=5
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
  BotQ.A RemainingLatency 0 + 13c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(1) %182:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
Bottom Pressure:
GPR32=4
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 0 
Queue TopQ.P: 
Queue TopQ.A: 0 6 5 
  BotQ.A RemainingLatency 0 + 14c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %186:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
Bottom Pressure:
GPR32=3
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 5 
  BotQ.A RemainingLatency 0 + 15c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %185:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
Bottom Pressure:
GPR32=2
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
Bottom Pressure:
GPR32=1
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
SU(5):   %185:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
SU(6):   %186:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
SU(1):   %182:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
SU(10):   %190:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
SU(11):   %191:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
SU(14):   %195:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
SU(2):   %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
SU(7):   %187:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
SU(12):   %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
SU(13):   %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
SU(8):   %188:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
SU(15):   %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
SU(16):   %197:gpr64 = LDRXui %stack.7.exp2.addr, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
SU(3):   %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
SU(4):   STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
SU(9):   %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49

********** MI Scheduling **********
fftXYZ:%bb.35 for.inc102
  From: %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
    To: B %bb.29, debug-location !317; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%170
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %171:gpr32common = nsw ADDWri %170:gpr32common, 1, 0, debug-location !316; fft3d.c:190:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%170
  Successors:
    SU(2): Data Latency=1 Reg=%171
  Single Issue       : false;
SU(2):   STRWui %171:gpr32common, %stack.11.k, 0, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%171
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.29, debug-location !317; fft3d.c:190:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %171:gpr32common, %stack.11.k, 0, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %171:gpr32common = nsw ADDWri %170:gpr32common, 1, 0, debug-location !316; fft3d.c:190:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
SU(1):   %171:gpr32common = nsw ADDWri %170:gpr32common, 1, 0, debug-location !316; fft3d.c:190:26
SU(2):   STRWui %171:gpr32common, %stack.11.k, 0, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
    To: CBZW %64:gpr32, %bb.40, debug-location !339; fft3d.c:207:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%62
  Single Issue       : false;
SU(1):   STRWui %62:gpr32, %stack.12.log, 0, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%62
  Single Issue       : false;
SU(2):   %64:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Data Latency=4 Reg=%64
  Single Issue       : false;
ExitSU:   CBZW %64:gpr32, %bb.40, debug-location !339; fft3d.c:207:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Data Latency=4 Reg=%64
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %62:gpr32, %stack.12.log, 0, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %64:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  Ready @4c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(2):   %64:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
SU(0):   %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
SU(1):   STRWui %62:gpr32, %stack.12.log, 0, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
 RegionInstrs: 9
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%54
  Single Issue       : false;
SU(1):   %55:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%55
  Single Issue       : false;
SU(2):   %56:gpr32common = SDIVWr %55:gpr32, %54:gpr32, debug-location !325; fft3d.c:202:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%55
    SU(0): Data Latency=4 Reg=%54
  Successors:
    SU(5): Data Latency=1 Reg=%56
    SU(3): Data Latency=1 Reg=%56
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWri %56:gpr32common, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%56
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(4):   %59:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(5): Data Latency=1 Reg=%59
  Single Issue       : false;
SU(5):   %60:gpr32common = CSELWr %59:gpr32, %56:gpr32common, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%56
    SU(3): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=1 Reg=%59
  Successors:
    SU(7): Data Latency=1 Reg=%60
    SU(6): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(6):   STRWui %60:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(7):   %61:gpr32common = nsw ADDWri %60:gpr32common, 1, 0, debug-location !332; fft3d.c:205:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=%60
  Successors:
    SU(8): Data Latency=1 Reg=%61
  Single Issue       : false;
SU(8):   STRWui %61:gpr32common, %stack.16.blkp, 0, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%61
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(8) STRWui %61:gpr32common, %stack.16.blkp, 0, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  Ready @0c
  BotQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(6) 7c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %61:gpr32common = nsw ADDWri %60:gpr32common, 1, 0, debug-location !332; fft3d.c:205:21
  Ready @1c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRWui %60:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @2c
  BotQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %60:gpr32common = CSELWr %59:gpr32, %56:gpr32common, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
  Ready @3c
  BotQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) dead $wzr = SUBSWri %56:gpr32common, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  Ready @4c
  BotQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %56:gpr32common = SDIVWr %55:gpr32, %54:gpr32, debug-location !325; fft3d.c:202:26
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 4 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %59:gpr32 = MOVi32imm 32
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %55:gpr32 = MOVi32imm 8192
  Ready @7c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 9 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
SU(1):   %55:gpr32 = MOVi32imm 8192
SU(4):   %59:gpr32 = MOVi32imm 32
SU(2):   %56:gpr32common = SDIVWr %55:gpr32, %54:gpr32, debug-location !325; fft3d.c:202:26
SU(3):   dead $wzr = SUBSWri %56:gpr32common, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
SU(5):   %60:gpr32common = CSELWr %59:gpr32, %56:gpr32common, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
SU(6):   STRWui %60:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(7):   %61:gpr32common = nsw ADDWri %60:gpr32common, 1, 0, debug-location !332; fft3d.c:205:21
SU(8):   STRWui %61:gpr32common, %stack.16.blkp, 0, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10

********** MI Scheduling **********
fftXYZ:%bb.41 for.cond117
  From: %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
    To: Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%67
  Single Issue       : false;
SU(1):   %68:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%68
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %67:gpr32, %68:gpr32, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%68
    SU(0): Data Latency=4 Reg=%67
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %67:gpr32, %68:gpr32, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %68:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
SU(1):   %68:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
SU(2):   dead $wzr = SUBSWrr %67:gpr32, %68:gpr32, implicit-def $nzcv, debug-location !348; fft3d.c:209:5

********** MI Scheduling **********
fftXYZ:%bb.43 for.cond120
  From: %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
    To: Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%77
  Single Issue       : false;
SU(1):   %78:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%78
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %77:gpr32, %78:gpr32, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%78
    SU(0): Data Latency=4 Reg=%77
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %77:gpr32, %78:gpr32, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %78:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
SU(1):   %78:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
SU(2):   dead $wzr = SUBSWrr %77:gpr32, %78:gpr32, implicit-def $nzcv, debug-location !357; fft3d.c:210:9

********** MI Scheduling **********
fftXYZ:%bb.44 for.body122
  From: %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
    To: Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%82
  Single Issue       : false;
SU(1):   %84:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%84
  Single Issue       : false;
SU(2):   %85:gpr32common = nsw ADDWrr %82:gpr32, %84:gpr32, debug-location !361; fft3d.c:211:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%84
    SU(0): Data Latency=4 Reg=%82
  Successors:
    SU(3): Data Latency=1 Reg=%85
  Single Issue       : false;
SU(3):   %86:gpr32common = SUBWri %85:gpr32common, 1, 0, debug-location !362; fft3d.c:211:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%85
  Successors:
    SU(6): Data Latency=1 Reg=%86
    SU(4): Data Latency=1 Reg=%86
  Single Issue       : false;
SU(4):   STRWui %86:gpr32common, %stack.14.ble, 0, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%86
  Single Issue       : false;
SU(5):   %87:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%87
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %86:gpr32common, %87:gpr32, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%86
    SU(5): Data Latency=4 Reg=%87
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %86:gpr32common, %stack.14.ble, 0, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %86:gpr32common, %87:gpr32, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %86:gpr32common = SUBWri %85:gpr32common, 1, 0, debug-location !362; fft3d.c:211:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %85:gpr32common = nsw ADDWrr %82:gpr32, %84:gpr32, debug-location !361; fft3d.c:211:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %87:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %84:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
SU(1):   %84:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
SU(5):   %87:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
SU(2):   %85:gpr32common = nsw ADDWrr %82:gpr32, %84:gpr32, debug-location !361; fft3d.c:211:23
SU(3):   %86:gpr32common = SUBWri %85:gpr32common, 1, 0, debug-location !362; fft3d.c:211:34
SU(6):   dead $wzr = SUBSWrr %86:gpr32common, %87:gpr32, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
SU(4):   STRWui %86:gpr32common, %stack.14.ble, 0, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17

********** MI Scheduling **********
fftXYZ:%bb.45 if.then126
  From: %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%89
  Single Issue       : false;
SU(1):   %90:gpr32common = SUBWri %89:gpr32common, 1, 0, debug-location !370; fft3d.c:213:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%89
  Successors:
    SU(2): Data Latency=1 Reg=%90
  Single Issue       : false;
SU(2):   STRWui %90:gpr32common, %stack.14.ble, 0, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%90
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %90:gpr32common, %stack.14.ble, 0, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %90:gpr32common = SUBWri %89:gpr32common, 1, 0, debug-location !370; fft3d.c:213:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.45 ***
SU(0):   %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
SU(1):   %90:gpr32common = SUBWri %89:gpr32common, 1, 0, debug-location !370; fft3d.c:213:26
SU(2):   STRWui %90:gpr32common, %stack.14.ble, 0, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21

********** MI Scheduling **********
fftXYZ:%bb.46 if.end128
  From: %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
    To: End RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%91
  Single Issue       : false;
SU(1):   %92:gpr32 = LDRWui %stack.13.bls, 0, debug-location !374 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%92
  Single Issue       : false;
SU(2):   %93:gpr32common = nsw SUBWrr %91:gpr32, %92:gpr32, debug-location !375; fft3d.c:214:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%92
    SU(0): Data Latency=4 Reg=%91
  Successors:
    SU(3): Data Latency=1 Reg=%93
  Single Issue       : false;
SU(3):   %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !376; fft3d.c:214:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%93
  Successors:
    SU(4): Data Latency=1 Reg=%94
  Single Issue       : false;
SU(4):   STRWui %94:gpr32common, %stack.15.len, 0, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%94
  Single Issue       : false;
SU(5):   STRWui $wzr, %stack.9.i, 0, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) STRWui $wzr, %stack.9.i, 0, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %94:gpr32common, %stack.15.len, 0, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !376; fft3d.c:214:29
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %93:gpr32common = nsw SUBWrr %91:gpr32, %92:gpr32, debug-location !375; fft3d.c:214:23
  Ready @3c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %92:gpr32 = LDRWui %stack.13.bls, 0, debug-location !374 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  Ready @7c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.46 ***
SU(0):   %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
SU(1):   %92:gpr32 = LDRWui %stack.13.bls, 0, debug-location !374 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
SU(2):   %93:gpr32common = nsw SUBWrr %91:gpr32, %92:gpr32, debug-location !375; fft3d.c:214:23
SU(3):   %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !376; fft3d.c:214:29
SU(4):   STRWui %94:gpr32common, %stack.15.len, 0, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
SU(5):   STRWui $wzr, %stack.9.i, 0, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20

********** MI Scheduling **********
fftXYZ:%bb.47 for.cond131
  From: %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
    To: Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%96
  Single Issue       : false;
SU(1):   %97:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%97
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %96:gpr32, %97:gpr32, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%97
    SU(0): Data Latency=4 Reg=%96
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %96:gpr32, %97:gpr32, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %97:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.47 ***
SU(0):   %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
SU(1):   %97:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
SU(2):   dead $wzr = SUBSWrr %96:gpr32, %97:gpr32, implicit-def $nzcv, debug-location !385; fft3d.c:215:13

********** MI Scheduling **********
fftXYZ:%bb.48 for.body133
  From: %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%141
  Single Issue       : false;
SU(1):   STRWui %141:gpr32, %stack.10.j, 0, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%141
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %141:gpr32, %stack.10.j, 0, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.48 ***
SU(0):   %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
SU(1):   STRWui %141:gpr32, %stack.10.j, 0, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24

********** MI Scheduling **********
fftXYZ:%bb.49 for.cond134
  From: %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
    To: Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%142
  Single Issue       : false;
SU(1):   %143:gpr32 = LDRWui %stack.14.ble, 0, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%143
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %142:gpr32, %143:gpr32, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%143
    SU(0): Data Latency=4 Reg=%142
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %142:gpr32, %143:gpr32, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %143:gpr32 = LDRWui %stack.14.ble, 0, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.49 ***
SU(0):   %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
SU(1):   %143:gpr32 = LDRWui %stack.14.ble, 0, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
SU(2):   dead $wzr = SUBSWrr %142:gpr32, %143:gpr32, implicit-def $nzcv, debug-location !395; fft3d.c:216:17

********** MI Scheduling **********
fftXYZ:%bb.50 for.body136
  From: %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
    To: B %bb.49, debug-location !410; fft3d.c:216:17
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
Live In: %278 %1 %281 
Live Out: %278 %1 %281 
Live Thru: GPR32=3
  LiveReg: %278
  UpdateRegP: SU(13) STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
              to FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  LiveReg: %1
  UpdateRegP: SU(10) %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
              to 
  LiveReg: %281
  UpdateRegP: SU(7) %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
              to 
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(14): Data Latency=4 Reg=%147
    SU(12): Data Latency=4 Reg=%147
    SU(2): Data Latency=4 Reg=%147
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %149:gpr32 = LDRWui %stack.13.bls, 0, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%149
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%149
    SU(0): Data Latency=4 Reg=%147
  Successors:
    SU(5): Data Latency=1 Reg=%150
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %151:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%151
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(4):   %152:gpr64 = LDRSWui %stack.9.i, 0, debug-location !401 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(7): Data Latency=4 Reg=%152
    SU(5): Data Latency=4 Reg=%152
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%150
    SU(3): Data Latency=4 Reg=%151
    SU(4): Data Latency=4 Reg=%152
  Successors:
    SU(13): Data Latency=1 Reg=%155
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(6):   %157:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(8): Data Latency=4 Reg=%157
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(4): Data Latency=4 Reg=%152
  Successors:
    SU(8): Data Latency=1 Reg=%159
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(7): Data Latency=1 Reg=%159
    SU(6): Data Latency=4 Reg=%157
  Successors:
    SU(11): Data Latency=1 Reg=%160
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   %161:gpr64 = LDRSWui %stack.11.k, 0, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(10): Data Latency=4 Reg=%161
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(9): Data Latency=4 Reg=%161
  Successors:
    SU(11): Data Latency=1 Reg=%162
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%160
    SU(10): Data Latency=1 Reg=%162
  Successors:
    SU(12): Data Latency=1 Reg=%163
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(11): Data Latency=1 Reg=%163
    SU(0): Data Latency=4 Reg=%147
  Successors:
    SU(13): Data Latency=4 Reg=%164
    SU(15): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(13):   STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=4 Reg=%164
    SU(12): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%155
  Pressure Diff      : FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(14):   %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%147
  Successors:
    SU(15): Data Latency=1 Reg=%165
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%165
    SU(12): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.49, debug-location !410; fft3d.c:216:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 11
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
Bottom Pressure:
GPR32=4
  LiveReg: %165
  UpdateRegP: SU(15) STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
              to 
  Ready @0c
  BotQ.A TopLatency SU(15) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(13) 11c
  BotQ.A RemainingLatency 11 + 1c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %164
  UpdateRegP: SU(13) STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
              to GPR32 1
  LiveReg: %155
  UpdateRegP: SU(13) STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
              to 
  Ready @1c
  BotQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 14 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(5) 5c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 10 + 2c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
  Cand SU(5) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %151
  UpdateRegP: SU(5) %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
              to GPR32 1
  LiveReg: %152
  UpdateRegP: SU(5) %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
              to 
  UpdateRegP: SU(7) %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
              to GPR32 -1
  LiveReg: %150
  UpdateRegP: SU(5) %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 14 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(14) 4c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 9 + 3c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(14) %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %147
  UpdateRegP: SU(2) %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
              to 
  UpdateRegP: SU(12) %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(14) %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
              to GPR32 -1
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %149
  UpdateRegP: SU(2) %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 3 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %163
  UpdateRegP: SU(12) %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @5c
  BotQ.A BotLatency SU(12) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 11 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(11) 6c
  BotQ.A RemainingLatency 6 + 6c > CritPath 11
Picking from Bot:
  Cand SU(11) ORDER                              
  Cand SU(3) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %151:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
Bottom Pressure:
GPR32=7
  Ready @6c
  BotQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %160
  UpdateRegP: SU(11) %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
              to 
  LiveReg: %162
  UpdateRegP: SU(11) %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 8 10 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 9 4 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 8c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(10) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(10) %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %161
  UpdateRegP: SU(10) %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(10) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 9 4 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 9c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(1) %149:gpr32 = LDRWui %stack.13.bls, 0, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
Bottom Pressure:
GPR32=7
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 0 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 10c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %157
  UpdateRegP: SU(8) %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
              to 
  LiveReg: %159
  UpdateRegP: SU(8) %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
              to GPR32 -1
  Ready @10c
  BotQ.A TopLatency SU(8) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 6 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
BotQ.A RemLatency SU(7) 4c
  BotQ.A RemainingLatency 4 + 11c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
Bottom Pressure:
GPR32=7
  Ready @11c
  BotQ.A BotLatency SU(7) 7c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 6 
Queue BotQ.A: 0 9 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
  BotQ.A RemainingLatency 0 + 12c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %161:gpr64 = LDRSWui %stack.11.k, 0, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
Bottom Pressure:
GPR32=6
  Ready @12c
  BotQ.A BotLatency SU(9) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 6 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
Bottom Pressure:
GPR32=5
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %157:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
Bottom Pressure:
GPR32=4
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %152:gpr64 = LDRSWui %stack.9.i, 0, debug-location !401 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
Bottom Pressure:
GPR32=3
  Ready @15c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.50 ***
SU(4):   %152:gpr64 = LDRSWui %stack.9.i, 0, debug-location !401 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
SU(6):   %157:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
SU(0):   %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
SU(9):   %161:gpr64 = LDRSWui %stack.11.k, 0, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
SU(7):   %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
SU(8):   %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
SU(1):   %149:gpr32 = LDRWui %stack.13.bls, 0, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
SU(10):   %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
SU(11):   %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
SU(3):   %151:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
SU(12):   %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
SU(2):   %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
SU(14):   %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
SU(5):   %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
SU(13):   STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
SU(15):   STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42

********** MI Scheduling **********
fftXYZ:%bb.51 for.inc151
  From: %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
    To: B %bb.47, debug-location !414; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%145
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %146:gpr32common = nsw ADDWri %145:gpr32common, 1, 0, debug-location !413; fft3d.c:215:34
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%145
  Successors:
    SU(2): Data Latency=1 Reg=%146
  Single Issue       : false;
SU(2):   STRWui %146:gpr32common, %stack.9.i, 0, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%146
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.47, debug-location !414; fft3d.c:215:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %146:gpr32common, %stack.9.i, 0, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %146:gpr32common = nsw ADDWri %145:gpr32common, 1, 0, debug-location !413; fft3d.c:215:34
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.51 ***
SU(0):   %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
SU(1):   %146:gpr32common = nsw ADDWri %145:gpr32common, 1, 0, debug-location !413; fft3d.c:215:34
SU(2):   STRWui %146:gpr32common, %stack.9.i, 0, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34

********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $w1 = COPY %100:gpr32, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w2 = COPY %101:gpr32, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w3 = COPY %102:gpr32, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w4 = COPY %103:gpr32, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $x5 = COPY %278:gpr64common, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x6 = COPY %104:gpr64, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
  # preds left       : 7
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 5 4 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x6 = COPY %104:gpr64, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $x5 = COPY %278:gpr64common, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w4 = COPY %103:gpr32, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w3 = COPY %102:gpr32, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w2 = COPY %101:gpr32, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = COPY %100:gpr32, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
SU(1):   $w1 = COPY %100:gpr32, debug-location !423; fft3d.c:220:13
SU(2):   $w2 = COPY %101:gpr32, debug-location !423; fft3d.c:220:13
SU(3):   $w3 = COPY %102:gpr32, debug-location !423; fft3d.c:220:13
SU(4):   $w4 = COPY %103:gpr32, debug-location !423; fft3d.c:220:13
SU(5):   $x5 = COPY %278:gpr64common, debug-location !423; fft3d.c:220:13
SU(6):   $x6 = COPY %104:gpr64, debug-location !423; fft3d.c:220:13

********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %100:gpr32 = LDRWui %stack.12.log, 0, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %101:gpr32 = LDRWui %stack.15.len, 0, debug-location !419 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %102:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %103:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !421 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %104:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 0 1 2 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %104:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  BotQ.A RemainingLatency 0 + 4c > CritPath 3
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %103:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !421 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 5c > CritPath 3
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %102:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 6c > CritPath 3
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %101:gpr32 = LDRWui %stack.15.len, 0, debug-location !419 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 3
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %100:gpr32 = LDRWui %stack.12.log, 0, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
SU(1):   %100:gpr32 = LDRWui %stack.12.log, 0, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
SU(2):   %101:gpr32 = LDRWui %stack.15.len, 0, debug-location !419 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
SU(3):   %102:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
SU(4):   %103:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !421 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
SU(5):   %104:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59

********** MI Scheduling **********
fftXYZ:%bb.53 for.cond154
  From: %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
    To: Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%107
  Single Issue       : false;
SU(1):   %108:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%108
  Single Issue       : false;
SU(2):   %109:gpr32common = SUBWri %108:gpr32common, 1, 0, debug-location !430; fft3d.c:221:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%108
  Successors:
    SU(3): Data Latency=1 Reg=%109
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %107:gpr32, %109:gpr32common, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%109
    SU(0): Data Latency=4 Reg=%107
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %107:gpr32, %109:gpr32common, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %109:gpr32common = SUBWri %108:gpr32common, 1, 0, debug-location !430; fft3d.c:221:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %108:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.53 ***
SU(1):   %108:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
SU(0):   %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
SU(2):   %109:gpr32common = SUBWri %108:gpr32common, 1, 0, debug-location !430; fft3d.c:221:33
SU(3):   dead $wzr = SUBSWrr %107:gpr32, %109:gpr32common, implicit-def $nzcv, debug-location !432; fft3d.c:221:13

********** MI Scheduling **********
fftXYZ:%bb.54 for.body157
  From: %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%115
  Single Issue       : false;
SU(1):   STRWui %115:gpr32, %stack.10.j, 0, debug-location !436 :: (store 4 into %ir.j); fft3d.c:222:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%115
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %115:gpr32, %stack.10.j, 0, debug-location !436 :: (store 4 into %ir.j); fft3d.c:222:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.54 ***
SU(0):   %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
SU(1):   STRWui %115:gpr32, %stack.10.j, 0, debug-location !436 :: (store 4 into %ir.j); fft3d.c:222:24

********** MI Scheduling **********
fftXYZ:%bb.55 for.cond158
  From: %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
    To: Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%116
  Single Issue       : false;
SU(1):   %117:gpr32 = LDRWui %stack.14.ble, 0, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%117
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %116:gpr32, %117:gpr32, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%117
    SU(0): Data Latency=4 Reg=%116
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %116:gpr32, %117:gpr32, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %117:gpr32 = LDRWui %stack.14.ble, 0, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.55 ***
SU(0):   %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
SU(1):   %117:gpr32 = LDRWui %stack.14.ble, 0, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
SU(2):   dead $wzr = SUBSWrr %116:gpr32, %117:gpr32, implicit-def $nzcv, debug-location !442; fft3d.c:222:17

********** MI Scheduling **********
fftXYZ:%bb.56 for.body160
  From: %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
    To: B %bb.55, debug-location !464; fft3d.c:222:17
 RegionInstrs: 18
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
Live In: %278 
Live Out: %278 
Live Thru: GPR32=1
  LiveReg: %278
  UpdateRegP: SU(13) %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
Top Pressure:
GPR32=1
Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(14): Data Latency=4 Reg=%121
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %122:gpr32 = LDRWui %stack.10.j, 0, debug-location !445 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%122
    SU(8): Data Latency=4 Reg=%122
    SU(17): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %123:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(3): Data Latency=4 Reg=%123
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(2): Data Latency=4 Reg=%123
  Successors:
    SU(8): Data Latency=1 Reg=%124
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %125:gpr32 = LDRWui %stack.11.k, 0, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%125
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %126:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%126
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %127:gpr32 = LDRWui %stack.9.i, 0, debug-location !450 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(12): Data Latency=4 Reg=%127
    SU(7): Data Latency=4 Reg=%127
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(6): Data Latency=4 Reg=%127
    SU(5): Data Latency=4 Reg=%126
    SU(4): Data Latency=4 Reg=%125
  Successors:
    SU(8): Data Latency=1 Reg=%129
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(8):   %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(7): Data Latency=1 Reg=%129
    SU(3): Data Latency=1 Reg=%124
    SU(1): Data Latency=4 Reg=%122
  Successors:
    SU(14): Data Latency=1 Reg=%131
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(9):   %132:gpr32 = LDRWui %stack.13.bls, 0, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%132
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(9): Data Latency=4 Reg=%132
    SU(1): Data Latency=4 Reg=%122
  Successors:
    SU(12): Data Latency=1 Reg=%133
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   %134:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(12): Data Latency=4 Reg=%134
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(12):   %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(10): Data Latency=1 Reg=%133
    SU(11): Data Latency=4 Reg=%134
    SU(6): Data Latency=4 Reg=%127
  Successors:
    SU(13): Data Latency=1 Reg=%136
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(13):   %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(12): Data Latency=1 Reg=%136
  Successors:
    SU(14): Data Latency=4 Reg=%138
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(14):   STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
  # preds left       : 12
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(13): Data Latency=4 Reg=%138
    SU(13): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Data Latency=1 Reg=%131
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Data Latency=4 Reg=%121
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(17): Ord  Latency=0 Memory
    SU(15): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(15):   %139:gpr32common = LDRWui %stack.10.j, 0, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(16): Data Latency=4 Reg=%139
    SU(17): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(16):   %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(15): Data Latency=4 Reg=%139
  Successors:
    SU(17): Data Latency=1 Reg=%140
  Pressure Diff      : 
  Single Issue       : false;
SU(17):   STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%140
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.55, debug-location !464; fft3d.c:222:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42
Bottom Pressure:
GPR32=2
  LiveReg: %140
  UpdateRegP: SU(17) STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42
              to 
  Ready @0c
  BotQ.A TopLatency SU(17) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
Bottom Pressure:
GPR32=2
  LiveReg: %139
  UpdateRegP: SU(16) %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(16) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %139:gpr32common = LDRWui %stack.10.j, 0, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
Bottom Pressure:
GPR32=1
  Ready @5c
  BotQ.A BotLatency SU(15) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
Bottom Pressure:
FPR8=1
GPR32=3
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %138
  UpdateRegP: SU(14) STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
              to GPR32 2
  LiveReg: %121
  UpdateRegP: SU(14) STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
              to GPR32 1
  LiveReg: %131
  UpdateRegP: SU(14) STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
              to 
  Ready @6c
  BotQ.A BotLatency SU(14) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %124
  UpdateRegP: SU(8) %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
              to GPR32 1
  LiveReg: %129
  UpdateRegP: SU(8) %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
              to 
  LiveReg: %122
  UpdateRegP: SU(8) %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
              to GPR32 -1
  UpdateRegP: SU(10) %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
              to 
  Ready @7c
  BotQ.A BotLatency SU(8) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 
Queue BotQ.A: 7 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 9 11 
BotQ.A RemLatency SU(7) 4c
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %126
  UpdateRegP: SU(7) %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
              to GPR32 1
  LiveReg: %127
  UpdateRegP: SU(7) %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
              to 
  UpdateRegP: SU(12) %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
              to GPR32 1
  LiveReg: %125
  UpdateRegP: SU(7) %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(7) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 5 4 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %123
  UpdateRegP: SU(3) %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
              to GPR32 -1
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 4 5 
Queue BotQ.A: 13 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 9 11 
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(0) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(0) %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  Ready @10c
  BotQ.A BotLatency SU(0) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 4 5 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
Bottom Pressure:
GPR32=7
  LiveReg: %136
  UpdateRegP: SU(13) %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @11c
  BotQ.A TopLatency SU(13) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 12 4 5 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 5 6 9 
BotQ.A RemLatency SU(12) 5c
  BotQ.A RemainingLatency 5 + 12c > CritPath 16
Picking from Bot:
  Cand SU(12) ORDER                              
  Cand SU(4) REG-MAX                            
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(11) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %126:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
Bottom Pressure:
GPR32=6
  Ready @12c
  BotQ.A BotLatency SU(5) 12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 4 2 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
BotQ.A RemLatency SU(12) 5c
  BotQ.A RemainingLatency 5 + 13c > CritPath 16
Picking from Bot:
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(12) %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
Bottom Pressure:
GPR32=7
  LiveReg: %134
  UpdateRegP: SU(12) %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
              to 
  LiveReg: %133
  UpdateRegP: SU(12) %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
              to GPR32 -1
  Ready @13c
  BotQ.A TopLatency SU(12) 5c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 
Queue BotQ.A: 2 4 10 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
BotQ.A RemLatency SU(10) 4c
  BotQ.A RemainingLatency 4 + 14c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(10) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
Bottom Pressure:
GPR32=7
  LiveReg: %132
  UpdateRegP: SU(10) %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
              to GPR32 -1
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 9 1 
Queue BotQ.A: 2 4 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
  BotQ.A RemainingLatency 3 + 15c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %125:gpr32 = LDRWui %stack.11.k, 0, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
Bottom Pressure:
GPR32=6
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 9 1 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %123:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
Bottom Pressure:
GPR32=5
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 9 
Queue BotQ.A: 11 6 
Queue TopQ.P: 
Queue TopQ.A: 11 1 9 6 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) %134:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
Bottom Pressure:
GPR32=4
  Ready @17c
  BotQ.A BotLatency SU(11) 15c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 1 9 
Queue TopQ.P: 
Queue TopQ.A: 6 1 9 
  BotQ.A RemainingLatency 0 + 18c > CritPath 16
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %132:gpr32 = LDRWui %stack.13.bls, 0, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
Bottom Pressure:
GPR32=3
  Ready @18c
  BotQ.A BotLatency SU(9) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 1 
Queue TopQ.P: 
Queue TopQ.A: 6 1 
  BotQ.A RemainingLatency 0 + 19c > CritPath 16
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %127:gpr32 = LDRWui %stack.9.i, 0, debug-location !450 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
Bottom Pressure:
GPR32=2
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %122:gpr32 = LDRWui %stack.10.j, 0, debug-location !445 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
Bottom Pressure:
GPR32=1
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 18
  Executed: 21c
  Critical: 18c, 18 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.56 ***
SU(1):   %122:gpr32 = LDRWui %stack.10.j, 0, debug-location !445 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
SU(6):   %127:gpr32 = LDRWui %stack.9.i, 0, debug-location !450 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
SU(9):   %132:gpr32 = LDRWui %stack.13.bls, 0, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
SU(11):   %134:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
SU(2):   %123:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
SU(4):   %125:gpr32 = LDRWui %stack.11.k, 0, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
SU(10):   %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
SU(12):   %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
SU(5):   %126:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
SU(13):   %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
SU(0):   %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
SU(3):   %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
SU(7):   %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
SU(8):   %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
SU(14):   STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
SU(15):   %139:gpr32common = LDRWui %stack.10.j, 0, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
SU(16):   %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
SU(17):   STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42

********** MI Scheduling **********
fftXYZ:%bb.57 for.inc176
  From: %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
    To: B %bb.53, debug-location !468; fft3d.c:221:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%119
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %120:gpr32common = nsw ADDWri %119:gpr32common, 1, 0, debug-location !467; fft3d.c:221:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%119
  Successors:
    SU(2): Data Latency=1 Reg=%120
  Single Issue       : false;
SU(2):   STRWui %120:gpr32common, %stack.9.i, 0, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%120
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.53, debug-location !468; fft3d.c:221:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %120:gpr32common, %stack.9.i, 0, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %120:gpr32common = nsw ADDWri %119:gpr32common, 1, 0, debug-location !467; fft3d.c:221:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.57 ***
SU(0):   %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
SU(1):   %120:gpr32common = nsw ADDWri %119:gpr32common, 1, 0, debug-location !467; fft3d.c:221:39
SU(2):   STRWui %120:gpr32common, %stack.9.i, 0, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39

********** MI Scheduling **********
fftXYZ:%bb.58 for.inc179
  From: %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
    To: B %bb.43, debug-location !473; fft3d.c:210:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%112
  Single Issue       : false;
SU(1):   %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%113
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %114:gpr32 = nsw ADDWrr %113:gpr32, %112:gpr32, debug-location !472; fft3d.c:210:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%113
    SU(0): Data Latency=4 Reg=%112
  Successors:
    SU(3): Data Latency=1 Reg=%114
  Single Issue       : false;
SU(3):   STRWui %114:gpr32, %stack.13.bls, 0, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%114
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.43, debug-location !473; fft3d.c:210:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %114:gpr32, %stack.13.bls, 0, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %114:gpr32 = nsw ADDWrr %113:gpr32, %112:gpr32, debug-location !472; fft3d.c:210:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
SU(1):   %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
SU(2):   %114:gpr32 = nsw ADDWrr %113:gpr32, %112:gpr32, debug-location !472; fft3d.c:210:37
SU(3):   STRWui %114:gpr32, %stack.13.bls, 0, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37

********** MI Scheduling **********
fftXYZ:%bb.59 for.inc182
  From: %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
    To: B %bb.41, debug-location !477; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%80
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %81:gpr32common = nsw ADDWri %80:gpr32common, 1, 0, debug-location !476; fft3d.c:209:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%80
  Successors:
    SU(2): Data Latency=1 Reg=%81
  Single Issue       : false;
SU(2):   STRWui %81:gpr32common, %stack.11.k, 0, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%81
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.41, debug-location !477; fft3d.c:209:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %81:gpr32common, %stack.11.k, 0, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %81:gpr32common = nsw ADDWri %80:gpr32common, 1, 0, debug-location !476; fft3d.c:209:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.59 ***
SU(0):   %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
SU(1):   %81:gpr32common = nsw ADDWri %80:gpr32common, 1, 0, debug-location !476; fft3d.c:209:26
SU(2):   STRWui %81:gpr32common, %stack.11.k, 0, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26

********** INTERVALS **********
NZCV [600r,608r:19)[1040r,1056r:18)[1184r,1200r:5)[1344r,1360r:4)[1616r,1632r:3)[1776r,1792r:0)[2544r,2560r:2)[2688r,2704r:1)[3576r,3584r:17)[3984r,4000r:16)[4128r,4144r:7)[4288r,4304r:6)[5256r,5264r:15)[5664r,5680r:14)[5808r,5824r:13)[5968r,5984r:12)[6256r,6272r:11)[6400r,6416r:8)[7216r,7232r:10)[7360r,7376r:9)  0@1776r 1@2688r 2@2544r 3@1616r 4@1344r 5@1184r 6@4288r 7@4128r 8@6400r 9@7360r 10@7216r 11@6256r 12@5968r 13@5808r 14@5664r 15@5256r 16@3984r 17@3576r 18@1040r 19@600r
W0 [0B,128r:0)[416r,432r:17)[688r,704r:16)[704r,772r:15)[864r,880r:14)[2320r,2432r:1)[3440r,3456r:13)[3664r,3680r:12)[3680r,3748r:11)[3840r,3856r:10)[4736r,4816r:2)[5120r,5136r:9)[5344r,5360r:8)[5360r,5428r:7)[5520r,5536r:6)[6976r,7088r:3)[8096r,8112r:5)[8256r,8272r:4)  0@0B-phi 1@2320r 2@4736r 3@6976r 4@8256r 5@8096r 6@5520r 7@5360r 8@5344r 9@5120r 10@3840r 11@3680r 12@3664r 13@3440r 14@864r 15@704r 16@688r 17@416r
W1 [0B,112r:0)[2336r,2432r:1)[4744r,4816r:2)[6992r,7088r:3)  0@0B-phi 1@2336r 2@4744r 3@6992r
W2 [0B,96r:0)[2352r,2432r:1)[4752r,4816r:2)[7008r,7088r:3)  0@0B-phi 1@2352r 2@4752r 3@7008r
W3 [0B,80r:0)[2368r,2432r:1)[4760r,4816r:2)[7024r,7088r:3)  0@0B-phi 1@2368r 2@4760r 3@7024r
W4 [0B,64r:0)[2384r,2432r:1)[4768r,4816r:2)[7040r,7088r:3)  0@0B-phi 1@2384r 2@4768r 3@7040r
W5 [0B,48r:0)[2400r,2432r:1)[4784r,4816r:2)[7056r,7088r:3)  0@0B-phi 1@2400r 2@4784r 3@7056r
W6 [0B,32r:0)[2416r,2432r:1)[4800r,4816r:2)[7072r,7088r:3)  0@0B-phi 1@2416r 2@4800r 3@7072r
W7 [0B,16r:0)  0@0B-phi
%0 [336r,976r:0)  0@336r weight:0.000000e+00
%1 [344r,7984B:0)  0@344r weight:0.000000e+00
%3 [128r,144r:0)  0@128r weight:0.000000e+00
%4 [112r,344r:0)  0@112r weight:0.000000e+00
%5 [96r,336r:0)  0@96r weight:0.000000e+00
%6 [80r,192r:0)  0@80r weight:0.000000e+00
%7 [64r,208r:0)  0@64r weight:0.000000e+00
%8 [48r,224r:0)  0@48r weight:0.000000e+00
%9 [32r,324r:0)  0@32r weight:0.000000e+00
%10 [16r,328r:0)  0@16r weight:0.000000e+00
%13 [304r,8160r:0)  0@304r weight:0.000000e+00
%14 [320r,352r:0)  0@320r weight:0.000000e+00
%16 [512r,688r:0)  0@512r weight:0.000000e+00
%17 [528r,596r:0)  0@528r weight:0.000000e+00
%18 [596r,608r:0)  0@596r weight:0.000000e+00
%19 [560r,7984B:0)  0@560r weight:0.000000e+00
%21 [592r,608r:0)  0@592r weight:0.000000e+00
%22 [608r,640r:0)  0@608r weight:0.000000e+00
%23 [640r,656r:0)  0@640r weight:0.000000e+00
%24 [772r,776r:0)  0@772r weight:0.000000e+00
%26 [768r,784r:0)  0@768r weight:0.000000e+00
%29 [1008r,1040r:0)  0@1008r weight:0.000000e+00
%30 [1024r,1040r:0)  0@1024r weight:0.000000e+00
%33 [3344r,3360r:0)  0@3344r weight:0.000000e+00
%35 [3504r,3664r:0)  0@3504r weight:0.000000e+00
%36 [3520r,3572r:0)  0@3520r weight:0.000000e+00
%37 [3572r,3584r:0)  0@3572r weight:0.000000e+00
%40 [3568r,3584r:0)  0@3568r weight:0.000000e+00
%41 [3584r,3616r:0)  0@3584r weight:0.000000e+00
%42 [3616r,3632r:0)  0@3616r weight:0.000000e+00
%43 [3748r,3752r:0)  0@3748r weight:0.000000e+00
%45 [3744r,3760r:0)  0@3744r weight:0.000000e+00
%48 [3952r,3984r:0)  0@3952r weight:0.000000e+00
%49 [3968r,3984r:0)  0@3968r weight:0.000000e+00
%52 [5024r,5040r:0)  0@5024r weight:0.000000e+00
%54 [5184r,5344r:0)  0@5184r weight:0.000000e+00
%55 [5200r,5252r:0)  0@5200r weight:0.000000e+00
%56 [5252r,5264r:0)  0@5252r weight:0.000000e+00
%59 [5248r,5264r:0)  0@5248r weight:0.000000e+00
%60 [5264r,5296r:0)  0@5264r weight:0.000000e+00
%61 [5296r,5312r:0)  0@5296r weight:0.000000e+00
%62 [5428r,5432r:0)  0@5428r weight:0.000000e+00
%64 [5424r,5440r:0)  0@5424r weight:0.000000e+00
%67 [5632r,5664r:0)  0@5632r weight:0.000000e+00
%68 [5648r,5664r:0)  0@5648r weight:0.000000e+00
%71 [8000r,8016r:0)  0@8000r weight:0.000000e+00
%74 [8160r,8176r:0)  0@8160r weight:0.000000e+00
%77 [5776r,5808r:0)  0@5776r weight:0.000000e+00
%78 [5792r,5808r:0)  0@5792r weight:0.000000e+00
%80 [7920r,7936r:0)  0@7920r weight:0.000000e+00
%81 [7936r,7952r:0)  0@7936r weight:0.000000e+00
%82 [5872r,5956r:0)  0@5872r weight:0.000000e+00
%84 [5888r,5956r:0)  0@5888r weight:0.000000e+00
%85 [5956r,5960r:0)  0@5956r weight:0.000000e+00
%86 [5960r,5976r:0)  0@5960r weight:0.000000e+00
%87 [5952r,5968r:0)  0@5952r weight:0.000000e+00
%89 [6032r,6048r:0)  0@6032r weight:0.000000e+00
%90 [6048r,6064r:0)  0@6048r weight:0.000000e+00
%91 [6096r,6128r:0)  0@6096r weight:0.000000e+00
%92 [6112r,6128r:0)  0@6112r weight:0.000000e+00
%93 [6128r,6144r:0)  0@6128r weight:0.000000e+00
%94 [6144r,6160r:0)  0@6144r weight:0.000000e+00
%96 [6224r,6256r:0)  0@6224r weight:0.000000e+00
%97 [6240r,6256r:0)  0@6240r weight:0.000000e+00
%99 [6864r,6976r:0)  0@6864r weight:0.000000e+00
%100 [6880r,6992r:0)  0@6880r weight:0.000000e+00
%101 [6896r,7008r:0)  0@6896r weight:0.000000e+00
%102 [6912r,7024r:0)  0@6912r weight:0.000000e+00
%103 [6928r,7040r:0)  0@6928r weight:0.000000e+00
%104 [6944r,7072r:0)  0@6944r weight:0.000000e+00
%107 [7192r,7216r:0)  0@7192r weight:0.000000e+00
%108 [7184r,7200r:0)  0@7184r weight:0.000000e+00
%109 [7200r,7216r:0)  0@7200r weight:0.000000e+00
%112 [7824r,7856r:0)  0@7824r weight:0.000000e+00
%113 [7840r,7856r:0)  0@7840r weight:0.000000e+00
%114 [7856r,7872r:0)  0@7856r weight:0.000000e+00
%115 [7280r,7296r:0)  0@7280r weight:0.000000e+00
%116 [7328r,7360r:0)  0@7328r weight:0.000000e+00
%117 [7344r,7360r:0)  0@7344r weight:0.000000e+00
%119 [7744r,7760r:0)  0@7744r weight:0.000000e+00
%120 [7760r,7776r:0)  0@7760r weight:0.000000e+00
%121 [7656r,7688r:0)  0@7656r weight:0.000000e+00
%122 [7440r,7680r:0)  0@7440r weight:0.000000e+00
%123 [7608r,7664r:0)  0@7608r weight:0.000000e+00
%124 [7664r,7680r:0)  0@7664r weight:0.000000e+00
%125 [7616r,7672r:0)  0@7616r weight:0.000000e+00
%126 [7640r,7672r:0)  0@7640r weight:0.000000e+00
%127 [7520r,7672r:0)  0@7520r weight:0.000000e+00
%129 [7672r,7680r:0)  0@7672r weight:0.000000e+00
%131 [7680r,7688r:0)  0@7680r weight:0.000000e+00
%132 [7568r,7624r:0)  0@7568r weight:0.000000e+00
%133 [7624r,7632r:0)  0@7624r weight:0.000000e+00
%134 [7600r,7632r:0)  0@7600r weight:0.000000e+00
%136 [7632r,7648r:0)  0@7632r weight:0.000000e+00
%138 [7648r,7688r:0)  0@7648r weight:0.000000e+00
%139 [7696r,7704r:0)  0@7696r weight:0.000000e+00
%140 [7704r,7712r:0)  0@7704r weight:0.000000e+00
%141 [6320r,6336r:0)  0@6320r weight:0.000000e+00
%142 [6368r,6400r:0)  0@6368r weight:0.000000e+00
%143 [6384r,6400r:0)  0@6384r weight:0.000000e+00
%145 [6784r,6800r:0)  0@6784r weight:0.000000e+00
%146 [6800r,6816r:0)  0@6800r weight:0.000000e+00
%147 [6600r,6720r:0)  0@6600r weight:0.000000e+00
%149 [6664r,6704r:0)  0@6664r weight:0.000000e+00
%150 [6704r,6724r:0)  0@6704r weight:0.000000e+00
%151 [6688r,6724r:0)  0@6688r weight:0.000000e+00
%152 [6544r,6724r:0)  0@6544r weight:0.000000e+00
%155 [6724r,6728r:0)  0@6724r weight:0.000000e+00
%157 [6592r,6656r:0)  0@6592r weight:0.000000e+00
%159 [6648r,6656r:0)  0@6648r weight:0.000000e+00
%160 [6656r,6680r:0)  0@6656r weight:0.000000e+00
%161 [6640r,6672r:0)  0@6640r weight:0.000000e+00
%162 [6672r,6680r:0)  0@6672r weight:0.000000e+00
%163 [6680r,6696r:0)  0@6680r weight:0.000000e+00
%164 [6696r,6728r:0)  0@6696r weight:0.000000e+00
%165 [6720r,6736r:0)  0@6720r weight:0.000000e+00
%167 [4096r,4128r:0)  0@4096r weight:0.000000e+00
%168 [4112r,4128r:0)  0@4112r weight:0.000000e+00
%170 [4944r,4960r:0)  0@4944r weight:0.000000e+00
%171 [4960r,4976r:0)  0@4960r weight:0.000000e+00
%172 [4192r,4276r:0)  0@4192r weight:0.000000e+00
%174 [4208r,4276r:0)  0@4208r weight:0.000000e+00
%175 [4276r,4280r:0)  0@4276r weight:0.000000e+00
%176 [4280r,4296r:0)  0@4280r weight:0.000000e+00
%177 [4272r,4288r:0)  0@4272r weight:0.000000e+00
%179 [4352r,4368r:0)  0@4352r weight:0.000000e+00
%180 [4368r,4384r:0)  0@4368r weight:0.000000e+00
%181 [4416r,4648r:0)  0@4416r weight:0.000000e+00
%182 [4520r,4648r:0)  0@4520r weight:0.000000e+00
%183 [4648r,4704r:0)  0@4648r weight:0.000000e+00
%184 [4704r,4752r:0)  0@4704r weight:0.000000e+00
%185 [4496r,4736r:0)  0@4496r weight:0.000000e+00
%186 [4512r,4744r:0)  0@4512r weight:0.000000e+00
%187 [4656r,4760r:0)  0@4656r weight:0.000000e+00
%188 [4680r,4720r:0)  0@4680r weight:0.000000e+00
%189 [4720r,4768r:0)  0@4720r weight:0.000000e+00
%190 [4576r,4672r:0)  0@4576r weight:0.000000e+00
%191 [4592r,4664r:0)  0@4592r weight:0.000000e+00
%193 [4664r,4672r:0)  0@4664r weight:0.000000e+00
%194 [4672r,4688r:0)  0@4672r weight:0.000000e+00
%195 [4640r,4688r:0)  0@4640r weight:0.000000e+00
%196 [4688r,4784r:0)  0@4688r weight:0.000000e+00
%197 [4696r,4800r:0)  0@4696r weight:0.000000e+00
%199 [4848r,4880r:0)  0@4848r weight:0.000000e+00
%200 [4864r,4880r:0)  0@4864r weight:0.000000e+00
%201 [4880r,4896r:0)  0@4880r weight:0.000000e+00
%203 [1152r,1184r:0)  0@1152r weight:0.000000e+00
%204 [1168r,1184r:0)  0@1168r weight:0.000000e+00
%206 [3264r,3280r:0)  0@3264r weight:0.000000e+00
%207 [3280r,3296r:0)  0@3280r weight:0.000000e+00
%208 [1248r,1332r:0)  0@1248r weight:0.000000e+00
%210 [1264r,1332r:0)  0@1264r weight:0.000000e+00
%211 [1332r,1336r:0)  0@1332r weight:0.000000e+00
%212 [1336r,1352r:0)  0@1336r weight:0.000000e+00
%213 [1328r,1344r:0)  0@1328r weight:0.000000e+00
%215 [1408r,1424r:0)  0@1408r weight:0.000000e+00
%216 [1424r,1440r:0)  0@1424r weight:0.000000e+00
%217 [1472r,1504r:0)  0@1472r weight:0.000000e+00
%218 [1488r,1552r:0)  0@1488r weight:0.000000e+00
%219 [1504r,1520r:0)  0@1504r weight:0.000000e+00
%220 [1520r,1536r:0)  0@1520r weight:0.000000e+00
%221 [1584r,1616r:0)  0@1584r weight:0.000000e+00
%222 [1600r,1616r:0)  0@1600r weight:0.000000e+00
%224 [2208r,2320r:0)  0@2208r weight:0.000000e+00
%225 [2224r,2336r:0)  0@2224r weight:0.000000e+00
%226 [2240r,2352r:0)  0@2240r weight:0.000000e+00
%227 [2256r,2368r:0)  0@2256r weight:0.000000e+00
%228 [2272r,2384r:0)  0@2272r weight:0.000000e+00
%229 [2288r,2416r:0)  0@2288r weight:0.000000e+00
%231 [2464r,2480r:0)  0@2464r weight:0.000000e+00
%232 [2512r,2544r:0)  0@2512r weight:0.000000e+00
%233 [2528r,2544r:0)  0@2528r weight:0.000000e+00
%236 [3168r,3200r:0)  0@3168r weight:0.000000e+00
%237 [3184r,3200r:0)  0@3184r weight:0.000000e+00
%238 [3200r,3216r:0)  0@3200r weight:0.000000e+00
%240 [2656r,2688r:0)  0@2656r weight:0.000000e+00
%241 [2672r,2688r:0)  0@2672r weight:0.000000e+00
%243 [3088r,3104r:0)  0@3088r weight:0.000000e+00
%244 [3104r,3120r:0)  0@3104r weight:0.000000e+00
%245 [2952r,3000r:0)  0@2952r weight:0.000000e+00
%246 [2960r,2992r:0)  0@2960r weight:0.000000e+00
%248 [2992r,3000r:0)  0@2992r weight:0.000000e+00
%249 [3000r,3016r:0)  0@3000r weight:0.000000e+00
%250 [2816r,3008r:0)  0@2816r weight:0.000000e+00
%252 [3008r,3016r:0)  0@3008r weight:0.000000e+00
%253 [3016r,3024r:0)  0@3016r weight:0.000000e+00
%254 [2880r,3024r:0)  0@2880r weight:0.000000e+00
%256 [2912r,2968r:0)  0@2912r weight:0.000000e+00
%257 [2968r,2976r:0)  0@2968r weight:0.000000e+00
%258 [2944r,2976r:0)  0@2944r weight:0.000000e+00
%260 [2976r,2984r:0)  0@2976r weight:0.000000e+00
%262 [2984r,3024r:0)  0@2984r weight:0.000000e+00
%263 [3032r,3040r:0)  0@3032r weight:0.000000e+00
%264 [3040r,3048r:0)  0@3040r weight:0.000000e+00
%266 [1728r,1776r:0)  0@1728r weight:0.000000e+00
%267 [1744r,1776r:0)  0@1744r weight:0.000000e+00
%268 [1760r,2064r:0)[2128B,2144r:0)  0@1760r weight:0.000000e+00
%270 [2144r,2160r:0)  0@2144r weight:0.000000e+00
%271 [1960r,2064r:0)  0@1960r weight:0.000000e+00
%272 [2064r,2084r:0)  0@2064r weight:0.000000e+00
%273 [2048r,2084r:0)  0@2048r weight:0.000000e+00
%274 [2024r,2084r:0)  0@2024r weight:0.000000e+00
%277 [2084r,2088r:0)  0@2084r weight:0.000000e+00
%278 [960r,7984B:0)  0@960r weight:0.000000e+00
%279 [1956r,2016r:0)  0@1956r weight:0.000000e+00
%280 [1952r,2008r:0)  0@1952r weight:0.000000e+00
%281 [976r,7984B:0)  0@976r weight:0.000000e+00
%282 [2008r,2016r:0)  0@2008r weight:0.000000e+00
%283 [2016r,2040r:0)  0@2016r weight:0.000000e+00
%284 [2000r,2032r:0)  0@2000r weight:0.000000e+00
%285 [2032r,2040r:0)  0@2032r weight:0.000000e+00
%286 [2040r,2056r:0)  0@2040r weight:0.000000e+00
%287 [2056r,2088r:0)  0@2056r weight:0.000000e+00
%288 [2080r,2096r:0)  0@2080r weight:0.000000e+00
RegMasks: 432r 704r 880r 2432r 3456r 3680r 3856r 4816r 5136r 5360r 5536r 7088r 8112r 8272r
********** MACHINEINSTRS **********
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=8, align=8, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=8, align=8, at location [SP]
  fi#8: dead
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
Function Live Ins: $w0 in %3, $w1 in %4, $w2 in %5, $w3 in %6, $x4 in %7, $x5 in %8, $x6 in %9, $x7 in %10

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $w0, $w1, $w2, $w3, $x4, $x5, $x6, $x7
16B	  %10:gpr64 = COPY $x7
32B	  %9:gpr64 = COPY $x6
48B	  %8:gpr64 = COPY $x5
64B	  %7:gpr64 = COPY $x4
80B	  %6:gpr32 = COPY $w3
96B	  %5:gpr32 = COPY $w2
112B	  %4:gpr32common = COPY $w1
128B	  %3:gpr32 = COPY $w0
144B	  STRWui %3:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
160B	  STRWui %4:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
176B	  STRWui %5:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
192B	  STRWui %6:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
208B	  STRXui %7:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
224B	  STRXui %8:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
304B	  %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
320B	  %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
324B	  STRXui %9:gpr64, %stack.6.exp1.addr, 0 :: (store 8 into %ir.exp1.addr)
328B	  STRXui %10:gpr64, %stack.7.exp2.addr, 0 :: (store 8 into %ir.exp2.addr)
336B	  undef %0.sub_32:gpr64 = ORRWrs $wzr, %5:gpr32, 0, debug-location !60; fft3d.c:142:62
344B	  undef %1.sub_32:gpr64common = nsw ADDWri %4:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
352B	  CBZW %14:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
360B	  B %bb.1, debug-location !90; fft3d.c:151:9

368B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

384B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9
416B	  $w0 = MOVi32imm 3, debug-location !91; fft3d.c:152:9
432B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9
448B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9

464B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)

512B	  %16:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
528B	  %17:gpr32 = MOVi32imm 8192
560B	  %19:gpr64common = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
592B	  %21:gpr32 = MOVi32imm 32
596B	  %18:gpr32common = SDIVWr %17:gpr32, %16:gpr32, debug-location !93; fft3d.c:154:26
600B	  dead $wzr = SUBSWri %18:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
608B	  %22:gpr32common = CSELWr %21:gpr32, %18:gpr32common, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
624B	  STRWui %22:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
640B	  %23:gpr32common = nsw ADDWri %22:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
656B	  STRWui %23:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
672B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
688B	  $w0 = COPY %16:gpr32, debug-location !104; fft3d.c:158:11
704B	  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !104; fft3d.c:158:11
720B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
768B	  %26:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
772B	  %24:gpr32 = COPY $w0, debug-location !104; fft3d.c:158:11
776B	  STRWui %24:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
784B	  CBZW %26:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
800B	  B %bb.3, debug-location !108; fft3d.c:159:9

816B	bb.3.if.then7:
	; predecessors: %bb.2
	  successors: %bb.4(0x80000000); %bb.4(100.00%)

832B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9
864B	  $w0 = MOVi32imm 7, debug-location !109; fft3d.c:160:9
880B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9
896B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9

912B	bb.4.if.end8:
	; predecessors: %bb.2, %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

944B	  STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
960B	  %278:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
976B	  %281:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

992B	bb.5.for.cond:
	; predecessors: %bb.4, %bb.23
	  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)

1008B	  %29:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
1024B	  %30:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
1040B	  dead $wzr = SUBSWrr %29:gpr32, %30:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
1056B	  Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
1072B	  B %bb.6, debug-location !117; fft3d.c:161:5

1088B	bb.6.for.body:
	; predecessors: %bb.5
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

1120B	  STRWui $wzr, %stack.13.bls, 0, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

1136B	bb.7.for.cond10:
	; predecessors: %bb.6, %bb.22
	  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)

1152B	  %203:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
1168B	  %204:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
1184B	  dead $wzr = SUBSWrr %203:gpr32, %204:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
1200B	  Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
1216B	  B %bb.8, debug-location !126; fft3d.c:162:9

1232B	bb.8.for.body12:
	; predecessors: %bb.7
	  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)

1248B	  %208:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
1264B	  %210:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
1328B	  %213:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
1332B	  %211:gpr32common = nsw ADDWrr %208:gpr32, %210:gpr32, debug-location !130; fft3d.c:163:23
1336B	  %212:gpr32common = SUBWri %211:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
1344B	  dead $wzr = SUBSWrr %212:gpr32common, %213:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
1352B	  STRWui %212:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
1360B	  Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
1376B	  B %bb.9, debug-location !137; fft3d.c:164:17

1392B	bb.9.if.then15:
	; predecessors: %bb.8
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

1408B	  %215:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
1424B	  %216:gpr32common = SUBWri %215:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
1440B	  STRWui %216:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

1456B	bb.10.if.end17:
	; predecessors: %bb.8, %bb.9
	  successors: %bb.11(0x80000000); %bb.11(100.00%)

1472B	  %217:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
1488B	  %218:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
1504B	  %219:gpr32common = nsw SUBWrr %217:gpr32, %218:gpr32, debug-location !144; fft3d.c:166:23
1520B	  %220:gpr32common = nsw ADDWri %219:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
1536B	  STRWui %220:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
1552B	  STRWui %218:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

1568B	bb.11.for.cond20:
	; predecessors: %bb.10, %bb.15
	  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)

1584B	  %221:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
1600B	  %222:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
1616B	  dead $wzr = SUBSWrr %221:gpr32, %222:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
1632B	  Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
1648B	  B %bb.12, debug-location !155; fft3d.c:167:13

1664B	bb.12.for.body22:
	; predecessors: %bb.11
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

1696B	  STRWui $wzr, %stack.9.i, 0, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

1712B	bb.13.for.cond23:
	; predecessors: %bb.12, %bb.14
	  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)

1728B	  %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
1744B	  %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
1760B	  %268:gpr32common = LDRWui %stack.10.j, 0, debug-location !164 :: (dereferenceable load 4 from %ir.j); fft3d.c:0
1776B	  dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
1792B	  Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17
1808B	  B %bb.14, debug-location !165; fft3d.c:168:17

1824B	bb.14.for.body25:
	; predecessors: %bb.13
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

1952B	  %280:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
1956B	  %279:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
1960B	  %271:gpr32 = LDRWui %stack.13.bls, 0, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
2000B	  %284:gpr64 = LDRSWui %stack.10.j, 0, debug-location !176 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:54
2008B	  %282:gpr64 = nsw MADDXrrr %280:gpr64, %281:gpr64, $xzr, debug-location !174; fft3d.c:169:49
2016B	  %283:gpr64 = ADDXrs %279:gpr64, %282:gpr64, 4, debug-location !174; fft3d.c:169:49
2024B	  %274:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
2032B	  %285:gpr64 = nsw MADDXrrr %284:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
2040B	  %286:gpr64common = ADDXrs %283:gpr64, %285:gpr64, 4, debug-location !174; fft3d.c:169:49
2048B	  %273:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
2056B	  %287:fpr128 = LDRQroX %286:gpr64common, %274:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
2064B	  %272:gpr32 = nsw SUBWrr %268:gpr32common, %271:gpr32, debug-location !168; fft3d.c:169:29
2080B	  %288:gpr32common = nsw ADDWri %274.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
2084B	  %277:gpr32 = MADDWrrr %273:gpr32, %274.sub_32:gpr64common, %272:gpr32, debug-location !172; fft3d.c:169:35
2088B	  STRQroW %287:fpr128, %278:gpr64common, %277:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
2096B	  STRWui %288:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
2112B	  B %bb.13, debug-location !179; fft3d.c:168:17

2128B	bb.15.for.inc35:
	; predecessors: %bb.13
	  successors: %bb.11(0x80000000); %bb.11(100.00%)

2144B	  %270:gpr32common = nsw ADDWri %268:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
2160B	  STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
2176B	  B %bb.11, debug-location !183; fft3d.c:167:13

2192B	bb.16.for.end37:
	; predecessors: %bb.11
	  successors: %bb.17(0x80000000); %bb.17(100.00%)

2208B	  %224:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
2224B	  %225:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
2240B	  %226:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
2256B	  %227:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
2272B	  %228:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
2288B	  %229:gpr64 = LDRXui %stack.6.exp1.addr, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
2304B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
2320B	  $w0 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
2336B	  $w1 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
2352B	  $w2 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
2368B	  $w3 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
2384B	  $w4 = COPY %228:gpr32, debug-location !192; fft3d.c:172:13
2400B	  $x5 = COPY %278:gpr64common, debug-location !192; fft3d.c:172:13
2416B	  $x6 = COPY %229:gpr64, debug-location !192; fft3d.c:172:13
2432B	  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
2448B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
2464B	  %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
2480B	  STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

2496B	bb.17.for.cond38:
	; predecessors: %bb.16, %bb.21
	  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)

2512B	  %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
2528B	  %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
2544B	  dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
2560B	  Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
2576B	  B %bb.18, debug-location !201; fft3d.c:173:13

2592B	bb.18.for.body40:
	; predecessors: %bb.17
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

2624B	  STRWui $wzr, %stack.9.i, 0, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

2640B	bb.19.for.cond41:
	; predecessors: %bb.18, %bb.20
	  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)

2656B	  %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
2672B	  %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
2688B	  dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
2704B	  Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
2720B	  B %bb.20, debug-location !210; fft3d.c:174:17

2736B	bb.20.for.body43:
	; predecessors: %bb.19
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

2816B	  %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
2880B	  %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
2912B	  %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
2944B	  %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
2952B	  %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
2960B	  %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
2968B	  %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
2976B	  %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
2984B	  %262:fpr128 = LDRQroW %278:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
2992B	  %248:gpr64 = nsw MADDXrrr %246:gpr64, %281:gpr64, $xzr, debug-location !211; fft3d.c:175:21
3000B	  %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
3008B	  %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
3016B	  %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
3024B	  STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
3032B	  %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
3040B	  %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
3048B	  STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
3056B	  B %bb.19, debug-location !225; fft3d.c:174:17

3072B	bb.21.for.inc58:
	; predecessors: %bb.19
	  successors: %bb.17(0x80000000); %bb.17(100.00%)

3088B	  %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
3104B	  %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
3120B	  STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
3136B	  B %bb.17, debug-location !229; fft3d.c:173:13

3152B	bb.22.for.inc61:
	; predecessors: %bb.17
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

3168B	  %236:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
3184B	  %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
3200B	  %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
3216B	  STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
3232B	  B %bb.7, debug-location !234; fft3d.c:162:9

3248B	bb.23.for.inc64:
	; predecessors: %bb.7
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

3264B	  %206:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
3280B	  %207:gpr32common = nsw ADDWri %206:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
3296B	  STRWui %207:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
3312B	  B %bb.5, debug-location !238; fft3d.c:161:5

3328B	bb.24.for.end66:
	; predecessors: %bb.5
	  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)

3344B	  %33:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
3360B	  CBZW %33:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
3376B	  B %bb.25, debug-location !243; fft3d.c:180:9

3392B	bb.25.if.then68:
	; predecessors: %bb.24
	  successors: %bb.26(0x80000000); %bb.26(100.00%)

3408B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9
3440B	  $w0 = MOVi32imm 7, debug-location !244; fft3d.c:181:9
3456B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9
3472B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9

3488B	bb.26.if.end69:
	; predecessors: %bb.24, %bb.25
	  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

3504B	  %35:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
3520B	  %36:gpr32 = MOVi32imm 8192
3568B	  %40:gpr32 = MOVi32imm 32
3572B	  %37:gpr32common = SDIVWr %36:gpr32, %35:gpr32, debug-location !246; fft3d.c:183:26
3576B	  dead $wzr = SUBSWri %37:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
3584B	  %41:gpr32common = CSELWr %40:gpr32, %37:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
3600B	  STRWui %41:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
3616B	  %42:gpr32common = nsw ADDWri %41:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
3632B	  STRWui %42:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
3648B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
3664B	  $w0 = COPY %35:gpr32, debug-location !256; fft3d.c:187:11
3680B	  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !256; fft3d.c:187:11
3696B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
3744B	  %45:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
3748B	  %43:gpr32 = COPY $w0, debug-location !256; fft3d.c:187:11
3752B	  STRWui %43:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
3760B	  CBZW %45:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
3776B	  B %bb.27, debug-location !260; fft3d.c:188:9

3792B	bb.27.if.then77:
	; predecessors: %bb.26
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

3808B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9
3840B	  $w0 = MOVi32imm 8, debug-location !261; fft3d.c:189:9
3856B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9
3872B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9

3888B	bb.28.if.end78:
	; predecessors: %bb.26, %bb.27
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

3920B	  STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12

3936B	bb.29.for.cond79:
	; predecessors: %bb.28, %bb.35
	  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)

3952B	  %48:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
3968B	  %49:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
3984B	  dead $wzr = SUBSWrr %48:gpr32, %49:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
4000B	  Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
4016B	  B %bb.30, debug-location !269; fft3d.c:190:5

4032B	bb.30.for.body81:
	; predecessors: %bb.29
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

4064B	  STRWui $wzr, %stack.13.bls, 0, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

4080B	bb.31.for.cond82:
	; predecessors: %bb.30, %bb.34
	  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)

4096B	  %167:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
4112B	  %168:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
4128B	  dead $wzr = SUBSWrr %167:gpr32, %168:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
4144B	  Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
4160B	  B %bb.32, debug-location !278; fft3d.c:191:9

4176B	bb.32.for.body84:
	; predecessors: %bb.31
	  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)

4192B	  %172:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
4208B	  %174:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
4272B	  %177:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
4276B	  %175:gpr32common = nsw ADDWrr %172:gpr32, %174:gpr32, debug-location !282; fft3d.c:192:23
4280B	  %176:gpr32common = SUBWri %175:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
4288B	  dead $wzr = SUBSWrr %176:gpr32common, %177:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
4296B	  STRWui %176:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
4304B	  Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
4320B	  B %bb.33, debug-location !289; fft3d.c:193:17

4336B	bb.33.if.then88:
	; predecessors: %bb.32
	  successors: %bb.34(0x80000000); %bb.34(100.00%)

4352B	  %179:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
4368B	  %180:gpr32common = SUBWri %179:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
4384B	  STRWui %180:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

4400B	bb.34.if.end90:
	; predecessors: %bb.32, %bb.33
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

4416B	  %181:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
4496B	  %185:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
4512B	  %186:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
4520B	  %182:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
4576B	  %190:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
4592B	  %191:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
4640B	  %195:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
4648B	  %183:gpr32common = nsw SUBWrr %181:gpr32, %182:gpr32, debug-location !296; fft3d.c:195:23
4656B	  %187:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
4664B	  %193:gpr64 = nsw MADDXrrr %191:gpr64, %281:gpr64, $xzr, debug-location !305; fft3d.c:196:55
4672B	  %194:gpr64 = ADDXrs %190:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
4680B	  %188:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
4688B	  %196:gpr64 = ADDXrs %194:gpr64, %195:gpr64, 4, debug-location !305; fft3d.c:196:55
4696B	  %197:gpr64 = LDRXui %stack.7.exp2.addr, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
4704B	  %184:gpr32common = nsw ADDWri %183:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
4712B	  STRWui %184:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
4720B	  %189:gpr32sp = nsw ADDWri %188:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
4728B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
4736B	  $w0 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
4744B	  $w1 = COPY %186:gpr32, debug-location !310; fft3d.c:196:13
4752B	  $w2 = COPY %184:gpr32common, debug-location !310; fft3d.c:196:13
4760B	  $w3 = COPY %187:gpr32, debug-location !310; fft3d.c:196:13
4768B	  $w4 = COPY %189:gpr32sp, debug-location !310; fft3d.c:196:13
4784B	  $x5 = COPY %196:gpr64, debug-location !310; fft3d.c:196:13
4800B	  $x6 = COPY %197:gpr64, debug-location !310; fft3d.c:196:13
4816B	  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
4832B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
4848B	  %199:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
4864B	  %200:gpr32 = LDRWui %stack.13.bls, 0, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
4880B	  %201:gpr32 = nsw ADDWrr %200:gpr32, %199:gpr32, debug-location !312; fft3d.c:191:37
4896B	  STRWui %201:gpr32, %stack.13.bls, 0, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
4912B	  B %bb.31, debug-location !313; fft3d.c:191:9

4928B	bb.35.for.inc102:
	; predecessors: %bb.31
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

4944B	  %170:gpr32common = LDRWui %stack.11.k, 0, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
4960B	  %171:gpr32common = nsw ADDWri %170:gpr32common, 1, 0, debug-location !316; fft3d.c:190:26
4976B	  STRWui %171:gpr32common, %stack.11.k, 0, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
4992B	  B %bb.29, debug-location !317; fft3d.c:190:5

5008B	bb.36.for.end104:
	; predecessors: %bb.29
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

5024B	  %52:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !320 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
5040B	  CBZW %52:gpr32, %bb.38, debug-location !322; fft3d.c:199:9
5056B	  B %bb.37, debug-location !322; fft3d.c:199:9

5072B	bb.37.if.then106:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

5088B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; fft3d.c:200:9
5120B	  $w0 = MOVi32imm 8, debug-location !323; fft3d.c:200:9
5136B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !323; fft3d.c:200:9
5152B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !323; fft3d.c:200:9

5168B	bb.38.if.end107:
	; predecessors: %bb.36, %bb.37
	  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)

5184B	  %54:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
5200B	  %55:gpr32 = MOVi32imm 8192
5248B	  %59:gpr32 = MOVi32imm 32
5252B	  %56:gpr32common = SDIVWr %55:gpr32, %54:gpr32, debug-location !325; fft3d.c:202:26
5256B	  dead $wzr = SUBSWri %56:gpr32common, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
5264B	  %60:gpr32common = CSELWr %59:gpr32, %56:gpr32common, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
5280B	  STRWui %60:gpr32common, %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
5296B	  %61:gpr32common = nsw ADDWri %60:gpr32common, 1, 0, debug-location !332; fft3d.c:205:21
5312B	  STRWui %61:gpr32common, %stack.16.blkp, 0, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
5328B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
5344B	  $w0 = COPY %54:gpr32, debug-location !335; fft3d.c:206:11
5360B	  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !335; fft3d.c:206:11
5376B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !335; fft3d.c:206:11
5424B	  %64:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
5428B	  %62:gpr32 = COPY $w0, debug-location !335; fft3d.c:206:11
5432B	  STRWui %62:gpr32, %stack.12.log, 0, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
5440B	  CBZW %64:gpr32, %bb.40, debug-location !339; fft3d.c:207:9
5456B	  B %bb.39, debug-location !339; fft3d.c:207:9

5472B	bb.39.if.then115:
	; predecessors: %bb.38
	  successors: %bb.40(0x80000000); %bb.40(100.00%)

5488B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !340; fft3d.c:208:9
5520B	  $w0 = MOVi32imm 9, debug-location !340; fft3d.c:208:9
5536B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !340; fft3d.c:208:9
5552B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !340; fft3d.c:208:9

5568B	bb.40.if.end116:
	; predecessors: %bb.38, %bb.39
	  successors: %bb.41(0x80000000); %bb.41(100.00%)

5600B	  STRWui $wzr, %stack.11.k, 0, debug-location !341 :: (store 4 into %ir.k); fft3d.c:209:12

5616B	bb.41.for.cond117:
	; predecessors: %bb.40, %bb.59
	  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)

5632B	  %67:gpr32 = LDRWui %stack.11.k, 0, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
5648B	  %68:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
5664B	  dead $wzr = SUBSWrr %67:gpr32, %68:gpr32, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
5680B	  Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5
5696B	  B %bb.42, debug-location !348; fft3d.c:209:5

5712B	bb.42.for.body119:
	; predecessors: %bb.41
	  successors: %bb.43(0x80000000); %bb.43(100.00%)

5744B	  STRWui $wzr, %stack.13.bls, 0, debug-location !349 :: (store 4 into %ir.bls); fft3d.c:210:18

5760B	bb.43.for.cond120:
	; predecessors: %bb.42, %bb.58
	  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)

5776B	  %77:gpr32 = LDRWui %stack.13.bls, 0, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
5792B	  %78:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
5808B	  dead $wzr = SUBSWrr %77:gpr32, %78:gpr32, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
5824B	  Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9
5840B	  B %bb.44, debug-location !357; fft3d.c:210:9

5856B	bb.44.for.body122:
	; predecessors: %bb.43
	  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)

5872B	  %82:gpr32 = LDRWui %stack.13.bls, 0, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
5888B	  %84:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
5952B	  %87:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
5956B	  %85:gpr32common = nsw ADDWrr %82:gpr32, %84:gpr32, debug-location !361; fft3d.c:211:23
5960B	  %86:gpr32common = SUBWri %85:gpr32common, 1, 0, debug-location !362; fft3d.c:211:34
5968B	  dead $wzr = SUBSWrr %86:gpr32common, %87:gpr32, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
5976B	  STRWui %86:gpr32common, %stack.14.ble, 0, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
5984B	  Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17
6000B	  B %bb.45, debug-location !368; fft3d.c:212:17

6016B	bb.45.if.then126:
	; predecessors: %bb.44
	  successors: %bb.46(0x80000000); %bb.46(100.00%)

6032B	  %89:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
6048B	  %90:gpr32common = SUBWri %89:gpr32common, 1, 0, debug-location !370; fft3d.c:213:26
6064B	  STRWui %90:gpr32common, %stack.14.ble, 0, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21

6080B	bb.46.if.end128:
	; predecessors: %bb.44, %bb.45
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

6096B	  %91:gpr32 = LDRWui %stack.14.ble, 0, debug-location !373 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
6112B	  %92:gpr32 = LDRWui %stack.13.bls, 0, debug-location !374 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
6128B	  %93:gpr32common = nsw SUBWrr %91:gpr32, %92:gpr32, debug-location !375; fft3d.c:214:23
6144B	  %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !376; fft3d.c:214:29
6160B	  STRWui %94:gpr32common, %stack.15.len, 0, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
6192B	  STRWui $wzr, %stack.9.i, 0, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20

6208B	bb.47.for.cond131:
	; predecessors: %bb.46, %bb.51
	  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)

6224B	  %96:gpr32 = LDRWui %stack.9.i, 0, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
6240B	  %97:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
6256B	  dead $wzr = SUBSWrr %96:gpr32, %97:gpr32, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
6272B	  Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13
6288B	  B %bb.48, debug-location !385; fft3d.c:215:13

6304B	bb.48.for.body133:
	; predecessors: %bb.47
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

6320B	  %141:gpr32 = LDRWui %stack.13.bls, 0, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
6336B	  STRWui %141:gpr32, %stack.10.j, 0, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24

6352B	bb.49.for.cond134:
	; predecessors: %bb.48, %bb.50
	  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)

6368B	  %142:gpr32 = LDRWui %stack.10.j, 0, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
6384B	  %143:gpr32 = LDRWui %stack.14.ble, 0, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
6400B	  dead $wzr = SUBSWrr %142:gpr32, %143:gpr32, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
6416B	  Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17
6432B	  B %bb.50, debug-location !395; fft3d.c:216:17

6448B	bb.50.for.body136:
	; predecessors: %bb.49
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

6544B	  %152:gpr64 = LDRSWui %stack.9.i, 0, debug-location !401 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
6592B	  %157:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
6600B	  %147:gpr64common = LDRSWui %stack.10.j, 0, debug-location !396 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
6640B	  %161:gpr64 = LDRSWui %stack.11.k, 0, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
6648B	  %159:gpr64 = nsw MADDXrrr %152:gpr64, %281:gpr64, $xzr, debug-location !405; fft3d.c:217:49
6656B	  %160:gpr64 = ADDXrs %157:gpr64, %159:gpr64, 4, debug-location !405; fft3d.c:217:49
6664B	  %149:gpr32 = LDRWui %stack.13.bls, 0, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
6672B	  %162:gpr64 = nsw MADDXrrr %161:gpr64, %1:gpr64common, $xzr, debug-location !405; fft3d.c:217:49
6680B	  %163:gpr64common = ADDXrs %160:gpr64, %162:gpr64, 4, debug-location !405; fft3d.c:217:49
6688B	  %151:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
6696B	  %164:fpr128 = LDRQroX %163:gpr64common, %147:gpr64common, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
6704B	  %150:gpr32 = nsw SUBWrr %147.sub_32:gpr64common, %149:gpr32, debug-location !399; fft3d.c:217:29
6720B	  %165:gpr32common = nsw ADDWri %147.sub_32:gpr64common, 1, 0, debug-location !409; fft3d.c:216:42
6724B	  %155:gpr32 = MADDWrrr %151:gpr32, %152.sub_32:gpr64, %150:gpr32, debug-location !403; fft3d.c:217:35
6728B	  STRQroW %164:fpr128, %278:gpr64common, %155:gpr32, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
6736B	  STRWui %165:gpr32common, %stack.10.j, 0, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
6752B	  B %bb.49, debug-location !410; fft3d.c:216:17

6768B	bb.51.for.inc151:
	; predecessors: %bb.49
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

6784B	  %145:gpr32common = LDRWui %stack.9.i, 0, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
6800B	  %146:gpr32common = nsw ADDWri %145:gpr32common, 1, 0, debug-location !413; fft3d.c:215:34
6816B	  STRWui %146:gpr32common, %stack.9.i, 0, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
6832B	  B %bb.47, debug-location !414; fft3d.c:215:13

6848B	bb.52.for.end153:
	; predecessors: %bb.47
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

6864B	  %99:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
6880B	  %100:gpr32 = LDRWui %stack.12.log, 0, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
6896B	  %101:gpr32 = LDRWui %stack.15.len, 0, debug-location !419 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
6912B	  %102:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
6928B	  %103:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !421 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
6944B	  %104:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
6960B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
6976B	  $w0 = COPY %99:gpr32, debug-location !423; fft3d.c:220:13
6992B	  $w1 = COPY %100:gpr32, debug-location !423; fft3d.c:220:13
7008B	  $w2 = COPY %101:gpr32, debug-location !423; fft3d.c:220:13
7024B	  $w3 = COPY %102:gpr32, debug-location !423; fft3d.c:220:13
7040B	  $w4 = COPY %103:gpr32, debug-location !423; fft3d.c:220:13
7056B	  $x5 = COPY %278:gpr64common, debug-location !423; fft3d.c:220:13
7072B	  $x6 = COPY %104:gpr64, debug-location !423; fft3d.c:220:13
7088B	  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
7104B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !423; fft3d.c:220:13
7136B	  STRWui $wzr, %stack.9.i, 0, debug-location !424 :: (store 4 into %ir.i); fft3d.c:221:20

7152B	bb.53.for.cond154:
	; predecessors: %bb.52, %bb.57
	  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

7184B	  %108:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
7192B	  %107:gpr32 = LDRWui %stack.9.i, 0, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
7200B	  %109:gpr32common = SUBWri %108:gpr32common, 1, 0, debug-location !430; fft3d.c:221:33
7216B	  dead $wzr = SUBSWrr %107:gpr32, %109:gpr32common, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
7232B	  Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13
7248B	  B %bb.54, debug-location !432; fft3d.c:221:13

7264B	bb.54.for.body157:
	; predecessors: %bb.53
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

7280B	  %115:gpr32 = LDRWui %stack.13.bls, 0, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
7296B	  STRWui %115:gpr32, %stack.10.j, 0, debug-location !436 :: (store 4 into %ir.j); fft3d.c:222:24

7312B	bb.55.for.cond158:
	; predecessors: %bb.54, %bb.56
	  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

7328B	  %116:gpr32 = LDRWui %stack.10.j, 0, debug-location !438 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
7344B	  %117:gpr32 = LDRWui %stack.14.ble, 0, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
7360B	  dead $wzr = SUBSWrr %116:gpr32, %117:gpr32, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
7376B	  Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17
7392B	  B %bb.56, debug-location !442; fft3d.c:222:17

7408B	bb.56.for.body160:
	; predecessors: %bb.55
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

7440B	  %122:gpr32 = LDRWui %stack.10.j, 0, debug-location !445 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
7520B	  %127:gpr32 = LDRWui %stack.9.i, 0, debug-location !450 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
7568B	  %132:gpr32 = LDRWui %stack.13.bls, 0, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
7600B	  %134:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
7608B	  %123:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
7616B	  %125:gpr32 = LDRWui %stack.11.k, 0, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
7624B	  %133:gpr32 = nsw SUBWrr %122:gpr32, %132:gpr32, debug-location !457; fft3d.c:224:33
7632B	  %136:gpr32 = MADDWrrr %134:gpr32, %127:gpr32, %133:gpr32, debug-location !461; fft3d.c:224:39
7640B	  %126:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
7648B	  %138:fpr128 = LDRQroW %278:gpr64common, %136:gpr32, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
7656B	  %121:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
7664B	  %124:gpr32common = nsw ADDWri %123:gpr32common, 1, 0, debug-location !447; fft3d.c:223:34
7672B	  %129:gpr32 = MADDWrrr %126:gpr32, %127:gpr32, %125:gpr32, debug-location !452; fft3d.c:223:44
7680B	  %131:gpr32 = MADDWrrr %124:gpr32common, %129:gpr32, %122:gpr32, debug-location !454; fft3d.c:223:28
7688B	  STRQroW %138:fpr128, %121:gpr64common, %131:gpr32, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
7696B	  %139:gpr32common = LDRWui %stack.10.j, 0, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
7704B	  %140:gpr32common = nsw ADDWri %139:gpr32common, 1, 0, debug-location !463; fft3d.c:222:42
7712B	  STRWui %140:gpr32common, %stack.10.j, 0, debug-location !463 :: (store 4 into %ir.j); fft3d.c:222:42
7720B	  B %bb.55, debug-location !464; fft3d.c:222:17

7728B	bb.57.for.inc176:
	; predecessors: %bb.55
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

7744B	  %119:gpr32common = LDRWui %stack.9.i, 0, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
7760B	  %120:gpr32common = nsw ADDWri %119:gpr32common, 1, 0, debug-location !467; fft3d.c:221:39
7776B	  STRWui %120:gpr32common, %stack.9.i, 0, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
7792B	  B %bb.53, debug-location !468; fft3d.c:221:13

7808B	bb.58.for.inc179:
	; predecessors: %bb.53
	  successors: %bb.43(0x80000000); %bb.43(100.00%)

7824B	  %112:gpr32 = LDRWui %19:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
7840B	  %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
7856B	  %114:gpr32 = nsw ADDWrr %113:gpr32, %112:gpr32, debug-location !472; fft3d.c:210:37
7872B	  STRWui %114:gpr32, %stack.13.bls, 0, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
7888B	  B %bb.43, debug-location !473; fft3d.c:210:9

7904B	bb.59.for.inc182:
	; predecessors: %bb.43
	  successors: %bb.41(0x80000000); %bb.41(100.00%)

7920B	  %80:gpr32common = LDRWui %stack.11.k, 0, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
7936B	  %81:gpr32common = nsw ADDWri %80:gpr32common, 1, 0, debug-location !476; fft3d.c:209:26
7952B	  STRWui %81:gpr32common, %stack.11.k, 0, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
7968B	  B %bb.41, debug-location !477; fft3d.c:209:5

7984B	bb.60.for.end184:
	; predecessors: %bb.41
	  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)

8000B	  %71:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !480 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
8016B	  CBZW %71:gpr32, %bb.62, debug-location !482; fft3d.c:229:9
8032B	  B %bb.61, debug-location !482; fft3d.c:229:9

8048B	bb.61.if.then186:
	; predecessors: %bb.60
	  successors: %bb.62(0x80000000); %bb.62(100.00%)

8064B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !483; fft3d.c:230:9
8096B	  $w0 = MOVi32imm 9, debug-location !483; fft3d.c:230:9
8112B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !483; fft3d.c:230:9
8128B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !483; fft3d.c:230:9

8144B	bb.62.if.end187:
	; predecessors: %bb.60, %bb.61
	  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)

8160B	  %74:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !484 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
8176B	  CBZW %74:gpr32, %bb.64, debug-location !486; fft3d.c:231:9
8192B	  B %bb.63, debug-location !486; fft3d.c:231:9

8208B	bb.63.if.then189:
	; predecessors: %bb.62
	  successors: %bb.64(0x80000000); %bb.64(100.00%)

8224B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !487; fft3d.c:232:9
8256B	  $w0 = MOVi32imm 3, debug-location !487; fft3d.c:232:9
8272B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !487; fft3d.c:232:9
8288B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !487; fft3d.c:232:9

8304B	bb.64.if.end190:
	; predecessors: %bb.62, %bb.63

8320B	  RET_ReallyLR debug-location !488; fft3d.c:233:1

# End machine code for function fftXYZ.

Before post-MI-sched:
# Machine code for function fftXYZ: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP-52]
  fi#1: size=4, align=4, at location [SP-56]
  fi#2: size=4, align=4, at location [SP-68]
  fi#3: size=4, align=4, at location [SP-72]
  fi#4: size=8, align=8, at location [SP-80]
  fi#5: size=8, align=8, at location [SP-88]
  fi#6: size=8, align=8, at location [SP-96]
  fi#7: size=8, align=8, at location [SP-104]
  fi#8: dead
  fi#9: size=4, align=4, at location [SP-108]
  fi#10: size=4, align=4, at location [SP-112]
  fi#11: size=4, align=4, at location [SP-116]
  fi#12: size=4, align=4, at location [SP-120]
  fi#13: size=4, align=4, at location [SP-124]
  fi#14: size=4, align=4, at location [SP-128]
  fi#15: size=4, align=4, at location [SP-132]
  fi#16: size=4, align=4, at location [SP-136]
  fi#17: size=8, align=8, at location [SP-8]
  fi#18: size=8, align=8, at location [SP-16]
  fi#19: size=8, align=8, at location [SP-24]
  fi#20: size=8, align=8, at location [SP-32]
  fi#21: size=8, align=8, at location [SP-40]
  fi#22: size=8, align=8, at location [SP-48]
  fi#23: size=8, align=16, at location [SP-64]
Function Live Ins: $w0, $w1, $w2, $w3, $x4, $x5, $x6, $x7

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $x4, $x5, $x6, $x7, $x23, $x21, $x22, $x19, $x20, $lr
  $sp = frame-setup SUBXri $sp, 144, 0
  frame-setup STRXui killed $x23, $sp, 10 :: (store 8 into %stack.23)
  frame-setup STPXi killed $x22, killed $x21, $sp, 12 :: (store 8 into %stack.22), (store 8 into %stack.21)
  frame-setup STPXi killed $x20, killed $x19, $sp, 14 :: (store 8 into %stack.20), (store 8 into %stack.19)
  frame-setup STPXi killed $fp, killed $lr, $sp, 16 :: (store 8 into %stack.18), (store 8 into %stack.17)
  $fp = frame-setup ADDXri $sp, 128, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  frame-setup CFI_INSTRUCTION offset $w20, -32
  frame-setup CFI_INSTRUCTION offset $w21, -40
  frame-setup CFI_INSTRUCTION offset $w22, -48
  frame-setup CFI_INSTRUCTION offset $w23, -64
  STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  STPWi renamable $w3, renamable $w2, $fp, -14 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  STPXi renamable $x5, renamable $x4, $sp, 7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  renamable $x20 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  STPXi renamable $x7, renamable $x6, $sp, 5 :: (store 8 into %ir.exp1.addr), (store 8 into %ir.exp2.addr)
  renamable $w23 = ORRWrs $wzr, killed renamable $w2, 0, implicit-def $x23, debug-location !60; fft3d.c:142:62
  renamable $w21 = nsw ADDWri killed renamable $w1, 1, 0, implicit-def $x21, debug-location !62; fft3d.c:142:69
  CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)
  liveins: $x20, $x21, $x23
  $w0 = MOVZWi 3, 0, debug-location !91; fft3d.c:152:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)
  liveins: $x20, $x21, $x23
  renamable $w0 = LDURWi $fp, -40, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  $w8 = MOVZWi 8192, 0
  renamable $x22 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  $w9 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  renamable $w8 = CSELWr killed renamable $w9, killed renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  STRWui killed renamable $w8, $sp, 2, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !104; fft3d.c:158:11
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  STRWui killed renamable $w0, $sp, 6, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  CBZW killed renamable $w8, %bb.4, debug-location !108; fft3d.c:159:9

bb.3.if.then7:
; predecessors: %bb.2
  successors: %bb.4(0x80000000); %bb.4(100.00%)
  liveins: $x20, $x21, $x22, $x23
  $w0 = MOVZWi 7, 0, debug-location !109; fft3d.c:160:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9

bb.4.if.end8:
; predecessors: %bb.2, %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 7, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  $x19 = ADRP target-flags(aarch64-page) @plane
  renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  renamable $x23 = nuw MADDXrrr killed renamable $x23, renamable $x21, $xzr

bb.5.for.cond:
; predecessors: %bb.4, %bb.23
  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  renamable $w9 = LDURWi $fp, -56, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5

bb.6.for.body:
; predecessors: %bb.5
  successors: %bb.7(0x80000000); %bb.7(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 5, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

bb.7.for.cond10:
; predecessors: %bb.6, %bb.22
  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  renamable $w9 = LDURWi $fp, -52, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9

bb.8.for.body12:
; predecessors: %bb.7
  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  renamable $w10 = LDURWi $fp, -52, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w9, 0, debug-location !130; fft3d.c:163:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  STRWui killed renamable $w8, $sp, 4, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17

bb.9.if.then15:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDURWi $fp, -52, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  STRWui killed renamable $w8, $sp, 4, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

bb.10.if.end17:
; predecessors: %bb.8, %bb.9
  successors: %bb.11(0x80000000); %bb.11(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  $w8 = SUBWrs killed renamable $w8, renamable $w9, 0, debug-location !144; fft3d.c:166:23
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  STRWui killed renamable $w8, $sp, 3, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  STRWui killed renamable $w9, $sp, 8, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

bb.11.for.cond20:
; predecessors: %bb.10, %bb.15
  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 8, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  renamable $w9 = LDRWui $sp, 4, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13

bb.12.for.body22:
; predecessors: %bb.11
  successors: %bb.13(0x80000000); %bb.13(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 9, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

bb.13.for.cond23:
; predecessors: %bb.12, %bb.14
  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !160 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:168:29
  renamable $w10 = LDURWi $fp, -40, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  $wzr = SUBSWrs killed renamable $w9, killed renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17

bb.14.for.body25:
; predecessors: %bb.13
  successors: %bb.13(0x80000000); %bb.13(100.00%)
  liveins: $w8, $x19, $x20, $x21, $x22, $x23
  renamable $x9, renamable $x12 = LDPSWi $sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:169:51
  renamable $x10 = LDRXui $sp, 8, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  renamable $w11 = LDRWui $sp, 5, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  renamable $x9 = nsw MADDXrrr killed renamable $x9, renamable $x23, $xzr, debug-location !174; fft3d.c:169:49
  renamable $x9 = ADDXrs killed renamable $x10, killed renamable $x9, 4, debug-location !174; fft3d.c:169:49
  renamable $x10 = LDRSWui $sp, 9, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  renamable $x12 = nsw MADDXrrr killed renamable $x12, renamable $x21, $xzr, debug-location !174; fft3d.c:169:49
  renamable $x9 = ADDXrs killed renamable $x9, killed renamable $x12, 4, debug-location !174; fft3d.c:169:49
  renamable $w12 = LDRWui $sp, 2, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  renamable $q0 = LDRQroX killed renamable $x9, renamable $x10, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  $w8 = SUBWrs killed renamable $w8, killed renamable $w11, 0, debug-location !168; fft3d.c:169:29
  renamable $w9 = nsw ADDWri renamable $w10, 1, 0, debug-location !178; fft3d.c:168:38
  renamable $w8 = MADDWrrr killed renamable $w12, renamable $w10, killed renamable $w8, implicit killed $x10, debug-location !172; fft3d.c:169:35
  STRQroW killed renamable $q0, renamable $x19, killed renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  STRWui killed renamable $w9, $sp, 9, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  B %bb.13

bb.15.for.inc35:
; predecessors: %bb.13
  successors: %bb.11(0x80000000); %bb.11(100.00%)
  liveins: $w8, $x19, $x20, $x21, $x22, $x23
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  STRWui killed renamable $w8, $sp, 8, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  B %bb.11

bb.16.for.end37:
; predecessors: %bb.11
  successors: %bb.17(0x80000000); %bb.17(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w3, renamable $w0 = LDPWi $fp, -10, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  renamable $w1 = LDRWui $sp, 6, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  renamable $x6 = LDRXui $sp, 6, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  $x5 = ORRXrs $xzr, $x19, 0, debug-location !192; fft3d.c:172:13
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
  renamable $w8 = LDRWui $sp, 5, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22

bb.17.for.cond38:
; predecessors: %bb.16, %bb.21
  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23, $w8
  STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  $w8 = ORRWrs $wzr, killed renamable $w8, 0, debug-location !197; fft3d.c:173:27
  renamable $w9 = LDRWui $sp, 4, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13

bb.18.for.body40:
; predecessors: %bb.17
  successors: %bb.19(0x80000000); %bb.19(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 9, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

bb.19.for.cond41:
; predecessors: %bb.18, %bb.20
  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 9, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  renamable $w9 = LDURWi $fp, -40, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17

bb.20.for.body43:
; predecessors: %bb.19
  successors: %bb.19(0x80000000); %bb.19(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $x8, renamable $x9 = LDPSWi $sp, 8, debug-location !214 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:175:26
  renamable $w10 = LDRWui $sp, 5, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  renamable $w11 = LDRWui $sp, 2, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  renamable $x12 = LDRXui $sp, 8, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  renamable $x13 = LDRSWui $sp, 7, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  $w10 = SUBWrs renamable $w8, killed renamable $w10, 0, debug-location !218; fft3d.c:175:42
  renamable $w10 = MADDWrrr killed renamable $w11, renamable $w9, killed renamable $w10, debug-location !222; fft3d.c:175:48
  renamable $q0 = LDRQroW renamable $x19, killed renamable $w10, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
  renamable $x10 = nsw MADDXrrr killed renamable $x13, renamable $x23, $xzr, debug-location !211; fft3d.c:175:21
  renamable $x10 = ADDXrs killed renamable $x12, killed renamable $x10, 4, debug-location !211; fft3d.c:175:21
  renamable $x8 = nsw MADDXrrr killed renamable $x8, renamable $x21, $xzr, debug-location !211; fft3d.c:175:21
  renamable $x8 = ADDXrs killed renamable $x10, killed renamable $x8, 4, debug-location !211; fft3d.c:175:21
  STRQroX killed renamable $q0, killed renamable $x8, killed renamable $x9, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
  renamable $w8 = LDRWui $sp, 9, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  STRWui killed renamable $w8, $sp, 9, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  B %bb.19

bb.21.for.inc58:
; predecessors: %bb.19
  successors: %bb.17(0x80000000); %bb.17(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 8, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  B %bb.17

bb.22.for.inc61:
; predecessors: %bb.17
  successors: %bb.7(0x80000000); %bb.7(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  renamable $w9 = LDRWui $sp, 5, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  $w8 = ADDWrs killed renamable $w9, killed renamable $w8, 0, debug-location !233; fft3d.c:162:37
  STRWui killed renamable $w8, $sp, 5, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  B %bb.7

bb.23.for.inc64:
; predecessors: %bb.7
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  STRWui killed renamable $w8, $sp, 7, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  B %bb.5

bb.24.for.end66:
; predecessors: %bb.5
  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  CBZW killed renamable $w8, %bb.26, debug-location !243; fft3d.c:180:9

bb.25.if.then68:
; predecessors: %bb.24
  successors: %bb.26(0x80000000); %bb.26(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  $w0 = MOVZWi 7, 0, debug-location !244; fft3d.c:181:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9

bb.26.if.end69:
; predecessors: %bb.24, %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w0 = LDURWi $fp, -52, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  $w8 = MOVZWi 8192, 0
  $w9 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  renamable $w8 = CSELWr killed renamable $w9, killed renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  STRWui killed renamable $w8, $sp, 2, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !256; fft3d.c:187:11
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  STRWui killed renamable $w0, $sp, 6, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  CBZW killed renamable $w8, %bb.28, debug-location !260; fft3d.c:188:9

bb.27.if.then77:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  $w0 = MOVZWi 8, 0, debug-location !261; fft3d.c:189:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9

bb.28.if.end78:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 7, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12

bb.29.for.cond79:
; predecessors: %bb.28, %bb.35
  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  renamable $w9 = LDURWi $fp, -56, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5

bb.30.for.body81:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 5, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

bb.31.for.cond82:
; predecessors: %bb.30, %bb.34
  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  renamable $w9 = LDURWi $fp, -40, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9

bb.32.for.body84:
; predecessors: %bb.31
  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  renamable $w10 = LDURWi $fp, -40, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w9, 0, debug-location !282; fft3d.c:192:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  STRWui killed renamable $w8, $sp, 4, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17

bb.33.if.then88:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDURWi $fp, -40, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  STRWui killed renamable $w8, $sp, 4, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

bb.34.if.end90:
; predecessors: %bb.32, %bb.33
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  renamable $w1, $w11 = LDPWi $sp, 6, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.k); fft3d.c:196:32
  $w11 = KILL $w11, implicit-def $x11, debug-location !300; fft3d.c:196:32
  $x11 = SBFMXri $x11, 0, 31, debug-location !300; fft3d.c:196:32
  renamable $x10 = LDRXui $sp, 8, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  renamable $x12 = LDRSWui $sp, 5, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  $w8 = SUBWrs killed renamable $w8, killed renamable $w9, 0, debug-location !296; fft3d.c:195:23
  renamable $w3 = LDURWi $fp, -52, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  renamable $x9 = nsw MADDXrrr killed renamable $x11, renamable $x23, $xzr, debug-location !305; fft3d.c:196:55
  renamable $x9 = ADDXrs killed renamable $x10, killed renamable $x9, 4, debug-location !305; fft3d.c:196:55
  renamable $w10, renamable $w0 = LDPWi $fp, -10, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:26
  renamable $x5 = ADDXrs killed renamable $x9, killed renamable $x12, 4, debug-location !305; fft3d.c:196:55
  renamable $x6 = LDRXui $sp, 5, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  renamable $w2 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  STRWui renamable $w2, $sp, 3, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  renamable $w4 = nsw ADDWri killed renamable $w10, 1, 0, debug-location !304; fft3d.c:196:49
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
  renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  renamable $w9 = LDRWui $sp, 5, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  $w8 = ADDWrs killed renamable $w9, killed renamable $w8, 0, debug-location !312; fft3d.c:191:37
  STRWui killed renamable $w8, $sp, 5, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  B %bb.31

bb.35.for.inc102:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !316; fft3d.c:190:26
  STRWui killed renamable $w8, $sp, 7, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  B %bb.29

bb.36.for.end104:
; predecessors: %bb.29
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !320 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  CBZW killed renamable $w8, %bb.38, debug-location !322; fft3d.c:199:9

bb.37.if.then106:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  $w0 = MOVZWi 8, 0, debug-location !323; fft3d.c:200:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !323; fft3d.c:200:9

bb.38.if.end107:
; predecessors: %bb.36, %bb.37
  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w0 = LDURWi $fp, -56, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  $w8 = MOVZWi 8192, 0
  $w9 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !325; fft3d.c:202:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  renamable $w8 = CSELWr killed renamable $w9, killed renamable $w8, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
  STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !332; fft3d.c:205:21
  STRWui killed renamable $w8, $sp, 2, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !335; fft3d.c:206:11
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  STRWui killed renamable $w0, $sp, 6, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  CBZW killed renamable $w8, %bb.40, debug-location !339; fft3d.c:207:9

bb.39.if.then115:
; predecessors: %bb.38
  successors: %bb.40(0x80000000); %bb.40(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  $w0 = MOVZWi 9, 0, debug-location !340; fft3d.c:208:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !340; fft3d.c:208:9

bb.40.if.end116:
; predecessors: %bb.38, %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 7, debug-location !341 :: (store 4 into %ir.k); fft3d.c:209:12

bb.41.for.cond117:
; predecessors: %bb.40, %bb.59
  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  renamable $w9 = LDURWi $fp, -52, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5

bb.42.for.body119:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  STRWui $wzr, $sp, 5, debug-location !349 :: (store 4 into %ir.bls); fft3d.c:210:18

bb.43.for.cond120:
; predecessors: %bb.42, %bb.58
  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  renamable $w9 = LDURWi $fp, -40, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9

bb.44.for.body122:
; predecessors: %bb.43
  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  renamable $w10 = LDURWi $fp, -40, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w9, 0, debug-location !361; fft3d.c:211:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !362; fft3d.c:211:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  STRWui killed renamable $w8, $sp, 4, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17

bb.45.if.then126:
; predecessors: %bb.44
  successors: %bb.46(0x80000000); %bb.46(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDURWi $fp, -40, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !370; fft3d.c:213:26
  STRWui killed renamable $w8, $sp, 4, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21

bb.46.if.end128:
; predecessors: %bb.44, %bb.45
  successors: %bb.47(0x80000000); %bb.47(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !373 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  $w8 = SUBWrs killed renamable $w8, killed renamable $w9, 0, debug-location !375; fft3d.c:214:23
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !376; fft3d.c:214:29
  STRWui killed renamable $w8, $sp, 3, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  STRWui $wzr, $sp, 9, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20

bb.47.for.cond131:
; predecessors: %bb.46, %bb.51
  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 9, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  renamable $w9 = LDURWi $fp, -56, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13

bb.48.for.body133:
; predecessors: %bb.47
  successors: %bb.49(0x80000000); %bb.49(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  STRWui killed renamable $w8, $sp, 8, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24

bb.49.for.cond134:
; predecessors: %bb.48, %bb.50
  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 8, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  renamable $w9 = LDRWui $sp, 4, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17

bb.50.for.body136:
; predecessors: %bb.49
  successors: %bb.49(0x80000000); %bb.49(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $x10, renamable $x8 = LDPSWi $sp, 8, debug-location !401 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  renamable $x9 = LDRXui $sp, 8, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  renamable $x11 = LDRSWui $sp, 7, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  renamable $x12 = nsw MADDXrrr renamable $x8, renamable $x23, $xzr, debug-location !405; fft3d.c:217:49
  renamable $x9 = ADDXrs killed renamable $x9, killed renamable $x12, 4, debug-location !405; fft3d.c:217:49
  renamable $w12 = LDRWui $sp, 5, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  renamable $x11 = nsw MADDXrrr killed renamable $x11, renamable $x21, $xzr, debug-location !405; fft3d.c:217:49
  renamable $x9 = ADDXrs killed renamable $x9, killed renamable $x11, 4, debug-location !405; fft3d.c:217:49
  renamable $w11 = LDRWui $sp, 2, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  renamable $q0 = LDRQroX killed renamable $x9, renamable $x10, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
  $w9 = SUBWrs renamable $w10, killed renamable $w12, 0, debug-location !399; fft3d.c:217:29
  renamable $w10 = nsw ADDWri renamable $w10, 1, 0, implicit killed $x10, debug-location !409; fft3d.c:216:42
  renamable $w8 = MADDWrrr killed renamable $w11, renamable $w8, killed renamable $w9, implicit killed $x8, debug-location !403; fft3d.c:217:35
  STRQroW killed renamable $q0, renamable $x19, killed renamable $w8, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
  STRWui killed renamable $w10, $sp, 8, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
  B %bb.49

bb.51.for.inc151:
; predecessors: %bb.49
  successors: %bb.47(0x80000000); %bb.47(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 9, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !413; fft3d.c:215:34
  STRWui killed renamable $w8, $sp, 9, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  B %bb.47

bb.52.for.end153:
; predecessors: %bb.47
  successors: %bb.53(0x80000000); %bb.53(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w0 = LDURWi $fp, -36, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  renamable $w1 = LDRWui $sp, 6, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !419 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  renamable $w3 = LDURWi $fp, -56, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  renamable $x6 = LDRXui $fp, 2, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  $x5 = ORRXrs $xzr, $x19, 0, debug-location !423; fft3d.c:220:13
  BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
  STRWui $wzr, $sp, 9, debug-location !424 :: (store 4 into %ir.i); fft3d.c:221:20

bb.53.for.cond154:
; predecessors: %bb.52, %bb.57
  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDURWi $fp, -56, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  renamable $w9 = LDRWui $sp, 9, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !430; fft3d.c:221:33
  $wzr = SUBSWrs killed renamable $w9, killed renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13

bb.54.for.body157:
; predecessors: %bb.53
  successors: %bb.55(0x80000000); %bb.55(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 5, debug-location !433 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26

bb.55.for.cond158:
; predecessors: %bb.54, %bb.56
  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)
  liveins: $x19, $x20, $x21, $x22, $x23, $w8
  STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !434) :: (store 4 into %ir.j); fft3d.c:0
  $w8 = ORRWrs $wzr, killed renamable $w8, 0, debug-location !438; fft3d.c:222:31
  renamable $w9 = LDRWui $sp, 4, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17

bb.56.for.body160:
; predecessors: %bb.55
  successors: %bb.55(0x80000000); %bb.55(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !445 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  renamable $w10 = LDRWui $sp, 5, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  renamable $w11 = LDRWui $sp, 2, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  renamable $w12 = LDURWi $fp, -40, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  renamable $w13 = LDRWui $sp, 7, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  $w10 = SUBWrs renamable $w8, killed renamable $w10, 0, debug-location !457; fft3d.c:224:33
  renamable $w10 = MADDWrrr killed renamable $w11, renamable $w9, killed renamable $w10, debug-location !461; fft3d.c:224:39
  renamable $w11 = LDURWi $fp, -52, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  renamable $q0 = LDRQroW renamable $x19, killed renamable $w10, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
  renamable $x10 = LDRXui $sp, 7, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  renamable $w12 = nsw ADDWri killed renamable $w12, 1, 0, debug-location !447; fft3d.c:223:34
  renamable $w9 = MADDWrrr killed renamable $w11, killed renamable $w9, killed renamable $w13, debug-location !452; fft3d.c:223:44
  renamable $w8 = MADDWrrr killed renamable $w12, killed renamable $w9, killed renamable $w8, debug-location !454; fft3d.c:223:28
  STRQroW killed renamable $q0, killed renamable $x10, killed renamable $w8, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
  renamable $w8 = LDRWui $sp, 8, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !463; fft3d.c:222:42
  B %bb.55

bb.57.for.inc176:
; predecessors: %bb.55
  successors: %bb.53(0x80000000); %bb.53(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 9, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !467; fft3d.c:221:39
  STRWui killed renamable $w8, $sp, 9, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  B %bb.53

bb.58.for.inc179:
; predecessors: %bb.53
  successors: %bb.43(0x80000000); %bb.43(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  renamable $w9 = LDRWui $sp, 5, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  $w8 = ADDWrs killed renamable $w9, killed renamable $w8, 0, debug-location !472; fft3d.c:210:37
  STRWui killed renamable $w8, $sp, 5, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  B %bb.43

bb.59.for.inc182:
; predecessors: %bb.43
  successors: %bb.41(0x80000000); %bb.41(100.00%)
  liveins: $x19, $x20, $x21, $x22, $x23
  renamable $w8 = LDRWui $sp, 7, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !476; fft3d.c:209:26
  STRWui killed renamable $w8, $sp, 7, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  B %bb.41

bb.60.for.end184:
; predecessors: %bb.41
  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)
  liveins: $x20
  renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !480 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  CBZW killed renamable $w8, %bb.62, debug-location !482; fft3d.c:229:9

bb.61.if.then186:
; predecessors: %bb.60
  successors: %bb.62(0x80000000); %bb.62(100.00%)
  liveins: $x20
  $w0 = MOVZWi 9, 0, debug-location !483; fft3d.c:230:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !483; fft3d.c:230:9

bb.62.if.end187:
; predecessors: %bb.60, %bb.61
  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)
  liveins: $x20
  renamable $w8 = LDRWui killed renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !484 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  CBZW killed renamable $w8, %bb.64, debug-location !486; fft3d.c:231:9

bb.63.if.then189:
; predecessors: %bb.62
  successors: %bb.64(0x80000000); %bb.64(100.00%)

  $w0 = MOVZWi 3, 0, debug-location !487; fft3d.c:232:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !487; fft3d.c:232:9

bb.64.if.end190:
; predecessors: %bb.62, %bb.63

  $fp, $lr = frame-destroy LDPXi $sp, 16, debug-location !488 :: (load 8 from %stack.18), (load 8 from %stack.17); fft3d.c:233:1
  $x20, $x19 = frame-destroy LDPXi $sp, 14, debug-location !488 :: (load 8 from %stack.20), (load 8 from %stack.19); fft3d.c:233:1
  $x22, $x21 = frame-destroy LDPXi $sp, 12, debug-location !488 :: (load 8 from %stack.22), (load 8 from %stack.21); fft3d.c:233:1
  $x23 = frame-destroy LDRXui $sp, 10, debug-location !488 :: (load 8 from %stack.23); fft3d.c:233:1
  $sp = frame-destroy ADDXri $sp, 144, 0, debug-location !488; fft3d.c:233:1
  RET undef $lr, debug-location !488; fft3d.c:233:1

# End machine code for function fftXYZ.

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
    To: CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9
 RegionInstrs: 8
ScheduleDAGMI::schedule starting
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -14 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   STPXi renamable $x5, renamable $x4, $sp, 7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   renamable $x20 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(4): Data Latency=1 Reg=$x20
SU(4):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(3): Data Latency=1 Reg=$x20
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(5):   STPXi renamable $x7, renamable $x6, $sp, 5 :: (store 8 into %ir.exp1.addr), (store 8 into %ir.exp2.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(6):   renamable $w23 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x23, debug-location !60; fft3d.c:142:62
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   renamable $w21 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x21, debug-location !62; fft3d.c:142:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(7): Ord  Latency=1 Artificial
    SU(6): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=4 Artificial
    SU(3): Ord  Latency=1 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 5 6 7 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x20 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  Ready @0c
  TopQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 6 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(7) TOP-PATH                  1 cycles 
  Cand SU(6) ORDER                              
  Cand SU(4) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  Ready @1c
  TopQ.A TopLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 6 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(7) TOP-PATH                  1 cycles 
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) renamable $w23 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x23, debug-location !60; fft3d.c:142:62
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(7) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w21 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x21, debug-location !62; fft3d.c:142:69
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 1 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(5) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STPWi renamable $w3, renamable $w2, $fp, -14 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 2 
  TopQ.A RemainingLatency 0 + 6c > CritPath 5
  Cand SU(5) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) STPXi renamable $x5, renamable $x4, $sp, 7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) STPXi renamable $x7, renamable $x6, $sp, 5 :: (store 8 into %ir.exp1.addr), (store 8 into %ir.exp2.addr)
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(3):   renamable $x20 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
SU(4):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
SU(6):   renamable $w23 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x23, debug-location !60; fft3d.c:142:62
SU(7):   renamable $w21 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x21, debug-location !62; fft3d.c:142:69
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -14 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
SU(2):   STPXi renamable $x5, renamable $x4, $sp, 7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
SU(5):   STPXi renamable $x7, renamable $x6, $sp, 5 :: (store 8 into %ir.exp1.addr), (store 8 into %ir.exp2.addr)

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: frame-setup STRXui killed $x23, $sp, 10 :: (store 8 into %stack.23)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STRXui $x23, $sp, 10 :: (store 8 into %stack.23)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $x22, $x21, $sp, 12 :: (store 8 into %stack.22), (store 8 into %stack.21)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   frame-setup STPXi $x20, $x19, $sp, 14 :: (store 8 into %stack.20), (store 8 into %stack.19)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   frame-setup STPXi $fp, $lr, $sp, 16 :: (store 8 into %stack.18), (store 8 into %stack.17)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(4): Anti Latency=0
SU(4):   $fp = frame-setup ADDXri $sp, 128, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STRXui $x23, $sp, 10 :: (store 8 into %stack.23)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 0
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) frame-setup STPXi $x22, $x21, $sp, 12 :: (store 8 into %stack.22), (store 8 into %stack.21)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 0
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) frame-setup STPXi $x20, $x19, $sp, 14 :: (store 8 into %stack.20), (store 8 into %stack.19)
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) frame-setup STPXi $fp, $lr, $sp, 16 :: (store 8 into %stack.18), (store 8 into %stack.17)
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $fp = frame-setup ADDXri $sp, 128, 0
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STRXui $x23, $sp, 10 :: (store 8 into %stack.23)
SU(1):   frame-setup STPXi $x22, $x21, $sp, 12 :: (store 8 into %stack.22), (store 8 into %stack.21)
SU(2):   frame-setup STPXi $x20, $x19, $sp, 14 :: (store 8 into %stack.20), (store 8 into %stack.19)
SU(3):   frame-setup STPXi $fp, $lr, $sp, 16 :: (store 8 into %stack.18), (store 8 into %stack.17)
SU(4):   $fp = frame-setup ADDXri $sp, 128, 0

Fixup kills for %bb.0
Fixup kills for %bb.1
********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
    To: CBZW killed renamable $w8, %bb.4, debug-location !108; fft3d.c:159:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w8, %bb.4, debug-location !108; fft3d.c:159:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui renamable $w0, $sp, 6, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: renamable $w0 = LDURWi $fp, -40, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
    To: BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !104; fft3d.c:158:11
 RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -40, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(4): Data Latency=4 Reg=$w0
SU(1):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(2):   renamable $x22 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(7): Data Latency=1 Reg=$x22
SU(3):   $w9 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(6): Data Latency=1 Reg=$w9
SU(4):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
    SU(6): Anti Latency=0
SU(6):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
    SU(3): Data Latency=1 Reg=$w9
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w8
    SU(7): Data Latency=1 Reg=$w8
SU(7):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w8
    SU(2): Data Latency=1 Reg=$x22
  Successors:
    SU(8): Anti Latency=0
SU(8):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w8
  Successors:
    SU(9): Data Latency=1 Reg=$w8
SU(9):   STRWui renamable $w8, $sp, 2, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !104; fft3d.c:158:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -40, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $w9 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x22 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  Ready @4c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  Ready @5c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  Ready @6c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  Ready @8c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STRWui renamable $w8, $sp, 2, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  Ready @9c
  TopQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $w0 = LDURWi $fp, -40, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
SU(1):   $w8 = MOVZWi 8192, 0
SU(3):   $w9 = MOVZWi 32, 0
SU(2):   renamable $x22 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
SU(4):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
SU(5):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
SU(6):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
SU(7):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(8):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
SU(9):   STRWui renamable $w8, $sp, 2, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10

Fixup kills for %bb.2
Fixup kills for %bb.3
********** MI Scheduling **********
fftXYZ:%bb.4 if.end8
  From: STRWui $wzr, $sp, 7, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
    To: End RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STRWui $wzr, $sp, 7, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   $x19 = ADRP target-flags(aarch64-page) @plane
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x19
SU(2):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   renamable $x23 = nuw MADDXrrr renamable $x23, renamable $x21, $xzr
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $x19 = ADRP target-flags(aarch64-page) @plane
  Ready @0c
  TopQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  Ready @1c
  TopQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x23 = nuw MADDXrrr renamable $x23, renamable $x21, $xzr
  Ready @2c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STRWui $wzr, $sp, 7, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(1):   $x19 = ADRP target-flags(aarch64-page) @plane
SU(2):   renamable $x19 = ADDXri $x19, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
SU(3):   renamable $x23 = nuw MADDXrrr renamable $x23, renamable $x21, $xzr
SU(0):   STRWui $wzr, $sp, 7, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12

Fixup kills for %bb.4
********** MI Scheduling **********
fftXYZ:%bb.5 for.cond
  From: renamable $w8 = LDRWui $sp, 7, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
    To: Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -56, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5

Fixup kills for %bb.5
Fixup kills for %bb.6
********** MI Scheduling **********
fftXYZ:%bb.7 for.cond10
  From: renamable $w8 = LDRWui $sp, 5, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
    To: Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -52, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -52, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
SU(1):   renamable $w9 = LDURWi $fp, -52, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9

Fixup kills for %bb.7
********** MI Scheduling **********
fftXYZ:%bb.8 for.body12
  From: renamable $w8 = LDRWui $sp, 5, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
    To: Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(2):   renamable $w10 = LDURWi $fp, -52, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=$w10
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !130; fft3d.c:163:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w10
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w10 = LDURWi $fp, -52, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !130; fft3d.c:163:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 4, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
SU(2):   renamable $w10 = LDURWi $fp, -52, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !130; fft3d.c:163:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17

Fixup kills for %bb.8
********** MI Scheduling **********
fftXYZ:%bb.9 if.then15
  From: renamable $w8 = LDURWi $fp, -52, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -52, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -52, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 4, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   renamable $w8 = LDURWi $fp, -52, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

Fixup kills for %bb.9
********** MI Scheduling **********
fftXYZ:%bb.10 if.end17
  From: renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(4): Data Latency=4 Reg=$w9
    SU(1): Data Latency=4 Reg=$w9
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !144; fft3d.c:166:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 3, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
SU(4):   STRWui renamable $w9, $sp, 8, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w9
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 1 
  TopQ.A RemainingLatency 0 + 4c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(1) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !144; fft3d.c:166:23
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 6c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) STRWui renamable $w8, $sp, 3, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  Ready @6c
  TopQ.A TopLatency SU(3) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STRWui renamable $w9, $sp, 8, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !144; fft3d.c:166:23
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
SU(3):   STRWui renamable $w8, $sp, 3, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
SU(4):   STRWui renamable $w9, $sp, 8, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

Fixup kills for %bb.10
********** MI Scheduling **********
fftXYZ:%bb.11 for.cond20
  From: renamable $w8 = LDRWui $sp, 8, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 4, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 8, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 4, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
SU(1):   renamable $w9 = LDRWui $sp, 4, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13

Fixup kills for %bb.11
Fixup kills for %bb.12
********** MI Scheduling **********
fftXYZ:%bb.13 for.cond23
  From: renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !160 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:168:29
    To: Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !160 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:168:29
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Data Latency=4 Reg=$w9
SU(1):   renamable $w10 = LDURWi $fp, -40, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w10
SU(2):   $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w10
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.15, implicit $nzcv, debug-location !165; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !160 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:168:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w10 = LDURWi $fp, -40, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !165; fft3d.c:168:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !160 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:168:29
SU(1):   renamable $w10 = LDURWi $fp, -40, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
SU(2):   $wzr = SUBSWrs renamable $w9, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !165; fft3d.c:168:17

Fixup kills for %bb.13
********** MI Scheduling **********
fftXYZ:%bb.14 for.body25
  From: renamable $x9, renamable $x12 = LDPSWi $sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:169:51
    To: B %bb.13
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $x9, renamable $x12 = LDPSWi $sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:169:51
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 13
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$x9
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x12
SU(1):   renamable $x10 = LDRXui $sp, 8, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=4 Reg=$x10
SU(2):   renamable $w11 = LDRWui $sp, 5, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=$w11
SU(3):   renamable $x9 = nsw MADDXrrr renamable $x9, renamable $x23, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x9
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x9
SU(4):   renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x9
    SU(1): Data Latency=4 Reg=$x10
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x9
    SU(5): Anti Latency=0
SU(5):   renamable $x10 = LDRSWui $sp, 9, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$w10
    SU(11): Data Latency=4 Reg=$w10
    SU(12): Data Latency=0 Reg=$x10
    SU(9): Data Latency=4 Reg=$x10
    SU(14): Ord  Latency=0 Memory
SU(6):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x21, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x12
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x12
SU(7):   renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(4): Data Latency=1 Reg=$x9
    SU(4): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x12
  Successors:
    SU(11): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x9
    SU(8): Anti Latency=0
SU(8):   renamable $w12 = LDRWui $sp, 2, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$w12
SU(9):   renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 9
  Height             : 4
  Predecessors:
    SU(7): Data Latency=1 Reg=$x9
    SU(5): Data Latency=4 Reg=$x10
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(11): Anti Latency=0
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
SU(10):   $w8 = SUBWrs renamable $w8, renamable $w11, 0, debug-location !168; fft3d.c:169:29
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(2): Data Latency=4 Reg=$w11
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$w8
SU(11):   renamable $w9 = nsw ADDWri renamable $w10, 1, 0, debug-location !178; fft3d.c:168:38
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 1
  Predecessors:
    SU(9): Anti Latency=0
    SU(7): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w10
  Successors:
    SU(14): Data Latency=1 Reg=$w9
SU(12):   renamable $w8 = MADDWrrr renamable $w12, renamable $w10, renamable $w8, implicit $x10, debug-location !172; fft3d.c:169:35
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(5): Data Latency=0 Reg=$x10
    SU(10): Data Latency=1 Reg=$w8
    SU(8): Data Latency=4 Reg=$w12
    SU(5): Data Latency=4 Reg=$w10
    SU(10): Out  Latency=1
  Successors:
    SU(13): Data Latency=1 Reg=$w8
SU(13):   STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=$w8
    SU(9): Data Latency=4 Reg=$q0
    SU(9): Ord  Latency=0 Memory
SU(14):   STRWui renamable $w9, $sp, 9, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(11): Data Latency=1 Reg=$w9
    SU(9): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
ExitSU:   B %bb.13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 13
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 13
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x9, renamable $x12 = LDPSWi $sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:169:51
  Ready @0c
  TopQ.A BotLatency SU(0) 13c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 6 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 13
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x10 = LDRXui $sp, 8, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 6 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w11 = LDRWui $sp, 5, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 10 
Queue TopQ.A: 3 6 
  TopQ.A RemainingLatency 0 + 4c > CritPath 13
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x9 = nsw MADDXrrr renamable $x9, renamable $x23, $xzr, debug-location !174; fft3d.c:169:49
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 6 4 
  TopQ.A RemainingLatency 0 + 5c > CritPath 13
  Cand SU(6) ORDER                              
  Cand SU(4) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !174; fft3d.c:169:49
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 10 
  TopQ.A RemainingLatency 0 + 6c > CritPath 13
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) renamable $x10 = LDRSWui $sp, 9, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  Ready @6c
  TopQ.A BotLatency SU(5) 8c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 10 
  TopQ.A RemainingLatency 0 + 7c > CritPath 13
  Cand SU(6) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(6) renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x21, $xzr, debug-location !174; fft3d.c:169:49
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 7 
  TopQ.A RemainingLatency 0 + 8c > CritPath 13
  Cand SU(10) ORDER                              
  Cand SU(7) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !174; fft3d.c:169:49
  Ready @8c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 9 
Queue TopQ.A: 10 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 13
  Cand SU(10) ORDER                              
  Cand SU(8) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $w12 = LDRWui $sp, 2, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 13
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  Ready @10c
  TopQ.A TopLatency SU(9) 9c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 13
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) $w8 = SUBWrs renamable $w8, renamable $w11, 0, debug-location !168; fft3d.c:169:29
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 12 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w9 = nsw ADDWri renamable $w10, 1, 0, debug-location !178; fft3d.c:168:38
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 12 
  TopQ.A RemainingLatency 0 + 13c > CritPath 13
  Cand SU(14) ORDER                              
  Cand SU(12) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $w8 = MADDWrrr renamable $w12, renamable $w10, renamable $w8, implicit $x10, debug-location !172; fft3d.c:169:35
  Ready @13c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 13
  Executed: 14c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 13 
  TopQ.A RemainingLatency 0 + 14c > CritPath 13
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
Pick Top ORDER     
Scheduling SU(13) STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  Ready @14c
  TopQ.A TopLatency SU(13) 13c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 14
  Executed: 15c
  Critical: 14c, 14 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) STRWui renamable $w9, $sp, 9, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 15
  Executed: 16c
  Critical: 15c, 15 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   renamable $x9, renamable $x12 = LDPSWi $sp, 7, debug-location !175 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:169:51
SU(1):   renamable $x10 = LDRXui $sp, 8, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
SU(2):   renamable $w11 = LDRWui $sp, 5, debug-location !166 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
SU(3):   renamable $x9 = nsw MADDXrrr renamable $x9, renamable $x23, $xzr, debug-location !174; fft3d.c:169:49
SU(4):   renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !174; fft3d.c:169:49
SU(5):   renamable $x10 = LDRSWui $sp, 9, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
SU(6):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x21, $xzr, debug-location !174; fft3d.c:169:49
SU(7):   renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !174; fft3d.c:169:49
SU(8):   renamable $w12 = LDRWui $sp, 2, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
SU(9):   renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
SU(10):   $w8 = SUBWrs renamable $w8, renamable $w11, 0, debug-location !168; fft3d.c:169:29
SU(11):   renamable $w9 = nsw ADDWri renamable $w10, 1, 0, debug-location !178; fft3d.c:168:38
SU(12):   renamable $w8 = MADDWrrr renamable $w12, renamable $w10, renamable $w8, implicit $x10, debug-location !172; fft3d.c:169:35
SU(13):   STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
SU(14):   STRWui renamable $w9, $sp, 9, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38

Fixup kills for %bb.14
********** MI Scheduling **********
fftXYZ:%bb.15 for.inc35
  From: renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
    To: B %bb.11
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=$w8
SU(1):   STRWui renamable $w8, $sp, 8, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=$w8
ExitSU:   B %bb.11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui renamable $w8, $sp, 8, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
SU(1):   STRWui renamable $w8, $sp, 8, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38

Fixup kills for %bb.15
********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: renamable $w3, renamable $w0 = LDPWi $fp, -10, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w3, renamable $w0 = LDPWi $fp, -10, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   renamable $w1 = LDRWui $sp, 6, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(3):   renamable $x6 = LDRXui $sp, 6, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(4):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=4 Artificial
    SU(2): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w3, renamable $w0 = LDPWi $fp, -10, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(4) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w1 = LDRWui $sp, 6, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  Ready @1c
  TopQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(4) ORDER                              
  Cand SU(3) TOP-PATH                  4 cycles 
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  Ready @2c
  TopQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(4) ORDER                              
  Cand SU(3) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x6 = LDRXui $sp, 6, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
  Ready @3c
  TopQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $x5 = ORRXrs $xzr, $x19, 0, debug-location !192; fft3d.c:172:13
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   renamable $w3, renamable $w0 = LDPWi $fp, -10, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
SU(1):   renamable $w1 = LDRWui $sp, 6, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
SU(2):   renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
SU(3):   renamable $x6 = LDRXui $sp, 6, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr); fft3d.c:172:59
SU(4):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !192; fft3d.c:172:13

Fixup kills for %bb.16
********** MI Scheduling **********
fftXYZ:%bb.17 for.cond38
  From: STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
    To: Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(2):   renamable $w9 = LDRWui $sp, 4, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w9
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w9 = LDRWui $sp, 4, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.17 ***
SU(2):   renamable $w9 = LDRWui $sp, 4, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
SU(0):   STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13

Fixup kills for %bb.17
Fixup kills for %bb.18
********** MI Scheduling **********
fftXYZ:%bb.19 for.cond41
  From: renamable $w8 = LDRWui $sp, 9, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
    To: Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 9, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -40, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.19 ***
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17

Fixup kills for %bb.19
********** MI Scheduling **********
fftXYZ:%bb.20 for.body43
  From: renamable $x8, renamable $x9 = LDPSWi $sp, 8, debug-location !214 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:175:26
    To: B %bb.19
 RegionInstrs: 16
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8, renamable $x9 = LDPSWi $sp, 8, debug-location !214 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:175:26
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w8
    SU(10): Data Latency=4 Reg=$x8
    SU(6): Data Latency=4 Reg=$w9
    SU(12): Data Latency=4 Reg=$x9
    SU(15): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
SU(1):   renamable $w10 = LDRWui $sp, 5, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(5): Out  Latency=1
    SU(8): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w10
    SU(12): Ord  Latency=0 Memory
SU(2):   renamable $w11 = LDRWui $sp, 2, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Data Latency=4 Reg=$w11
    SU(12): Ord  Latency=0 Memory
SU(3):   renamable $x12 = LDRXui $sp, 8, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(9): Data Latency=4 Reg=$x12
    SU(12): Ord  Latency=0 Memory
SU(4):   renamable $x13 = LDRSWui $sp, 7, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 13
  Successors:
    SU(8): Data Latency=4 Reg=$x13
    SU(12): Ord  Latency=0 Memory
SU(5):   $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !218; fft3d.c:175:42
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w10
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(6): Out  Latency=1
    SU(8): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w10
    SU(10): Anti Latency=0
    SU(8): Anti Latency=0
SU(6):   renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !222; fft3d.c:175:48
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w10
    SU(2): Data Latency=4 Reg=$w11
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w10
    SU(8): Anti Latency=0
SU(7):   renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(6): Data Latency=1 Reg=$w10
  Successors:
    SU(12): Data Latency=4 Reg=$q0
    SU(8): Anti Latency=0
    SU(12): Ord  Latency=0 Memory
SU(8):   renamable $x10 = nsw MADDXrrr renamable $x13, renamable $x23, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 7
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Anti Latency=0
    SU(4): Data Latency=4 Reg=$x13
    SU(1): Out  Latency=1
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x10
SU(9):   renamable $x10 = ADDXrs renamable $x12, renamable $x10, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 8
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x10
    SU(3): Data Latency=4 Reg=$x12
  Successors:
    SU(11): Data Latency=1 Reg=$x10
SU(10):   renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x21, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(5): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$x8
SU(11):   renamable $x8 = ADDXrs renamable $x10, renamable $x8, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 7
  Predecessors:
    SU(9): Data Latency=1 Reg=$x10
    SU(10): Data Latency=1 Reg=$x8
    SU(10): Out  Latency=1
  Successors:
    SU(13): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x8
SU(12):   STRQroX renamable $q0, renamable $x8, renamable $x9, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
  # preds left       : 9
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(11): Data Latency=1 Reg=$x8
    SU(7): Data Latency=4 Reg=$q0
    SU(7): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Data Latency=4 Reg=$x9
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(13): Anti Latency=0
    SU(15): Ord  Latency=0 Memory
    SU(13): Ord  Latency=1 Memory
SU(13):   renamable $w8 = LDRWui $sp, 9, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(12): Anti Latency=0
    SU(12): Ord  Latency=1 Memory
    SU(11): Out  Latency=1
  Successors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$w8
    SU(15): Ord  Latency=0 Memory
SU(14):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=4 Reg=$w8
  Successors:
    SU(15): Data Latency=1 Reg=$w8
SU(15):   STRWui renamable $w8, $sp, 9, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=$w8
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.19
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8, renamable $x9 = LDPSWi $sp, 8, debug-location !214 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:175:26
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w10 = LDRWui $sp, 5, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  15 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w11 = LDRWui $sp, 2, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 16
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x13 = LDRSWui $sp, 7, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x12 = LDRXui $sp, 8, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !218; fft3d.c:175:42
  Ready @5c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 10 
  TopQ.A RemainingLatency 0 + 6c > CritPath 16
  Cand SU(6) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(6) renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !222; fft3d.c:175:48
  Ready @6c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 16
  Cand SU(10) ORDER                              
  Cand SU(7) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
  Ready @7c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 16
  Cand SU(10) ORDER                              
  Cand SU(8) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x10 = nsw MADDXrrr renamable $x13, renamable $x23, $xzr, debug-location !211; fft3d.c:175:21
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 9c > CritPath 16
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $x10 = ADDXrs renamable $x12, renamable $x10, 4, debug-location !211; fft3d.c:175:21
  Ready @9c
  TopQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x21, $xzr, debug-location !211; fft3d.c:175:21
  Ready @10c
  TopQ.A BotLatency SU(10) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $x8 = ADDXrs renamable $x10, renamable $x8, 4, debug-location !211; fft3d.c:175:21
  Ready @11c
  TopQ.A TopLatency SU(11) 8c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) STRQroX renamable $q0, renamable $x8, renamable $x9, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
  Ready @12c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) renamable $w8 = LDRWui $sp, 9, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  Ready @13c
  TopQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 17 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  Ready @17c
  TopQ.A TopLatency SU(14) 15c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 15 
Pick Top ONLY1     
Scheduling SU(15) STRWui renamable $w8, $sp, 9, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  Ready @18c
  TopQ.A TopLatency SU(15) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   renamable $x8, renamable $x9 = LDPSWi $sp, 8, debug-location !214 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:175:26
SU(1):   renamable $w10 = LDRWui $sp, 5, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
SU(2):   renamable $w11 = LDRWui $sp, 2, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
SU(4):   renamable $x13 = LDRSWui $sp, 7, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
SU(3):   renamable $x12 = LDRXui $sp, 8, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
SU(5):   $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !218; fft3d.c:175:42
SU(6):   renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !222; fft3d.c:175:48
SU(7):   renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !223 :: (load 16 from %ir.75, align 8); fft3d.c:175:34
SU(8):   renamable $x10 = nsw MADDXrrr renamable $x13, renamable $x23, $xzr, debug-location !211; fft3d.c:175:21
SU(9):   renamable $x10 = ADDXrs renamable $x12, renamable $x10, 4, debug-location !211; fft3d.c:175:21
SU(10):   renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x21, $xzr, debug-location !211; fft3d.c:175:21
SU(11):   renamable $x8 = ADDXrs renamable $x10, renamable $x8, 4, debug-location !211; fft3d.c:175:21
SU(12):   STRQroX renamable $q0, renamable $x8, renamable $x9, 0, 1, debug-location !223 :: (store 16 into %ir.74, align 8); fft3d.c:175:34
SU(13):   renamable $w8 = LDRWui $sp, 9, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
SU(14):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
SU(15):   STRWui renamable $w8, $sp, 9, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38

Fixup kills for %bb.20
********** MI Scheduling **********
fftXYZ:%bb.21 for.inc58
  From: renamable $w8 = LDRWui $sp, 8, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
    To: B %bb.17
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
ExitSU:   B %bb.17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 8, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38

Fixup kills for %bb.21
********** MI Scheduling **********
fftXYZ:%bb.22 for.inc61
  From: renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
    To: B %bb.7
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
    SU(3): Ord  Latency=0 Memory
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !233; fft3d.c:162:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Ord  Latency=0 Memory
ExitSU:   B %bb.7
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 5, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !233; fft3d.c:162:37
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 5, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !233; fft3d.c:162:37
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37

Fixup kills for %bb.22
********** MI Scheduling **********
fftXYZ:%bb.23 for.inc64
  From: renamable $w8 = LDRWui $sp, 7, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
    To: B %bb.5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 7, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26

Fixup kills for %bb.23
Fixup kills for %bb.24
Fixup kills for %bb.25
********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
    To: CBZW killed renamable $w8, %bb.28, debug-location !260; fft3d.c:188:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w8, %bb.28, debug-location !260; fft3d.c:188:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui renamable $w0, $sp, 6, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: renamable $w0 = LDURWi $fp, -52, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
    To: BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !256; fft3d.c:187:11
 RegionInstrs: 9
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -52, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(3): Data Latency=4 Reg=$w0
SU(1):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
SU(2):   $w9 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(5): Data Latency=1 Reg=$w9
SU(3):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w8
SU(4):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(5): Anti Latency=0
SU(5):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(4): Data Latency=1 Reg=$nzcv
    SU(4): Anti Latency=0
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
    SU(2): Data Latency=1 Reg=$w9
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(8): Data Latency=1 Reg=$w8
SU(8):   STRWui renamable $w8, $sp, 2, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !256; fft3d.c:187:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -52, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w9 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  Ready @6c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  Ready @8c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRWui renamable $w8, $sp, 2, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  Ready @9c
  TopQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $w0 = LDURWi $fp, -52, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
SU(1):   $w8 = MOVZWi 8192, 0
SU(2):   $w9 = MOVZWi 32, 0
SU(3):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
SU(4):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
SU(5):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
SU(6):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(7):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
SU(8):   STRWui renamable $w8, $sp, 2, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10

Fixup kills for %bb.26
Fixup kills for %bb.27
Fixup kills for %bb.28
********** MI Scheduling **********
fftXYZ:%bb.29 for.cond79
  From: renamable $w8 = LDRWui $sp, 7, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
    To: Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -56, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5

Fixup kills for %bb.29
Fixup kills for %bb.30
********** MI Scheduling **********
fftXYZ:%bb.31 for.cond82
  From: renamable $w8 = LDRWui $sp, 5, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -40, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9

Fixup kills for %bb.31
********** MI Scheduling **********
fftXYZ:%bb.32 for.body84
  From: renamable $w8 = LDRWui $sp, 5, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
    To: Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(2):   renamable $w10 = LDURWi $fp, -40, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=$w10
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !282; fft3d.c:192:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w10
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w10 = LDURWi $fp, -40, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !282; fft3d.c:192:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 4, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
SU(2):   renamable $w10 = LDURWi $fp, -40, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !282; fft3d.c:192:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17

Fixup kills for %bb.32
********** MI Scheduling **********
fftXYZ:%bb.33 if.then88
  From: renamable $w8 = LDURWi $fp, -40, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -40, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 4, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

Fixup kills for %bb.33
********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
    To: B %bb.31
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
    SU(3): Ord  Latency=0 Memory
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !312; fft3d.c:191:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Ord  Latency=0 Memory
ExitSU:   B %bb.31
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 5, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !312; fft3d.c:191:37
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 5, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !311 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !312 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !312; fft3d.c:191:37
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !312 :: (store 4 into %ir.bls); fft3d.c:191:37

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 16
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w8
    SU(8): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w9
SU(1):   renamable $w1, $w11 = LDPWi $sp, 6, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.k); fft3d.c:196:32
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Out  Latency=1
    SU(2): Data Latency=0 Reg=$w11
SU(2):   $w11 = KILL $w11, implicit-def $x11, debug-location !300; fft3d.c:196:32
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 8
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=0 Reg=$w11
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=0 Reg=$x11
SU(3):   $x11 = SBFMXri $x11, 0, 31, debug-location !300; fft3d.c:196:32
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 7
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=0 Reg=$x11
  Successors:
    SU(8): Data Latency=1 Reg=$x11
SU(4):   renamable $x10 = LDRXui $sp, 8, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(10): Out  Latency=1
    SU(9): Data Latency=4 Reg=$x10
SU(5):   renamable $x12 = LDRSWui $sp, 5, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(11): Data Latency=4 Reg=$x12
SU(6):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !296; fft3d.c:195:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(13): Data Latency=1 Reg=$w8
    SU(8): Anti Latency=0
SU(7):   renamable $w3 = LDURWi $fp, -52, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(8):   renamable $x9 = nsw MADDXrrr renamable $x11, renamable $x23, $xzr, debug-location !305; fft3d.c:196:55
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(6): Anti Latency=0
    SU(3): Data Latency=1 Reg=$x11
    SU(0): Out  Latency=1
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x9
SU(9):   renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x9
    SU(4): Data Latency=4 Reg=$x10
  Successors:
    SU(11): Data Latency=1 Reg=$x9
    SU(10): Anti Latency=0
SU(10):   renamable $w10, renamable $w0 = LDPWi $fp, -10, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(9): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    SU(15): Data Latency=4 Reg=$w10
    ExitSU: Ord  Latency=4 Artificial
SU(11):   renamable $x5 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(9): Data Latency=1 Reg=$x9
    SU(5): Data Latency=4 Reg=$x12
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(12):   renamable $x6 = LDRXui $sp, 5, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(13):   renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(14): Data Latency=1 Reg=$w2
SU(14):   STRWui renamable $w2, $sp, 3, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(13): Data Latency=1 Reg=$w2
SU(15):   renamable $w4 = nsw ADDWri renamable $w10, 1, 0, debug-location !304; fft3d.c:196:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 1
  Predecessors:
    SU(10): Data Latency=4 Reg=$w10
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 7
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(15): Ord  Latency=1 Artificial
    SU(13): Ord  Latency=1 Artificial
    SU(12): Ord  Latency=4 Artificial
    SU(11): Ord  Latency=1 Artificial
    SU(10): Ord  Latency=4 Artificial
    SU(7): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 10
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 5 7 12 
  TopQ.A RemainingLatency 0 + 0c > CritPath 10
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  Ready @0c
  TopQ.A BotLatency SU(0) 10c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 12 1 4 5 7 
  TopQ.A RemainingLatency 0 + 1c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(1) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w1, $w11 = LDPWi $sp, 6, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.k); fft3d.c:196:32
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 12 7 4 5 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(4) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x10 = LDRXui $sp, 8, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  Ready @2c
  TopQ.A BotLatency SU(4) 9c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 12 7 2 5 
  TopQ.A RemainingLatency 0 + 3c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(2) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w11 = KILL $w11, implicit-def $x11, debug-location !300; fft3d.c:196:32
  Ready @3c
  TopQ.A TopLatency SU(2) 1c
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 3 
Queue TopQ.A: 12 7 5 
  TopQ.A RemainingLatency 0 + 3c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(5) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) renamable $x12 = LDRSWui $sp, 5, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 7 6 3 
  TopQ.A RemainingLatency 0 + 4c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(6) TOP-PATH                  6 cycles 
  Cand SU(3) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) $x11 = SBFMXri $x11, 0, 31, debug-location !300; fft3d.c:196:32
  Ready @4c
  TopQ.A TopLatency SU(3) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 7 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(6) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !296; fft3d.c:195:23
  Ready @5c
  TopQ.A TopLatency SU(6) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 7 13 8 
  TopQ.A RemainingLatency 0 + 6c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x9 = nsw MADDXrrr renamable $x11, renamable $x23, $xzr, debug-location !305; fft3d.c:196:55
  Ready @6c
  TopQ.A BotLatency SU(8) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 7 13 9 
  TopQ.A RemainingLatency 0 + 7c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(9) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !305; fft3d.c:196:55
  Ready @7c
  TopQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 7 13 11 10 
  TopQ.A RemainingLatency 0 + 8c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(10) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $w10, renamable $w0 = LDPWi $fp, -10, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:26
  Ready @8c
  TopQ.A BotLatency SU(10) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 15 
Queue TopQ.A: 12 7 13 11 
  TopQ.A RemainingLatency 0 + 9c > CritPath 10
  Cand SU(12) ORDER                              
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w3 = LDURWi $fp, -52, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 15 
Queue TopQ.A: 12 11 13 
  TopQ.A RemainingLatency 0 + 10c > CritPath 10
  Cand SU(12) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(12) renamable $x6 = LDRXui $sp, 5, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  Ready @10c
  TopQ.A BotLatency SU(12) 4c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 15 
Queue TopQ.A: 13 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 10
  Cand SU(13) ORDER                              
  Cand SU(11) ORDER                              
Pick Top ORDER     
Scheduling SU(11) renamable $x5 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !305; fft3d.c:196:55
  Ready @11c
  TopQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 15 
  TopQ.A RemainingLatency 0 + 12c > CritPath 10
  Cand SU(13) ORDER                              
Pick Top ORDER     
Scheduling SU(13) renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 15 14 
  TopQ.A RemainingLatency 0 + 13c > CritPath 10
  Cand SU(15) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(15) renamable $w4 = nsw ADDWri renamable $w10, 1, 0, debug-location !304; fft3d.c:196:49
  Ready @13c
  TopQ.A TopLatency SU(15) 9c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) STRWui renamable $w2, $sp, 3, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
SU(1):   renamable $w1, $w11 = LDPWi $sp, 6, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.k); fft3d.c:196:32
SU(4):   renamable $x10 = LDRXui $sp, 8, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
SU(2):   $w11 = KILL $w11, implicit-def $x11, debug-location !300; fft3d.c:196:32
SU(5):   renamable $x12 = LDRSWui $sp, 5, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
SU(3):   $x11 = SBFMXri $x11, 0, 31, debug-location !300; fft3d.c:196:32
SU(6):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !296; fft3d.c:195:23
SU(8):   renamable $x9 = nsw MADDXrrr renamable $x11, renamable $x23, $xzr, debug-location !305; fft3d.c:196:55
SU(9):   renamable $x9 = ADDXrs renamable $x10, renamable $x9, 4, debug-location !305; fft3d.c:196:55
SU(10):   renamable $w10, renamable $w0 = LDPWi $fp, -10, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:26
SU(7):   renamable $w3 = LDURWi $fp, -52, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
SU(12):   renamable $x6 = LDRXui $sp, 5, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
SU(11):   renamable $x5 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !305; fft3d.c:196:55
SU(13):   renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
SU(15):   renamable $w4 = nsw ADDWri renamable $w10, 1, 0, debug-location !304; fft3d.c:196:49
SU(14):   STRWui renamable $w2, $sp, 3, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17

Fixup kills for %bb.34
********** MI Scheduling **********
fftXYZ:%bb.35 for.inc102
  From: renamable $w8 = LDRWui $sp, 7, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
    To: B %bb.29
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !316; fft3d.c:190:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.29
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !316; fft3d.c:190:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 7, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !316 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !316; fft3d.c:190:26
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !316 :: (store 4 into %ir.k); fft3d.c:190:26

Fixup kills for %bb.35
Fixup kills for %bb.36
Fixup kills for %bb.37
********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
    To: CBZW killed renamable $w8, %bb.40, debug-location !339; fft3d.c:207:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w8, %bb.40, debug-location !339; fft3d.c:207:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui renamable $w0, $sp, 6, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   renamable $w8 = LDRWui renamable $x20, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !337 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
SU(1):   STRWui renamable $w0, $sp, 6, debug-location !336 :: (store 4 into %ir.log); fft3d.c:206:9

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: renamable $w0 = LDURWi $fp, -56, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
    To: BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !335; fft3d.c:206:11
 RegionInstrs: 9
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -56, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(3): Data Latency=4 Reg=$w0
SU(1):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
SU(2):   $w9 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(5): Data Latency=1 Reg=$w9
SU(3):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !325; fft3d.c:202:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w8
SU(4):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(5): Anti Latency=0
SU(5):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(4): Data Latency=1 Reg=$nzcv
    SU(4): Anti Latency=0
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
    SU(2): Data Latency=1 Reg=$w9
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !332; fft3d.c:205:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(8): Data Latency=1 Reg=$w8
SU(8):   STRWui renamable $w8, $sp, 2, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w0, debug-location !335; fft3d.c:206:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -56, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w9 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !325; fft3d.c:202:26
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
  Ready @6c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !332; fft3d.c:205:21
  Ready @8c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRWui renamable $w8, $sp, 2, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10
  Ready @9c
  TopQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   renamable $w0 = LDURWi $fp, -56, debug-location !324 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
SU(1):   $w8 = MOVZWi 8192, 0
SU(2):   $w9 = MOVZWi 32, 0
SU(3):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !325; fft3d.c:202:26
SU(4):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !330; fft3d.c:203:9
SU(5):   renamable $w8 = CSELWr renamable $w9, renamable $w8, 12, implicit $nzcv, debug-location !330; fft3d.c:203:9
SU(6):   STRWui renamable $w8, renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(7):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !332; fft3d.c:205:21
SU(8):   STRWui renamable $w8, $sp, 2, debug-location !333 :: (store 4 into %ir.blkp); fft3d.c:205:10

Fixup kills for %bb.38
Fixup kills for %bb.39
Fixup kills for %bb.40
********** MI Scheduling **********
fftXYZ:%bb.41 for.cond117
  From: renamable $w8 = LDRWui $sp, 7, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
    To: Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -52, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.60, implicit $nzcv, debug-location !348; fft3d.c:209:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -52, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !348; fft3d.c:209:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !344 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
SU(1):   renamable $w9 = LDURWi $fp, -52, debug-location !346 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !348; fft3d.c:209:5

Fixup kills for %bb.41
Fixup kills for %bb.42
********** MI Scheduling **********
fftXYZ:%bb.43 for.cond120
  From: renamable $w8 = LDRWui $sp, 5, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
    To: Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.59, implicit $nzcv, debug-location !357; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -40, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !357; fft3d.c:210:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !353 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
SU(1):   renamable $w9 = LDURWi $fp, -40, debug-location !355 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !357; fft3d.c:210:9

Fixup kills for %bb.43
********** MI Scheduling **********
fftXYZ:%bb.44 for.body122
  From: renamable $w8 = LDRWui $sp, 5, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
    To: Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(2):   renamable $w10 = LDURWi $fp, -40, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=$w10
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !361; fft3d.c:211:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !362; fft3d.c:211:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w10
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.46, implicit $nzcv, debug-location !368; fft3d.c:212:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w10 = LDURWi $fp, -40, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !361; fft3d.c:211:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !362; fft3d.c:211:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 4, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !358 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
SU(1):   renamable $w9 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !360 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
SU(2):   renamable $w10 = LDURWi $fp, -40, debug-location !366 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w9, 0, debug-location !361; fft3d.c:211:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !362; fft3d.c:211:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w10, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !368; fft3d.c:212:17
SU(6):   STRWui renamable $w8, $sp, 4, debug-location !363 :: (store 4 into %ir.ble); fft3d.c:211:17

Fixup kills for %bb.44
********** MI Scheduling **********
fftXYZ:%bb.45 if.then126
  From: renamable $w8 = LDURWi $fp, -40, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !370; fft3d.c:213:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -40, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !370; fft3d.c:213:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 4, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.45 ***
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !369 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !370; fft3d.c:213:26
SU(2):   STRWui renamable $w8, $sp, 4, debug-location !371 :: (store 4 into %ir.ble); fft3d.c:213:21

Fixup kills for %bb.45
********** MI Scheduling **********
fftXYZ:%bb.46 if.end128
  From: renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !373 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !373 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(1): Data Latency=4 Reg=$w9
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !375; fft3d.c:214:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !376; fft3d.c:214:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 3, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
SU(4):   STRWui $wzr, $sp, 9, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !373 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STRWui $wzr, $sp, 9, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !375; fft3d.c:214:23
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !376; fft3d.c:214:29
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 3, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17
  Ready @6c
  TopQ.A TopLatency SU(3) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.46 ***
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 4, debug-location !373 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
SU(4):   STRWui $wzr, $sp, 9, debug-location !378 :: (store 4 into %ir.i); fft3d.c:215:20
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w9, 0, debug-location !375; fft3d.c:214:23
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !376; fft3d.c:214:29
SU(3):   STRWui renamable $w8, $sp, 3, debug-location !377 :: (store 4 into %ir.len); fft3d.c:214:17

Fixup kills for %bb.46
********** MI Scheduling **********
fftXYZ:%bb.47 for.cond131
  From: renamable $w8 = LDRWui $sp, 9, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
    To: Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.52, implicit $nzcv, debug-location !385; fft3d.c:215:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 9, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDURWi $fp, -56, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !385; fft3d.c:215:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.47 ***
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !381 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
SU(1):   renamable $w9 = LDURWi $fp, -56, debug-location !383 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !385; fft3d.c:215:13

Fixup kills for %bb.47
********** MI Scheduling **********
fftXYZ:%bb.48 for.body133
  From: renamable $w8 = LDRWui $sp, 5, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
    To: End RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=$w8
SU(1):   STRWui renamable $w8, $sp, 8, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w8
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 5, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui renamable $w8, $sp, 8, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.48 ***
SU(0):   renamable $w8 = LDRWui $sp, 5, debug-location !386 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
SU(1):   STRWui renamable $w8, $sp, 8, debug-location !389 :: (store 4 into %ir.j); fft3d.c:216:24

Fixup kills for %bb.48
********** MI Scheduling **********
fftXYZ:%bb.49 for.cond134
  From: renamable $w8 = LDRWui $sp, 8, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
    To: Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 4, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.51, implicit $nzcv, debug-location !395; fft3d.c:216:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 8, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 4, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !395; fft3d.c:216:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.49 ***
SU(0):   renamable $w8 = LDRWui $sp, 8, debug-location !391 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
SU(1):   renamable $w9 = LDRWui $sp, 4, debug-location !393 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !395; fft3d.c:216:17

Fixup kills for %bb.49
********** MI Scheduling **********
fftXYZ:%bb.50 for.body136
  From: renamable $x10, renamable $x8 = LDPSWi $sp, 8, debug-location !401 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
    To: B %bb.49
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $x10, renamable $x8 = LDPSWi $sp, 8, debug-location !401 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  # preds left       : 0
  # succs left       : 10
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=4 Reg=$w10
    SU(10): Data Latency=4 Reg=$w10
    SU(11): Data Latency=0 Reg=$x10
    SU(9): Data Latency=4 Reg=$x10
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$w8
    SU(12): Data Latency=0 Reg=$x8
    SU(3): Data Latency=4 Reg=$x8
    SU(14): Ord  Latency=0 Memory
SU(1):   renamable $x9 = LDRXui $sp, 8, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$x9
SU(2):   renamable $x11 = LDRSWui $sp, 7, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x11
SU(3):   renamable $x12 = nsw MADDXrrr renamable $x8, renamable $x23, $xzr, debug-location !405; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x12
    SU(12): Anti Latency=0
SU(4):   renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !405; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(3): Data Latency=1 Reg=$x12
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x9
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x9
    SU(5): Anti Latency=0
SU(5):   renamable $w12 = LDRWui $sp, 5, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(10): Data Latency=4 Reg=$w12
SU(6):   renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x21, $xzr, debug-location !405; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$x11
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x11
SU(7):   renamable $x9 = ADDXrs renamable $x9, renamable $x11, 4, debug-location !405; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(4): Data Latency=1 Reg=$x9
    SU(4): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x11
  Successors:
    SU(10): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x9
    SU(8): Anti Latency=0
SU(8):   renamable $w11 = LDRWui $sp, 2, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$w11
SU(9):   renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(7): Data Latency=1 Reg=$x9
    SU(0): Data Latency=4 Reg=$x10
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(10): Anti Latency=0
    SU(11): Anti Latency=0
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
SU(10):   $w9 = SUBWrs renamable $w10, renamable $w12, 0, debug-location !399; fft3d.c:217:29
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
    SU(9): Anti Latency=0
    SU(7): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w10
  Successors:
    SU(12): Data Latency=1 Reg=$w9
    SU(11): Anti Latency=0
SU(11):   renamable $w10 = nsw ADDWri renamable $w10, 1, 0, implicit $x10, debug-location !409; fft3d.c:216:42
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 1
  Predecessors:
    SU(10): Anti Latency=0
    SU(9): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w10
    SU(0): Data Latency=0 Reg=$x10
  Successors:
    SU(14): Data Latency=1 Reg=$w10
SU(12):   renamable $w8 = MADDWrrr renamable $w11, renamable $w8, renamable $w9, implicit $x8, debug-location !403; fft3d.c:217:35
  # preds left       : 6
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(10): Data Latency=1 Reg=$w9
    SU(8): Data Latency=4 Reg=$w11
    SU(3): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=0 Reg=$x8
  Successors:
    SU(13): Data Latency=1 Reg=$w8
SU(13):   STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=$w8
    SU(9): Data Latency=4 Reg=$q0
    SU(9): Ord  Latency=0 Memory
SU(14):   STRWui renamable $w10, $sp, 8, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(11): Data Latency=1 Reg=$w10
    SU(9): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.49
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 11
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 11
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x10, renamable $x8 = LDPSWi $sp, 8, debug-location !401 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  Ready @0c
  TopQ.A BotLatency SU(0) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 11
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x9 = LDRXui $sp, 8, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x11 = LDRSWui $sp, 7, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  Ready @2c
  TopQ.A BotLatency SU(2) 10c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 6 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x12 = nsw MADDXrrr renamable $x8, renamable $x23, $xzr, debug-location !405; fft3d.c:217:49
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !405; fft3d.c:217:49
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 11
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $w12 = LDRWui $sp, 5, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x21, $xzr, debug-location !405; fft3d.c:217:49
  Ready @7c
  TopQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $x9 = ADDXrs renamable $x9, renamable $x11, 4, debug-location !405; fft3d.c:217:49
  Ready @8c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 11
  Cand SU(9) ORDER                              
  Cand SU(8) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $w11 = LDRWui $sp, 2, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  Ready @9c
  TopQ.A BotLatency SU(8) 5c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
  Ready @10c
  TopQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $w9 = SUBWrs renamable $w10, renamable $w12, 0, debug-location !399; fft3d.c:217:29
  Ready @11c
  TopQ.A TopLatency SU(10) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 12 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w10 = nsw ADDWri renamable $w10, 1, 0, implicit $x10, debug-location !409; fft3d.c:216:42
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 12 
  TopQ.A RemainingLatency 0 + 13c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(12) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $w8 = MADDWrrr renamable $w11, renamable $w8, renamable $w9, implicit $x8, debug-location !403; fft3d.c:217:35
  Ready @13c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 13
  Executed: 14c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 13 
  TopQ.A RemainingLatency 0 + 14c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
Pick Top ORDER     
Scheduling SU(13) STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
  Ready @14c
  TopQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 14
  Executed: 15c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) STRWui renamable $w10, $sp, 8, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 15
  Executed: 16c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.50 ***
SU(0):   renamable $x10, renamable $x8 = LDPSWi $sp, 8, debug-location !401 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
SU(1):   renamable $x9 = LDRXui $sp, 8, debug-location !405 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
SU(2):   renamable $x11 = LDRSWui $sp, 7, debug-location !407 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
SU(3):   renamable $x12 = nsw MADDXrrr renamable $x8, renamable $x23, $xzr, debug-location !405; fft3d.c:217:49
SU(4):   renamable $x9 = ADDXrs renamable $x9, renamable $x12, 4, debug-location !405; fft3d.c:217:49
SU(5):   renamable $w12 = LDRWui $sp, 5, debug-location !398 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
SU(6):   renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x21, $xzr, debug-location !405; fft3d.c:217:49
SU(7):   renamable $x9 = ADDXrs renamable $x9, renamable $x11, 4, debug-location !405; fft3d.c:217:49
SU(8):   renamable $w11 = LDRWui $sp, 2, debug-location !400 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
SU(9):   renamable $q0 = LDRQroX renamable $x9, renamable $x10, 0, 1, debug-location !405 :: (load 16 from %ir.148, align 8); fft3d.c:217:49
SU(10):   $w9 = SUBWrs renamable $w10, renamable $w12, 0, debug-location !399; fft3d.c:217:29
SU(11):   renamable $w10 = nsw ADDWri renamable $w10, 1, 0, implicit $x10, debug-location !409; fft3d.c:216:42
SU(12):   renamable $w8 = MADDWrrr renamable $w11, renamable $w8, renamable $w9, implicit $x8, debug-location !403; fft3d.c:217:35
SU(13):   STRQroW renamable $q0, renamable $x19, renamable $w8, 1, 1, debug-location !405 :: (store 16 into %ir.147, align 8); fft3d.c:217:49
SU(14):   STRWui renamable $w10, $sp, 8, debug-location !409 :: (store 4 into %ir.j); fft3d.c:216:42

Fixup kills for %bb.50
********** MI Scheduling **********
fftXYZ:%bb.51 for.inc151
  From: renamable $w8 = LDRWui $sp, 9, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
    To: B %bb.47
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !413; fft3d.c:215:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 9, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.47
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 9, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !413; fft3d.c:215:34
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 9, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.51 ***
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !413 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !413; fft3d.c:215:34
SU(2):   STRWui renamable $w8, $sp, 9, debug-location !413 :: (store 4 into %ir.i); fft3d.c:215:34

Fixup kills for %bb.51
********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: renamable $w0 = LDURWi $fp, -36, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
    To: BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
 RegionInstrs: 6
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -36, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(1):   renamable $w1 = LDRWui $sp, 6, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !419 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(3):   renamable $w3 = LDURWi $fp, -56, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(4):   renamable $x6 = LDRXui $fp, 2, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(5):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !423; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit $x6, implicit-def $sp, debug-location !423; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=4 Artificial
    SU(3): Ord  Latency=4 Artificial
    SU(2): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -36, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 1 2 3 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(5) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w1 = LDRWui $sp, 6, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  Ready @1c
  TopQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 2 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(5) ORDER                              
  Cand SU(4) TOP-PATH                  4 cycles 
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !419 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  Ready @2c
  TopQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(5) ORDER                              
  Cand SU(4) TOP-PATH                  4 cycles 
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $w3 = LDURWi $fp, -56, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  Ready @3c
  TopQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 4
  Cand SU(5) ORDER                              
  Cand SU(4) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x6 = LDRXui $fp, 2, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  Ready @4c
  TopQ.A BotLatency SU(4) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $x5 = ORRXrs $xzr, $x19, 0, debug-location !423; fft3d.c:220:13
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   renamable $w0 = LDURWi $fp, -36, debug-location !417 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
SU(1):   renamable $w1 = LDRWui $sp, 6, debug-location !418 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
SU(2):   renamable $w4, renamable $w2 = LDPWi $sp, 2, debug-location !419 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
SU(3):   renamable $w3 = LDURWi $fp, -56, debug-location !420 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
SU(4):   renamable $x6 = LDRXui $fp, 2, debug-location !422 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
SU(5):   $x5 = ORRXrs $xzr, $x19, 0, debug-location !423; fft3d.c:220:13

Fixup kills for %bb.52
********** MI Scheduling **********
fftXYZ:%bb.53 for.cond154
  From: renamable $w8 = LDURWi $fp, -56, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
    To: Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -56, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 9, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(2):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !430; fft3d.c:221:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   $wzr = SUBSWrs renamable $w9, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Data Latency=4 Reg=$w9
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.58, implicit $nzcv, debug-location !432; fft3d.c:221:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDURWi $fp, -56, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 9, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !430; fft3d.c:221:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w9, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !432; fft3d.c:221:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.53 ***
SU(0):   renamable $w8 = LDURWi $fp, -56, debug-location !429 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
SU(1):   renamable $w9 = LDRWui $sp, 9, debug-location !427 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
SU(2):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !430; fft3d.c:221:33
SU(3):   $wzr = SUBSWrs renamable $w9, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !432; fft3d.c:221:13

Fixup kills for %bb.53
Fixup kills for %bb.54
********** MI Scheduling **********
fftXYZ:%bb.55 for.cond158
  From: STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !434) :: (store 4 into %ir.j); fft3d.c:0
    To: Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !434) :: (store 4 into %ir.j); fft3d.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !438; fft3d.c:222:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(2):   renamable $w9 = LDRWui $sp, 4, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w9
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w9
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.57, implicit $nzcv, debug-location !442; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w9 = LDRWui $sp, 4, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !434) :: (store 4 into %ir.j); fft3d.c:0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !438; fft3d.c:222:31
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !442; fft3d.c:222:17
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.55 ***
SU(2):   renamable $w9 = LDRWui $sp, 4, debug-location !440 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
SU(0):   STRWui renamable $w8, $sp, 8, debug-location !DILocation(line: 0, scope: !434) :: (store 4 into %ir.j); fft3d.c:0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !438; fft3d.c:222:31
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w9, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !442; fft3d.c:222:17

Fixup kills for %bb.55
********** MI Scheduling **********
fftXYZ:%bb.56 for.body160
  From: renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !445 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
    To: B %bb.55
 RegionInstrs: 16
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !445 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$w8
    SU(5): Data Latency=4 Reg=$w8
    SU(11): Out  Latency=1
    SU(11): Data Latency=4 Reg=$w9
    SU(6): Data Latency=4 Reg=$w9
    SU(13): Ord  Latency=0 Memory
SU(1):   renamable $w10 = LDRWui $sp, 5, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(5): Out  Latency=1
    SU(9): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w10
    SU(13): Ord  Latency=0 Memory
SU(2):   renamable $w11 = LDRWui $sp, 2, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w11
    SU(13): Ord  Latency=0 Memory
SU(3):   renamable $w12 = LDURWi $fp, -40, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w12
    SU(13): Ord  Latency=0 Memory
SU(4):   renamable $w13 = LDRWui $sp, 7, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(11): Data Latency=4 Reg=$w13
    SU(13): Ord  Latency=0 Memory
SU(5):   $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !457; fft3d.c:224:33
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w10
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(6): Out  Latency=1
    SU(9): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w10
    SU(12): Anti Latency=0
    SU(9): Anti Latency=0
SU(6):   renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !461; fft3d.c:224:39
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w10
    SU(2): Data Latency=4 Reg=$w11
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(9): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w10
    SU(7): Anti Latency=0
    SU(11): Anti Latency=0
    SU(9): Anti Latency=0
SU(7):   renamable $w11 = LDURWi $fp, -52, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(6): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(11): Data Latency=4 Reg=$w11
    SU(13): Ord  Latency=0 Memory
SU(8):   renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(6): Data Latency=1 Reg=$w10
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(9): Anti Latency=0
    SU(13): Ord  Latency=0 Memory
SU(9):   renamable $x10 = LDRXui $sp, 7, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  # preds left       : 6
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(8): Anti Latency=0
    SU(6): Out  Latency=1
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(13): Data Latency=4 Reg=$x10
    SU(13): Ord  Latency=0 Memory
SU(10):   renamable $w12 = nsw ADDWri renamable $w12, 1, 0, debug-location !447; fft3d.c:223:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w12
  Successors:
    SU(12): Data Latency=1 Reg=$w12
SU(11):   renamable $w9 = MADDWrrr renamable $w11, renamable $w9, renamable $w13, debug-location !452; fft3d.c:223:44
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 7
  Predecessors:
    SU(7): Data Latency=4 Reg=$w11
    SU(6): Anti Latency=0
    SU(4): Data Latency=4 Reg=$w13
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w9
  Successors:
    SU(12): Data Latency=1 Reg=$w9
SU(12):   renamable $w8 = MADDWrrr renamable $w12, renamable $w9, renamable $w8, debug-location !454; fft3d.c:223:28
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(11): Data Latency=1 Reg=$w9
    SU(10): Data Latency=1 Reg=$w12
    SU(5): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(14): Out  Latency=1
    SU(13): Data Latency=1 Reg=$w8
SU(13):   STRQroW renamable $q0, renamable $x10, renamable $w8, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
  # preds left       : 11
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(12): Data Latency=1 Reg=$w8
    SU(9): Data Latency=4 Reg=$x10
    SU(9): Ord  Latency=0 Memory
    SU(8): Data Latency=4 Reg=$q0
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(14): Anti Latency=0
    SU(14): Ord  Latency=1 Memory
SU(14):   renamable $w8 = LDRWui $sp, 8, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 4
  Predecessors:
    SU(13): Anti Latency=0
    SU(13): Ord  Latency=1 Memory
    SU(12): Out  Latency=1
  Successors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=4 Reg=$w8
SU(15):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !463; fft3d.c:222:42
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$w8
ExitSU:   B %bb.55
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !445 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w10 = LDRWui $sp, 5, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(2) TOP-PATH                  15 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w11 = LDRWui $sp, 2, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $w12 = LDURWi $fp, -40, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 10 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w13 = LDRWui $sp, 7, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !457; fft3d.c:224:33
  Ready @5c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !461; fft3d.c:224:39
  Ready @6c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 10 
  TopQ.A RemainingLatency 0 + 7c > CritPath 16
  Cand SU(8) ORDER                              
  Cand SU(7) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w11 = LDURWi $fp, -52, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  Ready @7c
  TopQ.A BotLatency SU(7) 11c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 8c > CritPath 16
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
  Ready @8c
  TopQ.A TopLatency SU(8) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 9c > CritPath 16
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $x10 = LDRXui $sp, 7, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $w12 = nsw ADDWri renamable $w12, 1, 0, debug-location !447; fft3d.c:223:34
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w9 = MADDWrrr renamable $w11, renamable $w9, renamable $w13, debug-location !452; fft3d.c:223:44
  Ready @11c
  TopQ.A TopLatency SU(11) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) renamable $w8 = MADDWrrr renamable $w12, renamable $w9, renamable $w8, debug-location !454; fft3d.c:223:28
  Ready @12c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) STRQroW renamable $q0, renamable $x10, renamable $w8, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
  Ready @13c
  TopQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $w8 = LDRWui $sp, 8, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  Ready @14c
  TopQ.A TopLatency SU(14) 12c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 18 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 15 
Pick Top ONLY1     
Scheduling SU(15) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !463; fft3d.c:222:42
  Ready @18c
  TopQ.A TopLatency SU(15) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.56 ***
SU(0):   renamable $w8, renamable $w9 = LDPWi $sp, 8, debug-location !445 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
SU(1):   renamable $w10 = LDRWui $sp, 5, debug-location !456 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
SU(2):   renamable $w11 = LDRWui $sp, 2, debug-location !458 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
SU(3):   renamable $w12 = LDURWi $fp, -40, debug-location !446 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
SU(4):   renamable $w13 = LDRWui $sp, 7, debug-location !448 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
SU(5):   $w10 = SUBWrs renamable $w8, renamable $w10, 0, debug-location !457; fft3d.c:224:33
SU(6):   renamable $w10 = MADDWrrr renamable $w11, renamable $w9, renamable $w10, debug-location !461; fft3d.c:224:39
SU(7):   renamable $w11 = LDURWi $fp, -52, debug-location !449 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
SU(8):   renamable $q0 = LDRQroW renamable $x19, renamable $w10, 1, 1, debug-location !462 :: (load 16 from %ir.173, align 8); fft3d.c:224:25
SU(9):   renamable $x10 = LDRXui $sp, 7, debug-location !443 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
SU(10):   renamable $w12 = nsw ADDWri renamable $w12, 1, 0, debug-location !447; fft3d.c:223:34
SU(11):   renamable $w9 = MADDWrrr renamable $w11, renamable $w9, renamable $w13, debug-location !452; fft3d.c:223:44
SU(12):   renamable $w8 = MADDWrrr renamable $w12, renamable $w9, renamable $w8, debug-location !454; fft3d.c:223:28
SU(13):   STRQroW renamable $q0, renamable $x10, renamable $w8, 1, 1, debug-location !462 :: (store 16 into %ir.172, align 8); fft3d.c:224:25
SU(14):   renamable $w8 = LDRWui $sp, 8, debug-location !463 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
SU(15):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !463; fft3d.c:222:42

Fixup kills for %bb.56
********** MI Scheduling **********
fftXYZ:%bb.57 for.inc176
  From: renamable $w8 = LDRWui $sp, 9, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
    To: B %bb.53
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !467; fft3d.c:221:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 9, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.53
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 9, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !467; fft3d.c:221:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 9, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.57 ***
SU(0):   renamable $w8 = LDRWui $sp, 9, debug-location !467 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !467; fft3d.c:221:39
SU(2):   STRWui renamable $w8, $sp, 9, debug-location !467 :: (store 4 into %ir.i); fft3d.c:221:39

Fixup kills for %bb.57
********** MI Scheduling **********
fftXYZ:%bb.58 for.inc179
  From: renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
    To: B %bb.43
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w9
    SU(3): Ord  Latency=0 Memory
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !472; fft3d.c:210:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w9
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Ord  Latency=0 Memory
ExitSU:   B %bb.43
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w9 = LDRWui $sp, 5, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !472; fft3d.c:210:37
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 5, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   renamable $w8 = LDRWui renamable $x22, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !471 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
SU(1):   renamable $w9 = LDRWui $sp, 5, debug-location !472 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
SU(2):   $w8 = ADDWrs renamable $w9, renamable $w8, 0, debug-location !472; fft3d.c:210:37
SU(3):   STRWui renamable $w8, $sp, 5, debug-location !472 :: (store 4 into %ir.bls); fft3d.c:210:37

Fixup kills for %bb.58
********** MI Scheduling **********
fftXYZ:%bb.59 for.inc182
  From: renamable $w8 = LDRWui $sp, 7, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
    To: B %bb.41
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !476; fft3d.c:209:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.41
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 7, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !476; fft3d.c:209:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 7, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.59 ***
SU(0):   renamable $w8 = LDRWui $sp, 7, debug-location !476 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !476; fft3d.c:209:26
SU(2):   STRWui renamable $w8, $sp, 7, debug-location !476 :: (store 4 into %ir.k); fft3d.c:209:26

Fixup kills for %bb.59
Fixup kills for %bb.60
Fixup kills for %bb.61
Fixup kills for %bb.62
Fixup kills for %bb.63
********** MI Scheduling **********
fftXYZ:%bb.64 if.end190
  From: $fp, $lr = frame-destroy LDPXi $sp, 16, debug-location !488 :: (load 8 from %stack.18), (load 8 from %stack.17); fft3d.c:233:1
    To: $sp = frame-destroy ADDXri $sp, 144, 0, debug-location !488; fft3d.c:233:1
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 16, debug-location !488 :: (load 8 from %stack.18), (load 8 from %stack.17); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 14, debug-location !488 :: (load 8 from %stack.20), (load 8 from %stack.19); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(2):   $x22, $x21 = frame-destroy LDPXi $sp, 12, debug-location !488 :: (load 8 from %stack.22), (load 8 from %stack.21); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(3):   $x23 = frame-destroy LDRXui $sp, 10, debug-location !488 :: (load 8 from %stack.23); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 144, 0, debug-location !488; fft3d.c:233:1
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $fp, $lr = frame-destroy LDPXi $sp, 16, debug-location !488 :: (load 8 from %stack.18), (load 8 from %stack.17); fft3d.c:233:1
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x20, $x19 = frame-destroy LDPXi $sp, 14, debug-location !488 :: (load 8 from %stack.20), (load 8 from %stack.19); fft3d.c:233:1
  Ready @1c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 3
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $x22, $x21 = frame-destroy LDPXi $sp, 12, debug-location !488 :: (load 8 from %stack.22), (load 8 from %stack.21); fft3d.c:233:1
  Ready @2c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $x23 = frame-destroy LDRXui $sp, 10, debug-location !488 :: (load 8 from %stack.23); fft3d.c:233:1
  Ready @3c
  TopQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.64 ***
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 16, debug-location !488 :: (load 8 from %stack.18), (load 8 from %stack.17); fft3d.c:233:1
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 14, debug-location !488 :: (load 8 from %stack.20), (load 8 from %stack.19); fft3d.c:233:1
SU(2):   $x22, $x21 = frame-destroy LDPXi $sp, 12, debug-location !488 :: (load 8 from %stack.22), (load 8 from %stack.21); fft3d.c:233:1
SU(3):   $x23 = frame-destroy LDRXui $sp, 10, debug-location !488 :: (load 8 from %stack.23); fft3d.c:233:1

Fixup kills for %bb.64
Before MISched:
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=8, align=8, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=16, align=16, at location [SP]
  fi#12: size=16, align=16, at location [SP]
  fi#13: size=16, align=16, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
  fi#17: size=4, align=4, at location [SP]
  fi#18: size=4, align=4, at location [SP]
  fi#19: size=4, align=4, at location [SP]
  fi#20: size=4, align=4, at location [SP]
  fi#21: size=4, align=4, at location [SP]
  fi#22: size=4, align=4, at location [SP]
  fi#23: size=4, align=4, at location [SP]
  fi#24: size=16, align=8, at location [SP]
  fi#25: size=16, align=8, at location [SP]
  fi#26: size=16, align=8, at location [SP]
  fi#27: size=16, align=8, at location [SP]
  fi#28: size=16, align=8, at location [SP]
  fi#29: size=16, align=8, at location [SP]
  fi#30: size=16, align=8, at location [SP]
  fi#31: size=16, align=8, at location [SP]
  fi#32: size=16, align=8, at location [SP]
  fi#33: size=16, align=8, at location [SP]
  fi#34: size=16, align=8, at location [SP]
  fi#35: size=16, align=8, at location [SP]
  fi#36: size=16, align=8, at location [SP]
  fi#37: size=16, align=8, at location [SP]
Function Live Ins: $w0 in %5, $w1 in %6, $w2 in %7, $w3 in %8, $w4 in %9, $x5 in %10, $x6 in %11

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $w4, $x5, $x6
  %11:gpr64 = COPY $x6
  %10:gpr64 = COPY $x5
  %9:gpr32 = COPY $w4
  %8:gpr32 = COPY $w3
  %7:gpr32 = COPY $w2
  %6:gpr32 = COPY $w1
  %5:gpr32 = COPY $w0
  STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
  STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
  STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
  STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
  STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
  STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
  STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
  undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
  STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
  %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
  %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  CBZW %14:gpr32, %bb.2, debug-location !549; fft3d.c:66:9
  B %bb.1, debug-location !549; fft3d.c:66:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !550; fft3d.c:67:9
  $w0 = MOVi32imm 4, debug-location !550; fft3d.c:67:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !550; fft3d.c:67:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !550; fft3d.c:67:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
  %16:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  dead $wzr = SUBSWri %16:gpr32common, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  %18:gpr32 = CSINCWr %16:gpr32common, %16:gpr32common, 10, implicit killed $nzcv, debug-location !552; fft3d.c:71:12
  %19:gpr32 = SBFMWri %18:gpr32, 1, 31, debug-location !552; fft3d.c:71:12
  STRWui %19:gpr32, %stack.15.n1, 0, debug-location !553 :: (store 4 into %ir.n1); fft3d.c:71:8
  %20:gpr32 = MOVi32imm 1
  STRWui %20:gpr32, %stack.17.lj, 0, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  undef %22.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  %24:gpr32 = LSLVWr %20:gpr32, %22.sub_32:gpr64, debug-location !556; fft3d.c:73:12
  STRWui %24:gpr32, %stack.16.li, 0, debug-location !557 :: (store 4 into %ir.li); fft3d.c:73:8
  STRWui %20:gpr32, %stack.10.l, 0, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  %234:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
  undef %171.sub_32:gpr64 = MOVi32imm 528

bb.3.for.cond:
; predecessors: %bb.2, %bb.35
  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

  %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  %26:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  dead $wzr = SUBSWrr %25:gpr32, %26:gpr32, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  Bcc 12, %bb.36, implicit killed $nzcv, debug-location !565; fft3d.c:74:5
  B %bb.4, debug-location !565; fft3d.c:74:5

bb.4.for.body:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  STRWui %31:gpr32, %stack.18.lk, 0, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  %32:gpr32 = UBFMWri %31:gpr32, 31, 30, debug-location !570; fft3d.c:76:16
  STRWui %32:gpr32, %stack.17.lj, 0, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  %33:gpr32common = LDRWui %stack.16.li, 0, debug-location !572 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  dead $wzr = SUBSWri %33:gpr32common, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  %35:gpr32 = CSINCWr %33:gpr32common, %33:gpr32common, 10, implicit killed $nzcv, debug-location !573; fft3d.c:77:17
  %36:gpr32 = SBFMWri %35:gpr32, 1, 31, debug-location !573; fft3d.c:77:17
  STRWui %36:gpr32, %stack.16.li, 0, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  STRWui %36:gpr32, %stack.19.ku, 0, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  STRWui $wzr, %stack.8.i, 0, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16

bb.5.for.cond2:
; predecessors: %bb.4, %bb.15
  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

  %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  %39:gpr32common = LDRWui %stack.16.li, 0, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  %40:gpr32common = SUBWri %39:gpr32common, 1, 0, debug-location !583; fft3d.c:80:29
  dead $wzr = SUBSWrr %38:gpr32, %40:gpr32common, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  Bcc 12, %bb.16, implicit killed $nzcv, debug-location !585; fft3d.c:80:9
  B %bb.6, debug-location !585; fft3d.c:80:9

bb.6.for.body4:
; predecessors: %bb.5
  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

  %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  %179:gpr32 = LDRWui %stack.18.lk, 0, debug-location !588 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  %180:gpr32 = nsw MADDWrrr %178:gpr32, %179:gpr32, $wzr, debug-location !589; fft3d.c:81:21
  STRWui %180:gpr32, %stack.20.i11, 0, debug-location !590 :: (store 4 into %ir.i11); fft3d.c:81:17
  %181:gpr32 = LDRWui %stack.15.n1, 0, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  %182:gpr32 = nsw ADDWrr %180:gpr32, %181:gpr32, debug-location !593; fft3d.c:82:23
  STRWui %182:gpr32, %stack.21.i12, 0, debug-location !594 :: (store 4 into %ir.i12); fft3d.c:82:17
  %183:gpr32 = LDRWui %stack.17.lj, 0, debug-location !596 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
  %184:gpr32 = nsw MADDWrrr %178:gpr32, %183:gpr32, $wzr, debug-location !597; fft3d.c:83:21
  STRWui %184:gpr32, %stack.22.i21, 0, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  %185:gpr32 = nsw ADDWrr %184:gpr32, %179:gpr32, debug-location !601; fft3d.c:84:23
  STRWui %185:gpr32, %stack.23.i22, 0, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  %186:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  dead $wzr = SUBSWri %186:gpr32common, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  Bcc 11, %bb.8, implicit killed $nzcv, debug-location !606; fft3d.c:86:17
  B %bb.7, debug-location !606; fft3d.c:86:17

bb.7.if.then9:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  %199:gpr32 = LDRWui %stack.19.ku, 0, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  %200:gpr32 = LDRWui %stack.8.i, 0, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  %201:gpr32 = nsw ADDWrr %199:gpr32, %200:gpr32, debug-location !611; fft3d.c:87:34
  %270:gpr64sp = ADDXrx %198:gpr64common, %201:gpr32, 52, debug-location !607; fft3d.c:87:22
  B %bb.9, debug-location !612; fft3d.c:88:13

bb.8.if.else:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  %190:gpr32 = LDRWui %stack.19.ku, 0, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  %191:gpr32 = LDRWui %stack.8.i, 0, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  %192:gpr32 = nsw ADDWrr %190:gpr32, %191:gpr32, debug-location !613; fft3d.c:90:22
  %193:gpr64sp = ADDXrx %189:gpr64common, %192:gpr32, 52, debug-location !613; fft3d.c:90:22
  %194:fpr64 = LDRDui %193:gpr64sp, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  STRDui %194:fpr64, %stack.24..compoundliteral, 0, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  %195:fpr64 = LDRDui %193:gpr64sp, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  %196:fpr64 = FNEGDr %195:fpr64, debug-location !613; fft3d.c:90:22
  STRDui %196:fpr64, %stack.24..compoundliteral, 1, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  %270:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

bb.9.if.end20:
; predecessors: %bb.8, %bb.7
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  STRQui %203:fpr128, %269:gpr64sp, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0
  STRWui $wzr, %stack.14.k, 0, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20

bb.10.for.cond21:
; predecessors: %bb.9, %bb.14
  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

  %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  %206:gpr32common = LDRWui %stack.18.lk, 0, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  %207:gpr32common = SUBWri %206:gpr32common, 1, 0, debug-location !622; fft3d.c:92:33
  dead $wzr = SUBSWrr %205:gpr32, %207:gpr32common, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  Bcc 12, %bb.15, implicit killed $nzcv, debug-location !624; fft3d.c:92:13
  B %bb.11, debug-location !624; fft3d.c:92:13

bb.11.for.body24:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !625 :: (store 4 into %ir.j); fft3d.c:93:24

bb.12.for.cond25:
; predecessors: %bb.11, %bb.13
  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

  %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  %213:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  dead $wzr = SUBSWrr %212:gpr32, %213:gpr32, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  Bcc 10, %bb.14, implicit killed $nzcv, debug-location !633; fft3d.c:93:17
  B %bb.13, debug-location !633; fft3d.c:93:17

bb.13.for.body27:
; predecessors: %bb.12
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  %218:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !636 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  %219:gpr64 = LDRSWui %stack.14.k, 0, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
  %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
  %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
  %224:gpr64 = LDRSWui %stack.9.j, 0, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
  %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
  %227:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !641 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
  %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
  %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
  %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
  %232:gpr32 = LDRWui %stack.22.i21, 0, debug-location !645 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
  %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
  %237:fpr64 = LDRDui %stack.12.x11, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  %238:fpr64 = LDRDui %stack.13.x21, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
  STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
  %240:fpr64 = LDRDui %stack.12.x11, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  %241:fpr64 = LDRDui %stack.13.x21, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
  STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
  %243:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  %244:gpr32 = LDRWui %stack.23.i22, 0, debug-location !651 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  %245:gpr32 = LDRWui %stack.14.k, 0, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
  %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
  %248:gpr64 = LDRSWui %stack.9.j, 0, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  %249:fpr64 = LDRDui %stack.11.u1, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  %250:fpr64 = LDRDui %stack.12.x11, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  %251:fpr64 = LDRDui %stack.13.x21, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
  %253:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  %254:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
  %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
  %257:fpr64 = LDRDui %stack.11.u1, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
  STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
  STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
  %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
  %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
  STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
  STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
  %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
  %261:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  %262:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
  %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
  %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
  STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
  %266:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  %267:gpr32common = LDRWui %stack.9.j, 0, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
  STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
  B %bb.12, debug-location !658; fft3d.c:93:17

bb.14.for.inc110:
; predecessors: %bb.12
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !661; fft3d.c:92:39
  STRWui %216:gpr32common, %stack.14.k, 0, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  B %bb.10, debug-location !662; fft3d.c:92:13

bb.15.for.inc113:
; predecessors: %bb.10
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  %210:gpr32common = nsw ADDWri %209:gpr32common, 1, 0, debug-location !665; fft3d.c:80:35
  STRWui %210:gpr32common, %stack.8.i, 0, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  B %bb.5, debug-location !666; fft3d.c:80:9

bb.16.for.end115:
; predecessors: %bb.5
  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

  %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  %43:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  dead $wzr = SUBSWrr %42:gpr32, %43:gpr32, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  Bcc 1, %bb.23, implicit killed $nzcv, debug-location !673; fft3d.c:102:13
  B %bb.17, debug-location !673; fft3d.c:102:13

bb.17.if.then117:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  STRWui $wzr, %stack.14.k, 0, debug-location !674 :: (store 4 into %ir.k); fft3d.c:103:20

bb.18.for.cond118:
; predecessors: %bb.17, %bb.22
  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

  %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  %154:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  dead $wzr = SUBSWrr %153:gpr32, %154:gpr32, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  Bcc 10, %bb.35, implicit killed $nzcv, debug-location !682; fft3d.c:103:13
  B %bb.19, debug-location !682; fft3d.c:103:13

bb.19.for.body120:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !683 :: (store 4 into %ir.j); fft3d.c:104:24

bb.20.for.cond121:
; predecessors: %bb.19, %bb.21
  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

  %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  %160:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  dead $wzr = SUBSWrr %159:gpr32, %160:gpr32, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  Bcc 10, %bb.22, implicit killed $nzcv, debug-location !691; fft3d.c:104:17
  B %bb.21, debug-location !691; fft3d.c:104:17

bb.21.for.body123:
; predecessors: %bb.20
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  %165:gpr64 = LDRSWui %stack.14.k, 0, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  %166:gpr64 = nsw MADDXrrr %165:gpr64, %0:gpr64, $xzr, debug-location !692; fft3d.c:105:21
  %167:gpr64common = ADDXrs %164:gpr64, %166:gpr64, 4, debug-location !692; fft3d.c:105:21
  %168:gpr64 = LDRSWui %stack.9.j, 0, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  %169:gpr64 = UBFMXri %168:gpr64, 60, 59, debug-location !692; fft3d.c:105:21
  %174:gpr64common = MADDXrrr %165:gpr64, %171:gpr64, %234:gpr64, debug-location !697; fft3d.c:105:31
  %175:fpr128 = LDRQroX %174:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  STRQroX %175:fpr128, %167:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  %176:gpr32common = LDRWui %stack.9.j, 0, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  %177:gpr32common = nsw ADDWri %176:gpr32common, 1, 0, debug-location !699; fft3d.c:104:40
  STRWui %177:gpr32common, %stack.9.j, 0, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  B %bb.20, debug-location !700; fft3d.c:104:17

bb.22.for.inc135:
; predecessors: %bb.20
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  %163:gpr32common = nsw ADDWri %162:gpr32common, 1, 0, debug-location !703; fft3d.c:103:33
  STRWui %163:gpr32common, %stack.14.k, 0, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  B %bb.18, debug-location !704; fft3d.c:103:13

bb.23.if.else138:
; predecessors: %bb.16
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  STRWui %45:gpr32, %stack.18.lk, 0, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  %46:gpr32 = UBFMWri %45:gpr32, 31, 30, debug-location !711; fft3d.c:111:20
  STRWui %46:gpr32, %stack.17.lj, 0, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  %47:gpr32common = LDRWui %stack.16.li, 0, debug-location !713 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  dead $wzr = SUBSWri %47:gpr32common, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  %49:gpr32 = CSINCWr %47:gpr32common, %47:gpr32common, 10, implicit killed $nzcv, debug-location !714; fft3d.c:112:21
  %50:gpr32 = SBFMWri %49:gpr32, 1, 31, debug-location !714; fft3d.c:112:21
  STRWui %50:gpr32, %stack.16.li, 0, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  STRWui %50:gpr32, %stack.19.ku, 0, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  STRWui $wzr, %stack.8.i, 0, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20

bb.24.for.cond141:
; predecessors: %bb.23, %bb.34
  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

  %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  %53:gpr32common = LDRWui %stack.16.li, 0, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  %54:gpr32common = SUBWri %53:gpr32common, 1, 0, debug-location !724; fft3d.c:115:33
  dead $wzr = SUBSWrr %52:gpr32, %54:gpr32common, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  Bcc 12, %bb.35, implicit killed $nzcv, debug-location !726; fft3d.c:115:13
  B %bb.25, debug-location !726; fft3d.c:115:13

bb.25.for.body144:
; predecessors: %bb.24
  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

  %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  %57:gpr32 = LDRWui %stack.18.lk, 0, debug-location !729 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  %58:gpr32 = nsw MADDWrrr %56:gpr32, %57:gpr32, $wzr, debug-location !730; fft3d.c:116:25
  STRWui %58:gpr32, %stack.20.i11, 0, debug-location !731 :: (store 4 into %ir.i11); fft3d.c:116:21
  %59:gpr32 = LDRWui %stack.15.n1, 0, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  %60:gpr32 = nsw ADDWrr %58:gpr32, %59:gpr32, debug-location !734; fft3d.c:117:27
  STRWui %60:gpr32, %stack.21.i12, 0, debug-location !735 :: (store 4 into %ir.i12); fft3d.c:117:21
  %61:gpr32 = LDRWui %stack.17.lj, 0, debug-location !737 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
  %62:gpr32 = nsw MADDWrrr %56:gpr32, %61:gpr32, $wzr, debug-location !738; fft3d.c:118:25
  STRWui %62:gpr32, %stack.22.i21, 0, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  %63:gpr32 = nsw ADDWrr %62:gpr32, %57:gpr32, debug-location !742; fft3d.c:119:27
  STRWui %63:gpr32, %stack.23.i22, 0, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  %64:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  dead $wzr = SUBSWri %64:gpr32common, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  Bcc 11, %bb.27, implicit killed $nzcv, debug-location !747; fft3d.c:121:21
  B %bb.26, debug-location !747; fft3d.c:121:21

bb.26.if.then150:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  %77:gpr32 = LDRWui %stack.19.ku, 0, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  %78:gpr32 = LDRWui %stack.8.i, 0, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  %79:gpr32 = nsw ADDWrr %77:gpr32, %78:gpr32, debug-location !752; fft3d.c:122:38
  %271:gpr64sp = ADDXrx %76:gpr64common, %79:gpr32, 52, debug-location !748; fft3d.c:122:26
  B %bb.28, debug-location !753; fft3d.c:123:17

bb.27.if.else154:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  %68:gpr32 = LDRWui %stack.19.ku, 0, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  %69:gpr32 = LDRWui %stack.8.i, 0, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  %70:gpr32 = nsw ADDWrr %68:gpr32, %69:gpr32, debug-location !754; fft3d.c:125:26
  %71:gpr64sp = ADDXrx %67:gpr64common, %70:gpr32, 52, debug-location !754; fft3d.c:125:26
  %72:fpr64 = LDRDui %71:gpr64sp, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  STRDui %72:fpr64, %stack.31..compoundliteral155, 0, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  %73:fpr64 = LDRDui %71:gpr64sp, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  %74:fpr64 = FNEGDr %73:fpr64, debug-location !754; fft3d.c:125:26
  STRDui %74:fpr64, %stack.31..compoundliteral155, 1, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  %271:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

bb.28.if.end167:
; predecessors: %bb.27, %bb.26
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  STRQui %81:fpr128, %269:gpr64sp, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0
  STRWui $wzr, %stack.14.k, 0, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24

bb.29.for.cond168:
; predecessors: %bb.28, %bb.33
  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

  %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  %84:gpr32common = LDRWui %stack.18.lk, 0, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  %85:gpr32common = SUBWri %84:gpr32common, 1, 0, debug-location !763; fft3d.c:127:37
  dead $wzr = SUBSWrr %83:gpr32, %85:gpr32common, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  Bcc 12, %bb.34, implicit killed $nzcv, debug-location !765; fft3d.c:127:17
  B %bb.30, debug-location !765; fft3d.c:127:17

bb.30.for.body171:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !766 :: (store 4 into %ir.j); fft3d.c:128:28

bb.31.for.cond172:
; predecessors: %bb.30, %bb.32
  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

  %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  %91:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  dead $wzr = SUBSWrr %90:gpr32, %91:gpr32, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  Bcc 10, %bb.33, implicit killed $nzcv, debug-location !774; fft3d.c:128:21
  B %bb.32, debug-location !774; fft3d.c:128:21

bb.32.for.body174:
; predecessors: %bb.31
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  %96:gpr32 = LDRWui %stack.14.k, 0, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
  %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
  %101:gpr64 = LDRSWui %stack.9.j, 0, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
  %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
  %104:gpr32 = LDRWui %stack.21.i12, 0, debug-location !781 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
  %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
  %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
  %108:gpr64 = LDRXui %stack.7.x, 0, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  %109:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  %110:gpr64 = LDRSWui %stack.14.k, 0, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
  %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
  %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
  %114:fpr64 = LDRDui %stack.12.x11, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  %115:fpr64 = LDRDui %stack.13.x21, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
  STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
  %117:fpr64 = LDRDui %stack.12.x11, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  %118:fpr64 = LDRDui %stack.13.x21, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
  STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
  %120:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  %121:gpr64 = LDRXui %stack.7.x, 0, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  %122:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  %123:gpr64 = LDRSWui %stack.14.k, 0, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
  %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
  %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
  %127:gpr64 = LDRSWui %stack.9.j, 0, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  %128:fpr64 = LDRDui %stack.11.u1, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  %129:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  %130:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
  %132:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  %133:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
  %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
  %136:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
  STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
  %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
  %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
  STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
  STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
  %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
  %140:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  %141:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  %142:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
  %144:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  %145:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
  %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
  %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
  STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
  %149:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  %150:gpr32common = LDRWui %stack.9.j, 0, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
  STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
  B %bb.31, debug-location !799; fft3d.c:128:21

bb.33.for.inc260:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !802; fft3d.c:127:43
  STRWui %94:gpr32common, %stack.14.k, 0, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  B %bb.29, debug-location !803; fft3d.c:127:17

bb.34.for.inc263:
; predecessors: %bb.29
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  %88:gpr32common = nsw ADDWri %87:gpr32common, 1, 0, debug-location !806; fft3d.c:115:39
  STRWui %88:gpr32common, %stack.8.i, 0, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  B %bb.24, debug-location !807; fft3d.c:115:13

bb.35.for.inc267:
; predecessors: %bb.24, %bb.18
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  %157:gpr32common = nsw ADDWri %156:gpr32common, 2, 0, debug-location !810; fft3d.c:74:27
  STRWui %157:gpr32common, %stack.10.l, 0, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  B %bb.3, debug-location !811; fft3d.c:74:5

bb.36.for.end269:
; predecessors: %bb.3
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  %29:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !814 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  CBZW %29:gpr32, %bb.38, debug-location !816; fft3d.c:138:9
  B %bb.37, debug-location !816; fft3d.c:138:9

bb.37.if.then271:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !817; fft3d.c:139:9
  $w0 = MOVi32imm 4, debug-location !817; fft3d.c:139:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !817; fft3d.c:139:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !817; fft3d.c:139:9

bb.38.if.end272:
; predecessors: %bb.36, %bb.37

  RET_ReallyLR debug-location !818; fft3d.c:140:1

# End machine code for function Swarztrauber.

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: %11:gpr64 = COPY $x6
    To: CBZW %14:gpr32, %bb.2, debug-location !549; fft3d.c:66:9
 RegionInstrs: 18
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32arg=7
tcGPR64=7
GPR32=7
Live In: W0 W1 W2 W3 W4 W5 W6 
Live Out: %13 %0 
Live Thru: 
  LiveReg: %13
  UpdateRegP: SU(17) %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
              to GPR32 -1
  LiveReg: %0
  LiveReg: %14
Top Pressure:
GPR32arg=7
tcGPR64=7
GPR32=7
Bottom Pressure:
GPR32=3
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %11:gpr64 = COPY $x6
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(13): Data Latency=0 Reg=%11
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(1):   %10:gpr64 = COPY $x5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(15): Data Latency=0 Reg=%10
    SU(12): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(2):   %9:gpr32 = COPY $w4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(14): Data Latency=0 Reg=%9
    SU(11): Data Latency=0 Reg=%9
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(3):   %8:gpr32 = COPY $w3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(10): Data Latency=0 Reg=%8
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(4):   %7:gpr32 = COPY $w2
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(9): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(5):   %6:gpr32 = COPY $w1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(8): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(6):   %5:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(7): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32arg 1    tcGPR64 1
  Single Issue       : false;
SU(7):   STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%8
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%9
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(13):   STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%11
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%9
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(16):   %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(17): Data Latency=1 Reg=%13
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(17):   %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(16): Data Latency=1 Reg=%13
  Successors:
    ExitSU: Data Latency=4 Reg=%14
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
ExitSU:   CBZW %14:gpr32, %bb.2, debug-location !549; fft3d.c:66:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(17): Data Latency=4 Reg=%14
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 16 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %11:gpr64 = COPY $x6
Top Pressure:
GPR32arg=6
tcGPR64=6
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 1 2 3 4 5 6 13 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %10:gpr64 = COPY $x5
Top Pressure:
GPR32arg=5
tcGPR64=5
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 2 3 4 5 6 15 12 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(2) PHYS-REG                           
  Cand SU(2) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(2) %9:gpr32 = COPY $w4
Top Pressure:
GPR32arg=4
tcGPR64=4
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 3 4 5 6 15 14 11 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(12) ORDER                              
  Cand SU(3) PHYS-REG                           
  Cand SU(3) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(3) %8:gpr32 = COPY $w3
Top Pressure:
GPR32arg=3
tcGPR64=3
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 4 5 6 15 14 10 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(4) PHYS-REG                           
  Cand SU(4) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(4) %7:gpr32 = COPY $w2
Top Pressure:
GPR32arg=2
tcGPR64=2
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 10 5 6 15 14 9 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(5) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(5) %6:gpr32 = COPY $w1
Top Pressure:
GPR32arg=1
tcGPR64=1
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 10 9 6 15 14 8 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) PHYS-REG                           
  Cand SU(6) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(6) %5:gpr32 = COPY $w0
Top Pressure:
GPR32=7
  GPR32arg: 7 <= 8(+ 0 livethru)
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 15 14 13 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 10 9 8 15 14 7 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(16) ORDER                              
  Cand SU(13) REG-MAX                            
  Cand SU(12) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
Bottom Pressure:
GPR32=4
  LiveReg: %10
  UpdateRegP: SU(12) STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
              to 
  UpdateRegP: SU(15) STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
              to 
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 7 14 13 12 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 10 9 8 7 14 
BotQ.A RemLatency SU(17) 1c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
Bottom Pressure:
GPR32=4
  LiveReg: %9
  UpdateRegP: SU(11) STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
              to 
  UpdateRegP: SU(14) undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
              to GPR32 -1
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 7 8 13 12 11 10 9 
Queue TopQ.P: 
Queue TopQ.A: 16 13 12 11 10 9 8 7 
BotQ.A RemLatency SU(17) 1c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(13) STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %11
  UpdateRegP: SU(13) STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
              to 
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 17 
Queue BotQ.A: 7 8 9 12 11 10 
Queue TopQ.P: 
Queue TopQ.A: 16 7 12 11 10 9 8 
BotQ.A RemLatency SU(17) 1c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
Bottom Pressure:
GPR32=5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 9 10 11 17 
Queue TopQ.P: 
Queue TopQ.A: 16 7 8 11 10 9 
BotQ.A RemLatency SU(17) 1c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(17) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(17) %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
Bottom Pressure:
GPR32=4
  Ready @4c
  BotQ.A TopLatency SU(17) 1c
  BotQ.A BotLatency SU(17) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 9 10 11 16 
Queue TopQ.P: 
Queue TopQ.A: 16 7 8 11 10 9 
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(16) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(16) %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
Bottom Pressure:
GPR32=3
  Ready @5c
  BotQ.A BotLatency SU(16) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 9 10 11 
Queue TopQ.P: 
Queue TopQ.A: 9 7 8 11 10 
  BotQ.A RemainingLatency 0 + 6c > CritPath 5
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
Bottom Pressure:
GPR32=3
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 9 10 
Queue TopQ.P: 
Queue TopQ.A: 9 7 8 10 
  BotQ.A RemainingLatency 0 + 7c > CritPath 5
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
Bottom Pressure:
GPR32=4
  LiveReg: %8
  UpdateRegP: SU(10) STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
              to 
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 9 
Queue TopQ.P: 
Queue TopQ.A: 9 7 8 
  BotQ.A RemainingLatency 0 + 8c > CritPath 5
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %7
  UpdateRegP: SU(9) STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
              to 
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  BotQ.A RemainingLatency 0 + 9c > CritPath 5
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(7) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
Bottom Pressure:
GPR32=6
  LiveReg: %6
  UpdateRegP: SU(8) STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
              to 
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
Bottom Pressure:
GPR32=7
  LiveReg: %5
  UpdateRegP: SU(7) STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
              to 
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %11:gpr64 = COPY $x6
SU(1):   %10:gpr64 = COPY $x5
SU(2):   %9:gpr32 = COPY $w4
SU(3):   %8:gpr32 = COPY $w3
SU(4):   %7:gpr32 = COPY $w2
SU(5):   %6:gpr32 = COPY $w1
SU(6):   %5:gpr32 = COPY $w0
SU(7):   STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
SU(8):   STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
SU(9):   STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
SU(10):   STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
SU(11):   STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
SU(16):   %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
SU(17):   %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
SU(12):   STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
SU(13):   STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
SU(14):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
SU(15):   STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15

********** MI Scheduling **********
Swarztrauber:%bb.2 if.end
  From: %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
    To: End RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %16:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=%16
    SU(2): Data Latency=4 Reg=%16
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWri %16:gpr32common, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%16
  Successors:
    SU(3): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(3):   %18:gpr32 = CSINCWr %16:gpr32common, %16:gpr32common, 10, implicit killed $nzcv, debug-location !552; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$nzcv
    SU(1): Data Latency=4 Reg=%16
  Successors:
    SU(4): Data Latency=1 Reg=%18
  Single Issue       : false;
SU(4):   %19:gpr32 = SBFMWri %18:gpr32, 1, 31, debug-location !552; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%18
  Successors:
    SU(5): Data Latency=1 Reg=%19
  Single Issue       : false;
SU(5):   STRWui %19:gpr32, %stack.15.n1, 0, debug-location !553 :: (store 4 into %ir.n1); fft3d.c:71:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%19
  Single Issue       : false;
SU(6):   %20:gpr32 = MOVi32imm 1
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(11): Data Latency=1 Reg=%20
    SU(9): Data Latency=1 Reg=%20
    SU(7): Data Latency=1 Reg=%20
  Single Issue       : false;
SU(7):   STRWui %20:gpr32, %stack.17.lj, 0, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%20
  Single Issue       : false;
SU(8):   undef %22.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(9): Data Latency=4 Reg=%22
  Single Issue       : false;
SU(9):   %24:gpr32 = LSLVWr %20:gpr32, %22.sub_32:gpr64, debug-location !556; fft3d.c:73:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(8): Data Latency=4 Reg=%22
    SU(6): Data Latency=1 Reg=%20
  Successors:
    SU(10): Data Latency=1 Reg=%24
  Single Issue       : false;
SU(10):   STRWui %24:gpr32, %stack.16.li, 0, debug-location !557 :: (store 4 into %ir.li); fft3d.c:73:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=%24
  Single Issue       : false;
SU(11):   STRWui %20:gpr32, %stack.10.l, 0, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%20
  Single Issue       : false;
SU(12):   %234:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(13):   undef %171.sub_32:gpr64 = MOVi32imm 528
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 12 11 10 7 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 13 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) undef %171.sub_32:gpr64 = MOVi32imm 528
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(5) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(10) BOT-PATH                  5 cycles 
  Cand SU(5) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) STRWui %19:gpr32, %stack.15.n1, 0, debug-location !553 :: (store 4 into %ir.n1); fft3d.c:71:8
  Ready @1c
  BotQ.A TopLatency SU(5) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(4) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(10) BOT-PATH                  5 cycles 
  Cand SU(4) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %19:gpr32 = SBFMWri %18:gpr32, 1, 31, debug-location !552; fft3d.c:71:12
  Ready @2c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(10) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(10) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) STRWui %24:gpr32, %stack.16.li, 0, debug-location !557 :: (store 4 into %ir.li); fft3d.c:73:8
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 3 7 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) %18:gpr32 = CSINCWr %16:gpr32common, %16:gpr32common, 10, implicit killed $nzcv, debug-location !552; fft3d.c:71:12
  Ready @4c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 9 7 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(9) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(9) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) %24:gpr32 = LSLVWr %20:gpr32, %22.sub_32:gpr64, debug-location !556; fft3d.c:73:12
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 0 12 11 2 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) dead $wzr = SUBSWri %16:gpr32common, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  Ready @6c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 1 
Queue BotQ.A: 0 12 11 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(11) 1c
  BotQ.A RemainingLatency 3 + 7c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(11) STRWui %20:gpr32, %stack.10.l, 0, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 1 
Queue BotQ.A: 0 12 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
  BotQ.A RemainingLatency 0 + 8c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(7) BOT-PATH                  1 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) STRWui %20:gpr32, %stack.17.lj, 0, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 12 6 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
  BotQ.A RemainingLatency 0 + 9c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) %234:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 8 6 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 
  BotQ.A RemainingLatency 0 + 10c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) undef %22.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  Ready @10c
  BotQ.A BotLatency SU(8) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 
  BotQ.A RemainingLatency 0 + 11c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %20:gpr32 = MOVi32imm 1
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 12c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %16:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  Ready @12c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
SU(1):   %16:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
SU(6):   %20:gpr32 = MOVi32imm 1
SU(8):   undef %22.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
SU(12):   %234:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
SU(7):   STRWui %20:gpr32, %stack.17.lj, 0, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
SU(11):   STRWui %20:gpr32, %stack.10.l, 0, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
SU(2):   dead $wzr = SUBSWri %16:gpr32common, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
SU(9):   %24:gpr32 = LSLVWr %20:gpr32, %22.sub_32:gpr64, debug-location !556; fft3d.c:73:12
SU(3):   %18:gpr32 = CSINCWr %16:gpr32common, %16:gpr32common, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
SU(10):   STRWui %24:gpr32, %stack.16.li, 0, debug-location !557 :: (store 4 into %ir.li); fft3d.c:73:8
SU(4):   %19:gpr32 = SBFMWri %18:gpr32, 1, 31, debug-location !552; fft3d.c:71:12
SU(5):   STRWui %19:gpr32, %stack.15.n1, 0, debug-location !553 :: (store 4 into %ir.n1); fft3d.c:71:8
SU(13):   undef %171.sub_32:gpr64 = MOVi32imm 528

********** MI Scheduling **********
Swarztrauber:%bb.3 for.cond
  From: %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
    To: Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%25
  Single Issue       : false;
SU(1):   %26:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%26
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %25:gpr32, %26:gpr32, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%26
    SU(0): Data Latency=4 Reg=%25
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %25:gpr32, %26:gpr32, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %26:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
SU(1):   %26:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
SU(2):   dead $wzr = SUBSWrr %25:gpr32, %26:gpr32, implicit-def $nzcv, debug-location !565; fft3d.c:74:5

********** MI Scheduling **********
Swarztrauber:%bb.4 for.body
  From: %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%31
    SU(1): Data Latency=4 Reg=%31
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRWui %31:gpr32, %stack.18.lk, 0, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%31
  Single Issue       : false;
SU(2):   %32:gpr32 = UBFMWri %31:gpr32, 31, 30, debug-location !570; fft3d.c:76:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%31
  Successors:
    SU(3): Data Latency=1 Reg=%32
  Single Issue       : false;
SU(3):   STRWui %32:gpr32, %stack.17.lj, 0, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%32
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(4):   %33:gpr32common = LDRWui %stack.16.li, 0, debug-location !572 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(6): Data Latency=4 Reg=%33
    SU(5): Data Latency=4 Reg=%33
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(5):   dead $wzr = SUBSWri %33:gpr32common, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%33
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(6):   %35:gpr32 = CSINCWr %33:gpr32common, %33:gpr32common, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=4 Reg=%33
  Successors:
    SU(7): Data Latency=1 Reg=%35
  Single Issue       : false;
SU(7):   %36:gpr32 = SBFMWri %35:gpr32, 1, 31, debug-location !573; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%35
  Successors:
    SU(9): Data Latency=1 Reg=%36
    SU(8): Data Latency=1 Reg=%36
  Single Issue       : false;
SU(8):   STRWui %36:gpr32, %stack.16.li, 0, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%36
    SU(4): Ord  Latency=0 Memory
  Single Issue       : false;
SU(9):   STRWui %36:gpr32, %stack.19.ku, 0, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%36
  Single Issue       : false;
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 8 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 4 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) STRWui $wzr, %stack.8.i, 0, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 9 8 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(9) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(9) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %36:gpr32, %stack.19.ku, 0, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  Ready @1c
  BotQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 8 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(8) 7c
  BotQ.A RemainingLatency 7 + 2c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(8) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) STRWui %36:gpr32, %stack.16.li, 0, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  Ready @2c
  BotQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 7 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(7) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(7) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %36:gpr32 = SBFMWri %35:gpr32, 1, 31, debug-location !573; fft3d.c:77:17
  Ready @3c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 6 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %35:gpr32 = CSINCWr %33:gpr32common, %33:gpr32common, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
  Ready @4c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %32:gpr32, %stack.17.lj, 0, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) dead $wzr = SUBSWri %33:gpr32common, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  Ready @6c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 7c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %32:gpr32 = UBFMWri %31:gpr32, 31, 30, debug-location !570; fft3d.c:76:16
  Ready @7c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %31:gpr32, %stack.18.lk, 0, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  Ready @8c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 10 BotQ.A
Queue BotQ.P: 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %33:gpr32common = LDRWui %stack.16.li, 0, debug-location !572 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  Ready @10c
  BotQ.A BotLatency SU(4) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 12 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 11
  Executed: 13c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
SU(4):   %33:gpr32common = LDRWui %stack.16.li, 0, debug-location !572 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
SU(1):   STRWui %31:gpr32, %stack.18.lk, 0, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
SU(2):   %32:gpr32 = UBFMWri %31:gpr32, 31, 30, debug-location !570; fft3d.c:76:16
SU(5):   dead $wzr = SUBSWri %33:gpr32common, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
SU(3):   STRWui %32:gpr32, %stack.17.lj, 0, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
SU(6):   %35:gpr32 = CSINCWr %33:gpr32common, %33:gpr32common, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
SU(7):   %36:gpr32 = SBFMWri %35:gpr32, 1, 31, debug-location !573; fft3d.c:77:17
SU(8):   STRWui %36:gpr32, %stack.16.li, 0, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
SU(9):   STRWui %36:gpr32, %stack.19.ku, 0, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16

********** MI Scheduling **********
Swarztrauber:%bb.5 for.cond2
  From: %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%38
  Single Issue       : false;
SU(1):   %39:gpr32common = LDRWui %stack.16.li, 0, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%39
  Single Issue       : false;
SU(2):   %40:gpr32common = SUBWri %39:gpr32common, 1, 0, debug-location !583; fft3d.c:80:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%39
  Successors:
    SU(3): Data Latency=1 Reg=%40
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %38:gpr32, %40:gpr32common, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%40
    SU(0): Data Latency=4 Reg=%38
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %38:gpr32, %40:gpr32common, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %40:gpr32common = SUBWri %39:gpr32common, 1, 0, debug-location !583; fft3d.c:80:29
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %39:gpr32common = LDRWui %stack.16.li, 0, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(1):   %39:gpr32common = LDRWui %stack.16.li, 0, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
SU(0):   %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
SU(2):   %40:gpr32common = SUBWri %39:gpr32common, 1, 0, debug-location !583; fft3d.c:80:29
SU(3):   dead $wzr = SUBSWrr %38:gpr32, %40:gpr32common, implicit-def $nzcv, debug-location !585; fft3d.c:80:9

********** MI Scheduling **********
Swarztrauber:%bb.6 for.body4
  From: %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
    To: Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17
 RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%178
    SU(2): Data Latency=4 Reg=%178
  Single Issue       : false;
SU(1):   %179:gpr32 = LDRWui %stack.18.lk, 0, debug-location !588 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=%179
    SU(2): Data Latency=4 Reg=%179
  Single Issue       : false;
SU(2):   %180:gpr32 = nsw MADDWrrr %178:gpr32, %179:gpr32, $wzr, debug-location !589; fft3d.c:81:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%179
    SU(0): Data Latency=4 Reg=%178
  Successors:
    SU(5): Data Latency=1 Reg=%180
    SU(3): Data Latency=1 Reg=%180
  Single Issue       : false;
SU(3):   STRWui %180:gpr32, %stack.20.i11, 0, debug-location !590 :: (store 4 into %ir.i11); fft3d.c:81:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%180
  Single Issue       : false;
SU(4):   %181:gpr32 = LDRWui %stack.15.n1, 0, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%181
  Single Issue       : false;
SU(5):   %182:gpr32 = nsw ADDWrr %180:gpr32, %181:gpr32, debug-location !593; fft3d.c:82:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%180
    SU(4): Data Latency=4 Reg=%181
  Successors:
    SU(6): Data Latency=1 Reg=%182
  Single Issue       : false;
SU(6):   STRWui %182:gpr32, %stack.21.i12, 0, debug-location !594 :: (store 4 into %ir.i12); fft3d.c:82:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%182
  Single Issue       : false;
SU(7):   %183:gpr32 = LDRWui %stack.17.lj, 0, debug-location !596 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%183
  Single Issue       : false;
SU(8):   %184:gpr32 = nsw MADDWrrr %178:gpr32, %183:gpr32, $wzr, debug-location !597; fft3d.c:83:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(7): Data Latency=4 Reg=%183
    SU(0): Data Latency=4 Reg=%178
  Successors:
    SU(10): Data Latency=1 Reg=%184
    SU(9): Data Latency=1 Reg=%184
  Single Issue       : false;
SU(9):   STRWui %184:gpr32, %stack.22.i21, 0, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%184
  Single Issue       : false;
SU(10):   %185:gpr32 = nsw ADDWrr %184:gpr32, %179:gpr32, debug-location !601; fft3d.c:84:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=%184
    SU(1): Data Latency=4 Reg=%179
  Successors:
    SU(11): Data Latency=1 Reg=%185
  Single Issue       : false;
SU(11):   STRWui %185:gpr32, %stack.23.i22, 0, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%185
  Single Issue       : false;
SU(12):   %186:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%186
  Single Issue       : false;
SU(13):   dead $wzr = SUBSWri %186:gpr32common, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(12): Data Latency=4 Reg=%186
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(13): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 11 9 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) STRWui %185:gpr32, %stack.23.i22, 0, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  Ready @0c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 6 10 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRWui %182:gpr32, %stack.21.i12, 0, debug-location !594 :: (store 4 into %ir.i12); fft3d.c:82:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 2c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %185:gpr32 = nsw ADDWrr %184:gpr32, %179:gpr32, debug-location !601; fft3d.c:84:23
  Ready @2c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %184:gpr32, %stack.22.i21, 0, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  Ready @3c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %182:gpr32 = nsw ADDWrr %180:gpr32, %181:gpr32, debug-location !593; fft3d.c:82:23
  Ready @4c
  BotQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 3 8 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %180:gpr32, %stack.20.i11, 0, debug-location !590 :: (store 4 into %ir.i11); fft3d.c:81:17
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 13 8 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(13) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(13) dead $wzr = SUBSWri %186:gpr32common, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 12 
Queue BotQ.A: 2 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %184:gpr32 = nsw MADDWrrr %178:gpr32, %183:gpr32, $wzr, debug-location !597; fft3d.c:83:21
  Ready @7c
  BotQ.A TopLatency SU(8) 4c
  BotQ.A BotLatency SU(8) 2c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 12 
Queue BotQ.A: 2 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %180:gpr32 = nsw MADDWrrr %178:gpr32, %179:gpr32, $wzr, debug-location !589; fft3d.c:81:21
  Ready @8c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 12 1 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %181:gpr32 = LDRWui %stack.15.n1, 0, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  Ready @9c
  BotQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 0 1 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %186:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %183:gpr32 = LDRWui %stack.17.lj, 0, debug-location !596 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
  Ready @11c
  BotQ.A BotLatency SU(7) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 12c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %179:gpr32 = LDRWui %stack.18.lk, 0, debug-location !588 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
SU(1):   %179:gpr32 = LDRWui %stack.18.lk, 0, debug-location !588 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
SU(7):   %183:gpr32 = LDRWui %stack.17.lj, 0, debug-location !596 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
SU(12):   %186:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
SU(4):   %181:gpr32 = LDRWui %stack.15.n1, 0, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
SU(2):   %180:gpr32 = nsw MADDWrrr %178:gpr32, %179:gpr32, $wzr, debug-location !589; fft3d.c:81:21
SU(8):   %184:gpr32 = nsw MADDWrrr %178:gpr32, %183:gpr32, $wzr, debug-location !597; fft3d.c:83:21
SU(13):   dead $wzr = SUBSWri %186:gpr32common, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
SU(3):   STRWui %180:gpr32, %stack.20.i11, 0, debug-location !590 :: (store 4 into %ir.i11); fft3d.c:81:17
SU(5):   %182:gpr32 = nsw ADDWrr %180:gpr32, %181:gpr32, debug-location !593; fft3d.c:82:23
SU(9):   STRWui %184:gpr32, %stack.22.i21, 0, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
SU(10):   %185:gpr32 = nsw ADDWrr %184:gpr32, %179:gpr32, debug-location !601; fft3d.c:84:23
SU(6):   STRWui %182:gpr32, %stack.21.i12, 0, debug-location !594 :: (store 4 into %ir.i12); fft3d.c:82:17
SU(11):   STRWui %185:gpr32, %stack.23.i22, 0, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17

********** MI Scheduling **********
Swarztrauber:%bb.7 if.then9
  From: %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
    To: B %bb.9, debug-location !612; fft3d.c:88:13
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=%198
  Single Issue       : false;
SU(1):   %199:gpr32 = LDRWui %stack.19.ku, 0, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%199
  Single Issue       : false;
SU(2):   %200:gpr32 = LDRWui %stack.8.i, 0, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%200
  Single Issue       : false;
SU(3):   %201:gpr32 = nsw ADDWrr %199:gpr32, %200:gpr32, debug-location !611; fft3d.c:87:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=%200
    SU(1): Data Latency=4 Reg=%199
  Successors:
    SU(4): Data Latency=1 Reg=%201
  Single Issue       : false;
SU(4):   %270:gpr64sp = ADDXrx %198:gpr64common, %201:gpr32, 52, debug-location !607; fft3d.c:87:22
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%201
    SU(0): Data Latency=4 Reg=%198
  Single Issue       : false;
ExitSU:   B %bb.9, debug-location !612; fft3d.c:88:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %270:gpr64sp = ADDXrx %198:gpr64common, %201:gpr32, 52, debug-location !607; fft3d.c:87:22
  Ready @0c
  BotQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %201:gpr32 = nsw ADDWrr %199:gpr32, %200:gpr32, debug-location !611; fft3d.c:87:34
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %200:gpr32 = LDRWui %stack.8.i, 0, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %199:gpr32 = LDRWui %stack.19.ku, 0, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(1):   %199:gpr32 = LDRWui %stack.19.ku, 0, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
SU(2):   %200:gpr32 = LDRWui %stack.8.i, 0, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
SU(0):   %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
SU(3):   %201:gpr32 = nsw ADDWrr %199:gpr32, %200:gpr32, debug-location !611; fft3d.c:87:34
SU(4):   %270:gpr64sp = ADDXrx %198:gpr64common, %201:gpr32, 52, debug-location !607; fft3d.c:87:22

********** MI Scheduling **********
Swarztrauber:%bb.8 if.else
  From: %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=%189
  Single Issue       : false;
SU(1):   %190:gpr32 = LDRWui %stack.19.ku, 0, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%190
  Single Issue       : false;
SU(2):   %191:gpr32 = LDRWui %stack.8.i, 0, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%191
  Single Issue       : false;
SU(3):   %192:gpr32 = nsw ADDWrr %190:gpr32, %191:gpr32, debug-location !613; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(2): Data Latency=4 Reg=%191
    SU(1): Data Latency=4 Reg=%190
  Successors:
    SU(4): Data Latency=1 Reg=%192
  Single Issue       : false;
SU(4):   %193:gpr64sp = ADDXrx %189:gpr64common, %192:gpr32, 52, debug-location !613; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Data Latency=1 Reg=%192
    SU(0): Data Latency=4 Reg=%189
  Successors:
    SU(7): Data Latency=1 Reg=%193
    SU(5): Data Latency=1 Reg=%193
  Single Issue       : false;
SU(5):   %194:fpr64 = LDRDui %193:gpr64sp, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=%193
  Successors:
    SU(6): Data Latency=4 Reg=%194
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Single Issue       : false;
SU(6):   STRDui %194:fpr64, %stack.24..compoundliteral, 0, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=%194
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Ord  Latency=1 Memory
  Single Issue       : false;
SU(7):   %195:fpr64 = LDRDui %193:gpr64sp, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%193
  Successors:
    SU(8): Data Latency=4 Reg=%195
    SU(9): Ord  Latency=0 Memory
  Single Issue       : false;
SU(8):   %196:fpr64 = FNEGDr %195:fpr64, debug-location !613; fft3d.c:90:22
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Data Latency=4 Reg=%195
  Successors:
    SU(9): Data Latency=1 Reg=%196
  Single Issue       : false;
SU(9):   STRDui %196:fpr64, %stack.24..compoundliteral, 1, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%196
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Single Issue       : false;
SU(10):   %270:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %270:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) STRDui %196:fpr64, %stack.24..compoundliteral, 1, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  Ready @1c
  BotQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %196:fpr64 = FNEGDr %195:fpr64, debug-location !613; fft3d.c:90:22
  Ready @2c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 6 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %195:fpr64 = LDRDui %193:gpr64sp, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  Ready @6c
  BotQ.A BotLatency SU(7) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRDui %194:fpr64, %stack.24..compoundliteral, 0, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  Ready @7c
  BotQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 11 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %194:fpr64 = LDRDui %193:gpr64sp, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  Ready @11c
  BotQ.A BotLatency SU(5) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 6
  Executed: 12c
  Critical: 6c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %193:gpr64sp = ADDXrx %189:gpr64common, %192:gpr32, 52, debug-location !613; fft3d.c:90:22
  Ready @12c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 7
  Executed: 13c
  Critical: 7c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %192:gpr32 = nsw ADDWrr %190:gpr32, %191:gpr32, debug-location !613; fft3d.c:90:22
  Ready @13c
  BotQ.A BotLatency SU(3) 12c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 8
  Executed: 14c
  Critical: 8c, 8 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 16 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  Ready @16c
  BotQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 9
  Executed: 17c
  Critical: 9c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %191:gpr32 = LDRWui %stack.8.i, 0, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  Ready @17c
  BotQ.A BotLatency SU(2) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 10
  Executed: 18c
  Critical: 10c, 10 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %190:gpr32 = LDRWui %stack.19.ku, 0, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 11
  Executed: 19c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(1):   %190:gpr32 = LDRWui %stack.19.ku, 0, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
SU(2):   %191:gpr32 = LDRWui %stack.8.i, 0, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
SU(0):   %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
SU(3):   %192:gpr32 = nsw ADDWrr %190:gpr32, %191:gpr32, debug-location !613; fft3d.c:90:22
SU(4):   %193:gpr64sp = ADDXrx %189:gpr64common, %192:gpr32, 52, debug-location !613; fft3d.c:90:22
SU(5):   %194:fpr64 = LDRDui %193:gpr64sp, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
SU(6):   STRDui %194:fpr64, %stack.24..compoundliteral, 0, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
SU(7):   %195:fpr64 = LDRDui %193:gpr64sp, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
SU(8):   %196:fpr64 = FNEGDr %195:fpr64, debug-location !613; fft3d.c:90:22
SU(9):   STRDui %196:fpr64, %stack.24..compoundliteral, 1, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
SU(10):   %270:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

********** MI Scheduling **********
Swarztrauber:%bb.9 if.end20
  From: %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%203
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRQui %203:fpr128, %269:gpr64sp, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%203
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 1 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui $wzr, %stack.14.k, 0, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRQui %203:fpr128, %269:gpr64sp, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
SU(1):   STRQui %203:fpr128, %269:gpr64sp, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0

********** MI Scheduling **********
Swarztrauber:%bb.10 for.cond21
  From: %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
    To: Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%205
  Single Issue       : false;
SU(1):   %206:gpr32common = LDRWui %stack.18.lk, 0, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%206
  Single Issue       : false;
SU(2):   %207:gpr32common = SUBWri %206:gpr32common, 1, 0, debug-location !622; fft3d.c:92:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%206
  Successors:
    SU(3): Data Latency=1 Reg=%207
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %205:gpr32, %207:gpr32common, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%207
    SU(0): Data Latency=4 Reg=%205
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %205:gpr32, %207:gpr32common, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %207:gpr32common = SUBWri %206:gpr32common, 1, 0, debug-location !622; fft3d.c:92:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %206:gpr32common = LDRWui %stack.18.lk, 0, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(1):   %206:gpr32common = LDRWui %stack.18.lk, 0, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
SU(0):   %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
SU(2):   %207:gpr32common = SUBWri %206:gpr32common, 1, 0, debug-location !622; fft3d.c:92:33
SU(3):   dead $wzr = SUBSWrr %205:gpr32, %207:gpr32common, implicit-def $nzcv, debug-location !624; fft3d.c:92:13

********** MI Scheduling **********
Swarztrauber:%bb.12 for.cond25
  From: %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
    To: Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%212
  Single Issue       : false;
SU(1):   %213:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%213
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %212:gpr32, %213:gpr32, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%213
    SU(0): Data Latency=4 Reg=%212
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %212:gpr32, %213:gpr32, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %213:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
SU(1):   %213:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
SU(2):   dead $wzr = SUBSWrr %212:gpr32, %213:gpr32, implicit-def $nzcv, debug-location !633; fft3d.c:93:17

********** MI Scheduling **********
Swarztrauber:%bb.13 for.body27
  From: %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
    To: B %bb.12, debug-location !658; fft3d.c:93:17
 RegionInstrs: 66
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
Live In: %171 %234 %269 %0 
Live Out: %171 %234 %269 %0 
Live Thru: GPR32=4
  LiveReg: %171
  UpdateRegP: SU(18) %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
              to GPR32 1
  UpdateRegP: SU(32) %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
              to GPR32 1
  LiveReg: %234
  UpdateRegP: SU(18) %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
              to 
  UpdateRegP: SU(32) %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
              to 
  LiveReg: %269
  UpdateRegP: SU(9) STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  UpdateRegP: SU(15) STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  LiveReg: %0
  UpdateRegP: SU(4) %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
              to 
  UpdateRegP: SU(12) %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
              to 
Top Pressure:
GPR32=4
Bottom Pressure:
GPR32=4
Excess PSets: 
Cluster ld/st SU(2) - SU(30)
  Copy Succ SU(17)
  Copy Succ SU(11)
  Copy Succ SU(3)
Cluster ld/st SU(44) - SU(34)
  Copy Succ SU(58)
  Copy Succ SU(47)
Cluster ld/st SU(6) - SU(33)
  Copy Succ SU(7)
  Copy Succ SU(65)
Cluster ld/st SU(23) - SU(39)
  Copy Succ SU(25)
Cluster ld/st SU(54) - SU(19)
  Copy Succ SU(56)
Cluster ld/st SU(24) - SU(40)
  Copy Succ SU(25)
Cluster ld/st SU(55) - SU(20)
  Copy Succ SU(56)
Cluster ld/st SU(57) - SU(53)
Cluster ld/st SU(51) - SU(50)
Cluster ld/st SU(46) - SU(45)
Cluster ld/st SU(42) - SU(38)
Cluster ld/st SU(60) - SU(49)
  Copy Succ SU(61)
Cluster ld/st SU(26) - SU(22)
  Copy Succ SU(27)
SU(0):   %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 27
  Successors:
    SU(13): Data Latency=4 Reg=%217
    SU(5): Data Latency=4 Reg=%217
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %218:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !636 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(3): Data Latency=4 Reg=%218
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %219:gpr64 = LDRSWui %stack.14.k, 0, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  # preds left       : 0
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(17): Data Latency=4 Reg=%219
    SU(11): Data Latency=4 Reg=%219
    SU(3): Data Latency=4 Reg=%219
    SU(30): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 25
  Predecessors:
    SU(2): Data Latency=4 Reg=%219
    SU(1): Data Latency=4 Reg=%218
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(4): Data Latency=1 Reg=%221
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 24
  Predecessors:
    SU(3): Data Latency=1 Reg=%221
  Successors:
    SU(5): Data Latency=1 Reg=%222
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 23
  Predecessors:
    SU(4): Data Latency=1 Reg=%222
    SU(0): Data Latency=4 Reg=%217
  Successors:
    SU(8): Data Latency=1 Reg=%223
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %224:gpr64 = LDRSWui %stack.9.j, 0, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  # preds left       : 0
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 27
  Successors:
    SU(7): Data Latency=4 Reg=%224
    SU(65): Ord  Latency=0 Memory
    SU(33): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 23
  Predecessors:
    SU(6): Data Latency=4 Reg=%224
    SU(33): Ord  Latency=0 Artificial
  Successors:
    SU(28): Data Latency=1 Reg=%225
    SU(14): Data Latency=1 Reg=%225
    SU(8): Data Latency=1 Reg=%225
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 18
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 22
  Predecessors:
    SU(5): Data Latency=1 Reg=%223
    SU(7): Data Latency=1 Reg=%225
  Successors:
    SU(9): Data Latency=4 Reg=%226
    SU(65): Ord  Latency=0 Memory
    SU(62): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(45): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(9):   STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 18
  Predecessors:
    SU(8): Data Latency=4 Reg=%226
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(54): Ord  Latency=1 Memory
    SU(39): Ord  Latency=1 Memory
    SU(35): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(10):   %227:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !641 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 24
  Successors:
    SU(11): Data Latency=4 Reg=%227
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 20
  Predecessors:
    SU(10): Data Latency=4 Reg=%227
    SU(2): Data Latency=4 Reg=%219
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(12): Data Latency=1 Reg=%228
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 19
  Predecessors:
    SU(11): Data Latency=1 Reg=%228
  Successors:
    SU(13): Data Latency=1 Reg=%229
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 18
  Predecessors:
    SU(12): Data Latency=1 Reg=%229
    SU(0): Data Latency=4 Reg=%217
  Successors:
    SU(14): Data Latency=1 Reg=%230
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 17
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 17
  Predecessors:
    SU(13): Data Latency=1 Reg=%230
    SU(9): Ord  Latency=1 Memory
    SU(7): Data Latency=1 Reg=%225
  Successors:
    SU(15): Data Latency=4 Reg=%231
    SU(65): Ord  Latency=0 Memory
    SU(62): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(45): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(15):   STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 13
  Predecessors:
    SU(14): Data Latency=4 Reg=%231
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(55): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(16):   %232:gpr32 = LDRWui %stack.22.i21, 0, debug-location !645 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(17): Data Latency=4 Reg=%232
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(17):   %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(16): Data Latency=4 Reg=%232
    SU(2): Data Latency=4 Reg=%219
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(18): Data Latency=1 Reg=%233
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(18):   %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(17): Data Latency=1 Reg=%233
  Successors:
    SU(28): Data Latency=1 Reg=%236
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %237:fpr64 = LDRDui %stack.12.x11, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 10
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%237
    SU(56): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(20):   %238:fpr64 = LDRDui %stack.13.x21, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 10
  Predecessors:
    SU(15): Ord  Latency=1 Memory
    SU(55): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%238
    SU(56): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(21):   %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 6
  Predecessors:
    SU(20): Data Latency=4 Reg=%238
    SU(19): Data Latency=4 Reg=%237
  Successors:
    SU(22): Data Latency=1 Reg=%239
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(22):   STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(21): Data Latency=1 Reg=%239
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Cluster
  Successors:
    SU(27): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(23):   %240:fpr64 = LDRDui %stack.12.x11, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%240
    SU(39): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(24):   %241:fpr64 = LDRDui %stack.13.x21, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%241
    SU(40): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(25):   %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 6
  Predecessors:
    SU(24): Data Latency=4 Reg=%241
    SU(23): Data Latency=4 Reg=%240
    SU(39): Ord  Latency=0 Artificial
    SU(40): Ord  Latency=0 Artificial
  Successors:
    SU(26): Data Latency=1 Reg=%242
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(26):   STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(25): Data Latency=1 Reg=%242
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(22): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(27):   %243:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 23
  Height             : 4
  Predecessors:
    SU(26): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
  Successors:
    SU(28): Data Latency=4 Reg=%243
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(28):   STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 0
  Predecessors:
    SU(27): Data Latency=4 Reg=%243
    SU(18): Data Latency=1 Reg=%236
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Data Latency=1 Reg=%225
  Successors:
    SU(62): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(29):   %244:gpr32 = LDRWui %stack.23.i22, 0, debug-location !651 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(31): Data Latency=4 Reg=%244
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(30):   %245:gpr32 = LDRWui %stack.14.k, 0, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  # preds left       : 0
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 25
  Predecessors:
    SU(2): Ord  Latency=0 Cluster
  Successors:
    SU(31): Data Latency=4 Reg=%245
    SU(17): Ord  Latency=0 Artificial
    SU(11): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(31):   %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(30): Data Latency=4 Reg=%245
    SU(29): Data Latency=4 Reg=%244
  Successors:
    SU(32): Data Latency=1 Reg=%246
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(32):   %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(31): Data Latency=1 Reg=%246
  Successors:
    SU(62): Data Latency=1 Reg=%247
  Pressure Diff      : 
  Single Issue       : false;
SU(33):   %248:gpr64 = LDRSWui %stack.9.j, 0, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  # preds left       : 0
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 23
  Predecessors:
    SU(6): Ord  Latency=0 Cluster
  Successors:
    SU(62): Data Latency=4 Reg=%248
    SU(65): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(34):   %249:fpr64 = LDRDui %stack.11.u1, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Predecessors:
    SU(44): Ord  Latency=0 Cluster
  Successors:
    SU(52): Data Latency=4 Reg=%249
    SU(43): Data Latency=4 Reg=%249
    SU(58): Ord  Latency=0 Artificial
    SU(47): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(35):   %250:fpr64 = LDRDui %stack.12.x11, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(37): Data Latency=4 Reg=%250
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(36):   %251:fpr64 = LDRDui %stack.13.x21, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(37): Data Latency=4 Reg=%251
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(37):   %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 8
  Predecessors:
    SU(36): Data Latency=4 Reg=%251
    SU(35): Data Latency=4 Reg=%250
  Successors:
    SU(58): Data Latency=1 Reg=%252
    SU(53): Data Latency=1 Reg=%252
    SU(50): Data Latency=1 Reg=%252
    SU(45): Data Latency=1 Reg=%252
    SU(43): Data Latency=1 Reg=%252
    SU(38): Data Latency=1 Reg=%252
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(38):   STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(39):   %253:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(23): Ord  Latency=0 Cluster
  Successors:
    SU(41): Data Latency=4 Reg=%253
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(40):   %254:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
    SU(24): Ord  Latency=0 Cluster
  Successors:
    SU(41): Data Latency=4 Reg=%254
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(41):   %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 8
  Predecessors:
    SU(40): Data Latency=4 Reg=%254
    SU(39): Data Latency=4 Reg=%253
  Successors:
    SU(52): Data Latency=1 Reg=%255
    SU(51): Data Latency=1 Reg=%255
    SU(47): Data Latency=1 Reg=%255
    SU(46): Data Latency=1 Reg=%255
    SU(42): Data Latency=1 Reg=%255
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(42):   STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%255
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(38): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(43):   %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(34): Data Latency=4 Reg=%249
  Successors:
    SU(48): Data Latency=1 Reg=%256
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(44):   %257:fpr64 = LDRDui %stack.11.u1, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(58): Data Latency=4 Reg=%257
    SU(47): Data Latency=4 Reg=%257
    SU(34): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(45):   STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(46):   STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%255
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(45): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(47):   %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(41): Data Latency=1 Reg=%255
    SU(44): Data Latency=4 Reg=%257
    SU(34): Ord  Latency=0 Artificial
  Successors:
    SU(48): Data Latency=1 Reg=%258
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(48):   %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 23
  Height             : 6
  Predecessors:
    SU(47): Data Latency=1 Reg=%258
    SU(43): Data Latency=1 Reg=%256
  Successors:
    SU(49): Data Latency=1 Reg=%259
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(49):   STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 24
  Height             : 5
  Predecessors:
    SU(48): Data Latency=1 Reg=%259
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Cluster
  Successors:
    SU(61): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(50):   STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(51):   STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%255
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(50): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(52):   %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(41): Data Latency=1 Reg=%255
    SU(34): Data Latency=4 Reg=%249
  Successors:
    SU(59): Data Latency=1 Reg=%260
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(53):   STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(54):   %261:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 10
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%261
    SU(19): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(55):   %262:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 10
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%262
    SU(20): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(56):   %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 1
  Predecessors:
    SU(55): Data Latency=4 Reg=%262
    SU(54): Data Latency=4 Reg=%261
    SU(19): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Successors:
    SU(57): Data Latency=1 Reg=%263
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(57):   STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(56): Data Latency=1 Reg=%263
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(53): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(58):   %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(37): Data Latency=1 Reg=%252
    SU(44): Data Latency=4 Reg=%257
    SU(34): Ord  Latency=0 Artificial
  Successors:
    SU(59): Data Latency=1 Reg=%264
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(59):   %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 23
  Height             : 6
  Predecessors:
    SU(58): Data Latency=1 Reg=%264
    SU(52): Data Latency=1 Reg=%260
  Successors:
    SU(60): Data Latency=1 Reg=%265
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(60):   STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 24
  Height             : 5
  Predecessors:
    SU(59): Data Latency=1 Reg=%265
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(61): Ord  Latency=1 Memory
    SU(49): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(61):   %266:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 25
  Height             : 4
  Predecessors:
    SU(60): Ord  Latency=1 Memory
    SU(49): Ord  Latency=1 Memory
  Successors:
    SU(62): Data Latency=4 Reg=%266
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(62):   STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 0
  Predecessors:
    SU(61): Data Latency=4 Reg=%266
    SU(33): Data Latency=4 Reg=%248
    SU(32): Data Latency=1 Reg=%247
    SU(28): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(63):   %267:gpr32common = LDRWui %stack.9.j, 0, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(64): Data Latency=4 Reg=%267
    SU(65): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(64):   %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(63): Data Latency=4 Reg=%267
  Successors:
    SU(65): Data Latency=1 Reg=%268
  Pressure Diff      : 
  Single Issue       : false;
SU(65):   STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(64): Data Latency=1 Reg=%268
    SU(63): Ord  Latency=0 Memory
    SU(33): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.12, debug-location !658; fft3d.c:93:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 29
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 65 62 57 53 51 50 46 45 42 38 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
Picking from Bot:
  Cand SU(65) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot WEAK      
Scheduling SU(65) STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
Bottom Pressure:
GPR32=5
  LiveReg: %268
  UpdateRegP: SU(65) STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
              to 
  Ready @0c
  BotQ.A TopLatency SU(65) 12c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 62 57 53 51 50 46 45 42 64 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(62) 29c
  BotQ.A RemainingLatency 29 + 1c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(62) BOT-PATH                  29 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(62) STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %266
  UpdateRegP: SU(62) STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to GPR32 2
  LiveReg: %247
  UpdateRegP: SU(62) STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to GPR32 1
  LiveReg: %248
  UpdateRegP: SU(62) STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to 
  Ready @1c
  BotQ.A TopLatency SU(62) 29c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 57 53 51 50 46 45 42 32 28 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 28 + 2c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(53) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(53) STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  LiveReg: %252
  UpdateRegP: SU(38) STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
              to 
  UpdateRegP: SU(43) %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
              to 
  UpdateRegP: SU(45) STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
              to 
  UpdateRegP: SU(50) STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
              to 
  UpdateRegP: SU(53) STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
              to 
  UpdateRegP: SU(58) %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
              to 
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 57 28 51 50 46 45 42 32 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 27 + 3c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(57) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(57) STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  LiveReg: %263
  UpdateRegP: SU(57) STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
              to 
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 32 28 51 50 46 45 42 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 27 + 4c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(50) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(50) STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 51 56 46 45 42 61 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 5c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(51) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(51) STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %255
  UpdateRegP: SU(42) STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
              to 
  UpdateRegP: SU(46) STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
              to 
  UpdateRegP: SU(47) %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
              to 
  UpdateRegP: SU(51) STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
              to 
  UpdateRegP: SU(52) %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
              to 
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 61 56 46 45 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 6c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(61) BOT-PATH                  25 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(61) %266:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @6c
  BotQ.A TopLatency SU(61) 25c
  BotQ.A BotLatency SU(61) 4c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 60 49 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 7c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(49) BOT-PATH                  24 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(49) STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %259
  UpdateRegP: SU(49) STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
              to 
  Ready @7c
  BotQ.A BotLatency SU(49) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 60 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 8c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(60) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(60) STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  LiveReg: %265
  UpdateRegP: SU(60) STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
              to 
  Ready @8c
  BotQ.A TopLatency SU(60) 24c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 59 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 9c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(48) BOT-PATH                  23 cycles 
  Cand SU(59) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(59) %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %260
  UpdateRegP: SU(59) %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
              to 
  LiveReg: %264
  UpdateRegP: SU(59) %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @9c
  BotQ.A BotLatency SU(59) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 58 52 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 10c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(58) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(58) %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %257
  UpdateRegP: SU(47) %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(58) %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @10c
  BotQ.A BotLatency SU(58) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 52 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 11c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(52) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(52) %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %249
  UpdateRegP: SU(43) %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(52) %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @11c
  BotQ.A TopLatency SU(52) 22c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 12c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(45) STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @12c
  BotQ.A TopLatency SU(45) 22c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 13c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(46) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(46) STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @13c
  BotQ.A TopLatency SU(46) 22c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 14c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(38) STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @14c
  BotQ.A TopLatency SU(38) 22c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 32 28 42 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 15c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
  Cand SU(32) BOT-PATH                  5 cycles 
  Cand SU(42) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(42) STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @15c
  BotQ.A TopLatency SU(42) 22c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 32 28 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 16c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
  Cand SU(32) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(32) %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %246
  UpdateRegP: SU(32) %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
              to GPR32 -1
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 56 28 31 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 17c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(64) %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %267
  UpdateRegP: SU(64) %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
              to GPR32 -1
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 
Queue BotQ.A: 48 31 56 28 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 18c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(31) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(31) %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
Bottom Pressure:
FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %244
  UpdateRegP: SU(31) %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
              to 
  LiveReg: %245
  UpdateRegP: SU(31) %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
              to GPR32 -1
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 29 
Queue BotQ.A: 48 28 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 19c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(28) BOT-PATH                  27 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(28) STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %243
  UpdateRegP: SU(28) STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to GPR32 2
  LiveReg: %236
  UpdateRegP: SU(28) STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to GPR32 1
  LiveReg: %225
  UpdateRegP: SU(8) %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(14) %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(28) STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to 
  Ready @19c
  BotQ.A TopLatency SU(28) 27c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 29 27 
Queue BotQ.A: 48 56 18 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 26 + 20c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(18) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(18) %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %233
  UpdateRegP: SU(18) %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
              to GPR32 -1
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 29 
Queue BotQ.A: 48 56 17 63 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 25 + 21c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(17) REG-MAX    GPR32:1                    
  Cand SU(63) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(63) %267:gpr32common = LDRWui %stack.9.j, 0, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 BotQ.A
BotQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 
Queue BotQ.A: 48 56 17 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 24 + 22c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(17) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(17) %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %232
  UpdateRegP: SU(17) %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
              to 
  LiveReg: %219
  UpdateRegP: SU(3) %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
              to 
  UpdateRegP: SU(11) %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
              to 
  UpdateRegP: SU(17) %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
              to GPR32 -1
  Ready @22c
  *** Max MOps 1 at cycle 22
Cycle: 23 BotQ.A
BotQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 48 56 29 27 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
  BotQ.A RemainingLatency 23 + 23c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(29) REG-MAX                            
  Cand SU(27) BOT-PATH                  23 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(27) %243:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @23c
  *** Max MOps 1 at cycle 23
Cycle: 24 BotQ.A
BotQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 48 56 29 26 22 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
  BotQ.A RemainingLatency 23 + 24c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(48) %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %256
  UpdateRegP: SU(48) %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
              to 
  LiveReg: %258
  UpdateRegP: SU(48) %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @24c
  BotQ.A TopLatency SU(48) 23c
  *** Max MOps 1 at cycle 24
Cycle: 25 BotQ.A
BotQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 22 56 29 26 47 43 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 25c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
  Cand SU(29) REG-MAX                            
  Cand SU(47) BOT-PATH                  22 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(47) %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 BotQ.A
BotQ.A @26c
  Retired: 26
  Executed: 26c
  Critical: 26c, 26 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 
Queue BotQ.A: 22 56 29 26 43 41 16 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 26c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
  Cand SU(43) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(43) %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=10
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @26c
  BotQ.A TopLatency SU(43) 22c
  *** Max MOps 1 at cycle 26
Cycle: 27 BotQ.A
BotQ.A @27c
  Retired: 27
  Executed: 27c
  Critical: 27c, 27 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 34 
Queue BotQ.A: 22 56 29 26 16 41 37 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 27c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(22) STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %239
  UpdateRegP: SU(22) STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
              to 
  Ready @27c
  BotQ.A TopLatency SU(22) 22c
  *** Max MOps 1 at cycle 27
Cycle: 28 BotQ.A
BotQ.A @28c
  Retired: 28
  Executed: 28c
  Critical: 28c, 28 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 34 
Queue BotQ.A: 37 56 29 26 16 41 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(26) 22c
  BotQ.A RemainingLatency 22 + 28c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(26) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(26) STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %242
  UpdateRegP: SU(26) STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
              to 
  Ready @28c
  BotQ.A TopLatency SU(26) 22c
  *** Max MOps 1 at cycle 28
Cycle: 29 BotQ.A
BotQ.A @29c
  Retired: 29
  Executed: 29c
  Critical: 29c, 29 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 34 
Queue BotQ.A: 37 56 29 21 16 41 25 44 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(37) 21c
  BotQ.A RemainingLatency 21 + 29c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(29) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(29) %244:gpr32 = LDRWui %stack.23.i22, 0, debug-location !651 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @29c
  *** Max MOps 1 at cycle 29
Cycle: 30 BotQ.A
BotQ.A @30c
  Retired: 30
  Executed: 30c
  Critical: 30c, 30 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 44 21 16 41 25 34 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 44 30 33 34 
  BotQ.A RemainingLatency 0 + 30c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(16) REG-MAX                            
  Cand SU(34) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(34) %249:fpr64 = LDRDui %stack.11.u1, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=9
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @30c
  BotQ.A BotLatency SU(34) 11c
  *** Max MOps 1 at cycle 30
Cycle: 31 BotQ.A
BotQ.A @31c
  Retired: 31
  Executed: 31c
  Critical: 31c, 31 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 44 21 16 41 25 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 44 30 33 
  BotQ.A RemainingLatency 0 + 31c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(44) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(44) %257:fpr64 = LDRDui %stack.11.u1, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=9
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 BotQ.A
BotQ.A @32c
  Retired: 32
  Executed: 32c
  Critical: 32c, 32 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 25 21 16 41 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 32c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(56) %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=9
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %261
  UpdateRegP: SU(56) %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
              to 
  LiveReg: %262
  UpdateRegP: SU(56) %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @32c
  BotQ.A TopLatency SU(56) 21c
  *** Max MOps 1 at cycle 32
Cycle: 33 BotQ.A
BotQ.A @33c
  Retired: 33
  Executed: 33c
  Critical: 33c, 33 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 41 25 21 16 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 33c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(41) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(41) %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %253
  UpdateRegP: SU(41) %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
              to 
  LiveReg: %254
  UpdateRegP: SU(41) %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @33c
  BotQ.A TopLatency SU(41) 21c
  *** Max MOps 1 at cycle 33
Cycle: 34 BotQ.A
BotQ.A @34c
  Retired: 34
  Executed: 34c
  Critical: 34c, 34 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 16 25 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 34c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(16) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(16) %232:gpr32 = LDRWui %stack.22.i21, 0, debug-location !645 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
Bottom Pressure:
FPR8=7
GPR32=8
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @34c
  *** Max MOps 1 at cycle 34
Cycle: 35 BotQ.A
BotQ.A @35c
  Retired: 35
  Executed: 35c
  Critical: 35c, 35 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 21 25 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 35c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(37) %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  LiveReg: %250
  UpdateRegP: SU(37) %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
              to 
  LiveReg: %251
  UpdateRegP: SU(37) %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @35c
  BotQ.A TopLatency SU(37) 21c
  *** Max MOps 1 at cycle 35
Cycle: 36 BotQ.A
BotQ.A @36c
  Retired: 36
  Executed: 36c
  Critical: 36c, 36 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 
Queue BotQ.A: 25 21 55 54 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 36c > CritPath 29
Picking from Bot:
  Cand SU(25) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(25) %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
Bottom Pressure:
FPR8=9
GPR32=8
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %240
  UpdateRegP: SU(25) %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
              to 
  LiveReg: %241
  UpdateRegP: SU(25) %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @36c
  BotQ.A TopLatency SU(25) 21c
  *** Max MOps 1 at cycle 36
Cycle: 37 BotQ.A
BotQ.A @37c
  Retired: 37
  Executed: 37c
  Critical: 37c, 37 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 24 23 
Queue BotQ.A: 54 21 55 39 40 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 37c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(21) WEAK                               
  Cand SU(39) REG-MAX                            
  Cand SU(40) BOT-PATH                  17 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(40) %254:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  Ready @37c
  BotQ.A BotLatency SU(40) 12c
  *** Max MOps 1 at cycle 37
Cycle: 38 BotQ.A
BotQ.A @38c
  Retired: 38
  Executed: 38c
  Critical: 38c, 38 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 24 23 
Queue BotQ.A: 54 21 55 39 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 38c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(21) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(21) %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
Bottom Pressure:
FPR8=9
GPR32=8
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %237
  UpdateRegP: SU(21) %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
              to 
  LiveReg: %238
  UpdateRegP: SU(21) %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @38c
  BotQ.A TopLatency SU(21) 21c
  *** Max MOps 1 at cycle 38
Cycle: 39 BotQ.A
BotQ.A @39c
  Retired: 39
  Executed: 39c
  Critical: 39c, 39 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 24 23 
Queue BotQ.A: 54 39 55 35 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 39c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
  Cand SU(36) BOT-PATH                  17 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(36) %251:fpr64 = LDRDui %stack.13.x21, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  Ready @39c
  *** Max MOps 1 at cycle 39
Cycle: 40 BotQ.A
BotQ.A @40c
  Retired: 40
  Executed: 40c
  Critical: 40c, 40 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 54 39 55 35 24 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 40c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
  Cand SU(24) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(24) %241:fpr64 = LDRDui %stack.13.x21, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=8
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @40c
  *** Max MOps 1 at cycle 40
Cycle: 41 BotQ.A
BotQ.A @41c
  Retired: 41
  Executed: 41c
  Critical: 41c, 41 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 54 39 55 35 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 41c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(39) %253:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @41c
  *** Max MOps 1 at cycle 41
Cycle: 42 BotQ.A
BotQ.A @42c
  Retired: 42
  Executed: 42c
  Critical: 42c, 42 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 23 55 35 19 20 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 42c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(23) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(23) %240:fpr64 = LDRDui %stack.12.x11, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
Bottom Pressure:
FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @42c
  *** Max MOps 1 at cycle 42
Cycle: 43 BotQ.A
BotQ.A @43c
  Retired: 43
  Executed: 43c
  Critical: 43c, 43 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 20 55 35 19 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 43c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(20) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(20) %238:fpr64 = LDRDui %stack.13.x21, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  Ready @43c
  BotQ.A TopLatency SU(20) 17c
  *** Max MOps 1 at cycle 43
Cycle: 44 BotQ.A
BotQ.A @44c
  Retired: 44
  Executed: 44c
  Critical: 44c, 44 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 19 55 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 44c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(55) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(55) %262:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @44c
  BotQ.A TopLatency SU(55) 17c
  *** Max MOps 1 at cycle 44
Cycle: 45 BotQ.A
BotQ.A @45c
  Retired: 45
  Executed: 45c
  Critical: 45c, 45 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 19 35 15 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 45c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(35) ORDER                              
  Cand SU(15) BOT-PATH                  16 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(15) STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %231
  UpdateRegP: SU(15) STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
              to 
  Ready @45c
  BotQ.A BotLatency SU(15) 13c
  *** Max MOps 1 at cycle 45
Cycle: 46 BotQ.A
BotQ.A @46c
  Retired: 46
  Executed: 46c
  Critical: 46c, 46 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 19 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 46c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(35) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(35) %250:fpr64 = LDRDui %stack.12.x11, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @46c
  *** Max MOps 1 at cycle 46
Cycle: 47 BotQ.A
BotQ.A @47c
  Retired: 47
  Executed: 47c
  Critical: 47c, 47 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 19 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 47c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(19) %237:fpr64 = LDRDui %stack.12.x11, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  Ready @47c
  *** Max MOps 1 at cycle 47
Cycle: 48 BotQ.A
BotQ.A @48c
  Retired: 48
  Executed: 48c
  Critical: 48c, 48 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 
Pick Bot ONLY1     
Scheduling SU(54) %261:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  Ready @48c
  *** Max MOps 1 at cycle 48
Cycle: 49 BotQ.A
BotQ.A @49c
  Retired: 49
  Executed: 49c
  Critical: 49c, 49 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
Bottom Pressure:
GPR32=9
  LiveReg: %230
  UpdateRegP: SU(14) %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @49c
  BotQ.A BotLatency SU(14) 17c
  *** Max MOps 1 at cycle 49
Cycle: 50 BotQ.A
BotQ.A @50c
  Retired: 50
  Executed: 50c
  Critical: 50c, 50 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 50c > CritPath 29
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(9) BOT-PATH                  11 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
Bottom Pressure:
FPR8=1
GPR32=9
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %226
  UpdateRegP: SU(9) STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
              to 
  Ready @50c
  BotQ.A BotLatency SU(9) 18c
  *** Max MOps 1 at cycle 50
Cycle: 51 BotQ.A
BotQ.A @51c
  Retired: 51
  Executed: 51c
  Critical: 51c, 51 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %217
  UpdateRegP: SU(5) %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
              to 
  UpdateRegP: SU(13) %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
              to 
  LiveReg: %229
  UpdateRegP: SU(13) %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
              to GPR32 -1
  Ready @51c
  *** Max MOps 1 at cycle 51
Cycle: 52 BotQ.A
BotQ.A @52c
  Retired: 52
  Executed: 52c
  Critical: 52c, 52 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %228
  UpdateRegP: SU(12) %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
              to GPR32 -1
  Ready @52c
  BotQ.A BotLatency SU(12) 19c
  *** Max MOps 1 at cycle 52
Cycle: 53 BotQ.A
BotQ.A @53c
  Retired: 53
  Executed: 53c
  Critical: 53c, 53 MOps
  ExpectedLatency: 19c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %227
  UpdateRegP: SU(11) %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
              to GPR32 -1
  Ready @53c
  BotQ.A BotLatency SU(11) 20c
  *** Max MOps 1 at cycle 53
Cycle: 54 BotQ.A
BotQ.A @54c
  Retired: 54
  Executed: 54c
  Critical: 54c, 54 MOps
  ExpectedLatency: 20c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %223
  UpdateRegP: SU(8) %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @54c
  BotQ.A BotLatency SU(8) 22c
  *** Max MOps 1 at cycle 54
Cycle: 55 BotQ.A
BotQ.A @55c
  Retired: 55
  Executed: 55c
  Critical: 55c, 55 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 5 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 55c > CritPath 29
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %222
  UpdateRegP: SU(5) %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
              to GPR32 -1
  Ready @55c
  BotQ.A BotLatency SU(5) 23c
  *** Max MOps 1 at cycle 55
Cycle: 56 BotQ.A
BotQ.A @56c
  Retired: 56
  Executed: 56c
  Critical: 56c, 56 MOps
  ExpectedLatency: 23c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 0 
Queue BotQ.A: 7 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 56c > CritPath 29
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %221
  UpdateRegP: SU(4) %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
              to GPR32 -1
  Ready @56c
  BotQ.A BotLatency SU(4) 24c
  *** Max MOps 1 at cycle 56
Cycle: 57 BotQ.A
BotQ.A @57c
  Retired: 57
  Executed: 57c
  Critical: 57c, 57 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 7 3 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 57c > CritPath 29
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
Bottom Pressure:
GPR32=11
  LiveReg: %224
  UpdateRegP: SU(7) %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
              to GPR32 -1
  Ready @57c
  *** Max MOps 1 at cycle 57
Cycle: 58 BotQ.A
BotQ.A @58c
  Retired: 58
  Executed: 58c
  Critical: 58c, 58 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 6 
Queue BotQ.A: 10 3 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 58c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(3) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
Bottom Pressure:
GPR32=11
  LiveReg: %218
  UpdateRegP: SU(3) %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
              to GPR32 -1
  Ready @58c
  BotQ.A TopLatency SU(3) 4c
  BotQ.A BotLatency SU(3) 25c
  *** Max MOps 1 at cycle 58
Cycle: 59 BotQ.A
BotQ.A @59c
  Retired: 59
  Executed: 59c
  Critical: 59c, 59 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 6 2 
Queue BotQ.A: 10 33 30 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 59c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(33) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(33) %248:gpr64 = LDRSWui %stack.9.j, 0, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
Bottom Pressure:
GPR32=10
  Ready @59c
  *** Max MOps 1 at cycle 59
Cycle: 60 BotQ.A
BotQ.A @60c
  Retired: 60
  Executed: 60c
  Critical: 60c, 60 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 6 2 
Queue BotQ.A: 10 0 30 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 
  BotQ.A RemainingLatency 0 + 60c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(30) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(30) %245:gpr32 = LDRWui %stack.14.k, 0, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
Bottom Pressure:
GPR32=9
  Ready @60c
  *** Max MOps 1 at cycle 60
Cycle: 61 BotQ.A
BotQ.A @61c
  Retired: 61
  Executed: 61c
  Critical: 61c, 61 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 2 
Queue BotQ.A: 10 0 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 
  BotQ.A RemainingLatency 0 + 61c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %227:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !641 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
Bottom Pressure:
GPR32=8
  Ready @61c
  *** Max MOps 1 at cycle 61
Cycle: 62 BotQ.A
BotQ.A @62c
  Retired: 62
  Executed: 62c
  Critical: 62c, 62 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 
  BotQ.A RemainingLatency 0 + 62c > CritPath 29
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(2) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(2) %219:gpr64 = LDRSWui %stack.14.k, 0, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
Bottom Pressure:
GPR32=7
  Ready @62c
  BotQ.A BotLatency SU(2) 29c
  *** Max MOps 1 at cycle 62
Cycle: 63 BotQ.A
BotQ.A @63c
  Retired: 63
  Executed: 63c
  Critical: 63c, 63 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 
  BotQ.A RemainingLatency 0 + 63c > CritPath 29
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %224:gpr64 = LDRSWui %stack.9.j, 0, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
Bottom Pressure:
GPR32=6
  Ready @63c
  *** Max MOps 1 at cycle 63
Cycle: 64 BotQ.A
BotQ.A @64c
  Retired: 64
  Executed: 64c
  Critical: 64c, 64 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 64c > CritPath 29
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %218:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !636 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
Bottom Pressure:
GPR32=5
  Ready @64c
  *** Max MOps 1 at cycle 64
Cycle: 65 BotQ.A
BotQ.A @65c
  Retired: 65
  Executed: 65c
  Critical: 65c, 65 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
Bottom Pressure:
GPR32=4
  Ready @65c
  *** Max MOps 1 at cycle 65
Cycle: 66 BotQ.A
BotQ.A @66c
  Retired: 66
  Executed: 66c
  Critical: 66c, 66 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
SU(1):   %218:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !636 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
SU(6):   %224:gpr64 = LDRSWui %stack.9.j, 0, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
SU(2):   %219:gpr64 = LDRSWui %stack.14.k, 0, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
SU(10):   %227:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !641 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
SU(30):   %245:gpr32 = LDRWui %stack.14.k, 0, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
SU(33):   %248:gpr64 = LDRSWui %stack.9.j, 0, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
SU(3):   %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
SU(7):   %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
SU(4):   %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
SU(5):   %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
SU(8):   %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
SU(11):   %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
SU(12):   %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
SU(13):   %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
SU(9):   STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
SU(14):   %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
SU(54):   %261:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
SU(19):   %237:fpr64 = LDRDui %stack.12.x11, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
SU(35):   %250:fpr64 = LDRDui %stack.12.x11, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
SU(15):   STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
SU(55):   %262:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
SU(20):   %238:fpr64 = LDRDui %stack.13.x21, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
SU(23):   %240:fpr64 = LDRDui %stack.12.x11, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
SU(39):   %253:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
SU(24):   %241:fpr64 = LDRDui %stack.13.x21, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
SU(36):   %251:fpr64 = LDRDui %stack.13.x21, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
SU(21):   %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
SU(40):   %254:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
SU(25):   %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
SU(37):   %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
SU(16):   %232:gpr32 = LDRWui %stack.22.i21, 0, debug-location !645 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
SU(41):   %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
SU(56):   %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
SU(44):   %257:fpr64 = LDRDui %stack.11.u1, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
SU(34):   %249:fpr64 = LDRDui %stack.11.u1, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
SU(29):   %244:gpr32 = LDRWui %stack.23.i22, 0, debug-location !651 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
SU(26):   STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
SU(22):   STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
SU(43):   %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
SU(47):   %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
SU(48):   %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
SU(27):   %243:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
SU(17):   %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
SU(63):   %267:gpr32common = LDRWui %stack.9.j, 0, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
SU(18):   %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
SU(28):   STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
SU(31):   %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
SU(64):   %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
SU(32):   %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
SU(42):   STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
SU(38):   STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
SU(46):   STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
SU(45):   STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
SU(52):   %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
SU(58):   %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
SU(59):   %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
SU(60):   STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
SU(49):   STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
SU(61):   %266:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
SU(51):   STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
SU(50):   STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
SU(57):   STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
SU(53):   STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
SU(62):   STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
SU(65):   STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40

********** MI Scheduling **********
Swarztrauber:%bb.14 for.inc110
  From: %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
    To: B %bb.10, debug-location !662; fft3d.c:92:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%215
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !661; fft3d.c:92:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%215
  Successors:
    SU(2): Data Latency=1 Reg=%216
  Single Issue       : false;
SU(2):   STRWui %216:gpr32common, %stack.14.k, 0, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%216
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.10, debug-location !662; fft3d.c:92:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %216:gpr32common, %stack.14.k, 0, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !661; fft3d.c:92:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
SU(1):   %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !661; fft3d.c:92:39
SU(2):   STRWui %216:gpr32common, %stack.14.k, 0, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39

********** MI Scheduling **********
Swarztrauber:%bb.15 for.inc113
  From: %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
    To: B %bb.5, debug-location !666; fft3d.c:80:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%209
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %210:gpr32common = nsw ADDWri %209:gpr32common, 1, 0, debug-location !665; fft3d.c:80:35
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%209
  Successors:
    SU(2): Data Latency=1 Reg=%210
  Single Issue       : false;
SU(2):   STRWui %210:gpr32common, %stack.8.i, 0, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%210
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.5, debug-location !666; fft3d.c:80:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %210:gpr32common, %stack.8.i, 0, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %210:gpr32common = nsw ADDWri %209:gpr32common, 1, 0, debug-location !665; fft3d.c:80:35
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
SU(1):   %210:gpr32common = nsw ADDWri %209:gpr32common, 1, 0, debug-location !665; fft3d.c:80:35
SU(2):   STRWui %210:gpr32common, %stack.8.i, 0, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35

********** MI Scheduling **********
Swarztrauber:%bb.16 for.end115
  From: %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
    To: Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%42
  Single Issue       : false;
SU(1):   %43:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%43
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %42:gpr32, %43:gpr32, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%43
    SU(0): Data Latency=4 Reg=%42
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %42:gpr32, %43:gpr32, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %43:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
SU(1):   %43:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
SU(2):   dead $wzr = SUBSWrr %42:gpr32, %43:gpr32, implicit-def $nzcv, debug-location !673; fft3d.c:102:13

********** MI Scheduling **********
Swarztrauber:%bb.18 for.cond118
  From: %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%153
  Single Issue       : false;
SU(1):   %154:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%154
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %153:gpr32, %154:gpr32, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%154
    SU(0): Data Latency=4 Reg=%153
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %153:gpr32, %154:gpr32, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %154:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
SU(1):   %154:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
SU(2):   dead $wzr = SUBSWrr %153:gpr32, %154:gpr32, implicit-def $nzcv, debug-location !682; fft3d.c:103:13

********** MI Scheduling **********
Swarztrauber:%bb.20 for.cond121
  From: %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
    To: Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%159
  Single Issue       : false;
SU(1):   %160:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%160
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %159:gpr32, %160:gpr32, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%160
    SU(0): Data Latency=4 Reg=%159
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %159:gpr32, %160:gpr32, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %160:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
SU(1):   %160:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
SU(2):   dead $wzr = SUBSWrr %159:gpr32, %160:gpr32, implicit-def $nzcv, debug-location !691; fft3d.c:104:17

********** MI Scheduling **********
Swarztrauber:%bb.21 for.body123
  From: %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
    To: B %bb.20, debug-location !700; fft3d.c:104:17
 RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(3): Data Latency=4 Reg=%164
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %165:gpr64 = LDRSWui %stack.14.k, 0, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Data Latency=4 Reg=%165
    SU(2): Data Latency=4 Reg=%165
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %166:gpr64 = nsw MADDXrrr %165:gpr64, %0:gpr64, $xzr, debug-location !692; fft3d.c:105:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(1): Data Latency=4 Reg=%165
  Successors:
    SU(3): Data Latency=1 Reg=%166
  Single Issue       : false;
SU(3):   %167:gpr64common = ADDXrs %164:gpr64, %166:gpr64, 4, debug-location !692; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(2): Data Latency=1 Reg=%166
    SU(0): Data Latency=4 Reg=%164
  Successors:
    SU(8): Data Latency=1 Reg=%167
  Single Issue       : false;
SU(4):   %168:gpr64 = LDRSWui %stack.9.j, 0, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(5): Data Latency=4 Reg=%168
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(5):   %169:gpr64 = UBFMXri %168:gpr64, 60, 59, debug-location !692; fft3d.c:105:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(4): Data Latency=4 Reg=%168
  Successors:
    SU(8): Data Latency=1 Reg=%169
    SU(7): Data Latency=1 Reg=%169
  Single Issue       : false;
SU(6):   %174:gpr64common = MADDXrrr %165:gpr64, %171:gpr64, %234:gpr64, debug-location !697; fft3d.c:105:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(1): Data Latency=4 Reg=%165
  Successors:
    SU(7): Data Latency=1 Reg=%174
  Single Issue       : false;
SU(7):   %175:fpr128 = LDRQroX %174:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(6): Data Latency=1 Reg=%174
    SU(5): Data Latency=1 Reg=%169
  Successors:
    SU(8): Data Latency=4 Reg=%175
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(8):   STRQroX %175:fpr128, %167:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  # preds left       : 7
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 6
  Predecessors:
    SU(7): Data Latency=4 Reg=%175
    SU(7): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%169
    SU(4): Ord  Latency=0 Memory
    SU(3): Data Latency=1 Reg=%167
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=1 Memory
  Single Issue       : false;
SU(9):   %176:gpr32common = LDRWui %stack.9.j, 0, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(10): Data Latency=4 Reg=%176
    SU(11): Ord  Latency=0 Memory
  Single Issue       : false;
SU(10):   %177:gpr32common = nsw ADDWri %176:gpr32common, 1, 0, debug-location !699; fft3d.c:104:40
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 14
  Height             : 1
  Predecessors:
    SU(9): Data Latency=4 Reg=%176
  Successors:
    SU(11): Data Latency=1 Reg=%177
  Single Issue       : false;
SU(11):   STRWui %177:gpr32common, %stack.9.j, 0, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%177
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.20, debug-location !700; fft3d.c:104:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 15
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) STRWui %177:gpr32common, %stack.9.j, 0, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  Ready @0c
  BotQ.A TopLatency SU(11) 15c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Pick Bot ONLY1     
Scheduling SU(10) %177:gpr32common = nsw ADDWri %176:gpr32common, 1, 0, debug-location !699; fft3d.c:104:40
  Ready @1c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) %176:gpr32common = LDRWui %stack.9.j, 0, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  Ready @5c
  BotQ.A BotLatency SU(9) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) STRQroX %175:fpr128, %167:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  Ready @6c
  BotQ.A BotLatency SU(8) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %167:gpr64common = ADDXrs %164:gpr64, %166:gpr64, 4, debug-location !692; fft3d.c:105:21
  Ready @7c
  BotQ.A BotLatency SU(3) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %166:gpr64 = nsw MADDXrrr %165:gpr64, %0:gpr64, $xzr, debug-location !692; fft3d.c:105:21
  Ready @8c
  BotQ.A BotLatency SU(2) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 10 BotQ.A
Queue BotQ.P: 0 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %175:fpr128 = LDRQroX %174:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  Ready @10c
  BotQ.A BotLatency SU(7) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 7
  Executed: 11c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(6) 4c
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %174:gpr64common = MADDXrrr %165:gpr64, %171:gpr64, %234:gpr64, debug-location !697; fft3d.c:105:31
  Ready @11c
  BotQ.A BotLatency SU(6) 11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 8
  Executed: 12c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(5) 4c
  BotQ.A RemainingLatency 4 + 12c > CritPath 15
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %169:gpr64 = UBFMXri %168:gpr64, 60, 59, debug-location !692; fft3d.c:105:21
  Ready @12c
  BotQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 9
  Executed: 13c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 4 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 10
  Executed: 14c
  Critical: 10c, 10 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 15 BotQ.A
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %165:gpr64 = LDRSWui %stack.14.k, 0, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  Ready @15c
  BotQ.A BotLatency SU(1) 15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 11
  Executed: 16c
  Critical: 11c, 11 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %168:gpr64 = LDRSWui %stack.9.j, 0, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 12
  Executed: 17c
  Critical: 12c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(4):   %168:gpr64 = LDRSWui %stack.9.j, 0, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
SU(1):   %165:gpr64 = LDRSWui %stack.14.k, 0, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
SU(0):   %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
SU(5):   %169:gpr64 = UBFMXri %168:gpr64, 60, 59, debug-location !692; fft3d.c:105:21
SU(6):   %174:gpr64common = MADDXrrr %165:gpr64, %171:gpr64, %234:gpr64, debug-location !697; fft3d.c:105:31
SU(7):   %175:fpr128 = LDRQroX %174:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
SU(2):   %166:gpr64 = nsw MADDXrrr %165:gpr64, %0:gpr64, $xzr, debug-location !692; fft3d.c:105:21
SU(3):   %167:gpr64common = ADDXrs %164:gpr64, %166:gpr64, 4, debug-location !692; fft3d.c:105:21
SU(8):   STRQroX %175:fpr128, %167:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
SU(9):   %176:gpr32common = LDRWui %stack.9.j, 0, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
SU(10):   %177:gpr32common = nsw ADDWri %176:gpr32common, 1, 0, debug-location !699; fft3d.c:104:40
SU(11):   STRWui %177:gpr32common, %stack.9.j, 0, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40

********** MI Scheduling **********
Swarztrauber:%bb.22 for.inc135
  From: %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
    To: B %bb.18, debug-location !704; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%162
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %163:gpr32common = nsw ADDWri %162:gpr32common, 1, 0, debug-location !703; fft3d.c:103:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%162
  Successors:
    SU(2): Data Latency=1 Reg=%163
  Single Issue       : false;
SU(2):   STRWui %163:gpr32common, %stack.14.k, 0, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%163
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.18, debug-location !704; fft3d.c:103:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %163:gpr32common, %stack.14.k, 0, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %163:gpr32common = nsw ADDWri %162:gpr32common, 1, 0, debug-location !703; fft3d.c:103:33
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
SU(1):   %163:gpr32common = nsw ADDWri %162:gpr32common, 1, 0, debug-location !703; fft3d.c:103:33
SU(2):   STRWui %163:gpr32common, %stack.14.k, 0, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33

********** MI Scheduling **********
Swarztrauber:%bb.23 if.else138
  From: %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%45
    SU(1): Data Latency=4 Reg=%45
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRWui %45:gpr32, %stack.18.lk, 0, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%45
  Single Issue       : false;
SU(2):   %46:gpr32 = UBFMWri %45:gpr32, 31, 30, debug-location !711; fft3d.c:111:20
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%45
  Successors:
    SU(3): Data Latency=1 Reg=%46
  Single Issue       : false;
SU(3):   STRWui %46:gpr32, %stack.17.lj, 0, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%46
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(4):   %47:gpr32common = LDRWui %stack.16.li, 0, debug-location !713 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(6): Data Latency=4 Reg=%47
    SU(5): Data Latency=4 Reg=%47
    SU(8): Ord  Latency=0 Memory
  Single Issue       : false;
SU(5):   dead $wzr = SUBSWri %47:gpr32common, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%47
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Single Issue       : false;
SU(6):   %49:gpr32 = CSINCWr %47:gpr32common, %47:gpr32common, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=4 Reg=%47
  Successors:
    SU(7): Data Latency=1 Reg=%49
  Single Issue       : false;
SU(7):   %50:gpr32 = SBFMWri %49:gpr32, 1, 31, debug-location !714; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%49
  Successors:
    SU(9): Data Latency=1 Reg=%50
    SU(8): Data Latency=1 Reg=%50
  Single Issue       : false;
SU(8):   STRWui %50:gpr32, %stack.16.li, 0, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%50
    SU(4): Ord  Latency=0 Memory
  Single Issue       : false;
SU(9):   STRWui %50:gpr32, %stack.19.ku, 0, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%50
  Single Issue       : false;
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 8 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 4 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) STRWui $wzr, %stack.8.i, 0, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 9 8 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(9) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(9) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %50:gpr32, %stack.19.ku, 0, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  Ready @1c
  BotQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 8 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(8) 7c
  BotQ.A RemainingLatency 7 + 2c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(8) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) STRWui %50:gpr32, %stack.16.li, 0, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  Ready @2c
  BotQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 7 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(7) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(7) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %50:gpr32 = SBFMWri %49:gpr32, 1, 31, debug-location !714; fft3d.c:112:21
  Ready @3c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 6 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %49:gpr32 = CSINCWr %47:gpr32common, %47:gpr32common, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
  Ready @4c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %46:gpr32, %stack.17.lj, 0, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) dead $wzr = SUBSWri %47:gpr32common, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  Ready @6c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 7c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %46:gpr32 = UBFMWri %45:gpr32, 31, 30, debug-location !711; fft3d.c:111:20
  Ready @7c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %45:gpr32, %stack.18.lk, 0, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  Ready @8c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 10 BotQ.A
Queue BotQ.P: 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %47:gpr32common = LDRWui %stack.16.li, 0, debug-location !713 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  Ready @10c
  BotQ.A BotLatency SU(4) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 12 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 11
  Executed: 13c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
SU(4):   %47:gpr32common = LDRWui %stack.16.li, 0, debug-location !713 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
SU(1):   STRWui %45:gpr32, %stack.18.lk, 0, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
SU(2):   %46:gpr32 = UBFMWri %45:gpr32, 31, 30, debug-location !711; fft3d.c:111:20
SU(5):   dead $wzr = SUBSWri %47:gpr32common, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
SU(3):   STRWui %46:gpr32, %stack.17.lj, 0, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
SU(6):   %49:gpr32 = CSINCWr %47:gpr32common, %47:gpr32common, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
SU(7):   %50:gpr32 = SBFMWri %49:gpr32, 1, 31, debug-location !714; fft3d.c:112:21
SU(8):   STRWui %50:gpr32, %stack.16.li, 0, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
SU(9):   STRWui %50:gpr32, %stack.19.ku, 0, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20

********** MI Scheduling **********
Swarztrauber:%bb.24 for.cond141
  From: %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
    To: Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%52
  Single Issue       : false;
SU(1):   %53:gpr32common = LDRWui %stack.16.li, 0, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%53
  Single Issue       : false;
SU(2):   %54:gpr32common = SUBWri %53:gpr32common, 1, 0, debug-location !724; fft3d.c:115:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%53
  Successors:
    SU(3): Data Latency=1 Reg=%54
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %52:gpr32, %54:gpr32common, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%54
    SU(0): Data Latency=4 Reg=%52
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %52:gpr32, %54:gpr32common, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %54:gpr32common = SUBWri %53:gpr32common, 1, 0, debug-location !724; fft3d.c:115:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %53:gpr32common = LDRWui %stack.16.li, 0, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(1):   %53:gpr32common = LDRWui %stack.16.li, 0, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
SU(0):   %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
SU(2):   %54:gpr32common = SUBWri %53:gpr32common, 1, 0, debug-location !724; fft3d.c:115:33
SU(3):   dead $wzr = SUBSWrr %52:gpr32, %54:gpr32common, implicit-def $nzcv, debug-location !726; fft3d.c:115:13

********** MI Scheduling **********
Swarztrauber:%bb.25 for.body144
  From: %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
    To: Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21
 RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%56
    SU(2): Data Latency=4 Reg=%56
  Single Issue       : false;
SU(1):   %57:gpr32 = LDRWui %stack.18.lk, 0, debug-location !729 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=%57
    SU(2): Data Latency=4 Reg=%57
  Single Issue       : false;
SU(2):   %58:gpr32 = nsw MADDWrrr %56:gpr32, %57:gpr32, $wzr, debug-location !730; fft3d.c:116:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%57
    SU(0): Data Latency=4 Reg=%56
  Successors:
    SU(5): Data Latency=1 Reg=%58
    SU(3): Data Latency=1 Reg=%58
  Single Issue       : false;
SU(3):   STRWui %58:gpr32, %stack.20.i11, 0, debug-location !731 :: (store 4 into %ir.i11); fft3d.c:116:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%58
  Single Issue       : false;
SU(4):   %59:gpr32 = LDRWui %stack.15.n1, 0, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%59
  Single Issue       : false;
SU(5):   %60:gpr32 = nsw ADDWrr %58:gpr32, %59:gpr32, debug-location !734; fft3d.c:117:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%58
    SU(4): Data Latency=4 Reg=%59
  Successors:
    SU(6): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(6):   STRWui %60:gpr32, %stack.21.i12, 0, debug-location !735 :: (store 4 into %ir.i12); fft3d.c:117:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(7):   %61:gpr32 = LDRWui %stack.17.lj, 0, debug-location !737 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%61
  Single Issue       : false;
SU(8):   %62:gpr32 = nsw MADDWrrr %56:gpr32, %61:gpr32, $wzr, debug-location !738; fft3d.c:118:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(7): Data Latency=4 Reg=%61
    SU(0): Data Latency=4 Reg=%56
  Successors:
    SU(10): Data Latency=1 Reg=%62
    SU(9): Data Latency=1 Reg=%62
  Single Issue       : false;
SU(9):   STRWui %62:gpr32, %stack.22.i21, 0, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%62
  Single Issue       : false;
SU(10):   %63:gpr32 = nsw ADDWrr %62:gpr32, %57:gpr32, debug-location !742; fft3d.c:119:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=%62
    SU(1): Data Latency=4 Reg=%57
  Successors:
    SU(11): Data Latency=1 Reg=%63
  Single Issue       : false;
SU(11):   STRWui %63:gpr32, %stack.23.i22, 0, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%63
  Single Issue       : false;
SU(12):   %64:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%64
  Single Issue       : false;
SU(13):   dead $wzr = SUBSWri %64:gpr32common, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(12): Data Latency=4 Reg=%64
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(13): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 11 9 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) STRWui %63:gpr32, %stack.23.i22, 0, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  Ready @0c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 6 10 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRWui %60:gpr32, %stack.21.i12, 0, debug-location !735 :: (store 4 into %ir.i12); fft3d.c:117:21
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 2c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %63:gpr32 = nsw ADDWrr %62:gpr32, %57:gpr32, debug-location !742; fft3d.c:119:27
  Ready @2c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %62:gpr32, %stack.22.i21, 0, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  Ready @3c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %60:gpr32 = nsw ADDWrr %58:gpr32, %59:gpr32, debug-location !734; fft3d.c:117:27
  Ready @4c
  BotQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 3 8 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %58:gpr32, %stack.20.i11, 0, debug-location !731 :: (store 4 into %ir.i11); fft3d.c:116:21
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 13 8 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(13) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(13) dead $wzr = SUBSWri %64:gpr32common, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 12 
Queue BotQ.A: 2 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %62:gpr32 = nsw MADDWrrr %56:gpr32, %61:gpr32, $wzr, debug-location !738; fft3d.c:118:25
  Ready @7c
  BotQ.A TopLatency SU(8) 4c
  BotQ.A BotLatency SU(8) 2c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 12 
Queue BotQ.A: 2 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %58:gpr32 = nsw MADDWrrr %56:gpr32, %57:gpr32, $wzr, debug-location !730; fft3d.c:116:25
  Ready @8c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 12 1 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %59:gpr32 = LDRWui %stack.15.n1, 0, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  Ready @9c
  BotQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 0 1 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %64:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %61:gpr32 = LDRWui %stack.17.lj, 0, debug-location !737 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
  Ready @11c
  BotQ.A BotLatency SU(7) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 12c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %57:gpr32 = LDRWui %stack.18.lk, 0, debug-location !729 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
SU(1):   %57:gpr32 = LDRWui %stack.18.lk, 0, debug-location !729 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
SU(7):   %61:gpr32 = LDRWui %stack.17.lj, 0, debug-location !737 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
SU(12):   %64:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
SU(4):   %59:gpr32 = LDRWui %stack.15.n1, 0, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
SU(2):   %58:gpr32 = nsw MADDWrrr %56:gpr32, %57:gpr32, $wzr, debug-location !730; fft3d.c:116:25
SU(8):   %62:gpr32 = nsw MADDWrrr %56:gpr32, %61:gpr32, $wzr, debug-location !738; fft3d.c:118:25
SU(13):   dead $wzr = SUBSWri %64:gpr32common, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
SU(3):   STRWui %58:gpr32, %stack.20.i11, 0, debug-location !731 :: (store 4 into %ir.i11); fft3d.c:116:21
SU(5):   %60:gpr32 = nsw ADDWrr %58:gpr32, %59:gpr32, debug-location !734; fft3d.c:117:27
SU(9):   STRWui %62:gpr32, %stack.22.i21, 0, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
SU(10):   %63:gpr32 = nsw ADDWrr %62:gpr32, %57:gpr32, debug-location !742; fft3d.c:119:27
SU(6):   STRWui %60:gpr32, %stack.21.i12, 0, debug-location !735 :: (store 4 into %ir.i12); fft3d.c:117:21
SU(11):   STRWui %63:gpr32, %stack.23.i22, 0, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21

********** MI Scheduling **********
Swarztrauber:%bb.26 if.then150
  From: %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
    To: B %bb.28, debug-location !753; fft3d.c:123:17
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=%76
  Single Issue       : false;
SU(1):   %77:gpr32 = LDRWui %stack.19.ku, 0, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%77
  Single Issue       : false;
SU(2):   %78:gpr32 = LDRWui %stack.8.i, 0, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%78
  Single Issue       : false;
SU(3):   %79:gpr32 = nsw ADDWrr %77:gpr32, %78:gpr32, debug-location !752; fft3d.c:122:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=%78
    SU(1): Data Latency=4 Reg=%77
  Successors:
    SU(4): Data Latency=1 Reg=%79
  Single Issue       : false;
SU(4):   %271:gpr64sp = ADDXrx %76:gpr64common, %79:gpr32, 52, debug-location !748; fft3d.c:122:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%79
    SU(0): Data Latency=4 Reg=%76
  Single Issue       : false;
ExitSU:   B %bb.28, debug-location !753; fft3d.c:123:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %271:gpr64sp = ADDXrx %76:gpr64common, %79:gpr32, 52, debug-location !748; fft3d.c:122:26
  Ready @0c
  BotQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %79:gpr32 = nsw ADDWrr %77:gpr32, %78:gpr32, debug-location !752; fft3d.c:122:38
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %78:gpr32 = LDRWui %stack.8.i, 0, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %77:gpr32 = LDRWui %stack.19.ku, 0, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(1):   %77:gpr32 = LDRWui %stack.19.ku, 0, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
SU(2):   %78:gpr32 = LDRWui %stack.8.i, 0, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
SU(0):   %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
SU(3):   %79:gpr32 = nsw ADDWrr %77:gpr32, %78:gpr32, debug-location !752; fft3d.c:122:38
SU(4):   %271:gpr64sp = ADDXrx %76:gpr64common, %79:gpr32, 52, debug-location !748; fft3d.c:122:26

********** MI Scheduling **********
Swarztrauber:%bb.27 if.else154
  From: %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=%67
  Single Issue       : false;
SU(1):   %68:gpr32 = LDRWui %stack.19.ku, 0, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%68
  Single Issue       : false;
SU(2):   %69:gpr32 = LDRWui %stack.8.i, 0, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%69
  Single Issue       : false;
SU(3):   %70:gpr32 = nsw ADDWrr %68:gpr32, %69:gpr32, debug-location !754; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(2): Data Latency=4 Reg=%69
    SU(1): Data Latency=4 Reg=%68
  Successors:
    SU(4): Data Latency=1 Reg=%70
  Single Issue       : false;
SU(4):   %71:gpr64sp = ADDXrx %67:gpr64common, %70:gpr32, 52, debug-location !754; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Data Latency=1 Reg=%70
    SU(0): Data Latency=4 Reg=%67
  Successors:
    SU(7): Data Latency=1 Reg=%71
    SU(5): Data Latency=1 Reg=%71
  Single Issue       : false;
SU(5):   %72:fpr64 = LDRDui %71:gpr64sp, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=%71
  Successors:
    SU(6): Data Latency=4 Reg=%72
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Single Issue       : false;
SU(6):   STRDui %72:fpr64, %stack.31..compoundliteral155, 0, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=%72
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Ord  Latency=1 Memory
  Single Issue       : false;
SU(7):   %73:fpr64 = LDRDui %71:gpr64sp, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%71
  Successors:
    SU(8): Data Latency=4 Reg=%73
    SU(9): Ord  Latency=0 Memory
  Single Issue       : false;
SU(8):   %74:fpr64 = FNEGDr %73:fpr64, debug-location !754; fft3d.c:125:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Data Latency=4 Reg=%73
  Successors:
    SU(9): Data Latency=1 Reg=%74
  Single Issue       : false;
SU(9):   STRDui %74:fpr64, %stack.31..compoundliteral155, 1, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%74
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Single Issue       : false;
SU(10):   %271:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %271:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) STRDui %74:fpr64, %stack.31..compoundliteral155, 1, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  Ready @1c
  BotQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %74:fpr64 = FNEGDr %73:fpr64, debug-location !754; fft3d.c:125:26
  Ready @2c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 6 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %73:fpr64 = LDRDui %71:gpr64sp, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  Ready @6c
  BotQ.A BotLatency SU(7) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRDui %72:fpr64, %stack.31..compoundliteral155, 0, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  Ready @7c
  BotQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 11 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %72:fpr64 = LDRDui %71:gpr64sp, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  Ready @11c
  BotQ.A BotLatency SU(5) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 6
  Executed: 12c
  Critical: 6c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %71:gpr64sp = ADDXrx %67:gpr64common, %70:gpr32, 52, debug-location !754; fft3d.c:125:26
  Ready @12c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 7
  Executed: 13c
  Critical: 7c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %70:gpr32 = nsw ADDWrr %68:gpr32, %69:gpr32, debug-location !754; fft3d.c:125:26
  Ready @13c
  BotQ.A BotLatency SU(3) 12c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 8
  Executed: 14c
  Critical: 8c, 8 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 16 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  Ready @16c
  BotQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 9
  Executed: 17c
  Critical: 9c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %69:gpr32 = LDRWui %stack.8.i, 0, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  Ready @17c
  BotQ.A BotLatency SU(2) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 10
  Executed: 18c
  Critical: 10c, 10 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %68:gpr32 = LDRWui %stack.19.ku, 0, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 11
  Executed: 19c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.27 ***
SU(1):   %68:gpr32 = LDRWui %stack.19.ku, 0, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
SU(2):   %69:gpr32 = LDRWui %stack.8.i, 0, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
SU(0):   %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
SU(3):   %70:gpr32 = nsw ADDWrr %68:gpr32, %69:gpr32, debug-location !754; fft3d.c:125:26
SU(4):   %71:gpr64sp = ADDXrx %67:gpr64common, %70:gpr32, 52, debug-location !754; fft3d.c:125:26
SU(5):   %72:fpr64 = LDRDui %71:gpr64sp, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
SU(6):   STRDui %72:fpr64, %stack.31..compoundliteral155, 0, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
SU(7):   %73:fpr64 = LDRDui %71:gpr64sp, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
SU(8):   %74:fpr64 = FNEGDr %73:fpr64, debug-location !754; fft3d.c:125:26
SU(9):   STRDui %74:fpr64, %stack.31..compoundliteral155, 1, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
SU(10):   %271:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

********** MI Scheduling **********
Swarztrauber:%bb.28 if.end167
  From: %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%81
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRQui %81:fpr128, %269:gpr64sp, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%81
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 1 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui $wzr, %stack.14.k, 0, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRQui %81:fpr128, %269:gpr64sp, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
SU(1):   STRQui %81:fpr128, %269:gpr64sp, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0

********** MI Scheduling **********
Swarztrauber:%bb.29 for.cond168
  From: %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
    To: Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%83
  Single Issue       : false;
SU(1):   %84:gpr32common = LDRWui %stack.18.lk, 0, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%84
  Single Issue       : false;
SU(2):   %85:gpr32common = SUBWri %84:gpr32common, 1, 0, debug-location !763; fft3d.c:127:37
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%84
  Successors:
    SU(3): Data Latency=1 Reg=%85
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %83:gpr32, %85:gpr32common, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%85
    SU(0): Data Latency=4 Reg=%83
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %83:gpr32, %85:gpr32common, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %85:gpr32common = SUBWri %84:gpr32common, 1, 0, debug-location !763; fft3d.c:127:37
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %84:gpr32common = LDRWui %stack.18.lk, 0, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(1):   %84:gpr32common = LDRWui %stack.18.lk, 0, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
SU(0):   %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
SU(2):   %85:gpr32common = SUBWri %84:gpr32common, 1, 0, debug-location !763; fft3d.c:127:37
SU(3):   dead $wzr = SUBSWrr %83:gpr32, %85:gpr32common, implicit-def $nzcv, debug-location !765; fft3d.c:127:17

********** MI Scheduling **********
Swarztrauber:%bb.31 for.cond172
  From: %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
    To: Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%90
  Single Issue       : false;
SU(1):   %91:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%91
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %90:gpr32, %91:gpr32, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%91
    SU(0): Data Latency=4 Reg=%90
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %90:gpr32, %91:gpr32, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %91:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
SU(1):   %91:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
SU(2):   dead $wzr = SUBSWrr %90:gpr32, %91:gpr32, implicit-def $nzcv, debug-location !774; fft3d.c:128:21

********** MI Scheduling **********
Swarztrauber:%bb.32 for.body174
  From: %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
    To: B %bb.31, debug-location !799; fft3d.c:128:21
 RegionInstrs: 72
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
Live In: %0 %269 %171 %234 
Live Out: %0 %269 %171 %234 
Live Thru: GPR32=4
  LiveReg: %0
  UpdateRegP: SU(17) %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
              to 
  UpdateRegP: SU(33) %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
              to 
  LiveReg: %269
  UpdateRegP: SU(7) STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  UpdateRegP: SU(12) STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  LiveReg: %171
  UpdateRegP: SU(3) %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
              to GPR32 1
  UpdateRegP: SU(10) %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
              to GPR32 1
  LiveReg: %234
  UpdateRegP: SU(3) %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
              to 
  UpdateRegP: SU(10) %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
              to 
Top Pressure:
GPR32=4
Bottom Pressure:
GPR32=4
Excess PSets: 
Cluster ld/st SU(1) - SU(15)
  Copy Succ SU(9)
  Copy Succ SU(2)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(23) - SU(19)
  Copy Succ SU(25)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(24) - SU(20)
  Copy Succ SU(25)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(42) - SU(61)
  Copy Succ SU(43)
  Copy Succ SU(68)
Cluster ld/st SU(38) - SU(57)
  Copy Succ SU(39)
  Copy Succ SU(68)
Cluster ld/st SU(41) - SU(60)
  Copy Succ SU(43)
  Copy Succ SU(68)
Cluster ld/st SU(37) - SU(56)
  Copy Succ SU(39)
  Copy Succ SU(68)
Cluster ld/st SU(46) - SU(55)
  Copy Succ SU(49)
  Copy Succ SU(68)
Cluster ld/st SU(12) - SU(7)
  Copy Succ SU(61)
  Copy Succ SU(57)
  Copy Succ SU(42)
  Copy Succ SU(38)
  Copy Succ SU(24)
  Copy Succ SU(20)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(26) - SU(22)
  Copy Succ SU(27)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(63) - SU(59)
  Copy Succ SU(68)
Cluster ld/st SU(53) - SU(52)
  Copy Succ SU(68)
Cluster ld/st SU(48) - SU(47)
  Copy Succ SU(68)
Cluster ld/st SU(44) - SU(40)
  Copy Succ SU(68)
Cluster ld/st SU(66) - SU(51)
  Copy Succ SU(67)
  Copy Succ SU(68)
SU(0):   %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(2): Data Latency=4 Reg=%95
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %96:gpr32 = LDRWui %stack.14.k, 0, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  # preds left       : 0
  # succs left       : 4
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(9): Data Latency=4 Reg=%96
    SU(2): Data Latency=4 Reg=%96
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 36
  Predecessors:
    SU(1): Data Latency=4 Reg=%96
    SU(0): Data Latency=4 Reg=%95
    SU(15): Ord  Latency=0 Artificial
  Successors:
    SU(3): Data Latency=1 Reg=%97
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 35
  Predecessors:
    SU(2): Data Latency=1 Reg=%97
  Successors:
    SU(6): Data Latency=1 Reg=%100
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %101:gpr64 = LDRSWui %stack.9.j, 0, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 39
  Successors:
    SU(5): Data Latency=4 Reg=%101
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 35
  Predecessors:
    SU(4): Data Latency=4 Reg=%101
  Successors:
    SU(28): Data Latency=1 Reg=%102
    SU(11): Data Latency=1 Reg=%102
    SU(6): Data Latency=1 Reg=%102
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 34
  Predecessors:
    SU(3): Data Latency=1 Reg=%100
    SU(5): Data Latency=1 Reg=%102
  Successors:
    SU(7): Data Latency=4 Reg=%103
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(7):   STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
  # preds left       : 1
  # succs left       : 14
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 30
  Predecessors:
    SU(6): Data Latency=4 Reg=%103
    SU(12): Ord  Latency=0 Cluster
  Successors:
    SU(60): Ord  Latency=1 Memory
    SU(56): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Artificial
    SU(57): Ord  Latency=0 Artificial
    SU(42): Ord  Latency=0 Artificial
    SU(38): Ord  Latency=0 Artificial
    SU(24): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(8):   %104:gpr32 = LDRWui %stack.21.i12, 0, debug-location !781 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(9): Data Latency=4 Reg=%104
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 36
  Predecessors:
    SU(8): Data Latency=4 Reg=%104
    SU(1): Data Latency=4 Reg=%96
    SU(15): Ord  Latency=0 Artificial
  Successors:
    SU(10): Data Latency=1 Reg=%105
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 35
  Predecessors:
    SU(9): Data Latency=1 Reg=%105
  Successors:
    SU(11): Data Latency=1 Reg=%106
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 34
  Predecessors:
    SU(10): Data Latency=1 Reg=%106
    SU(5): Data Latency=1 Reg=%102
  Successors:
    SU(12): Data Latency=4 Reg=%107
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(12):   STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
  # preds left       : 1
  # succs left       : 8
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 30
  Predecessors:
    SU(11): Data Latency=4 Reg=%107
  Successors:
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(42): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(13):   %108:gpr64 = LDRXui %stack.7.x, 0, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 24
  Successors:
    SU(18): Data Latency=4 Reg=%108
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(14):   %109:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 26
  Successors:
    SU(16): Data Latency=4 Reg=%109
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   %110:gpr64 = LDRSWui %stack.14.k, 0, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  # preds left       : 0
  # succs left       : 5
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 36
  Predecessors:
    SU(1): Ord  Latency=0 Cluster
  Successors:
    SU(16): Data Latency=4 Reg=%110
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(16):   %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 22
  Predecessors:
    SU(15): Data Latency=4 Reg=%110
    SU(14): Data Latency=4 Reg=%109
  Successors:
    SU(17): Data Latency=1 Reg=%111
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(17):   %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 21
  Predecessors:
    SU(16): Data Latency=1 Reg=%111
  Successors:
    SU(18): Data Latency=1 Reg=%112
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 20
  Predecessors:
    SU(17): Data Latency=1 Reg=%112
    SU(13): Data Latency=4 Reg=%108
  Successors:
    SU(28): Data Latency=1 Reg=%113
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(19):   %114:fpr64 = LDRDui %stack.12.x11, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(7): Ord  Latency=1 Memory
    SU(23): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%114
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(20):   %115:fpr64 = LDRDui %stack.13.x21, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(12): Ord  Latency=1 Memory
    SU(24): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(21): Data Latency=4 Reg=%115
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(21):   %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 25
  Predecessors:
    SU(20): Data Latency=4 Reg=%115
    SU(19): Data Latency=4 Reg=%114
  Successors:
    SU(22): Data Latency=1 Reg=%116
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(22):   STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 24
  Predecessors:
    SU(21): Data Latency=1 Reg=%116
    SU(26): Ord  Latency=0 Cluster
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(23):   %117:fpr64 = LDRDui %stack.12.x11, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%117
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(24):   %118:fpr64 = LDRDui %stack.13.x21, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(25): Data Latency=4 Reg=%118
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(25):   %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 25
  Predecessors:
    SU(24): Data Latency=4 Reg=%118
    SU(23): Data Latency=4 Reg=%117
    SU(19): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Successors:
    SU(26): Data Latency=1 Reg=%119
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(26):   STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 24
  Predecessors:
    SU(25): Data Latency=1 Reg=%119
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(27):   %120:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 23
  Predecessors:
    SU(26): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
  Successors:
    SU(28): Data Latency=4 Reg=%120
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(28):   STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  # preds left       : 21
  # succs left       : 29
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 19
  Predecessors:
    SU(27): Data Latency=4 Reg=%120
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(18): Data Latency=1 Reg=%113
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%102
    SU(4): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(69): Ord  Latency=1 Memory
    SU(35): Ord  Latency=1 Memory
    SU(67): Ord  Latency=1 Memory
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(42): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(60): Ord  Latency=1 Memory
    SU(56): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(55): Ord  Latency=1 Memory
    SU(46): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(31): Ord  Latency=1 Memory
    SU(30): Ord  Latency=1 Memory
    SU(29): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(29):   %121:gpr64 = LDRXui %stack.7.x, 0, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 11
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(34): Data Latency=4 Reg=%121
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(30):   %122:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(32): Data Latency=4 Reg=%122
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(31):   %123:gpr64 = LDRSWui %stack.14.k, 0, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(32): Data Latency=4 Reg=%123
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(32):   %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 9
  Predecessors:
    SU(31): Data Latency=4 Reg=%123
    SU(30): Data Latency=4 Reg=%122
  Successors:
    SU(33): Data Latency=1 Reg=%124
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(33):   %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 8
  Predecessors:
    SU(32): Data Latency=1 Reg=%124
  Successors:
    SU(34): Data Latency=1 Reg=%125
  Pressure Diff      : 
  Single Issue       : false;
SU(34):   %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 7
  Predecessors:
    SU(33): Data Latency=1 Reg=%125
    SU(29): Data Latency=4 Reg=%121
  Successors:
    SU(68): Data Latency=1 Reg=%126
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(35):   %127:gpr64 = LDRSWui %stack.9.j, 0, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(68): Data Latency=4 Reg=%127
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(36):   %128:fpr64 = LDRDui %stack.11.u1, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(54): Data Latency=4 Reg=%128
    SU(45): Data Latency=4 Reg=%128
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(37):   %129:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(39): Data Latency=4 Reg=%129
    SU(68): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(38):   %130:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(39): Data Latency=4 Reg=%130
    SU(68): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(39):   %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(38): Data Latency=4 Reg=%130
    SU(37): Data Latency=4 Reg=%129
    SU(57): Ord  Latency=0 Artificial
    SU(56): Ord  Latency=0 Artificial
  Successors:
    SU(52): Data Latency=1 Reg=%131
    SU(47): Data Latency=1 Reg=%131
    SU(45): Data Latency=1 Reg=%131
    SU(40): Data Latency=1 Reg=%131
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(40):   STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%131
    SU(28): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(41):   %132:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(43): Data Latency=4 Reg=%132
    SU(68): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(42):   %133:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(43): Data Latency=4 Reg=%133
    SU(68): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(43):   %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(42): Data Latency=4 Reg=%133
    SU(41): Data Latency=4 Reg=%132
    SU(61): Ord  Latency=0 Artificial
    SU(60): Ord  Latency=0 Artificial
  Successors:
    SU(54): Data Latency=1 Reg=%134
    SU(53): Data Latency=1 Reg=%134
    SU(49): Data Latency=1 Reg=%134
    SU(48): Data Latency=1 Reg=%134
    SU(44): Data Latency=1 Reg=%134
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(44):   STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%134
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(45):   %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(39): Data Latency=1 Reg=%131
    SU(36): Data Latency=4 Reg=%128
  Successors:
    SU(50): Data Latency=1 Reg=%135
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(46):   %136:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(49): Data Latency=4 Reg=%136
    SU(68): Ord  Latency=0 Memory
    SU(55): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(47):   STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%131
    SU(28): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(48):   STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%134
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(49):   %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(43): Data Latency=1 Reg=%134
    SU(46): Data Latency=4 Reg=%136
    SU(55): Ord  Latency=0 Artificial
  Successors:
    SU(50): Data Latency=1 Reg=%137
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(50):   %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 12
  Predecessors:
    SU(49): Data Latency=1 Reg=%137
    SU(45): Data Latency=1 Reg=%135
  Successors:
    SU(51): Data Latency=1 Reg=%138
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(51):   STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 11
  Predecessors:
    SU(50): Data Latency=1 Reg=%138
    SU(28): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Cluster
  Successors:
    SU(67): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(52):   STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%131
    SU(28): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(53):   STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%134
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(54):   %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(43): Data Latency=1 Reg=%134
    SU(36): Data Latency=4 Reg=%128
  Successors:
    SU(65): Data Latency=1 Reg=%139
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(55):   %140:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(46): Ord  Latency=0 Cluster
  Successors:
    SU(64): Data Latency=4 Reg=%140
    SU(68): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(56):   %141:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
    SU(37): Ord  Latency=0 Cluster
  Successors:
    SU(58): Data Latency=4 Reg=%141
    SU(68): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(57):   %142:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(38): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(58): Data Latency=4 Reg=%142
    SU(68): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(58):   %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(57): Data Latency=4 Reg=%142
    SU(56): Data Latency=4 Reg=%141
  Successors:
    SU(64): Data Latency=1 Reg=%143
    SU(59): Data Latency=1 Reg=%143
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(59):   STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(58): Data Latency=1 Reg=%143
    SU(28): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(60):   %144:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 14
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
    SU(41): Ord  Latency=0 Cluster
  Successors:
    SU(62): Data Latency=4 Reg=%144
    SU(68): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(61):   %145:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 14
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(42): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(62): Data Latency=4 Reg=%145
    SU(68): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(62):   %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 7
  Predecessors:
    SU(61): Data Latency=4 Reg=%145
    SU(60): Data Latency=4 Reg=%144
  Successors:
    SU(63): Data Latency=1 Reg=%146
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(63):   STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(62): Data Latency=1 Reg=%146
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(64):   %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(58): Data Latency=1 Reg=%143
    SU(55): Data Latency=4 Reg=%140
  Successors:
    SU(65): Data Latency=1 Reg=%147
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(65):   %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 12
  Predecessors:
    SU(64): Data Latency=1 Reg=%147
    SU(54): Data Latency=1 Reg=%139
  Successors:
    SU(66): Data Latency=1 Reg=%148
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(66):   STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 11
  Predecessors:
    SU(65): Data Latency=1 Reg=%148
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(67): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(67):   %149:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 10
  Predecessors:
    SU(66): Ord  Latency=1 Memory
    SU(51): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(68): Data Latency=4 Reg=%149
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Single Issue       : false;
SU(68):   STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  # preds left       : 48
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 6
  Predecessors:
    SU(67): Data Latency=4 Reg=%149
    SU(67): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Memory
    SU(55): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(37): Ord  Latency=0 Memory
    SU(36): Ord  Latency=0 Memory
    SU(35): Data Latency=4 Reg=%127
    SU(35): Ord  Latency=0 Memory
    SU(34): Data Latency=1 Reg=%126
    SU(31): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(29): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=0 Memory
    SU(69): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    FPR8+ZPR_4b 1    FPR8+ZPR4_with_zsub2_in_ZPR_4b 1    FPR8+ZPR4_with_zsub3_in_ZPR_4b 1    FPR8+ZPR4_with_zsub_in_FPR128_lo 1    ZPR 1
  Single Issue       : false;
SU(69):   %150:gpr32common = LDRWui %stack.9.j, 0, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 35
  Height             : 5
  Predecessors:
    SU(68): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(70): Data Latency=4 Reg=%150
    SU(71): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(70):   %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 39
  Height             : 1
  Predecessors:
    SU(69): Data Latency=4 Reg=%150
  Successors:
    SU(71): Data Latency=1 Reg=%151
  Pressure Diff      : 
  Single Issue       : false;
SU(71):   STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 40
  Height             : 0
  Predecessors:
    SU(70): Data Latency=1 Reg=%151
    SU(69): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(35): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.31, debug-location !799; fft3d.c:128:21
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 40
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 71 
Pick Bot ONLY1     
Scheduling SU(71) STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
Bottom Pressure:
GPR32=5
  LiveReg: %151
  UpdateRegP: SU(71) STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
              to 
  Ready @0c
  BotQ.A TopLatency SU(71) 40c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 70 
Pick Bot ONLY1     
Scheduling SU(70) %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
Bottom Pressure:
GPR32=5
  LiveReg: %150
  UpdateRegP: SU(70) %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(70) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 69 
Pick Bot ONLY1     
Scheduling SU(69) %150:gpr32common = LDRWui %stack.9.j, 0, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A BotLatency SU(69) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 68 
Pick Bot ONLY1     
Scheduling SU(68) STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %149
  UpdateRegP: SU(68) STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to GPR32 2
  LiveReg: %126
  UpdateRegP: SU(68) STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to GPR32 1
  LiveReg: %127
  UpdateRegP: SU(68) STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to 
  Ready @6c
  BotQ.A BotLatency SU(68) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 63 59 53 52 48 47 44 40 34 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(63) ORDER                              
  Cand SU(59) WEAK                               
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot WEAK      
Scheduling SU(59) STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  LiveReg: %143
  UpdateRegP: SU(59) STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
              to 
  UpdateRegP: SU(64) %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
              to 
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 63 34 53 52 48 47 44 40 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(63) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(63) STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  LiveReg: %146
  UpdateRegP: SU(63) STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
              to 
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 40 34 53 52 48 47 44 62 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(62) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(62) %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %144
  UpdateRegP: SU(62) %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %145
  UpdateRegP: SU(62) %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @9c
  BotQ.A BotLatency SU(62) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 52 48 47 44 67 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(67) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(67) %149:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @10c
  BotQ.A BotLatency SU(67) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 52 48 47 44 35 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(52) STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %131
  UpdateRegP: SU(40) STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
              to 
  UpdateRegP: SU(45) %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
              to 
  UpdateRegP: SU(47) STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
              to 
  UpdateRegP: SU(52) STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
              to 
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 51 48 47 44 35 66 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(51) 29c
  BotQ.A RemainingLatency 29 + 12c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(34) BOT-PATH                  28 cycles 
  Cand SU(53) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(53) STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=6
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  LiveReg: %134
  UpdateRegP: SU(44) STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
              to 
  UpdateRegP: SU(48) STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
              to 
  UpdateRegP: SU(49) %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
              to 
  UpdateRegP: SU(53) STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
              to 
  UpdateRegP: SU(54) %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
              to 
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 66 51 48 47 44 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 13c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(34) BOT-PATH                  28 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(34) %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  LiveReg: %121
  UpdateRegP: SU(34) %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
              to 
  LiveReg: %125
  UpdateRegP: SU(34) %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
              to GPR32 -1
  Ready @13c
  BotQ.A TopLatency SU(34) 28c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 48 47 44 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 14c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(47) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(47) STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 48 33 44 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 15c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(48) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(48) STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @15c
  BotQ.A TopLatency SU(48) 27c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 44 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 16c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(40) STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @16c
  BotQ.A TopLatency SU(40) 27c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 66 51 44 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 17c > CritPath 40
Picking from Bot:
  Cand SU(33) ORDER                              
  Cand SU(44) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(44) STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @17c
  BotQ.A TopLatency SU(44) 27c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 66 51 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 18c > CritPath 40
Picking from Bot:
  Cand SU(33) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(33) %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  LiveReg: %124
  UpdateRegP: SU(33) %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
              to GPR32 -1
  Ready @18c
  BotQ.A TopLatency SU(33) 27c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 35 66 51 32 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 19c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(32) BOT-PATH                  26 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(32) %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
Bottom Pressure:
FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  LiveReg: %122
  UpdateRegP: SU(32) %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
              to 
  LiveReg: %123
  UpdateRegP: SU(32) %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
              to GPR32 -1
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 29 35 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 20c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
  Cand SU(35) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(35) %127:gpr64 = LDRSWui %stack.9.j, 0, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 18
  Executed: 21c
  Critical: 18c, 18 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 29 51 66 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(51) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 21c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(29) %121:gpr64 = LDRXui %stack.7.x, 0, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=6
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @21c
  BotQ.A BotLatency SU(29) 11c
  *** Max MOps 1 at cycle 21
Cycle: 22 BotQ.A
BotQ.A @22c
  Retired: 19
  Executed: 22c
  Critical: 19c, 19 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 22c > CritPath 40
Picking from Bot:
  Cand SU(66) ORDER                              
  Cand SU(51) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(51) STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
Bottom Pressure:
FPR8=6
GPR32=6
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  LiveReg: %138
  UpdateRegP: SU(51) STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
              to 
  Ready @22c
  BotQ.A TopLatency SU(51) 29c
  *** Max MOps 1 at cycle 22
Cycle: 23 BotQ.A
BotQ.A @23c
  Retired: 20
  Executed: 23c
  Critical: 20c, 20 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 66 50 31 30 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 23c > CritPath 40
Picking from Bot:
  Cand SU(66) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(66) STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=6
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  LiveReg: %148
  UpdateRegP: SU(66) STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
              to 
  Ready @23c
  BotQ.A TopLatency SU(66) 29c
  *** Max MOps 1 at cycle 23
Cycle: 24 BotQ.A
BotQ.A @24c
  Retired: 21
  Executed: 24c
  Critical: 21c, 21 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 30 50 31 65 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 24c > CritPath 40
Picking from Bot:
  Cand SU(30) ORDER                              
  Cand SU(31) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(31) %123:gpr64 = LDRSWui %stack.14.k, 0, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
Bottom Pressure:
FPR8=7
GPR32=5
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @24c
  BotQ.A BotLatency SU(31) 13c
  *** Max MOps 1 at cycle 24
Cycle: 25 BotQ.A
BotQ.A @25c
  Retired: 22
  Executed: 25c
  Critical: 22c, 22 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 30 50 65 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 25c > CritPath 40
Picking from Bot:
  Cand SU(30) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(30) %122:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 BotQ.A
BotQ.A @26c
  Retired: 23
  Executed: 26c
  Critical: 23c, 23 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 65 50 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(65) 28c
  BotQ.A RemainingLatency 28 + 26c > CritPath 40
Picking from Bot:
  Cand SU(65) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(65) %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  LiveReg: %139
  UpdateRegP: SU(65) %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %147
  UpdateRegP: SU(65) %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @26c
  BotQ.A TopLatency SU(65) 28c
  *** Max MOps 1 at cycle 26
Cycle: 27 BotQ.A
BotQ.A @27c
  Retired: 24
  Executed: 27c
  Critical: 24c, 24 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 64 54 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 27c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
  Cand SU(64) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(64) %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  LiveReg: %140
  UpdateRegP: SU(64) %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @27c
  *** Max MOps 1 at cycle 27
Cycle: 28 BotQ.A
BotQ.A @28c
  Retired: 25
  Executed: 28c
  Critical: 25c, 25 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 54 58 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 28c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
  Cand SU(54) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(54) %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  LiveReg: %128
  UpdateRegP: SU(45) %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(54) %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @28c
  BotQ.A TopLatency SU(54) 27c
  *** Max MOps 1 at cycle 28
Cycle: 29 BotQ.A
BotQ.A @29c
  Retired: 26
  Executed: 29c
  Critical: 26c, 26 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 58 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 29c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(50) %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %135
  UpdateRegP: SU(50) %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %137
  UpdateRegP: SU(50) %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @29c
  BotQ.A TopLatency SU(50) 28c
  *** Max MOps 1 at cycle 29
Cycle: 30 BotQ.A
BotQ.A @30c
  Retired: 27
  Executed: 30c
  Critical: 27c, 27 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 58 49 45 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(49) 27c
  BotQ.A RemainingLatency 27 + 30c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
  Cand SU(49) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(49) %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %136
  UpdateRegP: SU(49) %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @30c
  *** Max MOps 1 at cycle 30
Cycle: 31 BotQ.A
BotQ.A @31c
  Retired: 28
  Executed: 31c
  Critical: 28c, 28 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 
Queue BotQ.A: 58 45 43 55 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(45) 27c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 27 + 31c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
  Cand SU(45) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(45) %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  Ready @31c
  BotQ.A TopLatency SU(45) 27c
  *** Max MOps 1 at cycle 31
Cycle: 32 BotQ.A
BotQ.A @32c
  Retired: 29
  Executed: 32c
  Critical: 29c, 29 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 36 
Queue BotQ.A: 58 55 43 39 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(58) 26c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 26 + 32c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(58) %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %141
  UpdateRegP: SU(58) %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %142
  UpdateRegP: SU(58) %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @32c
  BotQ.A BotLatency SU(58) 14c
  *** Max MOps 1 at cycle 32
Cycle: 33 BotQ.A
BotQ.A @33c
  Retired: 30
  Executed: 33c
  Critical: 30c, 30 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 36 
Queue BotQ.A: 39 55 43 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 26 + 33c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(55) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(55) %140:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  Ready @33c
  BotQ.A BotLatency SU(55) 17c
  *** Max MOps 1 at cycle 33
Cycle: 34 BotQ.A
BotQ.A @34c
  Retired: 31
  Executed: 34c
  Critical: 31c, 31 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 36 
Queue BotQ.A: 39 43 46 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(36) 22c
  BotQ.A RemainingLatency 26 + 34c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(46) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(46) %136:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @34c
  *** Max MOps 1 at cycle 34
Cycle: 35 BotQ.A
BotQ.A @35c
  Retired: 32
  Executed: 35c
  Critical: 32c, 32 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 39 43 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
  BotQ.A RemainingLatency 26 + 35c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(43) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(43) %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  LiveReg: %132
  UpdateRegP: SU(43) %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %133
  UpdateRegP: SU(43) %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @35c
  BotQ.A TopLatency SU(43) 26c
  *** Max MOps 1 at cycle 35
Cycle: 36 BotQ.A
BotQ.A @36c
  Retired: 33
  Executed: 36c
  Critical: 33c, 33 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 
Queue BotQ.A: 39 36 61 60 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 26 + 36c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(39) %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
FPR8+ZPR_4b=9
FPR8+ZPR4_with_zsub2_in_ZPR_4b=9
FPR8+ZPR4_with_zsub3_in_ZPR_4b=9
FPR8+ZPR4_with_zsub_in_FPR128_lo=9
ZPR=9
  LiveReg: %129
  UpdateRegP: SU(39) %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
              to 
  LiveReg: %130
  UpdateRegP: SU(39) %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @36c
  BotQ.A TopLatency SU(39) 26c
  *** Max MOps 1 at cycle 36
Cycle: 37 BotQ.A
BotQ.A @37c
  Retired: 34
  Executed: 37c
  Critical: 34c, 34 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 38 37 
Queue BotQ.A: 60 36 61 57 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(60) 22c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 25 + 37c > CritPath 40
Picking from Bot:
  Cand SU(60) ORDER                              
  Cand SU(61) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(61) %145:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
FPR8+ZPR_4b=8
FPR8+ZPR4_with_zsub2_in_ZPR_4b=8
FPR8+ZPR4_with_zsub3_in_ZPR_4b=8
FPR8+ZPR4_with_zsub_in_FPR128_lo=8
ZPR=8
  Ready @37c
  *** Max MOps 1 at cycle 37
Cycle: 38 BotQ.A
BotQ.A @38c
  Retired: 35
  Executed: 38c
  Critical: 35c, 35 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 38 37 
Queue BotQ.A: 60 36 56 57 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(60) 22c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 24 + 38c > CritPath 40
Picking from Bot:
  Cand SU(60) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(60) %144:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
FPR8+ZPR_4b=7
FPR8+ZPR4_with_zsub2_in_ZPR_4b=7
FPR8+ZPR4_with_zsub3_in_ZPR_4b=7
FPR8+ZPR4_with_zsub_in_FPR128_lo=7
ZPR=7
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 BotQ.A
BotQ.A @39c
  Retired: 36
  Executed: 39c
  Critical: 36c, 36 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 37 38 
Queue BotQ.A: 57 36 56 42 41 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(57) 22c
BotQ.A RemLatency SU(37) 22c
  BotQ.A RemainingLatency 23 + 39c > CritPath 40
Picking from Bot:
  Cand SU(57) ORDER                              
  Cand SU(41) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(41) %132:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
Bottom Pressure:
FPR8=6
GPR32=4
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
FPR8+ZPR_4b=6
FPR8+ZPR4_with_zsub2_in_ZPR_4b=6
FPR8+ZPR4_with_zsub3_in_ZPR_4b=6
FPR8+ZPR4_with_zsub_in_FPR128_lo=6
ZPR=6
  Ready @39c
  BotQ.A BotLatency SU(41) 18c
  *** Max MOps 1 at cycle 39
Cycle: 40 BotQ.A
BotQ.A @40c
  Retired: 37
  Executed: 40c
  Critical: 37c, 37 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 57 36 56 42 37 38 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(57) 22c
  BotQ.A RemainingLatency 22 + 40c > CritPath 40
Picking from Bot:
  Cand SU(57) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(57) %142:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=4
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
FPR8+ZPR_4b=5
FPR8+ZPR4_with_zsub2_in_ZPR_4b=5
FPR8+ZPR4_with_zsub3_in_ZPR_4b=5
FPR8+ZPR4_with_zsub_in_FPR128_lo=5
ZPR=5
  Ready @40c
  *** Max MOps 1 at cycle 40
Cycle: 41 BotQ.A
BotQ.A @41c
  Retired: 38
  Executed: 41c
  Critical: 38c, 38 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 36 56 42 37 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 41c > CritPath 40
Picking from Bot:
  Cand SU(38) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(38) %130:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=4
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  Ready @41c
  BotQ.A TopLatency SU(38) 22c
  *** Max MOps 1 at cycle 41
Cycle: 42 BotQ.A
BotQ.A @42c
  Retired: 39
  Executed: 42c
  Critical: 39c, 39 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 36 56 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 42c > CritPath 40
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(36) WEAK                               
  Cand SU(56) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(56) %141:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=4
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @42c
  BotQ.A TopLatency SU(56) 22c
  *** Max MOps 1 at cycle 42
Cycle: 43 BotQ.A
BotQ.A @43c
  Retired: 40
  Executed: 43c
  Critical: 40c, 40 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 36 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 43c > CritPath 40
Picking from Bot:
  Cand SU(37) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(37) %129:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=2
GPR32=4
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  Ready @43c
  BotQ.A TopLatency SU(37) 22c
  *** Max MOps 1 at cycle 43
Cycle: 44 BotQ.A
BotQ.A @44c
  Retired: 41
  Executed: 44c
  Critical: 41c, 41 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 44c > CritPath 40
Picking from Bot:
  Cand SU(42) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(42) %133:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
Bottom Pressure:
FPR8=1
GPR32=4
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  Ready @44c
  BotQ.A TopLatency SU(42) 22c
  *** Max MOps 1 at cycle 44
Cycle: 45 BotQ.A
BotQ.A @45c
  Retired: 42
  Executed: 45c
  Critical: 42c, 42 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 
Pick Bot ONLY1     
Scheduling SU(36) %128:fpr64 = LDRDui %stack.11.u1, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
Bottom Pressure:
GPR32=4
  Ready @45c
  BotQ.A TopLatency SU(36) 22c
  *** Max MOps 1 at cycle 45
Cycle: 46 BotQ.A
BotQ.A @46c
  Retired: 43
  Executed: 46c
  Critical: 43c, 43 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 28 
Pick Bot ONLY1     
Scheduling SU(28) STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %120
  UpdateRegP: SU(28) STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to GPR32 2
  LiveReg: %113
  UpdateRegP: SU(28) STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to GPR32 1
  LiveReg: %102
  UpdateRegP: SU(6) %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(11) %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  UpdateRegP: SU(28) STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to 
  Ready @46c
  BotQ.A BotLatency SU(28) 19c
  *** Max MOps 1 at cycle 46
Cycle: 47 BotQ.A
BotQ.A @47c
  Retired: 44
  Executed: 47c
  Critical: 44c, 44 MOps
  ExpectedLatency: 19c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 
Queue BotQ.A: 18 
Pick Bot ONLY1     
Scheduling SU(18) %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %108
  UpdateRegP: SU(18) %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
              to 
  LiveReg: %112
  UpdateRegP: SU(18) %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
              to GPR32 -1
  Ready @47c
  BotQ.A BotLatency SU(18) 20c
  *** Max MOps 1 at cycle 47
Cycle: 48 BotQ.A
BotQ.A @48c
  Retired: 45
  Executed: 48c
  Critical: 45c, 45 MOps
  ExpectedLatency: 20c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 13 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %111
  UpdateRegP: SU(17) %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
              to GPR32 -1
  Ready @48c
  BotQ.A BotLatency SU(17) 21c
  *** Max MOps 1 at cycle 48
Cycle: 49 BotQ.A
BotQ.A @49c
  Retired: 46
  Executed: 49c
  Critical: 46c, 46 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 13 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %109
  UpdateRegP: SU(16) %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
              to 
  LiveReg: %110
  UpdateRegP: SU(16) %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
              to GPR32 -1
  Ready @49c
  BotQ.A BotLatency SU(16) 22c
  *** Max MOps 1 at cycle 49
Cycle: 50 BotQ.A
BotQ.A @50c
  Retired: 47
  Executed: 50c
  Critical: 47c, 47 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 13 
Queue BotQ.A: 27 
Pick Bot ONLY1     
Scheduling SU(27) %120:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
Bottom Pressure:
GPR32=8
  Ready @50c
  BotQ.A BotLatency SU(27) 23c
  *** Max MOps 1 at cycle 50
Cycle: 51 BotQ.A
BotQ.A @51c
  Retired: 48
  Executed: 51c
  Critical: 48c, 48 MOps
  ExpectedLatency: 23c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 26 22 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 51c > CritPath 40
Picking from Bot:
  Cand SU(26) ORDER                              
  Cand SU(22) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(22) STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %116
  UpdateRegP: SU(22) STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
              to 
  Ready @51c
  BotQ.A BotLatency SU(22) 24c
  *** Max MOps 1 at cycle 51
Cycle: 52 BotQ.A
BotQ.A @52c
  Retired: 49
  Executed: 52c
  Critical: 49c, 49 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 26 13 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 52c > CritPath 40
Picking from Bot:
  Cand SU(26) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(26) STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  LiveReg: %119
  UpdateRegP: SU(26) STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
              to 
  Ready @52c
  BotQ.A TopLatency SU(26) 16c
  *** Max MOps 1 at cycle 52
Cycle: 53 BotQ.A
BotQ.A @53c
  Retired: 50
  Executed: 53c
  Critical: 50c, 50 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 13 25 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 53c > CritPath 40
Picking from Bot:
  Cand SU(21) ORDER                              
  Cand SU(25) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(25) %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  LiveReg: %117
  UpdateRegP: SU(25) %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
              to 
  LiveReg: %118
  UpdateRegP: SU(25) %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @53c
  BotQ.A BotLatency SU(25) 25c
  *** Max MOps 1 at cycle 53
Cycle: 54 BotQ.A
BotQ.A @54c
  Retired: 51
  Executed: 54c
  Critical: 51c, 51 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 
Queue BotQ.A: 21 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 54c > CritPath 40
Picking from Bot:
  Cand SU(21) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(21) %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  LiveReg: %114
  UpdateRegP: SU(21) %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
              to 
  LiveReg: %115
  UpdateRegP: SU(21) %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @54c
  BotQ.A TopLatency SU(21) 15c
  *** Max MOps 1 at cycle 54
Cycle: 55 BotQ.A
BotQ.A @55c
  Retired: 52
  Executed: 55c
  Critical: 52c, 52 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 20 19 
Queue BotQ.A: 14 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 55c > CritPath 40
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %109:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  Ready @55c
  BotQ.A BotLatency SU(14) 26c
  *** Max MOps 1 at cycle 55
Cycle: 56 BotQ.A
BotQ.A @56c
  Retired: 53
  Executed: 56c
  Critical: 53c, 53 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 20 19 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %108:gpr64 = LDRXui %stack.7.x, 0, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
FPR8+ZPR_4b=4
FPR8+ZPR4_with_zsub2_in_ZPR_4b=4
FPR8+ZPR4_with_zsub3_in_ZPR_4b=4
FPR8+ZPR4_with_zsub_in_FPR128_lo=4
ZPR=4
  Ready @56c
  *** Max MOps 1 at cycle 56
Cycle: 57 BotQ.A
BotQ.A @57c
  Retired: 54
  Executed: 57c
  Critical: 54c, 54 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 24 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 57c > CritPath 40
Picking from Bot:
  Cand SU(24) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(24) %118:fpr64 = LDRDui %stack.13.x21, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
FPR8+ZPR_4b=3
FPR8+ZPR4_with_zsub2_in_ZPR_4b=3
FPR8+ZPR4_with_zsub3_in_ZPR_4b=3
FPR8+ZPR4_with_zsub_in_FPR128_lo=3
ZPR=3
  Ready @57c
  BotQ.A BotLatency SU(24) 29c
  *** Max MOps 1 at cycle 57
Cycle: 58 BotQ.A
BotQ.A @58c
  Retired: 55
  Executed: 58c
  Critical: 55c, 55 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 19 20 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 58c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(20) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(20) %115:fpr64 = LDRDui %stack.13.x21, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  Ready @58c
  *** Max MOps 1 at cycle 58
Cycle: 59 BotQ.A
BotQ.A @59c
  Retired: 56
  Executed: 59c
  Critical: 56c, 56 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 19 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 59c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
  Cand SU(19) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(19) %114:fpr64 = LDRDui %stack.12.x11, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  Ready @59c
  BotQ.A TopLatency SU(19) 11c
  *** Max MOps 1 at cycle 59
Cycle: 60 BotQ.A
BotQ.A @60c
  Retired: 57
  Executed: 60c
  Critical: 57c, 57 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 60c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(23) %117:fpr64 = LDRDui %stack.12.x11, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
Bottom Pressure:
GPR32=6
  Ready @60c
  BotQ.A TopLatency SU(23) 11c
  *** Max MOps 1 at cycle 60
Cycle: 61 BotQ.A
BotQ.A @61c
  Retired: 58
  Executed: 61c
  Critical: 58c, 58 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 61c > CritPath 40
Picking from Bot:
  Cand SU(12) ORDER                              
  Cand SU(7) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(7) STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %103
  UpdateRegP: SU(7) STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
              to 
  Ready @61c
  BotQ.A BotLatency SU(7) 30c
  *** Max MOps 1 at cycle 61
Cycle: 62 BotQ.A
BotQ.A @62c
  Retired: 59
  Executed: 62c
  Critical: 59c, 59 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
FPR8+ZPR_4b=2
FPR8+ZPR4_with_zsub2_in_ZPR_4b=2
FPR8+ZPR4_with_zsub3_in_ZPR_4b=2
FPR8+ZPR4_with_zsub_in_FPR128_lo=2
ZPR=2
  LiveReg: %107
  UpdateRegP: SU(12) STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
              to 
  Ready @62c
  BotQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 62
Cycle: 63 BotQ.A
BotQ.A @63c
  Retired: 60
  Executed: 63c
  Critical: 60c, 60 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 65 BotQ.A
Queue BotQ.P: 11 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
FPR8+ZPR_4b=1
FPR8+ZPR4_with_zsub2_in_ZPR_4b=1
FPR8+ZPR4_with_zsub3_in_ZPR_4b=1
FPR8+ZPR4_with_zsub_in_FPR128_lo=1
ZPR=1
  LiveReg: %100
  UpdateRegP: SU(6) %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @65c
  BotQ.A BotLatency SU(6) 34c
  *** Max MOps 1 at cycle 65
Cycle: 66 BotQ.A
BotQ.A @66c
  Retired: 61
  Executed: 66c
  Critical: 61c, 61 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 11 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 66c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(11) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(11) %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
Bottom Pressure:
GPR32=8
  LiveReg: %106
  UpdateRegP: SU(11) %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    FPR8+ZPR_4b -1    FPR8+ZPR4_with_zsub2_in_ZPR_4b -1    FPR8+ZPR4_with_zsub3_in_ZPR_4b -1    FPR8+ZPR4_with_zsub_in_FPR128_lo -1    ZPR -1
  Ready @66c
  *** Max MOps 1 at cycle 66
Cycle: 67 BotQ.A
BotQ.A @67c
  Retired: 62
  Executed: 67c
  Critical: 62c, 62 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 67c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
Bottom Pressure:
GPR32=8
  LiveReg: %105
  UpdateRegP: SU(10) %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
              to GPR32 -1
  Ready @67c
  BotQ.A BotLatency SU(10) 35c
  *** Max MOps 1 at cycle 67
Cycle: 68 BotQ.A
BotQ.A @68c
  Retired: 63
  Executed: 68c
  Critical: 63c, 63 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 68c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
Bottom Pressure:
GPR32=8
  LiveReg: %97
  UpdateRegP: SU(3) %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
              to GPR32 -1
  Ready @68c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 68
Cycle: 69 BotQ.A
BotQ.A @69c
  Retired: 64
  Executed: 69c
  Critical: 64c, 64 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 69c > CritPath 40
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(5) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(5) %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
Bottom Pressure:
GPR32=8
  LiveReg: %101
  UpdateRegP: SU(5) %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
              to GPR32 -1
  Ready @69c
  *** Max MOps 1 at cycle 69
Cycle: 70 BotQ.A
BotQ.A @70c
  Retired: 65
  Executed: 70c
  Critical: 65c, 65 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 9 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 70c > CritPath 40
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
Bottom Pressure:
GPR32=9
  LiveReg: %104
  UpdateRegP: SU(9) %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
              to 
  LiveReg: %96
  UpdateRegP: SU(2) %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
              to 
  UpdateRegP: SU(9) %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
              to GPR32 -1
  Ready @70c
  BotQ.A TopLatency SU(9) 4c
  BotQ.A BotLatency SU(9) 36c
  *** Max MOps 1 at cycle 70
Cycle: 71 BotQ.A
BotQ.A @71c
  Retired: 66
  Executed: 71c
  Critical: 66c, 66 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 8 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
Bottom Pressure:
GPR32=9
  LiveReg: %95
  UpdateRegP: SU(2) %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
              to GPR32 -1
  Ready @71c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 71
Cycle: 72 BotQ.A
BotQ.A @72c
  Retired: 67
  Executed: 72c
  Critical: 67c, 67 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 8 1 0 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %110:gpr64 = LDRSWui %stack.14.k, 0, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
Bottom Pressure:
GPR32=8
  Ready @72c
  *** Max MOps 1 at cycle 72
Cycle: 73 BotQ.A
BotQ.A @73c
  Retired: 68
  Executed: 73c
  Critical: 68c, 68 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 8 1 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %101:gpr64 = LDRSWui %stack.9.j, 0, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
Bottom Pressure:
GPR32=7
  Ready @73c
  BotQ.A BotLatency SU(4) 39c
  *** Max MOps 1 at cycle 73
Cycle: 74 BotQ.A
BotQ.A @74c
  Retired: 69
  Executed: 74c
  Critical: 69c, 69 MOps
  ExpectedLatency: 39c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %104:gpr32 = LDRWui %stack.21.i12, 0, debug-location !781 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
Bottom Pressure:
GPR32=6
  Ready @74c
  BotQ.A BotLatency SU(8) 40c
  *** Max MOps 1 at cycle 74
Cycle: 75 BotQ.A
BotQ.A @75c
  Retired: 70
  Executed: 75c
  Critical: 70c, 70 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 75c > CritPath 40
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(1) %96:gpr32 = LDRWui %stack.14.k, 0, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
Bottom Pressure:
GPR32=5
  Ready @75c
  *** Max MOps 1 at cycle 75
Cycle: 76 BotQ.A
BotQ.A @76c
  Retired: 71
  Executed: 76c
  Critical: 71c, 71 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
Bottom Pressure:
GPR32=4
  Ready @76c
  *** Max MOps 1 at cycle 76
Cycle: 77 BotQ.A
BotQ.A @77c
  Retired: 72
  Executed: 77c
  Critical: 72c, 72 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
SU(1):   %96:gpr32 = LDRWui %stack.14.k, 0, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
SU(8):   %104:gpr32 = LDRWui %stack.21.i12, 0, debug-location !781 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
SU(4):   %101:gpr64 = LDRSWui %stack.9.j, 0, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
SU(15):   %110:gpr64 = LDRSWui %stack.14.k, 0, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
SU(2):   %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
SU(9):   %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
SU(5):   %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
SU(3):   %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
SU(10):   %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
SU(11):   %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
SU(6):   %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
SU(12):   STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
SU(7):   STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
SU(23):   %117:fpr64 = LDRDui %stack.12.x11, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
SU(19):   %114:fpr64 = LDRDui %stack.12.x11, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
SU(20):   %115:fpr64 = LDRDui %stack.13.x21, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
SU(24):   %118:fpr64 = LDRDui %stack.13.x21, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
SU(13):   %108:gpr64 = LDRXui %stack.7.x, 0, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
SU(14):   %109:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
SU(21):   %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
SU(25):   %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
SU(26):   STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
SU(22):   STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
SU(27):   %120:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
SU(16):   %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
SU(17):   %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
SU(18):   %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
SU(28):   STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
SU(36):   %128:fpr64 = LDRDui %stack.11.u1, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
SU(42):   %133:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
SU(37):   %129:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
SU(56):   %141:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
SU(38):   %130:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
SU(57):   %142:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
SU(41):   %132:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
SU(60):   %144:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
SU(61):   %145:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
SU(39):   %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
SU(43):   %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
SU(46):   %136:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
SU(55):   %140:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
SU(58):   %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
SU(45):   %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
SU(49):   %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
SU(50):   %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
SU(54):   %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
SU(64):   %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
SU(65):   %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
SU(30):   %122:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
SU(31):   %123:gpr64 = LDRSWui %stack.14.k, 0, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
SU(66):   STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
SU(51):   STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
SU(29):   %121:gpr64 = LDRXui %stack.7.x, 0, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
SU(35):   %127:gpr64 = LDRSWui %stack.9.j, 0, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
SU(32):   %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
SU(33):   %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
SU(44):   STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
SU(40):   STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
SU(48):   STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
SU(47):   STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
SU(34):   %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
SU(53):   STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
SU(52):   STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
SU(67):   %149:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
SU(62):   %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
SU(63):   STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
SU(59):   STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
SU(68):   STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
SU(69):   %150:gpr32common = LDRWui %stack.9.j, 0, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
SU(70):   %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
SU(71):   STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44

********** MI Scheduling **********
Swarztrauber:%bb.33 for.inc260
  From: %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
    To: B %bb.29, debug-location !803; fft3d.c:127:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%93
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !802; fft3d.c:127:43
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%93
  Successors:
    SU(2): Data Latency=1 Reg=%94
  Single Issue       : false;
SU(2):   STRWui %94:gpr32common, %stack.14.k, 0, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%94
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.29, debug-location !803; fft3d.c:127:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %94:gpr32common, %stack.14.k, 0, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !802; fft3d.c:127:43
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
SU(1):   %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !802; fft3d.c:127:43
SU(2):   STRWui %94:gpr32common, %stack.14.k, 0, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43

********** MI Scheduling **********
Swarztrauber:%bb.34 for.inc263
  From: %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
    To: B %bb.24, debug-location !807; fft3d.c:115:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%87
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %88:gpr32common = nsw ADDWri %87:gpr32common, 1, 0, debug-location !806; fft3d.c:115:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%87
  Successors:
    SU(2): Data Latency=1 Reg=%88
  Single Issue       : false;
SU(2):   STRWui %88:gpr32common, %stack.8.i, 0, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%88
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.24, debug-location !807; fft3d.c:115:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %88:gpr32common, %stack.8.i, 0, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %88:gpr32common = nsw ADDWri %87:gpr32common, 1, 0, debug-location !806; fft3d.c:115:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
SU(1):   %88:gpr32common = nsw ADDWri %87:gpr32common, 1, 0, debug-location !806; fft3d.c:115:39
SU(2):   STRWui %88:gpr32common, %stack.8.i, 0, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39

********** MI Scheduling **********
Swarztrauber:%bb.35 for.inc267
  From: %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
    To: B %bb.3, debug-location !811; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%156
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %157:gpr32common = nsw ADDWri %156:gpr32common, 2, 0, debug-location !810; fft3d.c:74:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%156
  Successors:
    SU(2): Data Latency=1 Reg=%157
  Single Issue       : false;
SU(2):   STRWui %157:gpr32common, %stack.10.l, 0, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%157
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.3, debug-location !811; fft3d.c:74:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %157:gpr32common, %stack.10.l, 0, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %157:gpr32common = nsw ADDWri %156:gpr32common, 2, 0, debug-location !810; fft3d.c:74:27
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
SU(1):   %157:gpr32common = nsw ADDWri %156:gpr32common, 2, 0, debug-location !810; fft3d.c:74:27
SU(2):   STRWui %157:gpr32common, %stack.10.l, 0, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27

********** INTERVALS **********
NZCV [704r,720r:14)[784r,792r:13)[912r,928r:12)[1088r,1104r:11)[1376r,1432r:2)[1936r,1952r:1)[2080r,2096r:0)[3576r,3584r:10)[3648r,3656r:4)[3728r,3744r:3)[4192r,4208r:9)[4368r,4384r:8)[4656r,4712r:7)[5216r,5232r:6)[5360r,5376r:5)  0@2080r 1@1936r 2@1376r 3@3728r 4@3648r 5@5360r 6@5216r 7@4656r 8@4368r 9@4192r 10@3576r 11@1088r 12@912r 13@784r 14@704r
W0 [0B,112r:0)[384r,400r:2)[6944r,6960r:1)  0@0B-phi 1@6944r 2@384r
W1 [0B,96r:0)  0@0B-phi
W2 [0B,80r:0)  0@0B-phi
W3 [0B,64r:0)  0@0B-phi
W4 [0B,48r:0)  0@0B-phi
W5 [0B,32r:0)  0@0B-phi
W6 [0B,16r:0)  0@0B-phi
%0 [304r,6832B:0)  0@304r weight:0.000000e+00
%5 [112r,128r:0)  0@112r weight:0.000000e+00
%6 [96r,144r:0)  0@96r weight:0.000000e+00
%7 [80r,160r:0)  0@80r weight:0.000000e+00
%8 [64r,176r:0)  0@64r weight:0.000000e+00
%9 [48r,304r:0)  0@48r weight:0.000000e+00
%10 [32r,312r:0)  0@32r weight:0.000000e+00
%11 [16r,296r:0)  0@16r weight:0.000000e+00
%13 [272r,6848r:0)  0@272r weight:0.000000e+00
%14 [288r,320r:0)  0@288r weight:0.000000e+00
%16 [480r,720r:0)  0@480r weight:0.000000e+00
%18 [720r,736r:0)  0@720r weight:0.000000e+00
%19 [736r,744r:0)  0@736r weight:0.000000e+00
%20 [560r,712r:0)  0@560r weight:0.000000e+00
%22 [592r,712r:0)  0@592r weight:0.000000e+00
%24 [712r,728r:0)  0@712r weight:0.000000e+00
%25 [768r,784r:0)  0@768r weight:0.000000e+00
%26 [776r,784r:0)  0@776r weight:0.000000e+00
%29 [6848r,6864r:0)  0@6848r weight:0.000000e+00
%31 [832r,904r:0)  0@832r weight:0.000000e+00
%32 [904r,920r:0)  0@904r weight:0.000000e+00
%33 [896r,928r:0)  0@896r weight:0.000000e+00
%35 [928r,944r:0)  0@928r weight:0.000000e+00
%36 [944r,976r:0)  0@944r weight:0.000000e+00
%38 [1064r,1088r:0)  0@1064r weight:0.000000e+00
%39 [1056r,1072r:0)  0@1056r weight:0.000000e+00
%40 [1072r,1088r:0)  0@1072r weight:0.000000e+00
%42 [3560r,3576r:0)  0@3560r weight:0.000000e+00
%43 [3568r,3576r:0)  0@3568r weight:0.000000e+00
%45 [4112r,4184r:0)  0@4112r weight:0.000000e+00
%46 [4184r,4200r:0)  0@4184r weight:0.000000e+00
%47 [4176r,4208r:0)  0@4176r weight:0.000000e+00
%49 [4208r,4224r:0)  0@4208r weight:0.000000e+00
%50 [4224r,4256r:0)  0@4224r weight:0.000000e+00
%52 [4344r,4368r:0)  0@4344r weight:0.000000e+00
%53 [4336r,4352r:0)  0@4336r weight:0.000000e+00
%54 [4352r,4368r:0)  0@4352r weight:0.000000e+00
%56 [4432r,4648r:0)  0@4432r weight:0.000000e+00
%57 [4448r,4688r:0)  0@4448r weight:0.000000e+00
%58 [4640r,4672r:0)  0@4640r weight:0.000000e+00
%59 [4632r,4672r:0)  0@4632r weight:0.000000e+00
%60 [4672r,4696r:0)  0@4672r weight:0.000000e+00
%61 [4544r,4648r:0)  0@4544r weight:0.000000e+00
%62 [4648r,4688r:0)  0@4648r weight:0.000000e+00
%63 [4688r,4704r:0)  0@4688r weight:0.000000e+00
%64 [4624r,4656r:0)  0@4624r weight:0.000000e+00
%67 [4888r,4912r:0)  0@4888r weight:0.000000e+00
%68 [4864r,4896r:0)  0@4864r weight:0.000000e+00
%69 [4880r,4896r:0)  0@4880r weight:0.000000e+00
%70 [4896r,4912r:0)  0@4896r weight:0.000000e+00
%71 [4912r,4960r:0)  0@4912r weight:0.000000e+00
%72 [4928r,4944r:0)  0@4928r weight:0.000000e+00
%73 [4960r,4976r:0)  0@4960r weight:0.000000e+00
%74 [4976r,4992r:0)  0@4976r weight:0.000000e+00
%76 [4756r,4768r:0)  0@4756r weight:0.000000e+00
%77 [4744r,4760r:0)  0@4744r weight:0.000000e+00
%78 [4752r,4760r:0)  0@4752r weight:0.000000e+00
%79 [4760r,4768r:0)  0@4760r weight:0.000000e+00
%81 [5088r,5104r:0)  0@5088r weight:0.000000e+00
%83 [5192r,5216r:0)  0@5192r weight:0.000000e+00
%84 [5184r,5200r:0)  0@5184r weight:0.000000e+00
%85 [5200r,5216r:0)  0@5200r weight:0.000000e+00
%87 [6752r,6760r:0)  0@6752r weight:0.000000e+00
%88 [6760r,6768r:0)  0@6760r weight:0.000000e+00
%90 [5328r,5360r:0)  0@5328r weight:0.000000e+00
%91 [5344r,5360r:0)  0@5344r weight:0.000000e+00
%93 [6712r,6720r:0)  0@6712r weight:0.000000e+00
%94 [6720r,6728r:0)  0@6720r weight:0.000000e+00
%95 [5424r,5672r:0)  0@5424r weight:0.000000e+00
%96 [5440r,5680r:0)  0@5440r weight:0.000000e+00
%97 [5672r,5696r:0)  0@5672r weight:0.000000e+00
%100 [5696r,5720r:0)  0@5696r weight:0.000000e+00
%101 [5560r,5688r:0)  0@5560r weight:0.000000e+00
%102 [5688r,5912r:0)  0@5688r weight:0.000000e+00
%103 [5720r,5736r:0)  0@5720r weight:0.000000e+00
%104 [5552r,5680r:0)  0@5552r weight:0.000000e+00
%105 [5680r,5704r:0)  0@5680r weight:0.000000e+00
%106 [5704r,5712r:0)  0@5704r weight:0.000000e+00
%107 [5712r,5728r:0)  0@5712r weight:0.000000e+00
%108 [5832r,5904r:0)  0@5832r weight:0.000000e+00
%109 [5840r,5888r:0)  0@5840r weight:0.000000e+00
%110 [5664r,5888r:0)  0@5664r weight:0.000000e+00
%111 [5888r,5896r:0)  0@5888r weight:0.000000e+00
%112 [5896r,5904r:0)  0@5896r weight:0.000000e+00
%113 [5904r,5912r:0)  0@5904r weight:0.000000e+00
%114 [5808r,5848r:0)  0@5808r weight:0.000000e+00
%115 [5816r,5848r:0)  0@5816r weight:0.000000e+00
%116 [5848r,5872r:0)  0@5848r weight:0.000000e+00
%117 [5800r,5856r:0)  0@5800r weight:0.000000e+00
%118 [5824r,5856r:0)  0@5824r weight:0.000000e+00
%119 [5856r,5864r:0)  0@5856r weight:0.000000e+00
%120 [5880r,5912r:0)  0@5880r weight:0.000000e+00
%121 [6544r,6608r:0)  0@6544r weight:0.000000e+00
%122 [6512r,6560r:0)  0@6512r weight:0.000000e+00
%123 [6520r,6560r:0)  0@6520r weight:0.000000e+00
%124 [6560r,6568r:0)  0@6560r weight:0.000000e+00
%125 [6568r,6608r:0)  0@6568r weight:0.000000e+00
%126 [6608r,6664r:0)  0@6608r weight:0.000000e+00
%127 [6552r,6664r:0)  0@6552r weight:0.000000e+00
%128 [6000r,6472r:0)  0@6000r weight:0.000000e+00
%129 [6104r,6408r:0)  0@6104r weight:0.000000e+00
%130 [6328r,6408r:0)  0@6328r weight:0.000000e+00
%131 [6408r,6624r:0)  0@6408r weight:0.000000e+00
%132 [6344r,6416r:0)  0@6344r weight:0.000000e+00
%133 [6096r,6416r:0)  0@6096r weight:0.000000e+00
%134 [6416r,6616r:0)  0@6416r weight:0.000000e+00
%135 [6448r,6464r:0)  0@6448r weight:0.000000e+00
%136 [6424r,6456r:0)  0@6424r weight:0.000000e+00
%137 [6456r,6464r:0)  0@6456r weight:0.000000e+00
%138 [6464r,6536r:0)  0@6464r weight:0.000000e+00
%139 [6472r,6504r:0)  0@6472r weight:0.000000e+00
%140 [6432r,6496r:0)  0@6432r weight:0.000000e+00
%141 [6320r,6440r:0)  0@6320r weight:0.000000e+00
%142 [6336r,6440r:0)  0@6336r weight:0.000000e+00
%143 [6440r,6656r:0)  0@6440r weight:0.000000e+00
%144 [6384r,6640r:0)  0@6384r weight:0.000000e+00
%145 [6400r,6640r:0)  0@6400r weight:0.000000e+00
%146 [6640r,6648r:0)  0@6640r weight:0.000000e+00
%147 [6496r,6504r:0)  0@6496r weight:0.000000e+00
%148 [6504r,6528r:0)  0@6504r weight:0.000000e+00
%149 [6632r,6664r:0)  0@6632r weight:0.000000e+00
%150 [6672r,6680r:0)  0@6672r weight:0.000000e+00
%151 [6680r,6688r:0)  0@6680r weight:0.000000e+00
%153 [3632r,3648r:0)  0@3632r weight:0.000000e+00
%154 [3640r,3648r:0)  0@3640r weight:0.000000e+00
%156 [6792r,6800r:0)  0@6792r weight:0.000000e+00
%157 [6800r,6808r:0)  0@6800r weight:0.000000e+00
%159 [3704r,3728r:0)  0@3704r weight:0.000000e+00
%160 [3712r,3728r:0)  0@3712r weight:0.000000e+00
%162 [4032r,4048r:0)  0@4032r weight:0.000000e+00
%163 [4048r,4064r:0)  0@4048r weight:0.000000e+00
%164 [3864r,3928r:0)  0@3864r weight:0.000000e+00
%165 [3860r,3924r:0)  0@3860r weight:0.000000e+00
%166 [3924r,3928r:0)  0@3924r weight:0.000000e+00
%167 [3928r,3936r:0)  0@3928r weight:0.000000e+00
%168 [3856r,3872r:0)  0@3856r weight:0.000000e+00
%169 [3872r,3936r:0)  0@3872r weight:0.000000e+00
%171 [752r,6832B:0)  0@752r weight:0.000000e+00
%174 [3904r,3920r:0)  0@3904r weight:0.000000e+00
%175 [3920r,3936r:0)  0@3920r weight:0.000000e+00
%176 [3952r,3968r:0)  0@3952r weight:0.000000e+00
%177 [3968r,3984r:0)  0@3968r weight:0.000000e+00
%178 [1152r,1368r:0)  0@1152r weight:0.000000e+00
%179 [1168r,1408r:0)  0@1168r weight:0.000000e+00
%180 [1360r,1392r:0)  0@1360r weight:0.000000e+00
%181 [1352r,1392r:0)  0@1352r weight:0.000000e+00
%182 [1392r,1416r:0)  0@1392r weight:0.000000e+00
%183 [1264r,1368r:0)  0@1264r weight:0.000000e+00
%184 [1368r,1408r:0)  0@1368r weight:0.000000e+00
%185 [1408r,1424r:0)  0@1408r weight:0.000000e+00
%186 [1344r,1376r:0)  0@1344r weight:0.000000e+00
%189 [1608r,1632r:0)  0@1608r weight:0.000000e+00
%190 [1584r,1616r:0)  0@1584r weight:0.000000e+00
%191 [1600r,1616r:0)  0@1600r weight:0.000000e+00
%192 [1616r,1632r:0)  0@1616r weight:0.000000e+00
%193 [1632r,1680r:0)  0@1632r weight:0.000000e+00
%194 [1648r,1664r:0)  0@1648r weight:0.000000e+00
%195 [1680r,1696r:0)  0@1680r weight:0.000000e+00
%196 [1696r,1712r:0)  0@1696r weight:0.000000e+00
%198 [1476r,1488r:0)  0@1476r weight:0.000000e+00
%199 [1464r,1480r:0)  0@1464r weight:0.000000e+00
%200 [1472r,1480r:0)  0@1472r weight:0.000000e+00
%201 [1480r,1488r:0)  0@1480r weight:0.000000e+00
%203 [1808r,1824r:0)  0@1808r weight:0.000000e+00
%205 [1912r,1936r:0)  0@1912r weight:0.000000e+00
%206 [1904r,1920r:0)  0@1904r weight:0.000000e+00
%207 [1920r,1936r:0)  0@1920r weight:0.000000e+00
%209 [3520r,3528r:0)  0@3520r weight:0.000000e+00
%210 [3528r,3536r:0)  0@3528r weight:0.000000e+00
%212 [2048r,2080r:0)  0@2048r weight:0.000000e+00
%213 [2064r,2080r:0)  0@2064r weight:0.000000e+00
%215 [3480r,3488r:0)  0@3480r weight:0.000000e+00
%216 [3488r,3496r:0)  0@3488r weight:0.000000e+00
%217 [2144r,2744r:0)  0@2144r weight:0.000000e+00
%218 [2160r,2692r:0)  0@2160r weight:0.000000e+00
%219 [2264r,3232r:0)  0@2264r weight:0.000000e+00
%221 [2692r,2704r:0)  0@2692r weight:0.000000e+00
%222 [2704r,2712r:0)  0@2704r weight:0.000000e+00
%223 [2712r,2720r:0)  0@2712r weight:0.000000e+00
%224 [2256r,2696r:0)  0@2256r weight:0.000000e+00
%225 [2696r,3304r:0)  0@2696r weight:0.000000e+00
%226 [2720r,2752r:0)  0@2720r weight:0.000000e+00
%227 [2320r,2728r:0)  0@2320r weight:0.000000e+00
%228 [2728r,2736r:0)  0@2728r weight:0.000000e+00
%229 [2736r,2744r:0)  0@2736r weight:0.000000e+00
%230 [2744r,2760r:0)  0@2744r weight:0.000000e+00
%231 [2760r,3048r:0)  0@2760r weight:0.000000e+00
%232 [3136r,3232r:0)  0@3136r weight:0.000000e+00
%233 [3232r,3296r:0)  0@3232r weight:0.000000e+00
%234 [688r,6832B:0)  0@688r weight:0.000000e+00
%236 [3296r,3304r:0)  0@3296r weight:0.000000e+00
%237 [3032r,3104r:0)  0@3032r weight:0.000000e+00
%238 [3064r,3104r:0)  0@3064r weight:0.000000e+00
%239 [3104r,3192r:0)  0@3104r weight:0.000000e+00
%240 [3072r,3120r:0)  0@3072r weight:0.000000e+00
%241 [3088r,3120r:0)  0@3088r weight:0.000000e+00
%242 [3120r,3184r:0)  0@3120r weight:0.000000e+00
%243 [3224r,3304r:0)  0@3224r weight:0.000000e+00
%244 [3176r,3312r:0)  0@3176r weight:0.000000e+00
%245 [2640r,3312r:0)  0@2640r weight:0.000000e+00
%246 [3312r,3328r:0)  0@3312r weight:0.000000e+00
%247 [3328r,3448r:0)  0@3328r weight:0.000000e+00
%248 [2688r,3448r:0)  0@2688r weight:0.000000e+00
%249 [3168r,3368r:0)  0@3168r weight:0.000000e+00
%250 [3040r,3128r:0)  0@3040r weight:0.000000e+00
%251 [3096r,3128r:0)  0@3096r weight:0.000000e+00
%252 [3128r,3440r:0)  0@3128r weight:0.000000e+00
%253 [3080r,3144r:0)  0@3080r weight:0.000000e+00
%254 [3112r,3144r:0)  0@3112r weight:0.000000e+00
%255 [3144r,3416r:0)  0@3144r weight:0.000000e+00
%256 [3200r,3216r:0)  0@3200r weight:0.000000e+00
%257 [3160r,3376r:0)  0@3160r weight:0.000000e+00
%258 [3208r,3216r:0)  0@3208r weight:0.000000e+00
%259 [3216r,3400r:0)  0@3216r weight:0.000000e+00
%260 [3368r,3384r:0)  0@3368r weight:0.000000e+00
%261 [3024r,3152r:0)  0@3024r weight:0.000000e+00
%262 [3056r,3152r:0)  0@3056r weight:0.000000e+00
%263 [3152r,3432r:0)  0@3152r weight:0.000000e+00
%264 [3376r,3384r:0)  0@3376r weight:0.000000e+00
%265 [3384r,3392r:0)  0@3384r weight:0.000000e+00
%266 [3408r,3448r:0)  0@3408r weight:0.000000e+00
%267 [3288r,3320r:0)  0@3288r weight:0.000000e+00
%268 [3320r,3456r:0)  0@3320r weight:0.000000e+00
%269 [448r,6832B:0)  0@448r weight:0.000000e+00
%270 [1488r,1552B:1)[1728r,1776B:0)[1776B,1808r:2)  0@1728r 1@1488r 2@1776B-phi weight:0.000000e+00
%271 [4768r,4832B:1)[5008r,5056B:0)[5056B,5088r:2)  0@5008r 1@4768r 2@5056B-phi weight:0.000000e+00
RegMasks: 400r 6960r
********** MACHINEINSTRS **********
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=8, align=8, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=16, align=16, at location [SP]
  fi#12: size=16, align=16, at location [SP]
  fi#13: size=16, align=16, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
  fi#17: size=4, align=4, at location [SP]
  fi#18: size=4, align=4, at location [SP]
  fi#19: size=4, align=4, at location [SP]
  fi#20: size=4, align=4, at location [SP]
  fi#21: size=4, align=4, at location [SP]
  fi#22: size=4, align=4, at location [SP]
  fi#23: size=4, align=4, at location [SP]
  fi#24: size=16, align=8, at location [SP]
  fi#25: size=16, align=8, at location [SP]
  fi#26: size=16, align=8, at location [SP]
  fi#27: size=16, align=8, at location [SP]
  fi#28: size=16, align=8, at location [SP]
  fi#29: size=16, align=8, at location [SP]
  fi#30: size=16, align=8, at location [SP]
  fi#31: size=16, align=8, at location [SP]
  fi#32: size=16, align=8, at location [SP]
  fi#33: size=16, align=8, at location [SP]
  fi#34: size=16, align=8, at location [SP]
  fi#35: size=16, align=8, at location [SP]
  fi#36: size=16, align=8, at location [SP]
  fi#37: size=16, align=8, at location [SP]
Function Live Ins: $w0 in %5, $w1 in %6, $w2 in %7, $w3 in %8, $w4 in %9, $x5 in %10, $x6 in %11

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $w0, $w1, $w2, $w3, $w4, $x5, $x6
16B	  %11:gpr64 = COPY $x6
32B	  %10:gpr64 = COPY $x5
48B	  %9:gpr32 = COPY $w4
64B	  %8:gpr32 = COPY $w3
80B	  %7:gpr32 = COPY $w2
96B	  %6:gpr32 = COPY $w1
112B	  %5:gpr32 = COPY $w0
128B	  STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
144B	  STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
160B	  STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
176B	  STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
192B	  STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
272B	  %13:gpr64common = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
288B	  %14:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
292B	  STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
296B	  STRXui %11:gpr64, %stack.6.exponent.addr, 0 :: (store 8 into %ir.exponent.addr)
304B	  undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !508; fft3d.c:60:18
312B	  STRXui %10:gpr64, %stack.7.x, 0, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
320B	  CBZW %14:gpr32, %bb.2, debug-location !549; fft3d.c:66:9
328B	  B %bb.1, debug-location !549; fft3d.c:66:9

336B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

352B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !550; fft3d.c:67:9
384B	  $w0 = MOVi32imm 4, debug-location !550; fft3d.c:67:9
400B	  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !550; fft3d.c:67:9
416B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !550; fft3d.c:67:9

432B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

448B	  %269:gpr64sp = ADDXri %stack.13.x21, 0, 0
480B	  %16:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
560B	  %20:gpr32 = MOVi32imm 1
592B	  undef %22.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
688B	  %234:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
692B	  STRWui %20:gpr32, %stack.17.lj, 0, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
696B	  STRWui %20:gpr32, %stack.10.l, 0, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
704B	  dead $wzr = SUBSWri %16:gpr32common, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
712B	  %24:gpr32 = LSLVWr %20:gpr32, %22.sub_32:gpr64, debug-location !556; fft3d.c:73:12
720B	  %18:gpr32 = CSINCWr %16:gpr32common, %16:gpr32common, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
728B	  STRWui %24:gpr32, %stack.16.li, 0, debug-location !557 :: (store 4 into %ir.li); fft3d.c:73:8
736B	  %19:gpr32 = SBFMWri %18:gpr32, 1, 31, debug-location !552; fft3d.c:71:12
744B	  STRWui %19:gpr32, %stack.15.n1, 0, debug-location !553 :: (store 4 into %ir.n1); fft3d.c:71:8
752B	  undef %171.sub_32:gpr64 = MOVi32imm 528

760B	bb.3.for.cond:
	; predecessors: %bb.2, %bb.35
	  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

768B	  %25:gpr32 = LDRWui %stack.10.l, 0, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
776B	  %26:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
784B	  dead $wzr = SUBSWrr %25:gpr32, %26:gpr32, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
792B	  Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5
800B	  B %bb.4, debug-location !565; fft3d.c:74:5

816B	bb.4.for.body:
	; predecessors: %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

832B	  %31:gpr32 = LDRWui %stack.17.lj, 0, debug-location !566 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
896B	  %33:gpr32common = LDRWui %stack.16.li, 0, debug-location !572 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
900B	  STRWui %31:gpr32, %stack.18.lk, 0, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
904B	  %32:gpr32 = UBFMWri %31:gpr32, 31, 30, debug-location !570; fft3d.c:76:16
912B	  dead $wzr = SUBSWri %33:gpr32common, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
920B	  STRWui %32:gpr32, %stack.17.lj, 0, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
928B	  %35:gpr32 = CSINCWr %33:gpr32common, %33:gpr32common, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
944B	  %36:gpr32 = SBFMWri %35:gpr32, 1, 31, debug-location !573; fft3d.c:77:17
960B	  STRWui %36:gpr32, %stack.16.li, 0, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
976B	  STRWui %36:gpr32, %stack.19.ku, 0, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
1008B	  STRWui $wzr, %stack.8.i, 0, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16

1024B	bb.5.for.cond2:
	; predecessors: %bb.4, %bb.15
	  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

1056B	  %39:gpr32common = LDRWui %stack.16.li, 0, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
1064B	  %38:gpr32 = LDRWui %stack.8.i, 0, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
1072B	  %40:gpr32common = SUBWri %39:gpr32common, 1, 0, debug-location !583; fft3d.c:80:29
1088B	  dead $wzr = SUBSWrr %38:gpr32, %40:gpr32common, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
1104B	  Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9
1120B	  B %bb.6, debug-location !585; fft3d.c:80:9

1136B	bb.6.for.body4:
	; predecessors: %bb.5
	  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

1152B	  %178:gpr32 = LDRWui %stack.8.i, 0, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
1168B	  %179:gpr32 = LDRWui %stack.18.lk, 0, debug-location !588 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
1264B	  %183:gpr32 = LDRWui %stack.17.lj, 0, debug-location !596 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
1344B	  %186:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
1352B	  %181:gpr32 = LDRWui %stack.15.n1, 0, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
1360B	  %180:gpr32 = nsw MADDWrrr %178:gpr32, %179:gpr32, $wzr, debug-location !589; fft3d.c:81:21
1368B	  %184:gpr32 = nsw MADDWrrr %178:gpr32, %183:gpr32, $wzr, debug-location !597; fft3d.c:83:21
1376B	  dead $wzr = SUBSWri %186:gpr32common, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
1384B	  STRWui %180:gpr32, %stack.20.i11, 0, debug-location !590 :: (store 4 into %ir.i11); fft3d.c:81:17
1392B	  %182:gpr32 = nsw ADDWrr %180:gpr32, %181:gpr32, debug-location !593; fft3d.c:82:23
1400B	  STRWui %184:gpr32, %stack.22.i21, 0, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
1408B	  %185:gpr32 = nsw ADDWrr %184:gpr32, %179:gpr32, debug-location !601; fft3d.c:84:23
1416B	  STRWui %182:gpr32, %stack.21.i12, 0, debug-location !594 :: (store 4 into %ir.i12); fft3d.c:82:17
1424B	  STRWui %185:gpr32, %stack.23.i22, 0, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
1432B	  Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17
1440B	  B %bb.7, debug-location !606; fft3d.c:86:17

1448B	bb.7.if.then9:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1464B	  %199:gpr32 = LDRWui %stack.19.ku, 0, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
1472B	  %200:gpr32 = LDRWui %stack.8.i, 0, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
1476B	  %198:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
1480B	  %201:gpr32 = nsw ADDWrr %199:gpr32, %200:gpr32, debug-location !611; fft3d.c:87:34
1488B	  %270:gpr64sp = ADDXrx %198:gpr64common, %201:gpr32, 52, debug-location !607; fft3d.c:87:22
1536B	  B %bb.9, debug-location !612; fft3d.c:88:13

1552B	bb.8.if.else:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1584B	  %190:gpr32 = LDRWui %stack.19.ku, 0, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
1600B	  %191:gpr32 = LDRWui %stack.8.i, 0, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
1608B	  %189:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
1616B	  %192:gpr32 = nsw ADDWrr %190:gpr32, %191:gpr32, debug-location !613; fft3d.c:90:22
1632B	  %193:gpr64sp = ADDXrx %189:gpr64common, %192:gpr32, 52, debug-location !613; fft3d.c:90:22
1648B	  %194:fpr64 = LDRDui %193:gpr64sp, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
1664B	  STRDui %194:fpr64, %stack.24..compoundliteral, 0, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
1680B	  %195:fpr64 = LDRDui %193:gpr64sp, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
1696B	  %196:fpr64 = FNEGDr %195:fpr64, debug-location !613; fft3d.c:90:22
1712B	  STRDui %196:fpr64, %stack.24..compoundliteral, 1, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
1728B	  %270:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

1776B	bb.9.if.end20:
	; predecessors: %bb.8, %bb.7
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

1808B	  %203:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
1816B	  STRWui $wzr, %stack.14.k, 0, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
1824B	  STRQui %203:fpr128, %269:gpr64sp, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0

1872B	bb.10.for.cond21:
	; predecessors: %bb.9, %bb.14
	  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

1904B	  %206:gpr32common = LDRWui %stack.18.lk, 0, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
1912B	  %205:gpr32 = LDRWui %stack.14.k, 0, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
1920B	  %207:gpr32common = SUBWri %206:gpr32common, 1, 0, debug-location !622; fft3d.c:92:33
1936B	  dead $wzr = SUBSWrr %205:gpr32, %207:gpr32common, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
1952B	  Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13
1968B	  B %bb.11, debug-location !624; fft3d.c:92:13

1984B	bb.11.for.body24:
	; predecessors: %bb.10
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2016B	  STRWui $wzr, %stack.9.j, 0, debug-location !625 :: (store 4 into %ir.j); fft3d.c:93:24

2032B	bb.12.for.cond25:
	; predecessors: %bb.11, %bb.13
	  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

2048B	  %212:gpr32 = LDRWui %stack.9.j, 0, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
2064B	  %213:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
2080B	  dead $wzr = SUBSWrr %212:gpr32, %213:gpr32, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
2096B	  Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17
2112B	  B %bb.13, debug-location !633; fft3d.c:93:17

2128B	bb.13.for.body27:
	; predecessors: %bb.12
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2144B	  %217:gpr64 = LDRXui %stack.7.x, 0, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
2160B	  %218:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !636 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
2256B	  %224:gpr64 = LDRSWui %stack.9.j, 0, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
2264B	  %219:gpr64 = LDRSWui %stack.14.k, 0, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
2320B	  %227:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !641 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
2640B	  %245:gpr32 = LDRWui %stack.14.k, 0, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
2688B	  %248:gpr64 = LDRSWui %stack.9.j, 0, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
2692B	  %221:gpr64 = nsw ADDXrr %218:gpr64, %219:gpr64, debug-location !638; fft3d.c:94:33
2696B	  %225:gpr64 = UBFMXri %224:gpr64, 60, 59, debug-location !648; fft3d.c:96:21
2704B	  %222:gpr64 = nsw MADDXrrr %221:gpr64, %0:gpr64, $xzr, debug-location !634; fft3d.c:94:27
2712B	  %223:gpr64common = ADDXrs %217:gpr64, %222:gpr64, 4, debug-location !634; fft3d.c:94:27
2720B	  %226:fpr128 = LDRQroX %223:gpr64common, %225:gpr64, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
2728B	  %228:gpr64 = nsw ADDXrr %227:gpr64, %219:gpr64, debug-location !643; fft3d.c:95:33
2736B	  %229:gpr64 = nsw MADDXrrr %228:gpr64, %0:gpr64, $xzr, debug-location !640; fft3d.c:95:27
2744B	  %230:gpr64common = ADDXrs %217:gpr64, %229:gpr64, 4, debug-location !640; fft3d.c:95:27
2752B	  STRQui %226:fpr128, %269:gpr64sp, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
2760B	  %231:fpr128 = LDRQroX %230:gpr64common, %225:gpr64, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
3024B	  %261:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
3032B	  %237:fpr64 = LDRDui %stack.12.x11, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
3040B	  %250:fpr64 = LDRDui %stack.12.x11, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
3048B	  STRQui %231:fpr128, %269:gpr64sp, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
3056B	  %262:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
3064B	  %238:fpr64 = LDRDui %stack.13.x21, 0, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
3072B	  %240:fpr64 = LDRDui %stack.12.x11, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
3080B	  %253:fpr64 = LDRDui %stack.12.x11, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
3088B	  %241:fpr64 = LDRDui %stack.13.x21, 1, debug-location !650 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
3096B	  %251:fpr64 = LDRDui %stack.13.x21, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
3104B	  %239:fpr64 = FADDDrr %237:fpr64, %238:fpr64, debug-location !650; fft3d.c:96:39
3112B	  %254:fpr64 = LDRDui %stack.13.x21, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
3120B	  %242:fpr64 = FADDDrr %240:fpr64, %241:fpr64, debug-location !650; fft3d.c:96:39
3128B	  %252:fpr64 = FSUBDrr %250:fpr64, %251:fpr64, debug-location !656; fft3d.c:97:39
3136B	  %232:gpr32 = LDRWui %stack.22.i21, 0, debug-location !645 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
3144B	  %255:fpr64 = FSUBDrr %253:fpr64, %254:fpr64, debug-location !656; fft3d.c:97:39
3152B	  %263:fpr64 = FSUBDrr %261:fpr64, %262:fpr64, debug-location !656; fft3d.c:97:39
3160B	  %257:fpr64 = LDRDui %stack.11.u1, 1, debug-location !656 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
3168B	  %249:fpr64 = LDRDui %stack.11.u1, 0, debug-location !656 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
3176B	  %244:gpr32 = LDRWui %stack.23.i22, 0, debug-location !651 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
3184B	  STRDui %242:fpr64, %stack.25..compoundliteral43, 1, debug-location !650 :: (store 8 into %ir.imag48); fft3d.c:96:39
3192B	  STRDui %239:fpr64, %stack.25..compoundliteral43, 0, debug-location !650 :: (store 8 into %ir.real448); fft3d.c:96:39
3200B	  %256:fpr64 = FMULDrr %249:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
3208B	  %258:fpr64 = FMULDrr %257:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
3216B	  %259:fpr64 = FSUBDrr %256:fpr64, %258:fpr64, debug-location !656; fft3d.c:97:39
3224B	  %243:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
3232B	  %233:gpr32 = nsw ADDWrr %232:gpr32, %219.sub_32:gpr64, debug-location !647; fft3d.c:96:29
3288B	  %267:gpr32common = LDRWui %stack.9.j, 0, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
3296B	  %236:gpr64common = SMADDLrrr %233:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !648; fft3d.c:96:21
3304B	  STRQroX %243:fpr128, %236:gpr64common, %225:gpr64, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
3312B	  %246:gpr32 = nsw ADDWrr %244:gpr32, %245:gpr32, debug-location !653; fft3d.c:97:29
3320B	  %268:gpr32common = nsw ADDWri %267:gpr32common, 1, 0, debug-location !657; fft3d.c:93:40
3328B	  %247:gpr64common = SMADDLrrr %246:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !654; fft3d.c:97:21
3336B	  STRDui %255:fpr64, %stack.27..compoundliteral60, 1, debug-location !656 :: (store 8 into %ir.imag65); fft3d.c:97:39
3344B	  STRDui %252:fpr64, %stack.27..compoundliteral60, 0, debug-location !656 :: (store 8 into %ir.real6114); fft3d.c:97:39
3352B	  STRDui %255:fpr64, %stack.28..compoundliteral72, 1, debug-location !656 :: (store 8 into %ir.imag77); fft3d.c:97:39
3360B	  STRDui %252:fpr64, %stack.28..compoundliteral72, 0, debug-location !656 :: (store 8 into %ir.real7318); fft3d.c:97:39
3368B	  %260:fpr64 = FMULDrr %249:fpr64, %255:fpr64, debug-location !656; fft3d.c:97:39
3376B	  %264:fpr64 = FMULDrr %257:fpr64, %252:fpr64, debug-location !656; fft3d.c:97:39
3384B	  %265:fpr64 = FADDDrr %260:fpr64, %264:fpr64, debug-location !656; fft3d.c:97:39
3392B	  STRDui %265:fpr64, %stack.26..compoundliteral57, 1, debug-location !656 :: (store 8 into %ir.imag84); fft3d.c:97:39
3400B	  STRDui %259:fpr64, %stack.26..compoundliteral57, 0, debug-location !656 :: (store 8 into %ir.real5812); fft3d.c:97:39
3408B	  %266:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
3416B	  STRDui %255:fpr64, %stack.29..compoundliteral86, 1, debug-location !656 :: (store 8 into %ir.imag91); fft3d.c:97:39
3424B	  STRDui %252:fpr64, %stack.29..compoundliteral86, 0, debug-location !656 :: (store 8 into %ir.real8722); fft3d.c:97:39
3432B	  STRDui %263:fpr64, %stack.30..compoundliteral98, 1, debug-location !656 :: (store 8 into %ir.imag103); fft3d.c:97:39
3440B	  STRDui %252:fpr64, %stack.30..compoundliteral98, 0, debug-location !656 :: (store 8 into %ir.real9925); fft3d.c:97:39
3448B	  STRQroX %266:fpr128, %247:gpr64common, %248:gpr64, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
3456B	  STRWui %268:gpr32common, %stack.9.j, 0, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
3464B	  B %bb.12, debug-location !658; fft3d.c:93:17

3472B	bb.14.for.inc110:
	; predecessors: %bb.12
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

3480B	  %215:gpr32common = LDRWui %stack.14.k, 0, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
3488B	  %216:gpr32common = nsw ADDWri %215:gpr32common, 1, 0, debug-location !661; fft3d.c:92:39
3496B	  STRWui %216:gpr32common, %stack.14.k, 0, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
3504B	  B %bb.10, debug-location !662; fft3d.c:92:13

3512B	bb.15.for.inc113:
	; predecessors: %bb.10
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

3520B	  %209:gpr32common = LDRWui %stack.8.i, 0, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
3528B	  %210:gpr32common = nsw ADDWri %209:gpr32common, 1, 0, debug-location !665; fft3d.c:80:35
3536B	  STRWui %210:gpr32common, %stack.8.i, 0, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
3544B	  B %bb.5, debug-location !666; fft3d.c:80:9

3552B	bb.16.for.end115:
	; predecessors: %bb.5
	  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

3560B	  %42:gpr32 = LDRWui %stack.10.l, 0, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
3568B	  %43:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
3576B	  dead $wzr = SUBSWrr %42:gpr32, %43:gpr32, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
3584B	  Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13
3592B	  B %bb.17, debug-location !673; fft3d.c:102:13

3600B	bb.17.if.then117:
	; predecessors: %bb.16
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

3616B	  STRWui $wzr, %stack.14.k, 0, debug-location !674 :: (store 4 into %ir.k); fft3d.c:103:20

3624B	bb.18.for.cond118:
	; predecessors: %bb.17, %bb.22
	  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

3632B	  %153:gpr32 = LDRWui %stack.14.k, 0, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
3640B	  %154:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
3648B	  dead $wzr = SUBSWrr %153:gpr32, %154:gpr32, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
3656B	  Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13
3664B	  B %bb.19, debug-location !682; fft3d.c:103:13

3672B	bb.19.for.body120:
	; predecessors: %bb.18
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

3688B	  STRWui $wzr, %stack.9.j, 0, debug-location !683 :: (store 4 into %ir.j); fft3d.c:104:24

3696B	bb.20.for.cond121:
	; predecessors: %bb.19, %bb.21
	  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

3704B	  %159:gpr32 = LDRWui %stack.9.j, 0, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
3712B	  %160:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
3728B	  dead $wzr = SUBSWrr %159:gpr32, %160:gpr32, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
3744B	  Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17
3760B	  B %bb.21, debug-location !691; fft3d.c:104:17

3776B	bb.21.for.body123:
	; predecessors: %bb.20
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

3856B	  %168:gpr64 = LDRSWui %stack.9.j, 0, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
3860B	  %165:gpr64 = LDRSWui %stack.14.k, 0, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
3864B	  %164:gpr64 = LDRXui %stack.7.x, 0, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
3872B	  %169:gpr64 = UBFMXri %168:gpr64, 60, 59, debug-location !692; fft3d.c:105:21
3904B	  %174:gpr64common = MADDXrrr %165:gpr64, %171:gpr64, %234:gpr64, debug-location !697; fft3d.c:105:31
3920B	  %175:fpr128 = LDRQroX %174:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
3924B	  %166:gpr64 = nsw MADDXrrr %165:gpr64, %0:gpr64, $xzr, debug-location !692; fft3d.c:105:21
3928B	  %167:gpr64common = ADDXrs %164:gpr64, %166:gpr64, 4, debug-location !692; fft3d.c:105:21
3936B	  STRQroX %175:fpr128, %167:gpr64common, %169:gpr64, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
3952B	  %176:gpr32common = LDRWui %stack.9.j, 0, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
3968B	  %177:gpr32common = nsw ADDWri %176:gpr32common, 1, 0, debug-location !699; fft3d.c:104:40
3984B	  STRWui %177:gpr32common, %stack.9.j, 0, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
4000B	  B %bb.20, debug-location !700; fft3d.c:104:17

4016B	bb.22.for.inc135:
	; predecessors: %bb.20
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

4032B	  %162:gpr32common = LDRWui %stack.14.k, 0, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
4048B	  %163:gpr32common = nsw ADDWri %162:gpr32common, 1, 0, debug-location !703; fft3d.c:103:33
4064B	  STRWui %163:gpr32common, %stack.14.k, 0, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
4080B	  B %bb.18, debug-location !704; fft3d.c:103:13

4096B	bb.23.if.else138:
	; predecessors: %bb.16
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

4112B	  %45:gpr32 = LDRWui %stack.17.lj, 0, debug-location !707 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
4176B	  %47:gpr32common = LDRWui %stack.16.li, 0, debug-location !713 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
4180B	  STRWui %45:gpr32, %stack.18.lk, 0, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
4184B	  %46:gpr32 = UBFMWri %45:gpr32, 31, 30, debug-location !711; fft3d.c:111:20
4192B	  dead $wzr = SUBSWri %47:gpr32common, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
4200B	  STRWui %46:gpr32, %stack.17.lj, 0, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
4208B	  %49:gpr32 = CSINCWr %47:gpr32common, %47:gpr32common, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
4224B	  %50:gpr32 = SBFMWri %49:gpr32, 1, 31, debug-location !714; fft3d.c:112:21
4240B	  STRWui %50:gpr32, %stack.16.li, 0, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
4256B	  STRWui %50:gpr32, %stack.19.ku, 0, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
4288B	  STRWui $wzr, %stack.8.i, 0, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20

4304B	bb.24.for.cond141:
	; predecessors: %bb.23, %bb.34
	  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

4336B	  %53:gpr32common = LDRWui %stack.16.li, 0, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
4344B	  %52:gpr32 = LDRWui %stack.8.i, 0, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
4352B	  %54:gpr32common = SUBWri %53:gpr32common, 1, 0, debug-location !724; fft3d.c:115:33
4368B	  dead $wzr = SUBSWrr %52:gpr32, %54:gpr32common, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
4384B	  Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13
4400B	  B %bb.25, debug-location !726; fft3d.c:115:13

4416B	bb.25.for.body144:
	; predecessors: %bb.24
	  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

4432B	  %56:gpr32 = LDRWui %stack.8.i, 0, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
4448B	  %57:gpr32 = LDRWui %stack.18.lk, 0, debug-location !729 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
4544B	  %61:gpr32 = LDRWui %stack.17.lj, 0, debug-location !737 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
4624B	  %64:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
4632B	  %59:gpr32 = LDRWui %stack.15.n1, 0, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
4640B	  %58:gpr32 = nsw MADDWrrr %56:gpr32, %57:gpr32, $wzr, debug-location !730; fft3d.c:116:25
4648B	  %62:gpr32 = nsw MADDWrrr %56:gpr32, %61:gpr32, $wzr, debug-location !738; fft3d.c:118:25
4656B	  dead $wzr = SUBSWri %64:gpr32common, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
4664B	  STRWui %58:gpr32, %stack.20.i11, 0, debug-location !731 :: (store 4 into %ir.i11); fft3d.c:116:21
4672B	  %60:gpr32 = nsw ADDWrr %58:gpr32, %59:gpr32, debug-location !734; fft3d.c:117:27
4680B	  STRWui %62:gpr32, %stack.22.i21, 0, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
4688B	  %63:gpr32 = nsw ADDWrr %62:gpr32, %57:gpr32, debug-location !742; fft3d.c:119:27
4696B	  STRWui %60:gpr32, %stack.21.i12, 0, debug-location !735 :: (store 4 into %ir.i12); fft3d.c:117:21
4704B	  STRWui %63:gpr32, %stack.23.i22, 0, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
4712B	  Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21
4720B	  B %bb.26, debug-location !747; fft3d.c:121:21

4728B	bb.26.if.then150:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4744B	  %77:gpr32 = LDRWui %stack.19.ku, 0, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
4752B	  %78:gpr32 = LDRWui %stack.8.i, 0, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
4756B	  %76:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
4760B	  %79:gpr32 = nsw ADDWrr %77:gpr32, %78:gpr32, debug-location !752; fft3d.c:122:38
4768B	  %271:gpr64sp = ADDXrx %76:gpr64common, %79:gpr32, 52, debug-location !748; fft3d.c:122:26
4816B	  B %bb.28, debug-location !753; fft3d.c:123:17

4832B	bb.27.if.else154:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4864B	  %68:gpr32 = LDRWui %stack.19.ku, 0, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
4880B	  %69:gpr32 = LDRWui %stack.8.i, 0, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
4888B	  %67:gpr64common = LDRXui %stack.6.exponent.addr, 0, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
4896B	  %70:gpr32 = nsw ADDWrr %68:gpr32, %69:gpr32, debug-location !754; fft3d.c:125:26
4912B	  %71:gpr64sp = ADDXrx %67:gpr64common, %70:gpr32, 52, debug-location !754; fft3d.c:125:26
4928B	  %72:fpr64 = LDRDui %71:gpr64sp, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
4944B	  STRDui %72:fpr64, %stack.31..compoundliteral155, 0, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
4960B	  %73:fpr64 = LDRDui %71:gpr64sp, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
4976B	  %74:fpr64 = FNEGDr %73:fpr64, debug-location !754; fft3d.c:125:26
4992B	  STRDui %74:fpr64, %stack.31..compoundliteral155, 1, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
5008B	  %271:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

5056B	bb.28.if.end167:
	; predecessors: %bb.27, %bb.26
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

5088B	  %81:fpr128 = LDRQui %271:gpr64sp, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
5096B	  STRWui $wzr, %stack.14.k, 0, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
5104B	  STRQui %81:fpr128, %269:gpr64sp, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0

5152B	bb.29.for.cond168:
	; predecessors: %bb.28, %bb.33
	  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

5184B	  %84:gpr32common = LDRWui %stack.18.lk, 0, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
5192B	  %83:gpr32 = LDRWui %stack.14.k, 0, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
5200B	  %85:gpr32common = SUBWri %84:gpr32common, 1, 0, debug-location !763; fft3d.c:127:37
5216B	  dead $wzr = SUBSWrr %83:gpr32, %85:gpr32common, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
5232B	  Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17
5248B	  B %bb.30, debug-location !765; fft3d.c:127:17

5264B	bb.30.for.body171:
	; predecessors: %bb.29
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

5296B	  STRWui $wzr, %stack.9.j, 0, debug-location !766 :: (store 4 into %ir.j); fft3d.c:128:28

5312B	bb.31.for.cond172:
	; predecessors: %bb.30, %bb.32
	  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

5328B	  %90:gpr32 = LDRWui %stack.9.j, 0, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
5344B	  %91:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
5360B	  dead $wzr = SUBSWrr %90:gpr32, %91:gpr32, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
5376B	  Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21
5392B	  B %bb.32, debug-location !774; fft3d.c:128:21

5408B	bb.32.for.body174:
	; predecessors: %bb.31
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

5424B	  %95:gpr32 = LDRWui %stack.20.i11, 0, debug-location !775 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
5440B	  %96:gpr32 = LDRWui %stack.14.k, 0, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
5552B	  %104:gpr32 = LDRWui %stack.21.i12, 0, debug-location !781 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
5560B	  %101:gpr64 = LDRSWui %stack.9.j, 0, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
5664B	  %110:gpr64 = LDRSWui %stack.14.k, 0, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
5672B	  %97:gpr32 = nsw ADDWrr %95:gpr32, %96:gpr32, debug-location !778; fft3d.c:129:39
5680B	  %105:gpr32 = nsw ADDWrr %104:gpr32, %96:gpr32, debug-location !783; fft3d.c:130:39
5688B	  %102:gpr64 = UBFMXri %101:gpr64, 60, 59, debug-location !786; fft3d.c:131:25
5696B	  %100:gpr64common = SMADDLrrr %97:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !779; fft3d.c:129:31
5704B	  %106:gpr64common = SMADDLrrr %105:gpr32, %171.sub_32:gpr64, %234:gpr64, debug-location !784; fft3d.c:130:31
5712B	  %107:fpr128 = LDRQroX %106:gpr64common, %102:gpr64, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
5720B	  %103:fpr128 = LDRQroX %100:gpr64common, %102:gpr64, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
5728B	  STRQui %107:fpr128, %269:gpr64sp, 0, debug-location !784 :: (store 16 into %ir.156); fft3d.c:130:31
5736B	  STRQui %103:fpr128, %269:gpr64sp, 1, debug-location !779 :: (store 16 into %ir.151); fft3d.c:129:31
5800B	  %117:fpr64 = LDRDui %stack.12.x11, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
5808B	  %114:fpr64 = LDRDui %stack.12.x11, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
5816B	  %115:fpr64 = LDRDui %stack.13.x21, 0, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
5824B	  %118:fpr64 = LDRDui %stack.13.x21, 1, debug-location !791 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
5832B	  %108:gpr64 = LDRXui %stack.7.x, 0, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
5840B	  %109:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
5848B	  %116:fpr64 = FADDDrr %114:fpr64, %115:fpr64, debug-location !791; fft3d.c:131:41
5856B	  %119:fpr64 = FADDDrr %117:fpr64, %118:fpr64, debug-location !791; fft3d.c:131:41
5864B	  STRDui %119:fpr64, %stack.32..compoundliteral190, 1, debug-location !791 :: (store 8 into %ir.imag195); fft3d.c:131:41
5872B	  STRDui %116:fpr64, %stack.32..compoundliteral190, 0, debug-location !791 :: (store 8 into %ir.real19137); fft3d.c:131:41
5880B	  %120:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
5888B	  %111:gpr64 = nsw ADDXrr %109:gpr64, %110:gpr64, debug-location !789; fft3d.c:131:31
5896B	  %112:gpr64 = nsw MADDXrrr %111:gpr64, %0:gpr64, $xzr, debug-location !786; fft3d.c:131:25
5904B	  %113:gpr64common = ADDXrs %108:gpr64, %112:gpr64, 4, debug-location !786; fft3d.c:131:25
5912B	  STRQroX %120:fpr128, %113:gpr64common, %102:gpr64, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
6000B	  %128:fpr64 = LDRDui %stack.11.u1, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
6096B	  %133:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
6104B	  %129:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
6320B	  %141:fpr64 = LDRDui %stack.12.x11, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
6328B	  %130:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
6336B	  %142:fpr64 = LDRDui %stack.13.x21, 0, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
6344B	  %132:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
6384B	  %144:fpr64 = LDRDui %stack.12.x11, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
6400B	  %145:fpr64 = LDRDui %stack.13.x21, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
6408B	  %131:fpr64 = FSUBDrr %129:fpr64, %130:fpr64, debug-location !797; fft3d.c:132:41
6416B	  %134:fpr64 = FSUBDrr %132:fpr64, %133:fpr64, debug-location !797; fft3d.c:132:41
6424B	  %136:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
6432B	  %140:fpr64 = LDRDui %stack.11.u1, 1, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
6440B	  %143:fpr64 = FSUBDrr %141:fpr64, %142:fpr64, debug-location !797; fft3d.c:132:41
6448B	  %135:fpr64 = FMULDrr %128:fpr64, %131:fpr64, debug-location !797; fft3d.c:132:41
6456B	  %137:fpr64 = FMULDrr %136:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
6464B	  %138:fpr64 = FSUBDrr %135:fpr64, %137:fpr64, debug-location !797; fft3d.c:132:41
6472B	  %139:fpr64 = FMULDrr %128:fpr64, %134:fpr64, debug-location !797; fft3d.c:132:41
6496B	  %147:fpr64 = FMULDrr %140:fpr64, %143:fpr64, debug-location !797; fft3d.c:132:41
6504B	  %148:fpr64 = FADDDrr %139:fpr64, %147:fpr64, debug-location !797; fft3d.c:132:41
6512B	  %122:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
6520B	  %123:gpr64 = LDRSWui %stack.14.k, 0, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
6528B	  STRDui %148:fpr64, %stack.33..compoundliteral204, 1, debug-location !797 :: (store 8 into %ir.imag231); fft3d.c:132:41
6536B	  STRDui %138:fpr64, %stack.33..compoundliteral204, 0, debug-location !797 :: (store 8 into %ir.real20541); fft3d.c:132:41
6544B	  %121:gpr64 = LDRXui %stack.7.x, 0, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
6552B	  %127:gpr64 = LDRSWui %stack.9.j, 0, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
6560B	  %124:gpr64 = nsw ADDXrr %122:gpr64, %123:gpr64, debug-location !795; fft3d.c:132:31
6568B	  %125:gpr64 = nsw MADDXrrr %124:gpr64, %0:gpr64, $xzr, debug-location !792; fft3d.c:132:25
6576B	  STRDui %134:fpr64, %stack.34..compoundliteral207, 1, debug-location !797 :: (store 8 into %ir.imag212); fft3d.c:132:41
6584B	  STRDui %131:fpr64, %stack.34..compoundliteral207, 0, debug-location !797 :: (store 8 into %ir.real20843); fft3d.c:132:41
6592B	  STRDui %134:fpr64, %stack.35..compoundliteral219, 1, debug-location !797 :: (store 8 into %ir.imag224); fft3d.c:132:41
6600B	  STRDui %131:fpr64, %stack.35..compoundliteral219, 0, debug-location !797 :: (store 8 into %ir.real22047); fft3d.c:132:41
6608B	  %126:gpr64common = ADDXrs %121:gpr64, %125:gpr64, 4, debug-location !792; fft3d.c:132:25
6616B	  STRDui %134:fpr64, %stack.36..compoundliteral233, 1, debug-location !797 :: (store 8 into %ir.imag238); fft3d.c:132:41
6624B	  STRDui %131:fpr64, %stack.36..compoundliteral233, 0, debug-location !797 :: (store 8 into %ir.real23451); fft3d.c:132:41
6632B	  %149:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
6640B	  %146:fpr64 = FSUBDrr %144:fpr64, %145:fpr64, debug-location !797; fft3d.c:132:41
6648B	  STRDui %146:fpr64, %stack.37..compoundliteral245, 1, debug-location !797 :: (store 8 into %ir.imag250); fft3d.c:132:41
6656B	  STRDui %143:fpr64, %stack.37..compoundliteral245, 0, debug-location !797 :: (store 8 into %ir.real24654); fft3d.c:132:41
6664B	  STRQroX %149:fpr128, %126:gpr64common, %127:gpr64, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
6672B	  %150:gpr32common = LDRWui %stack.9.j, 0, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
6680B	  %151:gpr32common = nsw ADDWri %150:gpr32common, 1, 0, debug-location !798; fft3d.c:128:44
6688B	  STRWui %151:gpr32common, %stack.9.j, 0, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
6696B	  B %bb.31, debug-location !799; fft3d.c:128:21

6704B	bb.33.for.inc260:
	; predecessors: %bb.31
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

6712B	  %93:gpr32common = LDRWui %stack.14.k, 0, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
6720B	  %94:gpr32common = nsw ADDWri %93:gpr32common, 1, 0, debug-location !802; fft3d.c:127:43
6728B	  STRWui %94:gpr32common, %stack.14.k, 0, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
6736B	  B %bb.29, debug-location !803; fft3d.c:127:17

6744B	bb.34.for.inc263:
	; predecessors: %bb.29
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

6752B	  %87:gpr32common = LDRWui %stack.8.i, 0, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
6760B	  %88:gpr32common = nsw ADDWri %87:gpr32common, 1, 0, debug-location !806; fft3d.c:115:39
6768B	  STRWui %88:gpr32common, %stack.8.i, 0, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
6776B	  B %bb.24, debug-location !807; fft3d.c:115:13

6784B	bb.35.for.inc267:
	; predecessors: %bb.24, %bb.18
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

6792B	  %156:gpr32common = LDRWui %stack.10.l, 0, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
6800B	  %157:gpr32common = nsw ADDWri %156:gpr32common, 2, 0, debug-location !810; fft3d.c:74:27
6808B	  STRWui %157:gpr32common, %stack.10.l, 0, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
6816B	  B %bb.3, debug-location !811; fft3d.c:74:5

6832B	bb.36.for.end269:
	; predecessors: %bb.3
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

6848B	  %29:gpr32 = LDRWui %13:gpr64common, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !814 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
6864B	  CBZW %29:gpr32, %bb.38, debug-location !816; fft3d.c:138:9
6880B	  B %bb.37, debug-location !816; fft3d.c:138:9

6896B	bb.37.if.then271:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

6912B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !817; fft3d.c:139:9
6944B	  $w0 = MOVi32imm 4, debug-location !817; fft3d.c:139:9
6960B	  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !817; fft3d.c:139:9
6976B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !817; fft3d.c:139:9

6992B	bb.38.if.end272:
	; predecessors: %bb.36, %bb.37

7008B	  RET_ReallyLR debug-location !818; fft3d.c:140:1

# End machine code for function Swarztrauber.

Before post-MI-sched:
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#0: size=4, align=4, at location [SP-52]
  fi#1: size=4, align=4, at location [SP-56]
  fi#2: size=4, align=4, at location [SP-60]
  fi#3: size=4, align=4, at location [SP-64]
  fi#4: size=4, align=4, at location [SP-68]
  fi#5: size=8, align=8, at location [SP-80]
  fi#6: size=8, align=8, at location [SP-88]
  fi#7: size=8, align=8, at location [SP-96]
  fi#8: size=4, align=4, at location [SP-100]
  fi#9: size=4, align=4, at location [SP-104]
  fi#10: size=4, align=4, at location [SP-108]
  fi#11: size=16, align=16, at location [SP-128]
  fi#12: size=16, align=16, at location [SP-144]
  fi#13: size=16, align=16, at location [SP-160]
  fi#14: size=4, align=4, at location [SP-164]
  fi#15: size=4, align=4, at location [SP-168]
  fi#16: size=4, align=4, at location [SP-172]
  fi#17: size=4, align=4, at location [SP-176]
  fi#18: size=4, align=4, at location [SP-180]
  fi#19: size=4, align=4, at location [SP-184]
  fi#20: size=4, align=4, at location [SP-188]
  fi#21: size=4, align=4, at location [SP-192]
  fi#22: size=4, align=4, at location [SP-196]
  fi#23: size=4, align=4, at location [SP-200]
  fi#24: size=16, align=8, at location [SP-216]
  fi#25: size=16, align=8, at location [SP-232]
  fi#26: size=16, align=8, at location [SP-248]
  fi#27: size=16, align=8, at location [SP-264]
  fi#28: size=16, align=8, at location [SP-280]
  fi#29: size=16, align=8, at location [SP-296]
  fi#30: size=16, align=8, at location [SP-312]
  fi#31: size=16, align=8, at location [SP-328]
  fi#32: size=16, align=8, at location [SP-344]
  fi#33: size=16, align=8, at location [SP-360]
  fi#34: size=16, align=8, at location [SP-376]
  fi#35: size=16, align=8, at location [SP-392]
  fi#36: size=16, align=8, at location [SP-408]
  fi#37: size=16, align=8, at location [SP-424]
  fi#38: size=8, align=8, at location [SP-8]
  fi#39: size=8, align=8, at location [SP-16]
  fi#40: size=8, align=8, at location [SP-24]
  fi#41: size=8, align=8, at location [SP-32]
  fi#42: size=8, align=16, at location [SP-48]
Function Live Ins: $w0, $w1, $w2, $w3, $w4, $x5, $x6

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $w4, $x5, $x6, $x28, $x19, $x20, $lr
  $sp = frame-setup SUBXri $sp, 432, 0
  frame-setup STRXui killed $x28, $sp, 48 :: (store 8 into %stack.42)
  frame-setup STPXi killed $x20, killed $x19, $sp, 50 :: (store 8 into %stack.41), (store 8 into %stack.40)
  frame-setup STPXi killed $fp, killed $lr, $sp, 52 :: (store 8 into %stack.39), (store 8 into %stack.38)
  $fp = frame-setup ADDXri $sp, 416, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  frame-setup CFI_INSTRUCTION offset $w20, -32
  frame-setup CFI_INSTRUCTION offset $w28, -48
  STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  STPWi renamable $w3, renamable $w2, $fp, -12 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  STURWi renamable $w4, $fp, -52 :: (store 4 into %ir.xd1.addr)
  renamable $x19 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
  renamable $w8 = LDRWui renamable $x19, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  STPXi renamable $x6, renamable $x5, $fp, -9 :: (store 8 into %ir.ox.addr), (store 8 into %ir.exponent.addr)
  renamable $w20 = ORRWrs $wzr, killed renamable $w4, 0, implicit-def $x20, debug-location !508; fft3d.c:60:18
  STURXi killed renamable $x5, $fp, -80, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
  CBZW killed renamable $w8, %bb.2, debug-location !549; fft3d.c:66:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)
  liveins: $x19, $x20
  $w0 = MOVZWi 4, 0, debug-location !550; fft3d.c:67:9
  BL @timer_start, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !550; fft3d.c:67:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x80000000); %bb.3(100.00%)
  liveins: $x19, $x20
  $x8 = SUBXri $fp, 144, 0
  renamable $w10 = LDURWi $fp, -48, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  $w11 = MOVZWi 1, 0
  renamable $w12 = LDURWi $fp, -40, implicit-def $x12, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  $x9 = ADRP target-flags(aarch64-page) @scr
  renamable $x9 = ADDXri $x9, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  STURWi renamable $w11, $fp, -160, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  STURWi renamable $w11, $fp, -92, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  dead $wzr = SUBSWri renamable $w10, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  renamable $w11 = LSLVWr killed renamable $w11, renamable $w12, implicit killed $x12, debug-location !556; fft3d.c:73:12
  renamable $w10 = CSINCWr killed renamable $w10, renamable $w10, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
  renamable $w10 = SBFMWri killed renamable $w10, 1, 31, debug-location !552; fft3d.c:71:12
  STPWi killed renamable $w11, killed renamable $w10, $fp, -39, debug-location !557 :: (store 4 into %ir.li), (store 4 into %ir.n1); fft3d.c:73:8
  $w10 = MOVZWi 528, 0, implicit-def $x10

bb.3.for.cond:
; predecessors: %bb.2, %bb.35
  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -92, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  renamable $w12 = LDURWi $fp, -40, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5

bb.4.for.body:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !566 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  STURWi renamable $w11, $fp, -164, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  renamable $w11 = UBFMWri killed renamable $w11, 31, 30, debug-location !570; fft3d.c:76:16
  dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  STURWi killed renamable $w11, $fp, -160, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  renamable $w11 = CSINCWr killed renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
  renamable $w11 = SBFMWri killed renamable $w11, 1, 31, debug-location !573; fft3d.c:77:17
  STURWi renamable $w11, $fp, -156, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  STURWi killed renamable $w11, $fp, -168, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  STURWi $wzr, $fp, -84, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16

bb.5.for.cond2:
; predecessors: %bb.4, %bb.15
  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -156, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  renamable $w12 = LDURWi $fp, -84, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  renamable $w11 = SUBWri killed renamable $w11, 1, 0, debug-location !583; fft3d.c:80:29
  $wzr = SUBSWrs killed renamable $w12, killed renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9

bb.6.for.body4:
; predecessors: %bb.5
  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -84, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !588 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:81:23
  renamable $w14 = LDURWi $fp, -36, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  renamable $w15 = LDURWi $fp, -152, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !589; fft3d.c:81:21
  renamable $w11 = nsw MADDWrrr killed renamable $w11, killed renamable $w13, $wzr, debug-location !597; fft3d.c:83:21
  dead $wzr = SUBSWri killed renamable $w14, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  $w13 = ADDWrs renamable $w16, killed renamable $w15, 0, debug-location !593; fft3d.c:82:23
  STURWi renamable $w11, $fp, -180, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !601; fft3d.c:84:23
  STPWi killed renamable $w13, renamable $w16, $fp, -44, debug-location !590 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:81:17
  STURWi killed renamable $w11, $fp, -184, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17

bb.7.if.then9:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -168, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  renamable $w12 = LDURWi $fp, -84, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  renamable $x13 = LDURXi $fp, -72, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !611; fft3d.c:87:34
  renamable $x11 = ADDXrx killed renamable $x13, killed renamable $w11, 52, debug-location !607; fft3d.c:87:22
  B %bb.9

bb.8.if.else:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -168, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  renamable $w12 = LDURWi $fp, -84, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  renamable $x13 = LDURXi $fp, -72, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !613; fft3d.c:90:22
  renamable $x11 = ADDXrx killed renamable $x13, killed renamable $w11, 52, debug-location !613; fft3d.c:90:22
  renamable $d0 = LDRDui renamable $x11, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  STURDi killed renamable $d0, $fp, -200, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  renamable $d0 = LDRDui killed renamable $x11, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  renamable $d0 = FNEGDr killed renamable $d0, debug-location !613; fft3d.c:90:22
  STURDi killed renamable $d0, $fp, -192, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  $x11 = SUBXri $fp, 200, 0

bb.9.if.end20:
; predecessors: %bb.8, %bb.7
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x8, $x9, $x10, $x11, $x19, $x20
  renamable $q0 = LDRQui killed renamable $x11, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  STURWi $wzr, $fp, -148, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
  STRQui killed renamable $q0, renamable $x8, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0

bb.10.for.cond21:
; predecessors: %bb.9, %bb.14
  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -164, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  renamable $w12 = LDURWi $fp, -148, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  renamable $w11 = SUBWri killed renamable $w11, 1, 0, debug-location !622; fft3d.c:92:33
  $wzr = SUBSWrs killed renamable $w12, killed renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13

bb.11.for.body24:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  STURWi $wzr, $fp, -88, debug-location !625 :: (store 4 into %ir.j); fft3d.c:93:24

bb.12.for.cond25:
; predecessors: %bb.11, %bb.13
  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -88, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  renamable $w12 = LDURWi $fp, -44, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17

bb.13.for.body27:
; predecessors: %bb.12
  successors: %bb.12(0x80000000); %bb.12(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $x11 = LDURXi $fp, -80, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  renamable $x15, renamable $x12 = LDPSWi $fp, -44, debug-location !636 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  renamable $x13 = LDURSWi $fp, -88, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  renamable $x14 = LDURSWi $fp, -148, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  renamable $w16 = LDURWi $fp, -148, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  renamable $x17 = LDURSWi $fp, -88, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  $x12 = ADDXrs killed renamable $x12, renamable $x14, 0, debug-location !638; fft3d.c:94:33
  renamable $x13 = UBFMXri killed renamable $x13, 60, 59, debug-location !648; fft3d.c:96:21
  renamable $x12 = nsw MADDXrrr killed renamable $x12, renamable $x20, $xzr, debug-location !634; fft3d.c:94:27
  renamable $x12 = ADDXrs renamable $x11, killed renamable $x12, 4, debug-location !634; fft3d.c:94:27
  renamable $q0 = LDRQroX killed renamable $x12, renamable $x13, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  $x12 = ADDXrs killed renamable $x15, renamable $x14, 0, debug-location !643; fft3d.c:95:33
  renamable $x12 = nsw MADDXrrr killed renamable $x12, renamable $x20, $xzr, debug-location !640; fft3d.c:95:27
  renamable $x11 = ADDXrs killed renamable $x11, killed renamable $x12, 4, debug-location !640; fft3d.c:95:27
  STRQui killed renamable $q0, renamable $x8, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
  renamable $q0 = LDRQroX killed renamable $x11, renamable $x13, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  renamable $d2, renamable $d1 = LDPDi $fp, -16, debug-location !656 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  STRQui killed renamable $q0, renamable $x8, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
  renamable $d0, renamable $d3 = LDPDi $fp, -17, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  renamable $d4, renamable $d7 = LDPDi $fp, -18, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  renamable $d5 = LDURDi $fp, -120, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  renamable $d6 = LDURDi $fp, -120, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  renamable $d2 = FADDDrr killed renamable $d2, killed renamable $d4, debug-location !650; fft3d.c:96:39
  renamable $d16, renamable $d4 = LDPDi $fp, -18, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  renamable $d5 = FADDDrr killed renamable $d5, killed renamable $d7, debug-location !650; fft3d.c:96:39
  renamable $d3 = FSUBDrr killed renamable $d3, killed renamable $d16, debug-location !656; fft3d.c:97:39
  renamable $w12, renamable $w11 = LDPWi $fp, -46, debug-location !645 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  renamable $d4 = FSUBDrr killed renamable $d6, killed renamable $d4, debug-location !656; fft3d.c:97:39
  renamable $d0 = FSUBDrr killed renamable $d1, killed renamable $d0, debug-location !656; fft3d.c:97:39
  renamable $d6, renamable $d1 = LDPDi $fp, -14, debug-location !656 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !650 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !656; fft3d.c:97:39
  renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !656; fft3d.c:97:39
  renamable $d2 = FSUBDrr killed renamable $d2, killed renamable $d5, debug-location !656; fft3d.c:97:39
  renamable $q5 = LDURQi $sp, 200, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  $w11 = ADDWrs killed renamable $w11, renamable $w14, 0, implicit killed $x14, debug-location !647; fft3d.c:96:29
  renamable $w14 = LDURWi $fp, -88, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  renamable $x11 = SMADDLrrr killed renamable $w11, renamable $w10, renamable $x9, debug-location !648; fft3d.c:96:21
  STRQroX killed renamable $q5, killed renamable $x11, killed renamable $x13, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  $w11 = ADDWrs killed renamable $w12, killed renamable $w16, 0, debug-location !653; fft3d.c:97:29
  renamable $w12 = nsw ADDWri killed renamable $w14, 1, 0, debug-location !657; fft3d.c:93:40
  renamable $x11 = SMADDLrrr killed renamable $w11, renamable $w10, renamable $x9, debug-location !654; fft3d.c:97:21
  STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !656 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !656 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  renamable $d5 = FMULDrr killed renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
  renamable $d1 = FMULDrr killed renamable $d1, renamable $d3, debug-location !656; fft3d.c:97:39
  renamable $d1 = FADDDrr killed renamable $d5, killed renamable $d1, debug-location !656; fft3d.c:97:39
  STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !656 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  renamable $q1 = LDURQi $sp, 184, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !656 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !656 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  STRQroX killed renamable $q1, killed renamable $x11, killed renamable $x17, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  STURWi killed renamable $w12, $fp, -88, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
  B %bb.12

bb.14.for.inc110:
; predecessors: %bb.12
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -148, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !661; fft3d.c:92:39
  STURWi killed renamable $w11, $fp, -148, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  B %bb.10

bb.15.for.inc113:
; predecessors: %bb.10
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -84, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !665; fft3d.c:80:35
  STURWi killed renamable $w11, $fp, -84, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  B %bb.5

bb.16.for.end115:
; predecessors: %bb.5
  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -92, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  renamable $w12 = LDURWi $fp, -40, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13

bb.17.if.then117:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  STURWi $wzr, $fp, -148, debug-location !674 :: (store 4 into %ir.k); fft3d.c:103:20

bb.18.for.cond118:
; predecessors: %bb.17, %bb.22
  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -148, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  renamable $w12 = LDURWi $fp, -48, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13

bb.19.for.body120:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  STURWi $wzr, $fp, -88, debug-location !683 :: (store 4 into %ir.j); fft3d.c:104:24

bb.20.for.cond121:
; predecessors: %bb.19, %bb.21
  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -88, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  renamable $w12 = LDURWi $fp, -44, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17

bb.21.for.body123:
; predecessors: %bb.20
  successors: %bb.20(0x80000000); %bb.20(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $x11 = LDURSWi $fp, -88, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  renamable $x12 = LDURSWi $fp, -148, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  renamable $x13 = LDURXi $fp, -80, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  renamable $x11 = UBFMXri killed renamable $x11, 60, 59, debug-location !692; fft3d.c:105:21
  renamable $x14 = MADDXrrr renamable $x12, renamable $x10, renamable $x9, debug-location !697; fft3d.c:105:31
  renamable $q0 = LDRQroX killed renamable $x14, renamable $x11, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  renamable $x12 = nsw MADDXrrr killed renamable $x12, renamable $x20, $xzr, debug-location !692; fft3d.c:105:21
  renamable $x12 = ADDXrs killed renamable $x13, killed renamable $x12, 4, debug-location !692; fft3d.c:105:21
  STRQroX killed renamable $q0, killed renamable $x12, killed renamable $x11, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  renamable $w11 = LDURWi $fp, -88, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !699; fft3d.c:104:40
  STURWi killed renamable $w11, $fp, -88, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  B %bb.20

bb.22.for.inc135:
; predecessors: %bb.20
  successors: %bb.18(0x80000000); %bb.18(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -148, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !703; fft3d.c:103:33
  STURWi killed renamable $w11, $fp, -148, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  B %bb.18

bb.23.if.else138:
; predecessors: %bb.16
  successors: %bb.24(0x80000000); %bb.24(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !707 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  STURWi renamable $w11, $fp, -164, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  renamable $w11 = UBFMWri killed renamable $w11, 31, 30, debug-location !711; fft3d.c:111:20
  dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  STURWi killed renamable $w11, $fp, -160, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  renamable $w11 = CSINCWr killed renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
  renamable $w11 = SBFMWri killed renamable $w11, 1, 31, debug-location !714; fft3d.c:112:21
  STURWi renamable $w11, $fp, -156, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  STURWi killed renamable $w11, $fp, -168, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  STURWi $wzr, $fp, -84, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20

bb.24.for.cond141:
; predecessors: %bb.23, %bb.34
  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -156, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  renamable $w12 = LDURWi $fp, -84, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  renamable $w11 = SUBWri killed renamable $w11, 1, 0, debug-location !724; fft3d.c:115:33
  $wzr = SUBSWrs killed renamable $w12, killed renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13

bb.25.for.body144:
; predecessors: %bb.24
  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -84, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !729 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:116:27
  renamable $w14 = LDURWi $fp, -36, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  renamable $w15 = LDURWi $fp, -152, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !730; fft3d.c:116:25
  renamable $w11 = nsw MADDWrrr killed renamable $w11, killed renamable $w13, $wzr, debug-location !738; fft3d.c:118:25
  dead $wzr = SUBSWri killed renamable $w14, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  $w13 = ADDWrs renamable $w16, killed renamable $w15, 0, debug-location !734; fft3d.c:117:27
  STURWi renamable $w11, $fp, -180, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !742; fft3d.c:119:27
  STPWi killed renamable $w13, renamable $w16, $fp, -44, debug-location !731 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:116:21
  STURWi killed renamable $w11, $fp, -184, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21

bb.26.if.then150:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -168, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  renamable $w12 = LDURWi $fp, -84, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  renamable $x13 = LDURXi $fp, -72, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !752; fft3d.c:122:38
  renamable $x11 = ADDXrx killed renamable $x13, killed renamable $w11, 52, debug-location !748; fft3d.c:122:26
  B %bb.28

bb.27.if.else154:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -168, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  renamable $w12 = LDURWi $fp, -84, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  renamable $x13 = LDURXi $fp, -72, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  $w11 = ADDWrs killed renamable $w11, killed renamable $w12, 0, debug-location !754; fft3d.c:125:26
  renamable $x11 = ADDXrx killed renamable $x13, killed renamable $w11, 52, debug-location !754; fft3d.c:125:26
  renamable $d0 = LDRDui renamable $x11, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  STRDui killed renamable $d0, $sp, 13, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  renamable $d0 = LDRDui killed renamable $x11, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  renamable $d0 = FNEGDr killed renamable $d0, debug-location !754; fft3d.c:125:26
  STRDui killed renamable $d0, $sp, 14, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  $x11 = ADDXri $sp, 104, 0

bb.28.if.end167:
; predecessors: %bb.27, %bb.26
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x8, $x9, $x10, $x11, $x19, $x20
  renamable $q0 = LDRQui killed renamable $x11, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  STURWi $wzr, $fp, -148, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
  STRQui killed renamable $q0, renamable $x8, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0

bb.29.for.cond168:
; predecessors: %bb.28, %bb.33
  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -164, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  renamable $w12 = LDURWi $fp, -148, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  renamable $w11 = SUBWri killed renamable $w11, 1, 0, debug-location !763; fft3d.c:127:37
  $wzr = SUBSWrs killed renamable $w12, killed renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17

bb.30.for.body171:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  STURWi $wzr, $fp, -88, debug-location !766 :: (store 4 into %ir.j); fft3d.c:128:28

bb.31.for.cond172:
; predecessors: %bb.30, %bb.32
  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -88, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  renamable $w12 = LDURWi $fp, -44, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  $wzr = SUBSWrs killed renamable $w11, killed renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21

bb.32.for.body174:
; predecessors: %bb.31
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w13, renamable $w11 = LDPWi $fp, -44, debug-location !775 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  renamable $w12 = LDURWi $fp, -148, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  renamable $x14 = LDURSWi $fp, -88, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  renamable $x15 = LDURSWi $fp, -148, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  $w11 = ADDWrs killed renamable $w11, renamable $w12, 0, debug-location !778; fft3d.c:129:39
  $w12 = ADDWrs killed renamable $w13, killed renamable $w12, 0, debug-location !783; fft3d.c:130:39
  renamable $x13 = UBFMXri killed renamable $x14, 60, 59, debug-location !786; fft3d.c:131:25
  renamable $x11 = SMADDLrrr killed renamable $w11, renamable $w10, renamable $x9, debug-location !779; fft3d.c:129:31
  renamable $x12 = SMADDLrrr killed renamable $w12, renamable $w10, renamable $x9, debug-location !784; fft3d.c:130:31
  renamable $q0 = LDRQroX killed renamable $x12, renamable $x13, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  renamable $q1 = LDRQroX killed renamable $x11, renamable $x13, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !784 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  renamable $d1, renamable $d0 = LDPDi $fp, -16, debug-location !791 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  renamable $d2, renamable $d3 = LDPDi $fp, -18, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  renamable $x11 = LDURXi $fp, -80, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  renamable $x12 = LDURSWi $fp, -180, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  renamable $d1 = FADDDrr killed renamable $d1, killed renamable $d2, debug-location !791; fft3d.c:131:41
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d3, debug-location !791; fft3d.c:131:41
  STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !791 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  renamable $q0 = LDURQi $sp, 88, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  $x12 = ADDXrs killed renamable $x12, killed renamable $x15, 0, debug-location !789; fft3d.c:131:31
  renamable $x12 = nsw MADDXrrr killed renamable $x12, renamable $x20, $xzr, debug-location !786; fft3d.c:131:25
  renamable $x11 = ADDXrs killed renamable $x11, killed renamable $x12, 4, debug-location !786; fft3d.c:131:25
  STRQroX killed renamable $q0, killed renamable $x11, killed renamable $x13, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  renamable $d6, renamable $d0 = LDPDi $fp, -15, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  renamable $d1, renamable $d2 = LDPDi $fp, -17, debug-location !797 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  renamable $d3, renamable $d7 = LDPDi $fp, -16, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  renamable $d4, renamable $d16 = LDPDi $fp, -18, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  renamable $d5 = LDURDi $fp, -144, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  renamable $d2 = FSUBDrr killed renamable $d2, killed renamable $d4, debug-location !797; fft3d.c:132:41
  renamable $d1 = FSUBDrr killed renamable $d6, killed renamable $d1, debug-location !797; fft3d.c:132:41
  renamable $d4 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  renamable $d6 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  renamable $d3 = FSUBDrr killed renamable $d3, killed renamable $d5, debug-location !797; fft3d.c:132:41
  renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !797; fft3d.c:132:41
  renamable $d4 = FMULDrr killed renamable $d4, renamable $d1, debug-location !797; fft3d.c:132:41
  renamable $d4 = FSUBDrr killed renamable $d5, killed renamable $d4, debug-location !797; fft3d.c:132:41
  renamable $d0 = FMULDrr killed renamable $d0, renamable $d1, debug-location !797; fft3d.c:132:41
  renamable $d5 = FMULDrr killed renamable $d6, renamable $d3, debug-location !797; fft3d.c:132:41
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d5, debug-location !797; fft3d.c:132:41
  renamable $x11 = LDURSWi $fp, -184, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  renamable $x12 = LDURSWi $fp, -148, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !797 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  renamable $x13 = LDURXi $fp, -80, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  renamable $x14 = LDURSWi $fp, -88, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  $x11 = ADDXrs killed renamable $x11, killed renamable $x12, 0, debug-location !795; fft3d.c:132:31
  renamable $x11 = nsw MADDXrrr killed renamable $x11, renamable $x20, $xzr, debug-location !792; fft3d.c:132:25
  STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !797 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !797 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  renamable $x11 = ADDXrs killed renamable $x13, killed renamable $x11, 4, debug-location !792; fft3d.c:132:25
  STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !797 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  renamable $q0 = LDURQi $sp, 72, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  renamable $d1 = FSUBDrr killed renamable $d7, killed renamable $d16, debug-location !797; fft3d.c:132:41
  STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !797 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  STRQroX killed renamable $q0, killed renamable $x11, killed renamable $x14, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  renamable $w11 = LDURWi $fp, -88, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !798; fft3d.c:128:44
  STURWi killed renamable $w11, $fp, -88, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
  B %bb.31

bb.33.for.inc260:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -148, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !802; fft3d.c:127:43
  STURWi killed renamable $w11, $fp, -148, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  B %bb.29

bb.34.for.inc263:
; predecessors: %bb.29
  successors: %bb.24(0x80000000); %bb.24(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -84, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  renamable $w11 = nsw ADDWri killed renamable $w11, 1, 0, debug-location !806; fft3d.c:115:39
  STURWi killed renamable $w11, $fp, -84, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  B %bb.24

bb.35.for.inc267:
; predecessors: %bb.24, %bb.18
  successors: %bb.3(0x80000000); %bb.3(100.00%)
  liveins: $x8, $x9, $x10, $x19, $x20
  renamable $w11 = LDURWi $fp, -92, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  renamable $w11 = nsw ADDWri killed renamable $w11, 2, 0, debug-location !810; fft3d.c:74:27
  STURWi killed renamable $w11, $fp, -92, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  B %bb.3

bb.36.for.end269:
; predecessors: %bb.3
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)
  liveins: $x19
  renamable $w8 = LDRWui killed renamable $x19, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !814 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  CBZW killed renamable $w8, %bb.38, debug-location !816; fft3d.c:138:9

bb.37.if.then271:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  $w0 = MOVZWi 4, 0, debug-location !817; fft3d.c:139:9
  BL @timer_stop, <regmask $fp $lr $b8 $b9 $b10 $b11 $b12 $b13 $b14 $b15 $d8 $d9 $d10 $d11 $d12 $d13 $d14 $d15 $h8 $h9 $h10 $h11 $h12 $h13 $h14 $h15 $s8 $s9 $s10 $s11 $s12 $s13 $s14 and 51 more...>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !817; fft3d.c:139:9

bb.38.if.end272:
; predecessors: %bb.36, %bb.37

  $fp, $lr = frame-destroy LDPXi $sp, 52, debug-location !818 :: (load 8 from %stack.39), (load 8 from %stack.38); fft3d.c:140:1
  $x20, $x19 = frame-destroy LDPXi $sp, 50, debug-location !818 :: (load 8 from %stack.41), (load 8 from %stack.40); fft3d.c:140:1
  $x28 = frame-destroy LDRXui $sp, 48, debug-location !818 :: (load 8 from %stack.42); fft3d.c:140:1
  $sp = frame-destroy ADDXri $sp, 432, 0, debug-location !818; fft3d.c:140:1
  RET undef $lr, debug-location !818; fft3d.c:140:1

# End machine code for function Swarztrauber.

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
    To: CBZW killed renamable $w8, %bb.2, debug-location !549; fft3d.c:66:9
 RegionInstrs: 8
ScheduleDAGMI::schedule starting
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -12 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   STURWi renamable $w4, $fp, -52 :: (store 4 into %ir.xd1.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   renamable $x19 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(4): Data Latency=1 Reg=$x19
SU(4):   renamable $w8 = LDRWui renamable $x19, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(3): Data Latency=1 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(5):   STPXi renamable $x6, renamable $x5, $fp, -9 :: (store 8 into %ir.ox.addr), (store 8 into %ir.exponent.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(6):   renamable $w20 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x20, debug-location !508; fft3d.c:60:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   STURXi renamable $x5, $fp, -80, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w8, %bb.2, debug-location !549; fft3d.c:66:9
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=4 Artificial
    SU(3): Ord  Latency=1 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 5 6 7 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x19 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
  Ready @0c
  TopQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 6 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(4) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w8 = LDRWui renamable $x19, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  Ready @1c
  TopQ.A TopLatency SU(4) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 6 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $w20 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x20, debug-location !508; fft3d.c:60:18
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 7 5 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 1 2 7 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(5) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STPWi renamable $w3, renamable $w2, $fp, -12 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 7 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(5) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) STURWi renamable $w4, $fp, -52 :: (store 4 into %ir.xd1.addr)
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 7 
  TopQ.A RemainingLatency 0 + 6c > CritPath 5
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) STPXi renamable $x6, renamable $x5, $fp, -9 :: (store 8 into %ir.ox.addr), (store 8 into %ir.exponent.addr)
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STURXi renamable $x5, $fp, -80, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(3):   renamable $x19 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !547; fft3d.c:66:9
SU(4):   renamable $w8 = LDRWui renamable $x19, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !547 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
SU(6):   renamable $w20 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x20, debug-location !508; fft3d.c:60:18
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -10 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -12 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
SU(2):   STURWi renamable $w4, $fp, -52 :: (store 4 into %ir.xd1.addr)
SU(5):   STPXi renamable $x6, renamable $x5, $fp, -9 :: (store 8 into %ir.ox.addr), (store 8 into %ir.exponent.addr)
SU(7):   STURXi renamable $x5, $fp, -80, debug-location !511 :: (store 8 into %ir.x); fft3d.c:60:15

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: frame-setup STRXui killed $x28, $sp, 48 :: (store 8 into %stack.42)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STRXui $x28, $sp, 48 :: (store 8 into %stack.42)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $x20, $x19, $sp, 50 :: (store 8 into %stack.41), (store 8 into %stack.40)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   frame-setup STPXi $fp, $lr, $sp, 52 :: (store 8 into %stack.39), (store 8 into %stack.38)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(3): Anti Latency=0
SU(3):   $fp = frame-setup ADDXri $sp, 416, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STRXui $x28, $sp, 48 :: (store 8 into %stack.42)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 0
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) frame-setup STPXi $x20, $x19, $sp, 50 :: (store 8 into %stack.41), (store 8 into %stack.40)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) frame-setup STPXi $fp, $lr, $sp, 52 :: (store 8 into %stack.39), (store 8 into %stack.38)
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $fp = frame-setup ADDXri $sp, 416, 0
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STRXui $x28, $sp, 48 :: (store 8 into %stack.42)
SU(1):   frame-setup STPXi $x20, $x19, $sp, 50 :: (store 8 into %stack.41), (store 8 into %stack.40)
SU(2):   frame-setup STPXi $fp, $lr, $sp, 52 :: (store 8 into %stack.39), (store 8 into %stack.38)
SU(3):   $fp = frame-setup ADDXri $sp, 416, 0

Fixup kills for %bb.0
Fixup kills for %bb.1
********** MI Scheduling **********
Swarztrauber:%bb.2 if.end
  From: $x8 = SUBXri $fp, 144, 0
    To: End RegionInstrs: 14
ScheduleDAGMI::schedule starting
SU(0):   $x8 = SUBXri $fp, 144, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(1):   renamable $w10 = LDURWi $fp, -48, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(10): Out  Latency=1
    SU(13): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w10
    SU(8): Data Latency=4 Reg=$w10
SU(2):   $w11 = MOVZWi 1, 0
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w11
    SU(7): Data Latency=1 Reg=$w11
    SU(6): Data Latency=1 Reg=$w11
SU(3):   renamable $w12 = LDURWi $fp, -40, implicit-def $x12, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(9): Data Latency=4 Reg=$w12
    SU(9): Data Latency=0 Reg=$x12
SU(4):   $x9 = ADRP target-flags(aarch64-page) @scr
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x9
SU(5):   renamable $x9 = ADDXri $x9, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x9
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STURWi renamable $w11, $fp, -160, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
  Successors:
    SU(9): Anti Latency=0
SU(7):   STURWi renamable $w11, $fp, -92, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
  Successors:
    SU(9): Anti Latency=0
SU(8):   dead $wzr = SUBSWri renamable $w10, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=4 Reg=$w10
  Successors:
    SU(10): Data Latency=1 Reg=$nzcv
    SU(10): Anti Latency=0
    SU(13): Anti Latency=0
SU(9):   renamable $w11 = LSLVWr renamable $w11, renamable $w12, implicit $x12, debug-location !556; fft3d.c:73:12
  # preds left       : 6
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Anti Latency=0
    SU(3): Data Latency=4 Reg=$w12
    SU(3): Data Latency=0 Reg=$x12
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w11
  Successors:
    SU(12): Data Latency=1 Reg=$w11
SU(10):   renamable $w10 = CSINCWr renamable $w10, renamable $w10, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(8): Data Latency=1 Reg=$nzcv
    SU(8): Anti Latency=0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w10
  Successors:
    SU(11): Out  Latency=1
    SU(13): Out  Latency=1
    SU(11): Data Latency=1 Reg=$w10
    SU(13): Anti Latency=0
SU(11):   renamable $w10 = SBFMWri renamable $w10, 1, 31, debug-location !552; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$w10
  Successors:
    SU(13): Out  Latency=1
    SU(12): Data Latency=1 Reg=$w10
    SU(13): Anti Latency=0
SU(12):   STPWi renamable $w11, renamable $w10, $fp, -39, debug-location !557 :: (store 4 into %ir.li), (store 4 into %ir.n1); fft3d.c:73:8
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(11): Data Latency=1 Reg=$w10
    SU(9): Data Latency=1 Reg=$w11
  Successors:
    SU(13): Anti Latency=0
SU(13):   $w10 = MOVZWi 528, 0, implicit-def $x10
  # preds left       : 7
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(12): Anti Latency=0
    SU(11): Out  Latency=1
    SU(11): Anti Latency=0
    SU(10): Out  Latency=1
    SU(10): Anti Latency=0
    SU(8): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w10 = LDURWi $fp, -48, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  Ready @0c
  TopQ.A BotLatency SU(1) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 0 4 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(4) TOP-PATH                  2 cycles 
  Cand SU(2) TOP-PATH                  3 cycles 
  Cand SU(3) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $w12 = LDURWi $fp, -40, implicit-def $x12, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 0 4 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(4) TOP-PATH                  2 cycles 
  Cand SU(2) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w11 = MOVZWi 1, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 0 4 7 6 
  TopQ.A RemainingLatency 0 + 3c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(4) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) $x9 = ADRP target-flags(aarch64-page) @scr
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 6 7 5 8 
  TopQ.A RemainingLatency 0 + 4c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  2 cycles 
  Cand SU(8) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) dead $wzr = SUBSWri renamable $w10, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
  Ready @4c
  TopQ.A TopLatency SU(8) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 6 7 5 10 
  TopQ.A RemainingLatency 0 + 5c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  2 cycles 
  Cand SU(10) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $w10 = CSINCWr renamable $w10, renamable $w10, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
  Ready @5c
  TopQ.A TopLatency SU(10) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 6 7 5 11 
  TopQ.A RemainingLatency 0 + 6c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) STURWi renamable $w11, $fp, -160, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 11 7 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(11) TOP-PATH                  2 cycles 
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) STURWi renamable $w11, $fp, -92, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
  Ready @7c
  TopQ.A BotLatency SU(7) 2c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 11 5 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(11) TOP-PATH                  2 cycles 
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $w11 = LSLVWr renamable $w11, renamable $w12, implicit $x12, debug-location !556; fft3d.c:73:12
  Ready @8c
  TopQ.A BotLatency SU(9) 2c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 11 5 
  TopQ.A RemainingLatency 0 + 9c > CritPath 8
  Cand SU(0) ORDER                              
  Cand SU(11) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(11) renamable $w10 = SBFMWri renamable $w10, 1, 31, debug-location !552; fft3d.c:71:12
  Ready @9c
  TopQ.A TopLatency SU(11) 6c
  TopQ.A BotLatency SU(11) 2c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 5 12 
  TopQ.A RemainingLatency 0 + 10c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $x8 = SUBXri $fp, 144, 0
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 5 
  TopQ.A RemainingLatency 0 + 11c > CritPath 8
  Cand SU(12) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $x9 = ADDXri $x9, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  Ready @11c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) STPWi renamable $w11, renamable $w10, $fp, -39, debug-location !557 :: (store 4 into %ir.li), (store 4 into %ir.n1); fft3d.c:73:8
  Ready @12c
  TopQ.A TopLatency SU(12) 7c
  TopQ.A BotLatency SU(12) 1c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) $w10 = MOVZWi 528, 0, implicit-def $x10
  Ready @13c
  TopQ.A BotLatency SU(13) 1c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(1):   renamable $w10 = LDURWi $fp, -48, debug-location !551 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
SU(3):   renamable $w12 = LDURWi $fp, -40, implicit-def $x12, debug-location !555 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
SU(2):   $w11 = MOVZWi 1, 0
SU(4):   $x9 = ADRP target-flags(aarch64-page) @scr
SU(8):   dead $wzr = SUBSWri renamable $w10, 0, 0, implicit-def $nzcv, debug-location !552; fft3d.c:71:12
SU(10):   renamable $w10 = CSINCWr renamable $w10, renamable $w10, 10, implicit $nzcv, debug-location !552; fft3d.c:71:12
SU(6):   STURWi renamable $w11, $fp, -160, debug-location !554 :: (store 4 into %ir.lj); fft3d.c:72:8
SU(7):   STURWi renamable $w11, $fp, -92, debug-location !558 :: (store 4 into %ir.l); fft3d.c:74:12
SU(9):   renamable $w11 = LSLVWr renamable $w11, renamable $w12, implicit $x12, debug-location !556; fft3d.c:73:12
SU(11):   renamable $w10 = SBFMWri renamable $w10, 1, 31, debug-location !552; fft3d.c:71:12
SU(0):   $x8 = SUBXri $fp, 144, 0
SU(5):   renamable $x9 = ADDXri $x9, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
SU(12):   STPWi renamable $w11, renamable $w10, $fp, -39, debug-location !557 :: (store 4 into %ir.li), (store 4 into %ir.n1); fft3d.c:73:8
SU(13):   $w10 = MOVZWi 528, 0, implicit-def $x10

Fixup kills for %bb.2
********** MI Scheduling **********
Swarztrauber:%bb.3 for.cond
  From: renamable $w11 = LDURWi $fp, -92, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
    To: Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -40, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.36, implicit $nzcv, debug-location !565; fft3d.c:74:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -92, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -40, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !565; fft3d.c:74:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !561 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
SU(1):   renamable $w12 = LDURWi $fp, -40, debug-location !563 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !565; fft3d.c:74:5

Fixup kills for %bb.3
********** MI Scheduling **********
Swarztrauber:%bb.4 for.body
  From: renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !566 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
    To: End RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !566 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
    SU(1): Data Latency=4 Reg=$w11
    SU(5): Data Latency=4 Reg=$w12
    SU(3): Data Latency=4 Reg=$w12
    SU(4): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
SU(1):   STURWi renamable $w11, $fp, -164, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Anti Latency=0
SU(2):   renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !570; fft3d.c:76:16
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
SU(3):   dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w12
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
SU(4):   STURWi renamable $w11, $fp, -160, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(5): Anti Latency=0
SU(5):   renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Data Latency=1 Reg=$nzcv
    SU(2): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w12
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w11
SU(6):   renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !573; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w11
  Successors:
    SU(8): Data Latency=1 Reg=$w11
    SU(7): Data Latency=1 Reg=$w11
SU(7):   STURWi renamable $w11, $fp, -156, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
SU(8):   STURWi renamable $w11, $fp, -168, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w11
SU(9):   STURWi $wzr, $fp, -84, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 9 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !566 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 3 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURWi $wzr, $fp, -84, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 3 
  TopQ.A RemainingLatency 0 + 4c > CritPath 7
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STURWi renamable $w11, $fp, -164, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 7
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !570; fft3d.c:76:16
  Ready @5c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 4 
  TopQ.A RemainingLatency 0 + 6c > CritPath 7
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
  Ready @6c
  TopQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STURWi renamable $w11, $fp, -160, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
  Ready @7c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
  Ready @8c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !573; fft3d.c:77:17
  Ready @9c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  TopQ.A RemainingLatency 0 + 10c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STURWi renamable $w11, $fp, -156, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
  Ready @10c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STURWi renamable $w11, $fp, -168, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !566 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
SU(9):   STURWi $wzr, $fp, -84, debug-location !577 :: (store 4 into %ir.i); fft3d.c:80:16
SU(1):   STURWi renamable $w11, $fp, -164, debug-location !568 :: (store 4 into %ir.lk); fft3d.c:75:12
SU(2):   renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !570; fft3d.c:76:16
SU(3):   dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !573; fft3d.c:77:17
SU(4):   STURWi renamable $w11, $fp, -160, debug-location !571 :: (store 4 into %ir.lj); fft3d.c:76:12
SU(5):   renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !573; fft3d.c:77:17
SU(6):   renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !573; fft3d.c:77:17
SU(7):   STURWi renamable $w11, $fp, -156, debug-location !574 :: (store 4 into %ir.li); fft3d.c:77:12
SU(8):   STURWi renamable $w11, $fp, -168, debug-location !576 :: (store 4 into %ir.ku); fft3d.c:78:12

Fixup kills for %bb.4
********** MI Scheduling **********
Swarztrauber:%bb.5 for.cond2
  From: renamable $w11 = LDURWi $fp, -156, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -156, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !583; fft3d.c:80:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(3): Data Latency=1 Reg=$w11
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !585; fft3d.c:80:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -156, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !583; fft3d.c:80:29
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !585; fft3d.c:80:9
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   renamable $w11 = LDURWi $fp, -156, debug-location !582 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !580 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !583; fft3d.c:80:29
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !585; fft3d.c:80:9

Fixup kills for %bb.5
********** MI Scheduling **********
Swarztrauber:%bb.6 for.body4
  From: renamable $w11 = LDURWi $fp, -84, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
    To: Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w11
    SU(4): Data Latency=4 Reg=$w11
SU(1):   renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !588 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:81:23
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(9): Data Latency=4 Reg=$w12
    SU(4): Data Latency=4 Reg=$w12
    SU(7): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w13
SU(2):   renamable $w14 = LDURWi $fp, -36, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=$w14
SU(3):   renamable $w15 = LDURWi $fp, -152, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(7): Data Latency=4 Reg=$w15
SU(4):   renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !589; fft3d.c:81:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(10): Data Latency=1 Reg=$w16
    SU(7): Data Latency=1 Reg=$w16
    SU(5): Anti Latency=0
SU(5):   renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !597; fft3d.c:83:21
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Data Latency=4 Reg=$w13
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w11
    SU(8): Data Latency=1 Reg=$w11
    SU(7): Anti Latency=0
SU(6):   dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w14
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !593; fft3d.c:82:23
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(5): Anti Latency=0
    SU(4): Data Latency=1 Reg=$w16
    SU(3): Data Latency=4 Reg=$w15
    SU(1): Out  Latency=1
  Successors:
    SU(10): Data Latency=1 Reg=$w13
SU(8):   STURWi renamable $w11, $fp, -180, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=$w11
  Successors:
    SU(9): Anti Latency=0
SU(9):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !601; fft3d.c:84:23
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    SU(11): Data Latency=1 Reg=$w11
SU(10):   STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !590 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:81:17
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=$w13
    SU(4): Data Latency=1 Reg=$w16
SU(11):   STURWi renamable $w11, $fp, -184, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=$w11
ExitSU:   Bcc 11, %bb.8, implicit $nzcv, debug-location !606; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -84, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 6
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !588 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:81:23
  Ready @1c
  TopQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 6
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w14 = LDURWi $fp, -36, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 6 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w15 = LDURWi $fp, -152, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  Ready @3c
  TopQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 6 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !589; fft3d.c:81:21
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 6
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !597; fft3d.c:83:21
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 8 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 6
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 6
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !593; fft3d.c:82:23
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 6
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) STURWi renamable $w11, $fp, -180, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
  Ready @9c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 6
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !601; fft3d.c:84:23
  Ready @10c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 6
  Cand SU(10) ORDER                              
Pick Top ORDER     
Scheduling SU(10) STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !590 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:81:17
  Ready @11c
  TopQ.A TopLatency SU(10) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w11, $fp, -184, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !586 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
SU(1):   renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !588 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:81:23
SU(2):   renamable $w14 = LDURWi $fp, -36, debug-location !603 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
SU(3):   renamable $w15 = LDURWi $fp, -152, debug-location !592 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
SU(4):   renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !589; fft3d.c:81:21
SU(5):   renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !597; fft3d.c:83:21
SU(6):   dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !606; fft3d.c:86:17
SU(7):   $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !593; fft3d.c:82:23
SU(8):   STURWi renamable $w11, $fp, -180, debug-location !598 :: (store 4 into %ir.i21); fft3d.c:83:17
SU(9):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !601; fft3d.c:84:23
SU(10):   STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !590 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:81:17
SU(11):   STURWi renamable $w11, $fp, -184, debug-location !602 :: (store 4 into %ir.i22); fft3d.c:84:17

Fixup kills for %bb.6
********** MI Scheduling **********
Swarztrauber:%bb.7 if.then9
  From: renamable $w11 = LDURWi $fp, -168, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
    To: B %bb.9
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=$x13
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !611; fft3d.c:87:34
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
    SU(4): Anti Latency=0
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !607; fft3d.c:87:22
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w11
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x13
    SU(0): Out  Latency=1
ExitSU:   B %bb.9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -168, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x13 = LDURXi $fp, -72, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !611; fft3d.c:87:34
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !607; fft3d.c:87:22
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !609 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !610 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !607 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:87:22
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !611; fft3d.c:87:34
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !607; fft3d.c:87:22

Fixup kills for %bb.7
********** MI Scheduling **********
Swarztrauber:%bb.8 if.else
  From: renamable $w11 = LDURWi $fp, -168, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
    To: End RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=$x13
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !613; fft3d.c:90:22
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
    SU(4): Anti Latency=0
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !613; fft3d.c:90:22
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w11
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x13
    SU(0): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x11
    SU(5): Data Latency=1 Reg=$x11
SU(5):   renamable $d0 = LDRDui renamable $x11, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x11
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
SU(6):   STURDi renamable $d0, $fp, -200, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=$d0
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Anti Latency=0
    SU(7): Ord  Latency=1 Memory
SU(7):   renamable $d0 = LDRDui renamable $x11, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Anti Latency=0
    SU(6): Ord  Latency=1 Memory
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x11
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !613; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$d0
  Successors:
    SU(9): Data Latency=1 Reg=$d0
SU(9):   STURDi renamable $d0, $fp, -192, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$d0
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(10):   $x11 = SUBXri $fp, 200, 0
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 1
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -168, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x13 = LDURXi $fp, -72, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !613; fft3d.c:90:22
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !613; fft3d.c:90:22
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $d0 = LDRDui renamable $x11, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 11 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STURDi renamable $d0, $fp, -200, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
  Ready @11c
  TopQ.A TopLatency SU(6) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 7
  Executed: 12c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $d0 = LDRDui renamable $x11, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
  Ready @12c
  TopQ.A TopLatency SU(7) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 8
  Executed: 13c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $x11 = SUBXri $fp, 200, 0
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 9
  Executed: 14c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 16 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $d0 = FNEGDr renamable $d0, debug-location !613; fft3d.c:90:22
  Ready @16c
  TopQ.A TopLatency SU(8) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 10
  Executed: 17c
  Critical: 10c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURDi renamable $d0, $fp, -192, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22
  Ready @17c
  TopQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 11
  Executed: 18c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !613 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !613 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !613 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:90:22
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !613; fft3d.c:90:22
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !613; fft3d.c:90:22
SU(5):   renamable $d0 = LDRDui renamable $x11, 0, debug-location !613 :: (load 8 from %ir.real145); fft3d.c:90:22
SU(6):   STURDi renamable $d0, $fp, -200, debug-location !613 :: (store 8 into %ir.real4); fft3d.c:90:22
SU(7):   renamable $d0 = LDRDui renamable $x11, 1, debug-location !613 :: (load 8 from %ir.imag18); fft3d.c:90:22
SU(10):   $x11 = SUBXri $fp, 200, 0
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !613; fft3d.c:90:22
SU(9):   STURDi renamable $d0, $fp, -192, debug-location !613 :: (store 8 into %ir.imag); fft3d.c:90:22

Fixup kills for %bb.8
********** MI Scheduling **********
Swarztrauber:%bb.9 if.end20
  From: renamable $q0 = LDRQui killed renamable $x11, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $q0 = LDRQui renamable $x11, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(2): Data Latency=4 Reg=$q0
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
SU(1):   STURWi $wzr, $fp, -148, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$q0
    SU(0): Ord  Latency=0 Memory
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $q0 = LDRQui renamable $x11, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi $wzr, $fp, -148, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRQui renamable $q0, renamable $x8, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   renamable $q0 = LDRQui renamable $x11, 0, debug-location !615 :: (load 16 from %ir.40, align 8); fft3d.c:0
SU(1):   STURWi $wzr, $fp, -148, debug-location !616 :: (store 4 into %ir.k); fft3d.c:92:20
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !615 :: (store 16 into %ir.39); fft3d.c:0

Fixup kills for %bb.9
********** MI Scheduling **********
Swarztrauber:%bb.10 for.cond21
  From: renamable $w11 = LDURWi $fp, -164, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
    To: Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -164, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !622; fft3d.c:92:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(3): Data Latency=1 Reg=$w11
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.15, implicit $nzcv, debug-location !624; fft3d.c:92:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -164, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -148, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !622; fft3d.c:92:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !624; fft3d.c:92:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   renamable $w11 = LDURWi $fp, -164, debug-location !621 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !619 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !622; fft3d.c:92:33
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !624; fft3d.c:92:13

Fixup kills for %bb.10
Fixup kills for %bb.11
********** MI Scheduling **********
Swarztrauber:%bb.12 for.cond25
  From: renamable $w11 = LDURWi $fp, -88, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
    To: Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.14, implicit $nzcv, debug-location !633; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -88, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -44, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !633; fft3d.c:93:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !629 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !631 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !633; fft3d.c:93:17

Fixup kills for %bb.12
********** MI Scheduling **********
Swarztrauber:%bb.13 for.body27
  From: renamable $x11 = LDURXi $fp, -80, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
    To: B %bb.12
 RegionInstrs: 53
ScheduleDAGMI::schedule starting
SU(0):   renamable $x11 = LDURXi $fp, -80, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 39
  Successors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=4 Reg=$x11
    SU(9): Data Latency=4 Reg=$x11
SU(1):   renamable $x15, renamable $x12 = LDPSWi $fp, -44, debug-location !636 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 41
  Successors:
    SU(11): Data Latency=4 Reg=$x15
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x12
SU(2):   renamable $x13 = LDURSWi $fp, -88, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 39
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$x13
    SU(52): Ord  Latency=0 Memory
SU(3):   renamable $x14 = LDURSWi $fp, -148, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 41
  Successors:
    SU(36): Out  Latency=1
    SU(35): Data Latency=4 Reg=$w14
    SU(35): Data Latency=0 Reg=$x14
    SU(11): Data Latency=4 Reg=$x14
    SU(6): Data Latency=4 Reg=$x14
SU(4):   renamable $w16 = LDURWi $fp, -148, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(39): Data Latency=4 Reg=$w16
SU(5):   renamable $x17 = LDURSWi $fp, -88, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(51): Data Latency=4 Reg=$x17
    SU(52): Ord  Latency=0 Memory
SU(6):   $x12 = ADDXrs renamable $x12, renamable $x14, 0, debug-location !638; fft3d.c:94:33
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 37
  Predecessors:
    SU(3): Data Latency=4 Reg=$x14
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x12
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x12
    SU(36): Anti Latency=0
SU(7):   renamable $x13 = UBFMXri renamable $x13, 60, 59, debug-location !648; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 35
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$x13
  Successors:
    SU(38): Data Latency=1 Reg=$x13
    SU(15): Data Latency=1 Reg=$x13
    SU(10): Data Latency=1 Reg=$x13
SU(8):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !634; fft3d.c:94:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 36
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x12
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x12
SU(9):   renamable $x12 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !634; fft3d.c:94:27
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 35
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x12
    SU(0): Data Latency=4 Reg=$x11
  Successors:
    SU(11): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x12
    SU(13): Anti Latency=0
SU(10):   renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 14
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 34
  Predecessors:
    SU(9): Data Latency=1 Reg=$x12
    SU(7): Data Latency=1 Reg=$x13
  Successors:
    SU(15): Out  Latency=1
    SU(14): Data Latency=4 Reg=$q0
    SU(11): Anti Latency=0
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
SU(11):   $x12 = ADDXrs renamable $x15, renamable $x14, 0, debug-location !643; fft3d.c:95:33
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 32
  Predecessors:
    SU(10): Anti Latency=0
    SU(9): Out  Latency=1
    SU(3): Data Latency=4 Reg=$x14
    SU(1): Data Latency=4 Reg=$x15
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x12
    SU(36): Anti Latency=0
SU(12):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !640; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 31
  Predecessors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$x12
  Successors:
    SU(26): Out  Latency=1
    SU(13): Data Latency=1 Reg=$x12
SU(13):   renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !640; fft3d.c:95:27
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 30
  Predecessors:
    SU(12): Data Latency=1 Reg=$x12
    SU(9): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x11
  Successors:
    SU(26): Out  Latency=1
    SU(37): Out  Latency=1
    SU(15): Data Latency=1 Reg=$x11
    SU(26): Anti Latency=0
SU(14):   STRQui renamable $q0, renamable $x8, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 30
  Predecessors:
    SU(10): Data Latency=4 Reg=$q0
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(15): Anti Latency=0
    SU(21): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
    SU(18): Ord  Latency=1 Memory
    SU(16): Ord  Latency=1 Memory
    SU(15): Ord  Latency=1 Memory
SU(15):   renamable $q0 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  # preds left       : 5
  # succs left       : 14
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 29
  Predecessors:
    SU(14): Anti Latency=0
    SU(14): Ord  Latency=1 Memory
    SU(13): Data Latency=1 Reg=$x11
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x13
  Successors:
    SU(18): Out  Latency=1
    SU(17): Data Latency=4 Reg=$q0
    SU(26): Anti Latency=0
    SU(37): Anti Latency=0
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
SU(16):   renamable $d2, renamable $d1 = LDPDi $fp, -16, debug-location !656 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 24
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(22): Out  Latency=1
    SU(22): Data Latency=4 Reg=$d2
    SU(29): Out  Latency=1
    SU(48): Out  Latency=1
    SU(28): Data Latency=4 Reg=$d1
SU(17):   STRQui renamable $q0, renamable $x8, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 25
  Predecessors:
    SU(15): Data Latency=4 Reg=$q0
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(18): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(18): Ord  Latency=1 Memory
SU(18):   renamable $d0, renamable $d3 = LDPDi $fp, -17, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 20
  Predecessors:
    SU(17): Anti Latency=0
    SU(17): Ord  Latency=1 Memory
    SU(15): Out  Latency=1
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(28): Out  Latency=1
    SU(28): Data Latency=4 Reg=$d0
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d3
SU(19):   renamable $d4, renamable $d7 = LDPDi $fp, -18, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 24
  Predecessors:
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(23): Out  Latency=1
    SU(22): Data Latency=4 Reg=$d4
    SU(24): Data Latency=4 Reg=$d7
SU(20):   renamable $d5 = LDURDi $fp, -120, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 17
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(24): Out  Latency=1
    SU(34): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d5
SU(21):   renamable $d6 = LDURDi $fp, -120, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 20
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(29): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d6
SU(22):   renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !650; fft3d.c:96:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 20
  Predecessors:
    SU(19): Data Latency=4 Reg=$d4
    SU(16): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d2
  Successors:
    SU(31): Out  Latency=1
    SU(30): Data Latency=1 Reg=$d2
    SU(23): Anti Latency=0
SU(23):   renamable $d16, renamable $d4 = LDPDi $fp, -18, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 21
  Height             : 20
  Predecessors:
    SU(22): Anti Latency=0
    SU(19): Out  Latency=1
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=$d16
    SU(27): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d4
SU(24):   renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !650; fft3d.c:96:39
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 13
  Predecessors:
    SU(19): Data Latency=4 Reg=$d7
    SU(20): Data Latency=4 Reg=$d5
    SU(20): Out  Latency=1
  Successors:
    SU(32): Out  Latency=1
    SU(34): Out  Latency=1
    SU(30): Data Latency=1 Reg=$d5
    SU(34): Anti Latency=0
SU(25):   renamable $d3 = FSUBDrr renamable $d3, renamable $d16, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 25
  Height             : 13
  Predecessors:
    SU(23): Data Latency=4 Reg=$d16
    SU(18): Out  Latency=1
    SU(18): Data Latency=4 Reg=$d3
  Successors:
    SU(50): Data Latency=1 Reg=$d3
    SU(49): Data Latency=1 Reg=$d3
    SU(45): Data Latency=1 Reg=$d3
    SU(43): Data Latency=1 Reg=$d3
    SU(42): Data Latency=1 Reg=$d3
    SU(31): Data Latency=1 Reg=$d3
SU(26):   renamable $w12, renamable $w11 = LDPWi $fp, -46, debug-location !645 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 13
  Predecessors:
    SU(15): Anti Latency=0
    SU(13): Out  Latency=1
    SU(13): Anti Latency=0
    SU(12): Out  Latency=1
  Successors:
    SU(40): Out  Latency=1
    SU(39): Data Latency=4 Reg=$w12
    SU(35): Out  Latency=1
    SU(37): Out  Latency=1
    SU(35): Data Latency=4 Reg=$w11
SU(27):   renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 25
  Height             : 16
  Predecessors:
    SU(23): Out  Latency=1
    SU(23): Data Latency=4 Reg=$d4
    SU(21): Data Latency=4 Reg=$d6
  Successors:
    SU(49): Data Latency=1 Reg=$d4
    SU(44): Data Latency=1 Reg=$d4
    SU(43): Data Latency=1 Reg=$d4
    SU(42): Data Latency=1 Reg=$d4
    SU(32): Data Latency=1 Reg=$d4
    SU(29): Anti Latency=0
SU(28):   renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 16
  Predecessors:
    SU(18): Out  Latency=1
    SU(18): Data Latency=4 Reg=$d0
    SU(16): Data Latency=4 Reg=$d1
  Successors:
    SU(50): Data Latency=1 Reg=$d0
    SU(29): Anti Latency=0
    SU(48): Anti Latency=0
SU(29):   renamable $d6, renamable $d1 = LDPDi $fp, -14, debug-location !656 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 25
  Height             : 16
  Predecessors:
    SU(28): Anti Latency=0
    SU(27): Anti Latency=0
    SU(21): Out  Latency=1
    SU(16): Out  Latency=1
  Successors:
    SU(44): Data Latency=4 Reg=$d6
    SU(31): Data Latency=4 Reg=$d6
    SU(45): Out  Latency=1
    SU(48): Out  Latency=1
    SU(45): Data Latency=4 Reg=$d1
    SU(32): Data Latency=4 Reg=$d1
SU(30):   STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !650 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 12
  Predecessors:
    SU(24): Data Latency=1 Reg=$d5
    SU(22): Data Latency=1 Reg=$d2
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(31): Anti Latency=0
    SU(32): Anti Latency=0
    SU(34): Anti Latency=0
    SU(34): Ord  Latency=1 Memory
SU(31):   renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !656; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 12
  Predecessors:
    SU(25): Data Latency=1 Reg=$d3
    SU(29): Data Latency=4 Reg=$d6
    SU(30): Anti Latency=0
    SU(22): Out  Latency=1
  Successors:
    SU(33): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d2
SU(32):   renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !656; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 12
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(29): Data Latency=4 Reg=$d1
    SU(30): Anti Latency=0
    SU(24): Out  Latency=1
  Successors:
    SU(34): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d5
    SU(45): Anti Latency=0
    SU(48): Anti Latency=0
SU(33):   renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 11
  Predecessors:
    SU(32): Data Latency=1 Reg=$d5
    SU(31): Out  Latency=1
    SU(31): Data Latency=1 Reg=$d2
  Successors:
    SU(47): Data Latency=1 Reg=$d2
    SU(34): Anti Latency=0
SU(34):   renamable $q5 = LDURQi $sp, 200, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  # preds left       : 7
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 11
  Predecessors:
    SU(33): Anti Latency=0
    SU(32): Out  Latency=1
    SU(30): Anti Latency=0
    SU(30): Ord  Latency=1 Memory
    SU(24): Out  Latency=1
    SU(24): Anti Latency=0
    SU(20): Out  Latency=1
  Successors:
    SU(44): Out  Latency=1
    SU(38): Data Latency=4 Reg=$q5
SU(35):   $w11 = ADDWrs renamable $w11, renamable $w14, 0, implicit $x14, debug-location !647; fft3d.c:96:29
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 9
  Predecessors:
    SU(26): Out  Latency=1
    SU(26): Data Latency=4 Reg=$w11
    SU(3): Data Latency=4 Reg=$w14
    SU(3): Data Latency=0 Reg=$x14
  Successors:
    SU(37): Out  Latency=1
    SU(37): Data Latency=1 Reg=$w11
    SU(37): Anti Latency=0
    SU(36): Anti Latency=0
SU(36):   renamable $w14 = LDURWi $fp, -88, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 16
  Height             : 5
  Predecessors:
    SU(35): Anti Latency=0
    SU(11): Anti Latency=0
    SU(6): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(40): Data Latency=4 Reg=$w14
    SU(52): Ord  Latency=0 Memory
SU(37):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !648; fft3d.c:96:21
  # preds left       : 6
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 17
  Height             : 8
  Predecessors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=1 Reg=$w11
    SU(35): Anti Latency=0
    SU(26): Out  Latency=1
    SU(15): Anti Latency=0
    SU(13): Out  Latency=1
  Successors:
    SU(39): Out  Latency=1
    SU(41): Out  Latency=1
    SU(38): Data Latency=1 Reg=$x11
SU(38):   STRQroX renamable $q5, renamable $x11, renamable $x13, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  # preds left       : 5
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 7
  Predecessors:
    SU(34): Data Latency=4 Reg=$q5
    SU(37): Data Latency=1 Reg=$x11
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(7): Data Latency=1 Reg=$x13
  Successors:
    SU(44): Anti Latency=0
    SU(39): Anti Latency=0
    SU(41): Anti Latency=0
    SU(51): Ord  Latency=0 Memory
SU(39):   $w11 = ADDWrs renamable $w12, renamable $w16, 0, debug-location !653; fft3d.c:97:29
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 2
  Predecessors:
    SU(38): Anti Latency=0
    SU(37): Out  Latency=1
    SU(26): Data Latency=4 Reg=$w12
    SU(4): Data Latency=4 Reg=$w16
  Successors:
    SU(41): Out  Latency=1
    SU(41): Data Latency=1 Reg=$w11
    SU(40): Anti Latency=0
SU(40):   renamable $w12 = nsw ADDWri renamable $w14, 1, 0, debug-location !657; fft3d.c:93:40
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 1
  Predecessors:
    SU(39): Anti Latency=0
    SU(36): Data Latency=4 Reg=$w14
    SU(26): Out  Latency=1
  Successors:
    SU(52): Data Latency=1 Reg=$w12
SU(41):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !654; fft3d.c:97:21
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 1
  Predecessors:
    SU(39): Out  Latency=1
    SU(39): Data Latency=1 Reg=$w11
    SU(38): Anti Latency=0
    SU(37): Out  Latency=1
  Successors:
    SU(51): Data Latency=1 Reg=$x11
SU(42):   STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !656 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(43):   STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !656 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(44):   renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 7
  Predecessors:
    SU(38): Anti Latency=0
    SU(34): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d6
    SU(27): Data Latency=1 Reg=$d4
  Successors:
    SU(46): Data Latency=1 Reg=$d5
SU(45):   renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !656; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 7
  Predecessors:
    SU(32): Anti Latency=0
    SU(29): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d1
    SU(25): Data Latency=1 Reg=$d3
  Successors:
    SU(46): Out  Latency=1
    SU(48): Out  Latency=1
    SU(46): Data Latency=1 Reg=$d1
    SU(48): Anti Latency=0
SU(46):   renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !656; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 6
  Predecessors:
    SU(44): Data Latency=1 Reg=$d5
    SU(45): Data Latency=1 Reg=$d1
    SU(45): Out  Latency=1
  Successors:
    SU(48): Out  Latency=1
    SU(47): Data Latency=1 Reg=$d1
    SU(48): Anti Latency=0
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !656 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 36
  Height             : 5
  Predecessors:
    SU(46): Data Latency=1 Reg=$d1
    SU(33): Data Latency=1 Reg=$d2
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(48): Anti Latency=0
    SU(48): Ord  Latency=1 Memory
SU(48):   renamable $q1 = LDURQi $sp, 184, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  # preds left       : 10
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 37
  Height             : 4
  Predecessors:
    SU(47): Anti Latency=0
    SU(47): Ord  Latency=1 Memory
    SU(46): Out  Latency=1
    SU(46): Anti Latency=0
    SU(45): Out  Latency=1
    SU(45): Anti Latency=0
    SU(32): Anti Latency=0
    SU(29): Out  Latency=1
    SU(28): Anti Latency=0
    SU(16): Out  Latency=1
  Successors:
    SU(51): Data Latency=4 Reg=$q1
SU(49):   STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !656 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(50):   STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !656 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(25): Data Latency=1 Reg=$d3
    SU(28): Data Latency=1 Reg=$d0
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(51):   STRQroX renamable $q1, renamable $x11, renamable $x17, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 41
  Height             : 0
  Predecessors:
    SU(48): Data Latency=4 Reg=$q1
    SU(41): Data Latency=1 Reg=$x11
    SU(38): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(5): Data Latency=4 Reg=$x17
SU(52):   STURWi renamable $w12, $fp, -88, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 0
  Predecessors:
    SU(40): Data Latency=1 Reg=$w12
    SU(36): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 41
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
  TopQ.A RemainingLatency 0 + 0c > CritPath 41
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  41 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x15, renamable $x12 = LDPSWi $fp, -44, debug-location !636 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  Ready @0c
  TopQ.A BotLatency SU(1) 41c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 5 2 3 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 41
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  41 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x14 = LDURSWi $fp, -148, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  Ready @1c
  TopQ.A BotLatency SU(3) 41c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 0 5 2 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 41
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x11 = LDURXi $fp, -80, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 4 5 2 
  TopQ.A RemainingLatency 0 + 3c > CritPath 41
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  39 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x13 = LDURSWi $fp, -88, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 7 
Queue TopQ.A: 4 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 41
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w16 = LDURWi $fp, -148, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(6) TOP-PATH                  37 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) $x12 = ADDXrs renamable $x12, renamable $x14, 0, debug-location !638; fft3d.c:94:33
  Ready @5c
  TopQ.A TopLatency SU(6) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 
Queue TopQ.A: 5 8 
  TopQ.A RemainingLatency 0 + 6c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(8) TOP-PATH                  36 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !634; fft3d.c:94:27
  Ready @6c
  TopQ.A TopLatency SU(8) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 9 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(9) TOP-PATH                  35 cycles 
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) renamable $x13 = UBFMXri renamable $x13, 60, 59, debug-location !648; fft3d.c:96:21
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(9) TOP-PATH                  35 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $x12 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !634; fft3d.c:94:27
  Ready @8c
  TopQ.A TopLatency SU(9) 6c
  TopQ.A BotLatency SU(9) 35c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(10) TOP-PATH                  34 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  Ready @9c
  TopQ.A TopLatency SU(10) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 11 
  TopQ.A RemainingLatency 0 + 10c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(11) TOP-PATH                  32 cycles 
Pick Top TOP-PATH  
Scheduling SU(11) $x12 = ADDXrs renamable $x15, renamable $x14, 0, debug-location !643; fft3d.c:95:33
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 12 
  TopQ.A RemainingLatency 0 + 11c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(12) TOP-PATH                  31 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !640; fft3d.c:95:27
  Ready @11c
  TopQ.A TopLatency SU(12) 8c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 13 
  TopQ.A RemainingLatency 0 + 12c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(13) TOP-PATH                  30 cycles 
Pick Top TOP-PATH  
Scheduling SU(13) renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !640; fft3d.c:95:27
  Ready @12c
  TopQ.A TopLatency SU(13) 9c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 14 
  TopQ.A RemainingLatency 0 + 13c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(14) TOP-PATH                  30 cycles 
Pick Top TOP-PATH  
Scheduling SU(14) STRQui renamable $q0, renamable $x8, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
  Ready @13c
  TopQ.A TopLatency SU(14) 11c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 21 20 16 15 
  TopQ.A RemainingLatency 0 + 14c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
  Cand SU(16) TOP-PATH                  24 cycles 
  Cand SU(15) TOP-PATH                  29 cycles 
Pick Top TOP-PATH  
Scheduling SU(15) renamable $q0 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  Ready @14c
  TopQ.A TopLatency SU(15) 12c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 21 20 16 26 
  TopQ.A RemainingLatency 0 + 15c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
  Cand SU(16) TOP-PATH                  24 cycles 
Pick Top TOP-PATH  
Scheduling SU(16) renamable $d2, renamable $d1 = LDPDi $fp, -16, debug-location !656 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 21 20 26 
  TopQ.A RemainingLatency 0 + 16c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(21) renamable $d6 = LDURDi $fp, -120, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 26 20 
  TopQ.A RemainingLatency 0 + 17c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(20) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(20) renamable $d5 = LDURDi $fp, -120, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 26 17 
  TopQ.A RemainingLatency 0 + 18c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(17) TOP-PATH                  25 cycles 
Pick Top TOP-PATH  
Scheduling SU(17) STRQui renamable $q0, renamable $x8, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
  Ready @18c
  TopQ.A TopLatency SU(17) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 26 19 18 
  TopQ.A RemainingLatency 0 + 19c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(19) TOP-PATH                  24 cycles 
Pick Top TOP-PATH  
Scheduling SU(19) renamable $d4, renamable $d7 = LDPDi $fp, -18, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  Ready @19c
  TopQ.A TopLatency SU(19) 17c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 
Queue TopQ.A: 5 26 18 
  TopQ.A RemainingLatency 0 + 20c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(18) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(18) renamable $d0, renamable $d3 = LDPDi $fp, -17, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 28 
Queue TopQ.A: 5 26 
  TopQ.A RemainingLatency 0 + 21c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(26) renamable $w12, renamable $w11 = LDPWi $fp, -46, debug-location !645 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 28 35 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $x17 = LDURSWi $fp, -88, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  Ready @22c
  *** Max MOps 1 at cycle 22
Cycle: 23 TopQ.A
TopQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 28 
Queue TopQ.A: 22 24 
  TopQ.A RemainingLatency 0 + 23c > CritPath 41
  Cand SU(22) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(22) renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !650; fft3d.c:96:39
  Ready @23c
  TopQ.A TopLatency SU(22) 21c
  *** Max MOps 1 at cycle 23
Cycle: 24 TopQ.A
TopQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 24 23 28 
  TopQ.A RemainingLatency 0 + 24c > CritPath 41
  Cand SU(24) ORDER                              
  Cand SU(23) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(23) renamable $d16, renamable $d4 = LDPDi $fp, -18, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  Ready @24c
  TopQ.A BotLatency SU(23) 20c
  *** Max MOps 1 at cycle 24
Cycle: 25 TopQ.A
TopQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 24 28 35 
  TopQ.A RemainingLatency 0 + 25c > CritPath 41
  Cand SU(24) ORDER                              
  Cand SU(28) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(28) renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !656; fft3d.c:97:39
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 TopQ.A
TopQ.A @26c
  Retired: 26
  Executed: 26c
  Critical: 26c, 26 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 24 35 
  TopQ.A RemainingLatency 0 + 26c > CritPath 41
  Cand SU(24) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(24) renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !650; fft3d.c:96:39
  Ready @26c
  *** Max MOps 1 at cycle 26
Cycle: 27 TopQ.A
TopQ.A @27c
  Retired: 27
  Executed: 27c
  Critical: 27c, 27 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 35 30 
  TopQ.A RemainingLatency 0 + 27c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(30) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(30) STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !650 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  Ready @27c
  TopQ.A TopLatency SU(30) 22c
  *** Max MOps 1 at cycle 27
Cycle: 28 TopQ.A
TopQ.A @28c
  Retired: 28
  Executed: 28c
  Critical: 28c, 28 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 35 27 25 
  TopQ.A RemainingLatency 0 + 28c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(27) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(27) renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
  Ready @28c
  TopQ.A TopLatency SU(27) 25c
  *** Max MOps 1 at cycle 28
Cycle: 29 TopQ.A
TopQ.A @29c
  Retired: 29
  Executed: 29c
  Critical: 29c, 29 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 35 25 29 
  TopQ.A RemainingLatency 0 + 29c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(25) TOP-PATH                  13 cycles 
  Cand SU(29) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(29) renamable $d6, renamable $d1 = LDPDi $fp, -14, debug-location !656 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  Ready @29c
  TopQ.A BotLatency SU(29) 16c
  *** Max MOps 1 at cycle 29
Cycle: 30 TopQ.A
TopQ.A @30c
  Retired: 30
  Executed: 30c
  Critical: 30c, 30 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 
Queue TopQ.A: 35 25 
  TopQ.A RemainingLatency 0 + 30c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(25) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(25) renamable $d3 = FSUBDrr renamable $d3, renamable $d16, debug-location !656; fft3d.c:97:39
  Ready @30c
  *** Max MOps 1 at cycle 30
Cycle: 31 TopQ.A
TopQ.A @31c
  Retired: 31
  Executed: 31c
  Critical: 31c, 31 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 31 
Queue TopQ.A: 35 50 49 43 42 
  TopQ.A RemainingLatency 0 + 31c > CritPath 41
  Cand SU(35) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(35) $w11 = ADDWrs renamable $w11, renamable $w14, 0, implicit $x14, debug-location !647; fft3d.c:96:29
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 TopQ.A
TopQ.A @32c
  Retired: 32
  Executed: 32c
  Critical: 32c, 32 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 31 
Queue TopQ.A: 42 50 49 43 37 36 
  TopQ.A RemainingLatency 0 + 32c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(37) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(37) renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !648; fft3d.c:96:21
  Ready @32c
  *** Max MOps 1 at cycle 32
Cycle: 33 TopQ.A
TopQ.A @33c
  Retired: 33
  Executed: 33c
  Critical: 33c, 33 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 32 31 
  TopQ.A RemainingLatency 0 + 33c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(32) TOP-PATH                  12 cycles 
  Cand SU(31) ORDER                              
Pick Top ORDER     
Scheduling SU(31) renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !656; fft3d.c:97:39
  Ready @33c
  TopQ.A TopLatency SU(31) 29c
  *** Max MOps 1 at cycle 33
Cycle: 34 TopQ.A
TopQ.A @34c
  Retired: 34
  Executed: 34c
  Critical: 34c, 34 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 32 
  TopQ.A RemainingLatency 0 + 34c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(32) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(32) renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !656; fft3d.c:97:39
  Ready @34c
  TopQ.A BotLatency SU(32) 12c
  *** Max MOps 1 at cycle 34
Cycle: 35 TopQ.A
TopQ.A @35c
  Retired: 35
  Executed: 35c
  Critical: 35c, 35 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 33 45 
  TopQ.A RemainingLatency 0 + 35c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(33) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(33) renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !656; fft3d.c:97:39
  Ready @35c
  TopQ.A TopLatency SU(33) 30c
  *** Max MOps 1 at cycle 35
Cycle: 36 TopQ.A
TopQ.A @36c
  Retired: 36
  Executed: 36c
  Critical: 36c, 36 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 45 34 
  TopQ.A RemainingLatency 0 + 36c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(45) TOP-PATH                  7 cycles 
  Cand SU(34) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(34) renamable $q5 = LDURQi $sp, 200, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  Ready @36c
  TopQ.A BotLatency SU(34) 11c
  *** Max MOps 1 at cycle 36
Cycle: 37 TopQ.A
TopQ.A @37c
  Retired: 37
  Executed: 37c
  Critical: 37c, 37 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 36 45 
  TopQ.A RemainingLatency 0 + 37c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(45) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(45) renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !656; fft3d.c:97:39
  Ready @37c
  *** Max MOps 1 at cycle 37
Cycle: 38 TopQ.A
TopQ.A @38c
  Retired: 38
  Executed: 38c
  Critical: 38c, 38 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 36 
  TopQ.A RemainingLatency 0 + 38c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(36) renamable $w14 = LDURWi $fp, -88, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 TopQ.A
TopQ.A @39c
  Retired: 39
  Executed: 39c
  Critical: 39c, 39 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 
  TopQ.A RemainingLatency 0 + 39c > CritPath 41
  Cand SU(42) ORDER                              
Pick Top ORDER     
Scheduling SU(42) STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !656 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  Ready @39c
  *** Max MOps 1 at cycle 39
Cycle: 40 TopQ.A
TopQ.A @40c
  Retired: 40
  Executed: 40c
  Critical: 40c, 40 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 38 
  TopQ.A RemainingLatency 0 + 40c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(38) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(38) STRQroX renamable $q5, renamable $x11, renamable $x13, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  Ready @40c
  TopQ.A TopLatency SU(38) 34c
  *** Max MOps 1 at cycle 40
Cycle: 41 TopQ.A
TopQ.A @41c
  Retired: 41
  Executed: 41c
  Critical: 41c, 41 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 44 39 
  TopQ.A RemainingLatency 0 + 41c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(44) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(44) renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
  Ready @41c
  TopQ.A BotLatency SU(44) 7c
  *** Max MOps 1 at cycle 41
Cycle: 42 TopQ.A
TopQ.A @42c
  Retired: 42
  Executed: 42c
  Critical: 42c, 42 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 46 
  TopQ.A RemainingLatency 0 + 42c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(46) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(46) renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !656; fft3d.c:97:39
  Ready @42c
  TopQ.A TopLatency SU(46) 35c
  *** Max MOps 1 at cycle 42
Cycle: 43 TopQ.A
TopQ.A @43c
  Retired: 43
  Executed: 43c
  Critical: 43c, 43 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 47 
  TopQ.A RemainingLatency 0 + 43c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(47) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(47) STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !656 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  Ready @43c
  TopQ.A TopLatency SU(47) 36c
  *** Max MOps 1 at cycle 43
Cycle: 44 TopQ.A
TopQ.A @44c
  Retired: 44
  Executed: 44c
  Critical: 44c, 44 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 48 
  TopQ.A RemainingLatency 0 + 44c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(48) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(48) renamable $q1 = LDURQi $sp, 184, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  Ready @44c
  TopQ.A TopLatency SU(48) 37c
  *** Max MOps 1 at cycle 44
Cycle: 45 TopQ.A
TopQ.A @45c
  Retired: 45
  Executed: 45c
  Critical: 45c, 45 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 
  TopQ.A RemainingLatency 0 + 45c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(39) $w11 = ADDWrs renamable $w12, renamable $w16, 0, debug-location !653; fft3d.c:97:29
  Ready @45c
  *** Max MOps 1 at cycle 45
Cycle: 46 TopQ.A
TopQ.A @46c
  Retired: 46
  Executed: 46c
  Critical: 46c, 46 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 41 40 
  TopQ.A RemainingLatency 0 + 46c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(41) TOP-PATH                  1 cycles 
  Cand SU(40) ORDER                              
Pick Top ORDER     
Scheduling SU(40) renamable $w12 = nsw ADDWri renamable $w14, 1, 0, debug-location !657; fft3d.c:93:40
  Ready @46c
  *** Max MOps 1 at cycle 46
Cycle: 47 TopQ.A
TopQ.A @47c
  Retired: 47
  Executed: 47c
  Critical: 47c, 47 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 41 52 
  TopQ.A RemainingLatency 0 + 47c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(41) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(41) renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !654; fft3d.c:97:21
  Ready @47c
  *** Max MOps 1 at cycle 47
Cycle: 48 TopQ.A
TopQ.A @48c
  Retired: 48
  Executed: 48c
  Critical: 48c, 48 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 52 51 
  TopQ.A RemainingLatency 0 + 48c > CritPath 41
  Cand SU(43) ORDER                              
Pick Top ORDER     
Scheduling SU(43) STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !656 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  Ready @48c
  *** Max MOps 1 at cycle 48
Cycle: 49 TopQ.A
TopQ.A @49c
  Retired: 49
  Executed: 49c
  Critical: 49c, 49 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 50 49 52 
  TopQ.A RemainingLatency 0 + 49c > CritPath 41
  Cand SU(51) ORDER                              
  Cand SU(50) ORDER                              
  Cand SU(49) ORDER                              
Pick Top ORDER     
Scheduling SU(49) STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !656 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  Ready @49c
  *** Max MOps 1 at cycle 49
Cycle: 50 TopQ.A
TopQ.A @50c
  Retired: 50
  Executed: 50c
  Critical: 50c, 50 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 50 52 
  TopQ.A RemainingLatency 0 + 50c > CritPath 41
  Cand SU(51) ORDER                              
  Cand SU(50) ORDER                              
Pick Top ORDER     
Scheduling SU(50) STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !656 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  Ready @50c
  *** Max MOps 1 at cycle 50
Cycle: 51 TopQ.A
TopQ.A @51c
  Retired: 51
  Executed: 51c
  Critical: 51c, 51 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 52 
  TopQ.A RemainingLatency 0 + 51c > CritPath 41
  Cand SU(51) ORDER                              
Pick Top ORDER     
Scheduling SU(51) STRQroX renamable $q1, renamable $x11, renamable $x17, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  Ready @51c
  TopQ.A TopLatency SU(51) 41c
  *** Max MOps 1 at cycle 51
Cycle: 52 TopQ.A
TopQ.A @52c
  Retired: 52
  Executed: 52c
  Critical: 52c, 52 MOps
  ExpectedLatency: 41c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 52 
Pick Top ONLY1     
Scheduling SU(52) STURWi renamable $w12, $fp, -88, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40
  Ready @52c
  *** Max MOps 1 at cycle 52
Cycle: 53 TopQ.A
TopQ.A @53c
  Retired: 53
  Executed: 53c
  Critical: 53c, 53 MOps
  ExpectedLatency: 41c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.13 ***
SU(1):   renamable $x15, renamable $x12 = LDPSWi $fp, -44, debug-location !636 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
SU(3):   renamable $x14 = LDURSWi $fp, -148, debug-location !637 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
SU(0):   renamable $x11 = LDURXi $fp, -80, debug-location !634 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
SU(2):   renamable $x13 = LDURSWi $fp, -88, debug-location !639 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
SU(4):   renamable $w16 = LDURWi $fp, -148, debug-location !652 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
SU(6):   $x12 = ADDXrs renamable $x12, renamable $x14, 0, debug-location !638; fft3d.c:94:33
SU(8):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !634; fft3d.c:94:27
SU(7):   renamable $x13 = UBFMXri renamable $x13, 60, 59, debug-location !648; fft3d.c:96:21
SU(9):   renamable $x12 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !634; fft3d.c:94:27
SU(10):   renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !634 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
SU(11):   $x12 = ADDXrs renamable $x15, renamable $x14, 0, debug-location !643; fft3d.c:95:33
SU(12):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !640; fft3d.c:95:27
SU(13):   renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !640; fft3d.c:95:27
SU(14):   STRQui renamable $q0, renamable $x8, 1, debug-location !634 :: (store 16 into %ir.50); fft3d.c:94:27
SU(15):   renamable $q0 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !640 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
SU(16):   renamable $d2, renamable $d1 = LDPDi $fp, -16, debug-location !656 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
SU(21):   renamable $d6 = LDURDi $fp, -120, debug-location !656 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
SU(20):   renamable $d5 = LDURDi $fp, -120, debug-location !650 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
SU(17):   STRQui renamable $q0, renamable $x8, 0, debug-location !640 :: (store 16 into %ir.57); fft3d.c:95:27
SU(19):   renamable $d4, renamable $d7 = LDPDi $fp, -18, debug-location !650 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
SU(18):   renamable $d0, renamable $d3 = LDPDi $fp, -17, debug-location !656 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
SU(26):   renamable $w12, renamable $w11 = LDPWi $fp, -46, debug-location !645 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
SU(5):   renamable $x17 = LDURSWi $fp, -88, debug-location !655 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
SU(22):   renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !650; fft3d.c:96:39
SU(23):   renamable $d16, renamable $d4 = LDPDi $fp, -18, debug-location !656 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
SU(28):   renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !656; fft3d.c:97:39
SU(24):   renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !650; fft3d.c:96:39
SU(30):   STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !650 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
SU(27):   renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
SU(29):   renamable $d6, renamable $d1 = LDPDi $fp, -14, debug-location !656 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
SU(25):   renamable $d3 = FSUBDrr renamable $d3, renamable $d16, debug-location !656; fft3d.c:97:39
SU(35):   $w11 = ADDWrs renamable $w11, renamable $w14, 0, implicit $x14, debug-location !647; fft3d.c:96:29
SU(37):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !648; fft3d.c:96:21
SU(31):   renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !656; fft3d.c:97:39
SU(32):   renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !656; fft3d.c:97:39
SU(33):   renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !656; fft3d.c:97:39
SU(34):   renamable $q5 = LDURQi $sp, 200, debug-location !650 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
SU(45):   renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !656; fft3d.c:97:39
SU(36):   renamable $w14 = LDURWi $fp, -88, debug-location !657 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
SU(42):   STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !656 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
SU(38):   STRQroX renamable $q5, renamable $x11, renamable $x13, 0, 0, debug-location !650 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
SU(44):   renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !656; fft3d.c:97:39
SU(46):   renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !656; fft3d.c:97:39
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !656 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
SU(48):   renamable $q1 = LDURQi $sp, 184, debug-location !656 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
SU(39):   $w11 = ADDWrs renamable $w12, renamable $w16, 0, debug-location !653; fft3d.c:97:29
SU(40):   renamable $w12 = nsw ADDWri renamable $w14, 1, 0, debug-location !657; fft3d.c:93:40
SU(41):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !654; fft3d.c:97:21
SU(43):   STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !656 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
SU(49):   STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !656 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
SU(50):   STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !656 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
SU(51):   STRQroX renamable $q1, renamable $x11, renamable $x17, 0, 1, debug-location !656 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
SU(52):   STURWi renamable $w12, $fp, -88, debug-location !657 :: (store 4 into %ir.j); fft3d.c:93:40

Fixup kills for %bb.13
********** MI Scheduling **********
Swarztrauber:%bb.14 for.inc110
  From: renamable $w11 = LDURWi $fp, -148, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
    To: B %bb.10
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !661; fft3d.c:92:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.10
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -148, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !661; fft3d.c:92:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -148, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !661 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !661; fft3d.c:92:39
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !661 :: (store 4 into %ir.k); fft3d.c:92:39

Fixup kills for %bb.14
********** MI Scheduling **********
Swarztrauber:%bb.15 for.inc113
  From: renamable $w11 = LDURWi $fp, -84, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
    To: B %bb.5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !665; fft3d.c:80:35
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -84, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -84, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !665; fft3d.c:80:35
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -84, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !665 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !665; fft3d.c:80:35
SU(2):   STURWi renamable $w11, $fp, -84, debug-location !665 :: (store 4 into %ir.i); fft3d.c:80:35

Fixup kills for %bb.15
********** MI Scheduling **********
Swarztrauber:%bb.16 for.end115
  From: renamable $w11 = LDURWi $fp, -92, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
    To: Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -40, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 1, %bb.23, implicit $nzcv, debug-location !673; fft3d.c:102:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -92, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -40, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !673; fft3d.c:102:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !669 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
SU(1):   renamable $w12 = LDURWi $fp, -40, debug-location !671 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !673; fft3d.c:102:13

Fixup kills for %bb.16
Fixup kills for %bb.17
********** MI Scheduling **********
Swarztrauber:%bb.18 for.cond118
  From: renamable $w11 = LDURWi $fp, -148, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -48, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !682; fft3d.c:103:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -148, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -48, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !682; fft3d.c:103:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !678 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
SU(1):   renamable $w12 = LDURWi $fp, -48, debug-location !680 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !682; fft3d.c:103:13

Fixup kills for %bb.18
Fixup kills for %bb.19
********** MI Scheduling **********
Swarztrauber:%bb.20 for.cond121
  From: renamable $w11 = LDURWi $fp, -88, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
    To: Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.22, implicit $nzcv, debug-location !691; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -88, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -44, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !691; fft3d.c:104:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !687 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !689 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !691; fft3d.c:104:17

Fixup kills for %bb.20
********** MI Scheduling **********
Swarztrauber:%bb.21 for.body123
  From: renamable $x11 = LDURSWi $fp, -88, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
    To: B %bb.20
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $x11 = LDURSWi $fp, -88, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$x11
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
SU(1):   renamable $x12 = LDURSWi $fp, -148, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x12
    SU(4): Data Latency=4 Reg=$x12
    SU(8): Ord  Latency=0 Memory
SU(2):   renamable $x13 = LDURXi $fp, -80, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(7): Data Latency=4 Reg=$x13
    SU(8): Ord  Latency=0 Memory
SU(3):   renamable $x11 = UBFMXri renamable $x11, 60, 59, debug-location !692; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x11
  Successors:
    SU(9): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x11
    SU(5): Data Latency=1 Reg=$x11
SU(4):   renamable $x14 = MADDXrrr renamable $x12, renamable $x10, renamable $x9, debug-location !697; fft3d.c:105:31
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(1): Data Latency=4 Reg=$x12
  Successors:
    SU(5): Data Latency=1 Reg=$x14
    SU(6): Anti Latency=0
SU(5):   renamable $q0 = LDRQroX renamable $x14, renamable $x11, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x14
    SU(3): Data Latency=1 Reg=$x11
  Successors:
    SU(8): Data Latency=4 Reg=$q0
    SU(9): Anti Latency=0
    SU(8): Ord  Latency=0 Memory
SU(6):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !692; fft3d.c:105:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x12
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x12
SU(7):   renamable $x12 = ADDXrs renamable $x13, renamable $x12, 4, debug-location !692; fft3d.c:105:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x12
    SU(2): Data Latency=4 Reg=$x13
  Successors:
    SU(8): Data Latency=1 Reg=$x12
SU(8):   STRQroX renamable $q0, renamable $x12, renamable $x11, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  # preds left       : 7
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 6
  Predecessors:
    SU(7): Data Latency=1 Reg=$x12
    SU(5): Data Latency=4 Reg=$q0
    SU(5): Ord  Latency=0 Memory
    SU(3): Data Latency=1 Reg=$x11
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(9): Anti Latency=0
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=1 Memory
SU(9):   renamable $w11 = LDURWi $fp, -88, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(8): Anti Latency=0
    SU(8): Ord  Latency=1 Memory
    SU(5): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w11
    SU(11): Ord  Latency=0 Memory
SU(10):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !699; fft3d.c:104:40
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 14
  Height             : 1
  Predecessors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=4 Reg=$w11
  Successors:
    SU(11): Data Latency=1 Reg=$w11
SU(11):   STURWi renamable $w11, $fp, -88, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=$w11
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 15
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 15
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x11 = LDURSWi $fp, -88, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  Ready @0c
  TopQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 15
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  15 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x12 = LDURSWi $fp, -148, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  Ready @1c
  TopQ.A BotLatency SU(1) 15c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x13 = LDURXi $fp, -80, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x11 = UBFMXri renamable $x11, 60, 59, debug-location !692; fft3d.c:105:21
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x14 = MADDXrrr renamable $x12, renamable $x10, renamable $x9, debug-location !697; fft3d.c:105:31
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 15
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) renamable $q0 = LDRQroX renamable $x14, renamable $x11, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  Ready @6c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !692; fft3d.c:105:21
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $x12 = ADDXrs renamable $x13, renamable $x12, 4, debug-location !692; fft3d.c:105:21
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 10 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRQroX renamable $q0, renamable $x12, renamable $x11, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  Ready @10c
  TopQ.A TopLatency SU(8) 9c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $w11 = LDURWi $fp, -88, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  Ready @11c
  TopQ.A TopLatency SU(9) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 15 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !699; fft3d.c:104:40
  Ready @15c
  TopQ.A TopLatency SU(10) 14c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 11
  Executed: 16c
  Critical: 11c, 11 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w11, $fp, -88, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40
  Ready @16c
  TopQ.A TopLatency SU(11) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 12
  Executed: 17c
  Critical: 12c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   renamable $x11 = LDURSWi $fp, -88, debug-location !695 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
SU(1):   renamable $x12 = LDURSWi $fp, -148, debug-location !694 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
SU(2):   renamable $x13 = LDURXi $fp, -80, debug-location !692 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
SU(3):   renamable $x11 = UBFMXri renamable $x11, 60, 59, debug-location !692; fft3d.c:105:21
SU(4):   renamable $x14 = MADDXrrr renamable $x12, renamable $x10, renamable $x9, debug-location !697; fft3d.c:105:31
SU(5):   renamable $q0 = LDRQroX renamable $x14, renamable $x11, 0, 0, debug-location !697 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
SU(6):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !692; fft3d.c:105:21
SU(7):   renamable $x12 = ADDXrs renamable $x13, renamable $x12, 4, debug-location !692; fft3d.c:105:21
SU(8):   STRQroX renamable $q0, renamable $x12, renamable $x11, 0, 0, debug-location !697 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
SU(9):   renamable $w11 = LDURWi $fp, -88, debug-location !699 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
SU(10):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !699; fft3d.c:104:40
SU(11):   STURWi renamable $w11, $fp, -88, debug-location !699 :: (store 4 into %ir.j); fft3d.c:104:40

Fixup kills for %bb.21
********** MI Scheduling **********
Swarztrauber:%bb.22 for.inc135
  From: renamable $w11 = LDURWi $fp, -148, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
    To: B %bb.18
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !703; fft3d.c:103:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.18
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -148, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !703; fft3d.c:103:33
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -148, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !703 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !703; fft3d.c:103:33
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !703 :: (store 4 into %ir.k); fft3d.c:103:33

Fixup kills for %bb.22
********** MI Scheduling **********
Swarztrauber:%bb.23 if.else138
  From: renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !707 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
    To: End RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !707 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
    SU(1): Data Latency=4 Reg=$w11
    SU(5): Data Latency=4 Reg=$w12
    SU(3): Data Latency=4 Reg=$w12
    SU(4): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
SU(1):   STURWi renamable $w11, $fp, -164, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Anti Latency=0
SU(2):   renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !711; fft3d.c:111:20
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
SU(3):   dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w12
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
SU(4):   STURWi renamable $w11, $fp, -160, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(5): Anti Latency=0
SU(5):   renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Data Latency=1 Reg=$nzcv
    SU(2): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w12
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w11
SU(6):   renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !714; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w11
  Successors:
    SU(8): Data Latency=1 Reg=$w11
    SU(7): Data Latency=1 Reg=$w11
SU(7):   STURWi renamable $w11, $fp, -156, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
SU(8):   STURWi renamable $w11, $fp, -168, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w11
SU(9):   STURWi $wzr, $fp, -84, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 9 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !707 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 3 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURWi $wzr, $fp, -84, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 3 
  TopQ.A RemainingLatency 0 + 4c > CritPath 7
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STURWi renamable $w11, $fp, -164, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 7
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !711; fft3d.c:111:20
  Ready @5c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 4 
  TopQ.A RemainingLatency 0 + 6c > CritPath 7
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
  Ready @6c
  TopQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STURWi renamable $w11, $fp, -160, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
  Ready @7c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
  Ready @8c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !714; fft3d.c:112:21
  Ready @9c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  TopQ.A RemainingLatency 0 + 10c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STURWi renamable $w11, $fp, -156, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
  Ready @10c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STURWi renamable $w11, $fp, -168, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   renamable $w11, renamable $w12 = LDPWi $fp, -40, debug-location !707 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
SU(9):   STURWi $wzr, $fp, -84, debug-location !718 :: (store 4 into %ir.i); fft3d.c:115:20
SU(1):   STURWi renamable $w11, $fp, -164, debug-location !709 :: (store 4 into %ir.lk); fft3d.c:110:16
SU(2):   renamable $w11 = UBFMWri renamable $w11, 31, 30, debug-location !711; fft3d.c:111:20
SU(3):   dead $wzr = SUBSWri renamable $w12, 0, 0, implicit-def $nzcv, debug-location !714; fft3d.c:112:21
SU(4):   STURWi renamable $w11, $fp, -160, debug-location !712 :: (store 4 into %ir.lj); fft3d.c:111:16
SU(5):   renamable $w11 = CSINCWr renamable $w12, renamable $w12, 10, implicit $nzcv, debug-location !714; fft3d.c:112:21
SU(6):   renamable $w11 = SBFMWri renamable $w11, 1, 31, debug-location !714; fft3d.c:112:21
SU(7):   STURWi renamable $w11, $fp, -156, debug-location !715 :: (store 4 into %ir.li); fft3d.c:112:16
SU(8):   STURWi renamable $w11, $fp, -168, debug-location !717 :: (store 4 into %ir.ku); fft3d.c:113:16

Fixup kills for %bb.23
********** MI Scheduling **********
Swarztrauber:%bb.24 for.cond141
  From: renamable $w11 = LDURWi $fp, -156, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
    To: Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -156, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !724; fft3d.c:115:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(3): Data Latency=1 Reg=$w11
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.35, implicit $nzcv, debug-location !726; fft3d.c:115:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -156, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !724; fft3d.c:115:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !726; fft3d.c:115:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   renamable $w11 = LDURWi $fp, -156, debug-location !723 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !721 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !724; fft3d.c:115:33
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !726; fft3d.c:115:13

Fixup kills for %bb.24
********** MI Scheduling **********
Swarztrauber:%bb.25 for.body144
  From: renamable $w11 = LDURWi $fp, -84, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
    To: Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w11
    SU(4): Data Latency=4 Reg=$w11
SU(1):   renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !729 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:116:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(9): Data Latency=4 Reg=$w12
    SU(4): Data Latency=4 Reg=$w12
    SU(7): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w13
SU(2):   renamable $w14 = LDURWi $fp, -36, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=$w14
SU(3):   renamable $w15 = LDURWi $fp, -152, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(7): Data Latency=4 Reg=$w15
SU(4):   renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !730; fft3d.c:116:25
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(10): Data Latency=1 Reg=$w16
    SU(7): Data Latency=1 Reg=$w16
    SU(5): Anti Latency=0
SU(5):   renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !738; fft3d.c:118:25
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Data Latency=4 Reg=$w13
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w11
    SU(8): Data Latency=1 Reg=$w11
    SU(7): Anti Latency=0
SU(6):   dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w14
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !734; fft3d.c:117:27
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(5): Anti Latency=0
    SU(4): Data Latency=1 Reg=$w16
    SU(3): Data Latency=4 Reg=$w15
    SU(1): Out  Latency=1
  Successors:
    SU(10): Data Latency=1 Reg=$w13
SU(8):   STURWi renamable $w11, $fp, -180, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=$w11
  Successors:
    SU(9): Anti Latency=0
SU(9):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !742; fft3d.c:119:27
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    SU(11): Data Latency=1 Reg=$w11
SU(10):   STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !731 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:116:21
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=$w13
    SU(4): Data Latency=1 Reg=$w16
SU(11):   STURWi renamable $w11, $fp, -184, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=$w11
ExitSU:   Bcc 11, %bb.27, implicit $nzcv, debug-location !747; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -84, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 6
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !729 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:116:27
  Ready @1c
  TopQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 6
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w14 = LDURWi $fp, -36, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 6 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w15 = LDURWi $fp, -152, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  Ready @3c
  TopQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 6 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !730; fft3d.c:116:25
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 6
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !738; fft3d.c:118:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 8 7 
  TopQ.A RemainingLatency 0 + 7c > CritPath 6
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 6
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !734; fft3d.c:117:27
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  TopQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 6
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) STURWi renamable $w11, $fp, -180, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
  Ready @9c
  TopQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 6
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !742; fft3d.c:119:27
  Ready @10c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 6
  Cand SU(10) ORDER                              
Pick Top ORDER     
Scheduling SU(10) STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !731 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:116:21
  Ready @11c
  TopQ.A TopLatency SU(10) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w11, $fp, -184, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !727 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
SU(1):   renamable $w12, renamable $w13 = LDPWi $fp, -41, debug-location !729 :: (dereferenceable load 4 from %ir.lk), (dereferenceable load 4 from %ir.lj); fft3d.c:116:27
SU(2):   renamable $w14 = LDURWi $fp, -36, debug-location !744 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
SU(3):   renamable $w15 = LDURWi $fp, -152, debug-location !733 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
SU(4):   renamable $w16 = nsw MADDWrrr renamable $w11, renamable $w12, $wzr, debug-location !730; fft3d.c:116:25
SU(5):   renamable $w11 = nsw MADDWrrr renamable $w11, renamable $w13, $wzr, debug-location !738; fft3d.c:118:25
SU(6):   dead $wzr = SUBSWri renamable $w14, 1, 0, implicit-def $nzcv, debug-location !747; fft3d.c:121:21
SU(7):   $w13 = ADDWrs renamable $w16, renamable $w15, 0, debug-location !734; fft3d.c:117:27
SU(8):   STURWi renamable $w11, $fp, -180, debug-location !739 :: (store 4 into %ir.i21); fft3d.c:118:21
SU(9):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !742; fft3d.c:119:27
SU(10):   STPWi renamable $w13, renamable $w16, $fp, -44, debug-location !731 :: (store 4 into %ir.i11), (store 4 into %ir.i12); fft3d.c:116:21
SU(11):   STURWi renamable $w11, $fp, -184, debug-location !743 :: (store 4 into %ir.i22); fft3d.c:119:21

Fixup kills for %bb.25
********** MI Scheduling **********
Swarztrauber:%bb.26 if.then150
  From: renamable $w11 = LDURWi $fp, -168, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
    To: B %bb.28
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=$x13
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !752; fft3d.c:122:38
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
    SU(4): Anti Latency=0
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !748; fft3d.c:122:26
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w11
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x13
    SU(0): Out  Latency=1
ExitSU:   B %bb.28
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -168, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x13 = LDURXi $fp, -72, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !752; fft3d.c:122:38
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !748; fft3d.c:122:26
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !750 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !751 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !748 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:122:26
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !752; fft3d.c:122:38
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !748; fft3d.c:122:26

Fixup kills for %bb.26
********** MI Scheduling **********
Swarztrauber:%bb.27 if.else154
  From: renamable $w11 = LDURWi $fp, -168, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
    To: End RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=$x13
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !754; fft3d.c:125:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
    SU(4): Anti Latency=0
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !754; fft3d.c:125:26
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w11
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x13
    SU(0): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x11
    SU(5): Data Latency=1 Reg=$x11
SU(5):   renamable $d0 = LDRDui renamable $x11, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x11
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
SU(6):   STRDui renamable $d0, $sp, 13, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=$d0
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Anti Latency=0
    SU(7): Ord  Latency=1 Memory
SU(7):   renamable $d0 = LDRDui renamable $x11, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Anti Latency=0
    SU(6): Ord  Latency=1 Memory
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x11
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !754; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$d0
  Successors:
    SU(9): Data Latency=1 Reg=$d0
SU(9):   STRDui renamable $d0, $sp, 14, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$d0
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(10):   $x11 = ADDXri $sp, 104, 0
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 1
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -168, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12 = LDURWi $fp, -84, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x13 = LDURXi $fp, -72, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !754; fft3d.c:125:26
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !754; fft3d.c:125:26
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $d0 = LDRDui renamable $x11, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 11 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRDui renamable $d0, $sp, 13, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
  Ready @11c
  TopQ.A TopLatency SU(6) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 7
  Executed: 12c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $d0 = LDRDui renamable $x11, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
  Ready @12c
  TopQ.A TopLatency SU(7) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 8
  Executed: 13c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $x11 = ADDXri $sp, 104, 0
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 9
  Executed: 14c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 16 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $d0 = FNEGDr renamable $d0, debug-location !754; fft3d.c:125:26
  Ready @16c
  TopQ.A TopLatency SU(8) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 10
  Executed: 17c
  Critical: 10c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STRDui renamable $d0, $sp, 14, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26
  Ready @17c
  TopQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 11
  Executed: 18c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.27 ***
SU(0):   renamable $w11 = LDURWi $fp, -168, debug-location !754 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
SU(1):   renamable $w12 = LDURWi $fp, -84, debug-location !754 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
SU(2):   renamable $x13 = LDURXi $fp, -72, debug-location !754 :: (dereferenceable load 8 from %ir.exponent.addr); fft3d.c:125:26
SU(3):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !754; fft3d.c:125:26
SU(4):   renamable $x11 = ADDXrx renamable $x13, renamable $w11, 52, debug-location !754; fft3d.c:125:26
SU(5):   renamable $d0 = LDRDui renamable $x11, 0, debug-location !754 :: (load 8 from %ir.real16032); fft3d.c:125:26
SU(6):   STRDui renamable $d0, $sp, 13, debug-location !754 :: (store 8 into %ir.real15630); fft3d.c:125:26
SU(7):   renamable $d0 = LDRDui renamable $x11, 1, debug-location !754 :: (load 8 from %ir.imag165); fft3d.c:125:26
SU(10):   $x11 = ADDXri $sp, 104, 0
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !754; fft3d.c:125:26
SU(9):   STRDui renamable $d0, $sp, 14, debug-location !754 :: (store 8 into %ir.imag161); fft3d.c:125:26

Fixup kills for %bb.27
********** MI Scheduling **********
Swarztrauber:%bb.28 if.end167
  From: renamable $q0 = LDRQui killed renamable $x11, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $q0 = LDRQui renamable $x11, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(2): Data Latency=4 Reg=$q0
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
SU(1):   STURWi $wzr, $fp, -148, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$q0
    SU(0): Ord  Latency=0 Memory
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $q0 = LDRQui renamable $x11, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi $wzr, $fp, -148, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRQui renamable $q0, renamable $x8, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   renamable $q0 = LDRQui renamable $x11, 0, debug-location !756 :: (load 16 from %ir.143, align 8); fft3d.c:0
SU(1):   STURWi $wzr, $fp, -148, debug-location !757 :: (store 4 into %ir.k); fft3d.c:127:24
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !756 :: (store 16 into %ir.142); fft3d.c:0

Fixup kills for %bb.28
********** MI Scheduling **********
Swarztrauber:%bb.29 for.cond168
  From: renamable $w11 = LDURWi $fp, -164, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
    To: Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -164, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w12
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !763; fft3d.c:127:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(3): Data Latency=1 Reg=$w11
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w11
    SU(1): Data Latency=4 Reg=$w12
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.34, implicit $nzcv, debug-location !765; fft3d.c:127:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w11 = LDURWi $fp, -164, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -148, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !763; fft3d.c:127:37
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !765; fft3d.c:127:17
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   renamable $w11 = LDURWi $fp, -164, debug-location !762 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !760 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
SU(2):   renamable $w11 = SUBWri renamable $w11, 1, 0, debug-location !763; fft3d.c:127:37
SU(3):   $wzr = SUBSWrs renamable $w12, renamable $w11, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !765; fft3d.c:127:17

Fixup kills for %bb.29
Fixup kills for %bb.30
********** MI Scheduling **********
Swarztrauber:%bb.31 for.cond172
  From: renamable $w11 = LDURWi $fp, -88, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
    To: Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w11
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w12
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.33, implicit $nzcv, debug-location !774; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -88, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w12 = LDURWi $fp, -44, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !774; fft3d.c:128:21
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   renamable $w11 = LDURWi $fp, -88, debug-location !770 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
SU(1):   renamable $w12 = LDURWi $fp, -44, debug-location !772 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
SU(2):   $wzr = SUBSWrs renamable $w11, renamable $w12, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !774; fft3d.c:128:21

Fixup kills for %bb.31
********** MI Scheduling **********
Swarztrauber:%bb.32 for.body174
  From: renamable $w13, renamable $w11 = LDPWi $fp, -44, debug-location !775 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
    To: B %bb.31
 RegionInstrs: 58
ScheduleDAGMI::schedule starting
SU(0):   renamable $w13, renamable $w11 = LDPWi $fp, -44, debug-location !775 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 44
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w13
    SU(4): Out  Latency=1
    SU(7): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w11
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 44
  Successors:
    SU(5): Out  Latency=1
    SU(8): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w12
    SU(4): Data Latency=4 Reg=$w12
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(2):   renamable $x14 = LDURSWi $fp, -88, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 43
  Successors:
    SU(44): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x14
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(3):   renamable $x15 = LDURSWi $fp, -148, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 30
  Successors:
    SU(20): Data Latency=4 Reg=$x15
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(4):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !778; fft3d.c:129:39
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 40
  Predecessors:
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w11
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(8): Anti Latency=0
SU(5):   $w12 = ADDWrs renamable $w13, renamable $w12, 0, debug-location !783; fft3d.c:130:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 40
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w12
    SU(0): Data Latency=4 Reg=$w13
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w12
    SU(6): Anti Latency=0
    SU(8): Anti Latency=0
SU(6):   renamable $x13 = UBFMXri renamable $x14, 60, 59, debug-location !786; fft3d.c:131:25
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 39
  Predecessors:
    SU(5): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x14
    SU(0): Out  Latency=1
  Successors:
    SU(43): Out  Latency=1
    SU(23): Data Latency=1 Reg=$x13
    SU(10): Data Latency=1 Reg=$x13
    SU(9): Data Latency=1 Reg=$x13
    SU(44): Anti Latency=0
SU(7):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !779; fft3d.c:129:31
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 39
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w11
    SU(4): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(14): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x11
SU(8):   renamable $x12 = SMADDLrrr renamable $w12, renamable $w10, renamable $x9, debug-location !784; fft3d.c:130:31
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 39
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w12
    SU(5): Anti Latency=0
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(15): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x12
SU(9):   renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 38
  Predecessors:
    SU(8): Data Latency=1 Reg=$x12
    SU(6): Data Latency=1 Reg=$x13
  Successors:
    SU(12): Out  Latency=1
    SU(19): Out  Latency=1
    SU(11): Data Latency=4 Reg=$q0
    SU(15): Anti Latency=0
    SU(43): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(10):   renamable $q1 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 38
  Predecessors:
    SU(7): Data Latency=1 Reg=$x11
    SU(6): Data Latency=1 Reg=$x13
  Successors:
    SU(12): Out  Latency=1
    SU(11): Data Latency=4 Reg=$q1
    SU(14): Anti Latency=0
    SU(43): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(11):   STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !784 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 12
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 34
  Predecessors:
    SU(10): Data Latency=4 Reg=$q1
    SU(9): Data Latency=4 Reg=$q0
  Successors:
    SU(12): Anti Latency=0
    SU(19): Anti Latency=0
    SU(12): Anti Latency=0
    SU(28): Ord  Latency=1 Memory
    SU(27): Ord  Latency=1 Memory
    SU(25): Ord  Latency=1 Memory
    SU(13): Ord  Latency=1 Memory
    SU(26): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(12):   renamable $d1, renamable $d0 = LDPDi $fp, -16, debug-location !791 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  # preds left       : 5
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 33
  Predecessors:
    SU(11): Anti Latency=0
    SU(11): Anti Latency=0
    SU(11): Ord  Latency=1 Memory
    SU(10): Out  Latency=1
    SU(9): Out  Latency=1
  Successors:
    SU(16): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d1
    SU(17): Out  Latency=1
    SU(19): Out  Latency=1
    SU(17): Data Latency=4 Reg=$d0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(13):   renamable $d2, renamable $d3 = LDPDi $fp, -18, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 33
  Predecessors:
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(25): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d2
    SU(26): Out  Latency=1
    SU(17): Data Latency=4 Reg=$d3
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(14):   renamable $x11 = LDURXi $fp, -80, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 28
  Predecessors:
    SU(10): Anti Latency=0
    SU(7): Out  Latency=1
  Successors:
    SU(22): Out  Latency=1
    SU(22): Data Latency=4 Reg=$x11
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(15):   renamable $x12 = LDURSWi $fp, -180, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 30
  Predecessors:
    SU(9): Anti Latency=0
    SU(8): Out  Latency=1
  Successors:
    SU(20): Out  Latency=1
    SU(20): Data Latency=4 Reg=$x12
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(16):   renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !791; fft3d.c:131:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 29
  Predecessors:
    SU(13): Data Latency=4 Reg=$d2
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$d1
  Successors:
    SU(25): Out  Latency=1
    SU(18): Data Latency=1 Reg=$d1
    SU(25): Anti Latency=0
SU(17):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !791; fft3d.c:131:41
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 29
  Predecessors:
    SU(13): Data Latency=4 Reg=$d3
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$d0
  Successors:
    SU(19): Out  Latency=1
    SU(18): Data Latency=1 Reg=$d0
    SU(19): Anti Latency=0
    SU(26): Anti Latency=0
SU(18):   STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !791 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 28
  Predecessors:
    SU(17): Data Latency=1 Reg=$d0
    SU(16): Data Latency=1 Reg=$d1
  Successors:
    SU(25): Anti Latency=0
    SU(19): Anti Latency=0
    SU(19): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(19):   renamable $q0 = LDURQi $sp, 88, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  # preds left       : 7
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 27
  Predecessors:
    SU(18): Anti Latency=0
    SU(18): Ord  Latency=1 Memory
    SU(17): Out  Latency=1
    SU(17): Anti Latency=0
    SU(12): Out  Latency=1
    SU(11): Anti Latency=0
    SU(9): Out  Latency=1
  Successors:
    SU(24): Out  Latency=1
    SU(51): Out  Latency=1
    SU(23): Data Latency=4 Reg=$q0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(20):   $x12 = ADDXrs renamable $x12, renamable $x15, 0, debug-location !789; fft3d.c:131:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 26
  Predecessors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=4 Reg=$x12
    SU(3): Data Latency=4 Reg=$x15
  Successors:
    SU(21): Out  Latency=1
    SU(21): Data Latency=1 Reg=$x12
SU(21):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !786; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 25
  Predecessors:
    SU(20): Out  Latency=1
    SU(20): Data Latency=1 Reg=$x12
  Successors:
    SU(41): Out  Latency=1
    SU(22): Data Latency=1 Reg=$x12
SU(22):   renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !786; fft3d.c:131:25
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 24
  Predecessors:
    SU(21): Data Latency=1 Reg=$x12
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$x11
  Successors:
    SU(40): Out  Latency=1
    SU(23): Data Latency=1 Reg=$x11
    SU(41): Anti Latency=0
SU(23):   STRQroX renamable $q0, renamable $x11, renamable $x13, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  # preds left       : 16
  # succs left       : 24
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 23
  Predecessors:
    SU(19): Data Latency=4 Reg=$q0
    SU(22): Data Latency=1 Reg=$x11
    SU(19): Ord  Latency=0 Memory
    SU(18): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(6): Data Latency=1 Reg=$x13
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(24): Anti Latency=0
    SU(51): Anti Latency=0
    SU(40): Anti Latency=0
    SU(43): Anti Latency=0
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(55): Ord  Latency=1 Memory
    SU(44): Ord  Latency=1 Memory
    SU(51): Ord  Latency=1 Memory
    SU(43): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(32): Ord  Latency=1 Memory
    SU(31): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
    SU(27): Ord  Latency=1 Memory
    SU(25): Ord  Latency=1 Memory
    SU(26): Ord  Latency=1 Memory
SU(24):   renamable $d6, renamable $d0 = LDPDi $fp, -15, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 21
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(32): Out  Latency=1
    SU(30): Data Latency=4 Reg=$d6
    SU(37): Out  Latency=1
    SU(51): Out  Latency=1
    SU(37): Data Latency=4 Reg=$d0
    SU(34): Data Latency=4 Reg=$d0
    SU(54): Ord  Latency=0 Memory
SU(25):   renamable $d1, renamable $d2 = LDPDi $fp, -17, debug-location !797 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  # preds left       : 6
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 22
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(18): Anti Latency=0
    SU(16): Out  Latency=1
    SU(16): Anti Latency=0
    SU(13): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(30): Out  Latency=1
    SU(30): Data Latency=4 Reg=$d1
    SU(29): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d2
    SU(54): Ord  Latency=0 Memory
SU(26):   renamable $d3, renamable $d7 = LDPDi $fp, -16, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(17): Anti Latency=0
    SU(13): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(33): Out  Latency=1
    SU(33): Data Latency=4 Reg=$d3
    SU(52): Data Latency=4 Reg=$d7
    SU(54): Ord  Latency=0 Memory
SU(27):   renamable $d4, renamable $d16 = LDPDi $fp, -18, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 22
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(31): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d4
    SU(52): Data Latency=4 Reg=$d16
    SU(54): Ord  Latency=0 Memory
SU(28):   renamable $d5 = LDURDi $fp, -144, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(34): Out  Latency=1
    SU(33): Data Latency=4 Reg=$d5
    SU(54): Ord  Latency=0 Memory
SU(29):   renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Data Latency=4 Reg=$d4
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d2
  Successors:
    SU(50): Data Latency=1 Reg=$d2
    SU(48): Data Latency=1 Reg=$d2
    SU(47): Data Latency=1 Reg=$d2
    SU(34): Data Latency=1 Reg=$d2
    SU(31): Anti Latency=0
SU(30):   renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 17
  Predecessors:
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d1
    SU(24): Data Latency=4 Reg=$d6
  Successors:
    SU(52): Out  Latency=1
    SU(50): Data Latency=1 Reg=$d1
    SU(48): Data Latency=1 Reg=$d1
    SU(47): Data Latency=1 Reg=$d1
    SU(37): Data Latency=1 Reg=$d1
    SU(35): Data Latency=1 Reg=$d1
    SU(32): Anti Latency=0
SU(31):   renamable $d4 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(29): Anti Latency=0
    SU(27): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=4 Reg=$d4
    SU(54): Ord  Latency=0 Memory
SU(32):   renamable $d6 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 17
  Predecessors:
    SU(30): Anti Latency=0
    SU(24): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(38): Data Latency=4 Reg=$d6
    SU(54): Ord  Latency=0 Memory
SU(33):   renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(28): Data Latency=4 Reg=$d5
    SU(26): Out  Latency=1
    SU(26): Data Latency=4 Reg=$d3
  Successors:
    SU(53): Data Latency=1 Reg=$d3
    SU(38): Data Latency=1 Reg=$d3
    SU(34): Anti Latency=0
SU(34):   renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !797; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 14
  Predecessors:
    SU(33): Anti Latency=0
    SU(29): Data Latency=1 Reg=$d2
    SU(28): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d0
  Successors:
    SU(38): Out  Latency=1
    SU(36): Data Latency=1 Reg=$d5
    SU(37): Anti Latency=0
    SU(51): Anti Latency=0
SU(35):   renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(31): Out  Latency=1
    SU(31): Data Latency=4 Reg=$d4
    SU(30): Data Latency=1 Reg=$d1
  Successors:
    SU(36): Out  Latency=1
    SU(36): Data Latency=1 Reg=$d4
    SU(52): Anti Latency=0
SU(36):   renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 13
  Predecessors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=1 Reg=$d4
    SU(34): Data Latency=1 Reg=$d5
  Successors:
    SU(42): Data Latency=1 Reg=$d4
    SU(38): Anti Latency=0
SU(37):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !797; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(34): Anti Latency=0
    SU(30): Data Latency=1 Reg=$d1
    SU(24): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d0
  Successors:
    SU(39): Out  Latency=1
    SU(51): Out  Latency=1
    SU(39): Data Latency=1 Reg=$d0
    SU(51): Anti Latency=0
    SU(52): Anti Latency=0
SU(38):   renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !797; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 13
  Predecessors:
    SU(36): Anti Latency=0
    SU(34): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d3
    SU(32): Data Latency=4 Reg=$d6
  Successors:
    SU(39): Data Latency=1 Reg=$d5
SU(39):   renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !797; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 32
  Height             : 12
  Predecessors:
    SU(38): Data Latency=1 Reg=$d5
    SU(37): Out  Latency=1
    SU(37): Data Latency=1 Reg=$d0
  Successors:
    SU(51): Out  Latency=1
    SU(42): Data Latency=1 Reg=$d0
    SU(51): Anti Latency=0
SU(40):   renamable $x11 = LDURSWi $fp, -184, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(22): Out  Latency=1
  Successors:
    SU(45): Out  Latency=1
    SU(45): Data Latency=4 Reg=$x11
    SU(54): Ord  Latency=0 Memory
SU(41):   renamable $x12 = LDURSWi $fp, -148, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(22): Anti Latency=0
    SU(21): Out  Latency=1
  Successors:
    SU(45): Data Latency=4 Reg=$x12
    SU(54): Ord  Latency=0 Memory
SU(42):   STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !797 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 33
  Height             : 11
  Predecessors:
    SU(39): Data Latency=1 Reg=$d0
    SU(36): Data Latency=1 Reg=$d4
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(51): Anti Latency=0
    SU(51): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
SU(43):   renamable $x13 = LDURXi $fp, -80, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 11
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(10): Anti Latency=0
    SU(9): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(49): Data Latency=4 Reg=$x13
    SU(54): Ord  Latency=0 Memory
SU(44):   renamable $x14 = LDURSWi $fp, -88, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(6): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(54): Data Latency=4 Reg=$x14
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
SU(45):   $x11 = ADDXrs renamable $x11, renamable $x12, 0, debug-location !795; fft3d.c:132:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 9
  Predecessors:
    SU(41): Data Latency=4 Reg=$x12
    SU(40): Out  Latency=1
    SU(40): Data Latency=4 Reg=$x11
  Successors:
    SU(46): Out  Latency=1
    SU(46): Data Latency=1 Reg=$x11
SU(46):   renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x20, $xzr, debug-location !792; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 8
  Predecessors:
    SU(45): Out  Latency=1
    SU(45): Data Latency=1 Reg=$x11
  Successors:
    SU(49): Out  Latency=1
    SU(49): Data Latency=1 Reg=$x11
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !797 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(48):   STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !797 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(49):   renamable $x11 = ADDXrs renamable $x13, renamable $x11, 4, debug-location !792; fft3d.c:132:25
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 7
  Predecessors:
    SU(46): Out  Latency=1
    SU(46): Data Latency=1 Reg=$x11
    SU(43): Data Latency=4 Reg=$x13
  Successors:
    SU(55): Out  Latency=1
    SU(54): Data Latency=1 Reg=$x11
SU(50):   STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !797 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(51):   renamable $q0 = LDURQi $sp, 72, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  # preds left       : 11
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(42): Anti Latency=0
    SU(42): Ord  Latency=1 Memory
    SU(39): Out  Latency=1
    SU(39): Anti Latency=0
    SU(37): Out  Latency=1
    SU(37): Anti Latency=0
    SU(34): Anti Latency=0
    SU(24): Out  Latency=1
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Out  Latency=1
  Successors:
    SU(54): Data Latency=4 Reg=$q0
    SU(54): Ord  Latency=0 Memory
SU(52):   renamable $d1 = FSUBDrr renamable $d7, renamable $d16, debug-location !797; fft3d.c:132:41
  # preds left       : 8
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 7
  Predecessors:
    SU(50): Anti Latency=0
    SU(48): Anti Latency=0
    SU(47): Anti Latency=0
    SU(37): Anti Latency=0
    SU(35): Anti Latency=0
    SU(30): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d16
    SU(26): Data Latency=4 Reg=$d7
  Successors:
    SU(53): Data Latency=1 Reg=$d1
SU(53):   STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !797 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 6
  Predecessors:
    SU(52): Data Latency=1 Reg=$d1
    SU(33): Data Latency=1 Reg=$d3
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(54): Ord  Latency=0 Memory
SU(54):   STRQroX renamable $q0, renamable $x11, renamable $x14, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  # preds left       : 34
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 38
  Height             : 6
  Predecessors:
    SU(51): Data Latency=4 Reg=$q0
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Data Latency=1 Reg=$x11
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(44): Data Latency=4 Reg=$x14
    SU(44): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(32): Ord  Latency=0 Memory
    SU(31): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(18): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(55): Anti Latency=0
    SU(57): Ord  Latency=0 Memory
    SU(55): Ord  Latency=1 Memory
SU(55):   renamable $w11 = LDURWi $fp, -88, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 39
  Height             : 5
  Predecessors:
    SU(54): Anti Latency=0
    SU(54): Ord  Latency=1 Memory
    SU(49): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(56): Out  Latency=1
    SU(56): Data Latency=4 Reg=$w11
    SU(57): Ord  Latency=0 Memory
SU(56):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !798; fft3d.c:128:44
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 43
  Height             : 1
  Predecessors:
    SU(55): Out  Latency=1
    SU(55): Data Latency=4 Reg=$w11
  Successors:
    SU(57): Data Latency=1 Reg=$w11
SU(57):   STURWi renamable $w11, $fp, -88, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 44
  Height             : 0
  Predecessors:
    SU(56): Data Latency=1 Reg=$w11
    SU(55): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.31
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 44
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 44
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w13, renamable $w11 = LDPWi $fp, -44, debug-location !775 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  Ready @0c
  TopQ.A BotLatency SU(0) 44c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 44
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  44 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w12 = LDURWi $fp, -148, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  Ready @1c
  TopQ.A BotLatency SU(1) 44c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 44
  Cand SU(3) ORDER                              
  Cand SU(2) TOP-PATH                  43 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x14 = LDURSWi $fp, -88, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x15 = LDURSWi $fp, -148, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !778; fft3d.c:129:39
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 5 
  TopQ.A RemainingLatency 0 + 6c > CritPath 44
  Cand SU(7) ORDER                              
  Cand SU(5) TOP-PATH                  40 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $w12 = ADDWrs renamable $w13, renamable $w12, 0, debug-location !783; fft3d.c:130:39
  Ready @6c
  TopQ.A BotLatency SU(5) 40c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 6 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 44
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) renamable $x13 = UBFMXri renamable $x14, 60, 59, debug-location !786; fft3d.c:131:25
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 44
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !779; fft3d.c:129:31
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  TopQ.A BotLatency SU(7) 39c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 44
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x12 = SMADDLrrr renamable $w12, renamable $w10, renamable $x9, debug-location !784; fft3d.c:130:31
  Ready @9c
  TopQ.A BotLatency SU(8) 39c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 44
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  Ready @10c
  TopQ.A TopLatency SU(9) 6c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 15 
  TopQ.A RemainingLatency 0 + 11c > CritPath 44
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) renamable $q1 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  Ready @11c
  TopQ.A BotLatency SU(10) 38c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 15 14 
  TopQ.A RemainingLatency 0 + 12c > CritPath 44
  Cand SU(15) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(15) renamable $x12 = LDURSWi $fp, -180, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 20 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $x11 = LDURXi $fp, -80, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 13
  Executed: 14c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 15 TopQ.A
Queue TopQ.P: 20 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !784 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  Ready @15c
  TopQ.A TopLatency SU(11) 10c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 14
  Executed: 16c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 12 20 
  TopQ.A RemainingLatency 0 + 16c > CritPath 44
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(12) renamable $d1, renamable $d0 = LDPDi $fp, -16, debug-location !791 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  Ready @16c
  TopQ.A TopLatency SU(12) 11c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 15
  Executed: 17c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 20 
  TopQ.A RemainingLatency 0 + 17c > CritPath 44
  Cand SU(13) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(13) renamable $d2, renamable $d3 = LDPDi $fp, -18, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  Ready @17c
  TopQ.A BotLatency SU(13) 33c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 16
  Executed: 18c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 20 
Pick Top ONLY1     
Scheduling SU(20) $x12 = ADDXrs renamable $x12, renamable $x15, 0, debug-location !789; fft3d.c:131:31
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 17
  Executed: 19c
  Critical: 17c, 17 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 21 
Pick Top ONLY1     
Scheduling SU(21) renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !786; fft3d.c:131:25
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 18
  Executed: 20c
  Critical: 18c, 18 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 22 
Pick Top ONLY1     
Scheduling SU(22) renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !786; fft3d.c:131:25
  Ready @20c
  TopQ.A TopLatency SU(22) 12c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 19
  Executed: 21c
  Critical: 19c, 19 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 17 
  TopQ.A RemainingLatency 0 + 21c > CritPath 44
  Cand SU(16) ORDER                              
Pick Top ORDER     
Scheduling SU(16) renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !791; fft3d.c:131:41
  Ready @21c
  TopQ.A TopLatency SU(16) 15c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 20
  Executed: 22c
  Critical: 20c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 17 
Pick Top ONLY1     
Scheduling SU(17) renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !791; fft3d.c:131:41
  Ready @22c
  TopQ.A BotLatency SU(17) 29c
  *** Max MOps 1 at cycle 22
Cycle: 23 TopQ.A
TopQ.A @23c
  Retired: 21
  Executed: 23c
  Critical: 21c, 21 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 18 
Pick Top ONLY1     
Scheduling SU(18) STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !791 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  Ready @23c
  TopQ.A TopLatency SU(18) 16c
  *** Max MOps 1 at cycle 23
Cycle: 24 TopQ.A
TopQ.A @24c
  Retired: 22
  Executed: 24c
  Critical: 22c, 22 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 19 
Pick Top ONLY1     
Scheduling SU(19) renamable $q0 = LDURQi $sp, 88, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  Ready @24c
  TopQ.A TopLatency SU(19) 17c
  *** Max MOps 1 at cycle 24
Cycle: 25 TopQ.A
TopQ.A @25c
  Retired: 23
  Executed: 25c
  Critical: 23c, 23 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 28 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 23 
Pick Top ONLY1     
Scheduling SU(23) STRQroX renamable $q0, renamable $x11, renamable $x13, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  Ready @28c
  TopQ.A TopLatency SU(23) 21c
  *** Max MOps 1 at cycle 28
Cycle: 29 TopQ.A
TopQ.A @29c
  Retired: 24
  Executed: 29c
  Critical: 24c, 24 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 24 28 27 25 26 
  TopQ.A RemainingLatency 0 + 29c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
  Cand SU(27) TOP-PATH                  22 cycles 
  Cand SU(25) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(25) renamable $d1, renamable $d2 = LDPDi $fp, -17, debug-location !797 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  Ready @29c
  TopQ.A TopLatency SU(25) 22c
  *** Max MOps 1 at cycle 29
Cycle: 30 TopQ.A
TopQ.A @30c
  Retired: 25
  Executed: 30c
  Critical: 25c, 25 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 24 28 27 26 
  TopQ.A RemainingLatency 0 + 30c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
  Cand SU(27) TOP-PATH                  22 cycles 
Pick Top TOP-PATH  
Scheduling SU(27) renamable $d4, renamable $d16 = LDPDi $fp, -18, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  Ready @30c
  TopQ.A BotLatency SU(27) 22c
  *** Max MOps 1 at cycle 30
Cycle: 31 TopQ.A
TopQ.A @31c
  Retired: 26
  Executed: 31c
  Critical: 26c, 26 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 
Queue TopQ.A: 44 43 41 40 24 28 26 
  TopQ.A RemainingLatency 0 + 31c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
Pick Top TOP-PATH  
Scheduling SU(24) renamable $d6, renamable $d0 = LDPDi $fp, -15, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 TopQ.A
TopQ.A @32c
  Retired: 27
  Executed: 32c
  Critical: 27c, 27 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 30 
Queue TopQ.A: 44 43 41 40 26 28 
  TopQ.A RemainingLatency 0 + 32c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(26) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(26) renamable $d3, renamable $d7 = LDPDi $fp, -16, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  Ready @32c
  *** Max MOps 1 at cycle 32
Cycle: 33 TopQ.A
TopQ.A @33c
  Retired: 28
  Executed: 33c
  Critical: 28c, 28 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 30 
Queue TopQ.A: 44 43 41 40 28 
  TopQ.A RemainingLatency 0 + 33c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(28) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(28) renamable $d5 = LDURDi $fp, -144, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  Ready @33c
  *** Max MOps 1 at cycle 33
Cycle: 34 TopQ.A
TopQ.A @34c
  Retired: 29
  Executed: 34c
  Critical: 29c, 29 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 30 
Queue TopQ.A: 44 43 41 40 29 
  TopQ.A RemainingLatency 0 + 34c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(29) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(29) renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !797; fft3d.c:132:41
  Ready @34c
  TopQ.A TopLatency SU(29) 26c
  *** Max MOps 1 at cycle 34
Cycle: 35 TopQ.A
TopQ.A @35c
  Retired: 30
  Executed: 35c
  Critical: 30c, 30 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 
Queue TopQ.A: 44 43 41 40 31 30 
  TopQ.A RemainingLatency 0 + 35c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(31) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(31) renamable $d4 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  Ready @35c
  TopQ.A BotLatency SU(31) 18c
  *** Max MOps 1 at cycle 35
Cycle: 36 TopQ.A
TopQ.A @36c
  Retired: 31
  Executed: 36c
  Critical: 31c, 31 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 
Queue TopQ.A: 44 43 41 40 30 
  TopQ.A RemainingLatency 0 + 36c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(30) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(30) renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !797; fft3d.c:132:41
  Ready @36c
  *** Max MOps 1 at cycle 36
Cycle: 37 TopQ.A
TopQ.A @37c
  Retired: 32
  Executed: 37c
  Critical: 32c, 32 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 44 43 41 40 50 48 47 32 33 
  TopQ.A RemainingLatency 0 + 37c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(32) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(32) renamable $d6 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  Ready @37c
  TopQ.A BotLatency SU(32) 17c
  *** Max MOps 1 at cycle 37
Cycle: 38 TopQ.A
TopQ.A @38c
  Retired: 33
  Executed: 38c
  Critical: 33c, 33 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 44 43 41 40 50 48 47 33 
  TopQ.A RemainingLatency 0 + 38c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(33) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(33) renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !797; fft3d.c:132:41
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 TopQ.A
TopQ.A @39c
  Retired: 34
  Executed: 39c
  Critical: 34c, 34 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 34 35 
  TopQ.A RemainingLatency 0 + 39c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(34) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(34) renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !797; fft3d.c:132:41
  Ready @39c
  TopQ.A TopLatency SU(34) 27c
  *** Max MOps 1 at cycle 39
Cycle: 40 TopQ.A
TopQ.A @40c
  Retired: 35
  Executed: 40c
  Critical: 35c, 35 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 35 37 
  TopQ.A RemainingLatency 0 + 40c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(35) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(35) renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !797; fft3d.c:132:41
  Ready @40c
  TopQ.A TopLatency SU(35) 30c
  *** Max MOps 1 at cycle 40
Cycle: 41 TopQ.A
TopQ.A @41c
  Retired: 36
  Executed: 41c
  Critical: 36c, 36 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 37 36 
  TopQ.A RemainingLatency 0 + 41c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(37) ORDER                              
  Cand SU(36) ORDER                              
Pick Top ORDER     
Scheduling SU(36) renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !797; fft3d.c:132:41
  Ready @41c
  TopQ.A TopLatency SU(36) 31c
  *** Max MOps 1 at cycle 41
Cycle: 42 TopQ.A
TopQ.A @42c
  Retired: 37
  Executed: 42c
  Critical: 37c, 37 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 37 38 
  TopQ.A RemainingLatency 0 + 42c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(37) ORDER                              
Pick Top ORDER     
Scheduling SU(37) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !797; fft3d.c:132:41
  Ready @42c
  TopQ.A BotLatency SU(37) 13c
  *** Max MOps 1 at cycle 42
Cycle: 43 TopQ.A
TopQ.A @43c
  Retired: 38
  Executed: 43c
  Critical: 38c, 38 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 38 
  TopQ.A RemainingLatency 0 + 43c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(38) ORDER                              
Pick Top ORDER     
Scheduling SU(38) renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !797; fft3d.c:132:41
  Ready @43c
  TopQ.A BotLatency SU(38) 13c
  *** Max MOps 1 at cycle 43
Cycle: 44 TopQ.A
TopQ.A @44c
  Retired: 39
  Executed: 44c
  Critical: 39c, 39 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 39 
  TopQ.A RemainingLatency 0 + 44c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(40) renamable $x11 = LDURSWi $fp, -184, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  Ready @44c
  TopQ.A BotLatency SU(40) 13c
  *** Max MOps 1 at cycle 44
Cycle: 45 TopQ.A
TopQ.A @45c
  Retired: 40
  Executed: 45c
  Critical: 40c, 40 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 39 50 48 47 
  TopQ.A RemainingLatency 0 + 45c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(41) renamable $x12 = LDURSWi $fp, -148, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  Ready @45c
  TopQ.A BotLatency SU(41) 13c
  *** Max MOps 1 at cycle 45
Cycle: 46 TopQ.A
TopQ.A @46c
  Retired: 41
  Executed: 46c
  Critical: 41c, 41 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 39 50 48 
  TopQ.A RemainingLatency 0 + 46c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(39) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(39) renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !797; fft3d.c:132:41
  Ready @46c
  TopQ.A TopLatency SU(39) 32c
  *** Max MOps 1 at cycle 46
Cycle: 47 TopQ.A
TopQ.A @47c
  Retired: 42
  Executed: 47c
  Critical: 42c, 42 MOps
  ExpectedLatency: 32c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 48 50 42 
  TopQ.A RemainingLatency 0 + 47c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(42) ORDER                              
Pick Top ORDER     
Scheduling SU(42) STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !797 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  Ready @47c
  TopQ.A TopLatency SU(42) 33c
  *** Max MOps 1 at cycle 47
Cycle: 48 TopQ.A
TopQ.A @48c
  Retired: 43
  Executed: 48c
  Critical: 43c, 43 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 48 50 51 
  TopQ.A RemainingLatency 0 + 48c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(43) renamable $x13 = LDURXi $fp, -80, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  Ready @48c
  TopQ.A BotLatency SU(43) 11c
  *** Max MOps 1 at cycle 48
Cycle: 49 TopQ.A
TopQ.A @49c
  Retired: 44
  Executed: 49c
  Critical: 44c, 44 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 51 47 48 50 45 
  TopQ.A RemainingLatency 0 + 49c > CritPath 44
  Cand SU(44) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(44) renamable $x14 = LDURSWi $fp, -88, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  Ready @49c
  *** Max MOps 1 at cycle 49
Cycle: 50 TopQ.A
TopQ.A @50c
  Retired: 45
  Executed: 50c
  Critical: 45c, 45 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 45 51 47 48 50 
  TopQ.A RemainingLatency 0 + 50c > CritPath 44
  Cand SU(45) ORDER                              
  Cand SU(51) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(51) renamable $q0 = LDURQi $sp, 72, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  Ready @50c
  TopQ.A TopLatency SU(51) 34c
  TopQ.A BotLatency SU(51) 10c
  *** Max MOps 1 at cycle 50
Cycle: 51 TopQ.A
TopQ.A @51c
  Retired: 46
  Executed: 51c
  Critical: 46c, 46 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 45 50 47 48 
  TopQ.A RemainingLatency 0 + 51c > CritPath 44
  Cand SU(45) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(45) $x11 = ADDXrs renamable $x11, renamable $x12, 0, debug-location !795; fft3d.c:132:31
  Ready @51c
  *** Max MOps 1 at cycle 51
Cycle: 52 TopQ.A
TopQ.A @52c
  Retired: 47
  Executed: 52c
  Critical: 47c, 47 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 47 46 
  TopQ.A RemainingLatency 0 + 52c > CritPath 44
  Cand SU(48) ORDER                              
  Cand SU(47) ORDER                              
  Cand SU(46) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(46) renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x20, $xzr, debug-location !792; fft3d.c:132:25
  Ready @52c
  *** Max MOps 1 at cycle 52
Cycle: 53 TopQ.A
TopQ.A @53c
  Retired: 48
  Executed: 53c
  Critical: 48c, 48 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 47 49 
  TopQ.A RemainingLatency 0 + 53c > CritPath 44
  Cand SU(48) ORDER                              
  Cand SU(47) ORDER                              
Pick Top ORDER     
Scheduling SU(47) STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !797 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  Ready @53c
  *** Max MOps 1 at cycle 53
Cycle: 54 TopQ.A
TopQ.A @54c
  Retired: 49
  Executed: 54c
  Critical: 49c, 49 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 49 
  TopQ.A RemainingLatency 0 + 54c > CritPath 44
  Cand SU(48) ORDER                              
Pick Top ORDER     
Scheduling SU(48) STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !797 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  Ready @54c
  TopQ.A BotLatency SU(48) 7c
  *** Max MOps 1 at cycle 54
Cycle: 55 TopQ.A
TopQ.A @55c
  Retired: 50
  Executed: 55c
  Critical: 50c, 50 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 49 50 
  TopQ.A RemainingLatency 0 + 55c > CritPath 44
  Cand SU(49) ORDER                              
Pick Top ORDER     
Scheduling SU(49) renamable $x11 = ADDXrs renamable $x13, renamable $x11, 4, debug-location !792; fft3d.c:132:25
  Ready @55c
  TopQ.A BotLatency SU(49) 7c
  *** Max MOps 1 at cycle 55
Cycle: 56 TopQ.A
TopQ.A @56c
  Retired: 51
  Executed: 56c
  Critical: 51c, 51 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 50 
Pick Top ONLY1     
Scheduling SU(50) STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !797 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  Ready @56c
  TopQ.A BotLatency SU(50) 7c
  *** Max MOps 1 at cycle 56
Cycle: 57 TopQ.A
TopQ.A @57c
  Retired: 52
  Executed: 57c
  Critical: 52c, 52 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 52 
Pick Top ONLY1     
Scheduling SU(52) renamable $d1 = FSUBDrr renamable $d7, renamable $d16, debug-location !797; fft3d.c:132:41
  Ready @57c
  TopQ.A BotLatency SU(52) 7c
  *** Max MOps 1 at cycle 57
Cycle: 58 TopQ.A
TopQ.A @58c
  Retired: 53
  Executed: 58c
  Critical: 53c, 53 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 53 
Pick Top ONLY1     
Scheduling SU(53) STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !797 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  Ready @58c
  *** Max MOps 1 at cycle 58
Cycle: 59 TopQ.A
TopQ.A @59c
  Retired: 54
  Executed: 59c
  Critical: 54c, 54 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 54 
Pick Top ONLY1     
Scheduling SU(54) STRQroX renamable $q0, renamable $x11, renamable $x14, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  Ready @59c
  TopQ.A TopLatency SU(54) 38c
  TopQ.A BotLatency SU(54) 6c
  *** Max MOps 1 at cycle 59
Cycle: 60 TopQ.A
TopQ.A @60c
  Retired: 55
  Executed: 60c
  Critical: 55c, 55 MOps
  ExpectedLatency: 38c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 55 
Pick Top ONLY1     
Scheduling SU(55) renamable $w11 = LDURWi $fp, -88, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  Ready @60c
  TopQ.A TopLatency SU(55) 39c
  *** Max MOps 1 at cycle 60
Cycle: 61 TopQ.A
TopQ.A @61c
  Retired: 56
  Executed: 61c
  Critical: 56c, 56 MOps
  ExpectedLatency: 39c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 64 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 56 
Pick Top ONLY1     
Scheduling SU(56) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !798; fft3d.c:128:44
  Ready @64c
  TopQ.A TopLatency SU(56) 43c
  *** Max MOps 1 at cycle 64
Cycle: 65 TopQ.A
TopQ.A @65c
  Retired: 57
  Executed: 65c
  Critical: 57c, 57 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 57 
Pick Top ONLY1     
Scheduling SU(57) STURWi renamable $w11, $fp, -88, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44
  Ready @65c
  TopQ.A TopLatency SU(57) 44c
  *** Max MOps 1 at cycle 65
Cycle: 66 TopQ.A
TopQ.A @66c
  Retired: 58
  Executed: 66c
  Critical: 58c, 58 MOps
  ExpectedLatency: 44c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   renamable $w13, renamable $w11 = LDPWi $fp, -44, debug-location !775 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
SU(1):   renamable $w12 = LDURWi $fp, -148, debug-location !777 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
SU(2):   renamable $x14 = LDURSWi $fp, -88, debug-location !780 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
SU(3):   renamable $x15 = LDURSWi $fp, -148, debug-location !788 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
SU(4):   $w11 = ADDWrs renamable $w11, renamable $w12, 0, debug-location !778; fft3d.c:129:39
SU(5):   $w12 = ADDWrs renamable $w13, renamable $w12, 0, debug-location !783; fft3d.c:130:39
SU(6):   renamable $x13 = UBFMXri renamable $x14, 60, 59, debug-location !786; fft3d.c:131:25
SU(7):   renamable $x11 = SMADDLrrr renamable $w11, renamable $w10, renamable $x9, debug-location !779; fft3d.c:129:31
SU(8):   renamable $x12 = SMADDLrrr renamable $w12, renamable $w10, renamable $x9, debug-location !784; fft3d.c:130:31
SU(9):   renamable $q0 = LDRQroX renamable $x12, renamable $x13, 0, 0, debug-location !784 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
SU(10):   renamable $q1 = LDRQroX renamable $x11, renamable $x13, 0, 0, debug-location !779 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
SU(15):   renamable $x12 = LDURSWi $fp, -180, debug-location !787 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
SU(14):   renamable $x11 = LDURXi $fp, -80, debug-location !786 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
SU(11):   STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !784 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
SU(12):   renamable $d1, renamable $d0 = LDPDi $fp, -16, debug-location !791 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
SU(13):   renamable $d2, renamable $d3 = LDPDi $fp, -18, debug-location !791 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
SU(20):   $x12 = ADDXrs renamable $x12, renamable $x15, 0, debug-location !789; fft3d.c:131:31
SU(21):   renamable $x12 = nsw MADDXrrr renamable $x12, renamable $x20, $xzr, debug-location !786; fft3d.c:131:25
SU(22):   renamable $x11 = ADDXrs renamable $x11, renamable $x12, 4, debug-location !786; fft3d.c:131:25
SU(16):   renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !791; fft3d.c:131:41
SU(17):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !791; fft3d.c:131:41
SU(18):   STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !791 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
SU(19):   renamable $q0 = LDURQi $sp, 88, debug-location !791 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
SU(23):   STRQroX renamable $q0, renamable $x11, renamable $x13, 0, 0, debug-location !791 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
SU(25):   renamable $d1, renamable $d2 = LDPDi $fp, -17, debug-location !797 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
SU(27):   renamable $d4, renamable $d16 = LDPDi $fp, -18, debug-location !797 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
SU(24):   renamable $d6, renamable $d0 = LDPDi $fp, -15, debug-location !797 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
SU(26):   renamable $d3, renamable $d7 = LDPDi $fp, -16, debug-location !797 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
SU(28):   renamable $d5 = LDURDi $fp, -144, debug-location !797 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
SU(29):   renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !797; fft3d.c:132:41
SU(31):   renamable $d4 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
SU(30):   renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !797; fft3d.c:132:41
SU(32):   renamable $d6 = LDURDi $fp, -104, debug-location !797 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
SU(33):   renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !797; fft3d.c:132:41
SU(34):   renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !797; fft3d.c:132:41
SU(35):   renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !797; fft3d.c:132:41
SU(36):   renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !797; fft3d.c:132:41
SU(37):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !797; fft3d.c:132:41
SU(38):   renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !797; fft3d.c:132:41
SU(40):   renamable $x11 = LDURSWi $fp, -184, debug-location !793 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
SU(41):   renamable $x12 = LDURSWi $fp, -148, debug-location !794 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
SU(39):   renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !797; fft3d.c:132:41
SU(42):   STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !797 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
SU(43):   renamable $x13 = LDURXi $fp, -80, debug-location !792 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
SU(44):   renamable $x14 = LDURSWi $fp, -88, debug-location !796 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
SU(51):   renamable $q0 = LDURQi $sp, 72, debug-location !797 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
SU(45):   $x11 = ADDXrs renamable $x11, renamable $x12, 0, debug-location !795; fft3d.c:132:31
SU(46):   renamable $x11 = nsw MADDXrrr renamable $x11, renamable $x20, $xzr, debug-location !792; fft3d.c:132:25
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !797 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
SU(48):   STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !797 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
SU(49):   renamable $x11 = ADDXrs renamable $x13, renamable $x11, 4, debug-location !792; fft3d.c:132:25
SU(50):   STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !797 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
SU(52):   renamable $d1 = FSUBDrr renamable $d7, renamable $d16, debug-location !797; fft3d.c:132:41
SU(53):   STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !797 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
SU(54):   STRQroX renamable $q0, renamable $x11, renamable $x14, 0, 1, debug-location !797 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
SU(55):   renamable $w11 = LDURWi $fp, -88, debug-location !798 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
SU(56):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !798; fft3d.c:128:44
SU(57):   STURWi renamable $w11, $fp, -88, debug-location !798 :: (store 4 into %ir.j); fft3d.c:128:44

Fixup kills for %bb.32
********** MI Scheduling **********
Swarztrauber:%bb.33 for.inc260
  From: renamable $w11 = LDURWi $fp, -148, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
    To: B %bb.29
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !802; fft3d.c:127:43
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.29
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -148, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !802; fft3d.c:127:43
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -148, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   renamable $w11 = LDURWi $fp, -148, debug-location !802 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !802; fft3d.c:127:43
SU(2):   STURWi renamable $w11, $fp, -148, debug-location !802 :: (store 4 into %ir.k); fft3d.c:127:43

Fixup kills for %bb.33
********** MI Scheduling **********
Swarztrauber:%bb.34 for.inc263
  From: renamable $w11 = LDURWi $fp, -84, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
    To: B %bb.24
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !806; fft3d.c:115:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -84, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.24
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -84, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !806; fft3d.c:115:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -84, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $w11 = LDURWi $fp, -84, debug-location !806 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 1, 0, debug-location !806; fft3d.c:115:39
SU(2):   STURWi renamable $w11, $fp, -84, debug-location !806 :: (store 4 into %ir.i); fft3d.c:115:39

Fixup kills for %bb.34
********** MI Scheduling **********
Swarztrauber:%bb.35 for.inc267
  From: renamable $w11 = LDURWi $fp, -92, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
    To: B %bb.3
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w11
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 2, 0, debug-location !810; fft3d.c:74:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w11
  Successors:
    SU(2): Data Latency=1 Reg=$w11
SU(2):   STURWi renamable $w11, $fp, -92, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w11
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.3
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w11 = LDURWi $fp, -92, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w11 = nsw ADDWri renamable $w11, 2, 0, debug-location !810; fft3d.c:74:27
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w11, $fp, -92, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   renamable $w11 = LDURWi $fp, -92, debug-location !810 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
SU(1):   renamable $w11 = nsw ADDWri renamable $w11, 2, 0, debug-location !810; fft3d.c:74:27
SU(2):   STURWi renamable $w11, $fp, -92, debug-location !810 :: (store 4 into %ir.l); fft3d.c:74:27

Fixup kills for %bb.35
Fixup kills for %bb.36
Fixup kills for %bb.37
********** MI Scheduling **********
Swarztrauber:%bb.38 if.end272
  From: $fp, $lr = frame-destroy LDPXi $sp, 52, debug-location !818 :: (load 8 from %stack.39), (load 8 from %stack.38); fft3d.c:140:1
    To: $sp = frame-destroy ADDXri $sp, 432, 0, debug-location !818; fft3d.c:140:1
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 52, debug-location !818 :: (load 8 from %stack.39), (load 8 from %stack.38); fft3d.c:140:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 50, debug-location !818 :: (load 8 from %stack.41), (load 8 from %stack.40); fft3d.c:140:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(2):   $x28 = frame-destroy LDRXui $sp, 48, debug-location !818 :: (load 8 from %stack.42); fft3d.c:140:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 432, 0, debug-location !818; fft3d.c:140:1
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $fp, $lr = frame-destroy LDPXi $sp, 52, debug-location !818 :: (load 8 from %stack.39), (load 8 from %stack.38); fft3d.c:140:1
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x20, $x19 = frame-destroy LDPXi $sp, 50, debug-location !818 :: (load 8 from %stack.41), (load 8 from %stack.40); fft3d.c:140:1
  Ready @1c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x28 = frame-destroy LDRXui $sp, 48, debug-location !818 :: (load 8 from %stack.42); fft3d.c:140:1
  Ready @2c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 52, debug-location !818 :: (load 8 from %stack.39), (load 8 from %stack.38); fft3d.c:140:1
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 50, debug-location !818 :: (load 8 from %stack.41), (load 8 from %stack.40); fft3d.c:140:1
SU(2):   $x28 = frame-destroy LDRXui $sp, 48, debug-location !818 :: (load 8 from %stack.42); fft3d.c:140:1

Fixup kills for %bb.38
