Before MISched:
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-3: size=8, align=16, fixed, at location [SP+16]
  fi#-2: size=8, align=8, fixed, at location [SP+8]
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=8, align=8, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: dead
  fi#7: dead
  fi#8: dead
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
Function Live Ins: $w0 in %2, $w1 in %3, $w2 in %4, $w3 in %5, $x4 in %6, $x5 in %7

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $x4, $x5
  %7:gpr64 = COPY $x5
  %6:gpr64 = COPY $x4
  %5:gpr32 = COPY $w3
  %4:gpr32 = COPY $w2
  %3:gpr32common = COPY $w1
  %2:gpr32 = COPY $w0
  STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
  STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
  STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
  STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
  STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
  STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
  undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
  undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
  %10:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  CBZW %11:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
  B %bb.1, debug-location !90; fft3d.c:151:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9
  $w0 = MOVi32imm 3, debug-location !91; fft3d.c:152:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !91; fft3d.c:152:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !91; fft3d.c:152:9
  PCN_STACKMAP 0, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !91 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:152:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)

  %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  %14:gpr32 = MOVi32imm 8192
  %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
  %16:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  %18:gpr32 = MOVi32imm 32
  %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
  STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
  STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  $w0 = COPY %13:gpr32, debug-location !104; fft3d.c:158:11
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !104; fft3d.c:158:11
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !105; fft3d.c:158:9
  PCN_STACKMAP 1, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %13:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !105 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:158:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !105; fft3d.c:158:9
  %21:gpr32 = COPY killed $w8, debug-location !104; fft3d.c:158:11
  STRWui %21:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  %22:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  %23:gpr32 = LDRWui %22:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  CBZW %23:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
  B %bb.3, debug-location !108; fft3d.c:159:9

bb.3.if.then7:
; predecessors: %bb.2
  successors: %bb.4(0x80000000); %bb.4(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9
  $w0 = MOVi32imm 7, debug-location !109; fft3d.c:160:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !109; fft3d.c:160:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !109; fft3d.c:160:9
  PCN_STACKMAP 2, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !109 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:160:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9

bb.4.if.end8:
; predecessors: %bb.2, %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  %208:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  %280:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  %283:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

bb.5.for.cond:
; predecessors: %bb.4, %bb.23
  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)

  %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  %27:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  dead $wzr = SUBSWrr %26:gpr32, %27:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Bcc 10, %bb.24, implicit killed $nzcv, debug-location !117; fft3d.c:161:5
  B %bb.6, debug-location !117; fft3d.c:161:5

bb.6.for.body:
; predecessors: %bb.5
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

bb.7.for.cond10:
; predecessors: %bb.6, %bb.22
  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)

  %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  %203:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  dead $wzr = SUBSWrr %202:gpr32, %203:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Bcc 10, %bb.23, implicit killed $nzcv, debug-location !126; fft3d.c:162:9
  B %bb.8, debug-location !126; fft3d.c:162:9

bb.8.for.body12:
; predecessors: %bb.7
  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)

  %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  %209:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  %210:gpr32common = nsw ADDWrr %207:gpr32, %209:gpr32, debug-location !130; fft3d.c:163:23
  %211:gpr32common = SUBWri %210:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  STRWui %211:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  %212:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  dead $wzr = SUBSWrr %211:gpr32common, %212:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Bcc 13, %bb.10, implicit killed $nzcv, debug-location !137; fft3d.c:164:17
  B %bb.9, debug-location !137; fft3d.c:164:17

bb.9.if.then15:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  %215:gpr32common = SUBWri %214:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  STRWui %215:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

bb.10.if.end17:
; predecessors: %bb.8, %bb.9
  successors: %bb.11(0x80000000); %bb.11(100.00%)

  %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  %217:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  %218:gpr32common = nsw SUBWrr %216:gpr32, %217:gpr32, debug-location !144; fft3d.c:166:23
  %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  STRWui %219:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  STRWui %217:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

bb.11.for.cond20:
; predecessors: %bb.10, %bb.15
  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)

  %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  %221:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  dead $wzr = SUBSWrr %220:gpr32, %221:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Bcc 12, %bb.16, implicit killed $nzcv, debug-location !155; fft3d.c:167:13
  B %bb.12, debug-location !155; fft3d.c:167:13

bb.12.for.body22:
; predecessors: %bb.11
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  STRWui $wzr, %stack.9.i, 0, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

bb.13.for.cond23:
; predecessors: %bb.12, %bb.14
  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)

  %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  Bcc 10, %bb.15, implicit killed $nzcv, debug-location !164; fft3d.c:168:17
  B %bb.14, debug-location !164; fft3d.c:168:17

bb.14.for.body25:
; predecessors: %bb.13
  successors: %bb.13(0x80000000); %bb.13(100.00%)

  %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
  %273:gpr32 = LDRWui %stack.13.bls, 0, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
  %275:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  %276:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
  %281:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  %282:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
  %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
  %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
  %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
  %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
  STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  B %bb.13, debug-location !179; fft3d.c:168:17

bb.15.for.inc35:
; predecessors: %bb.13
  successors: %bb.11(0x80000000); %bb.11(100.00%)

  %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  %270:gpr32common = nsw ADDWri %269:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  B %bb.11, debug-location !183; fft3d.c:167:13

bb.16.for.end37:
; predecessors: %bb.11
  successors: %bb.17(0x80000000); %bb.17(100.00%)

  %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  %224:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  %225:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  %226:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  %227:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  %228:gpr64 = LDRXui %fixed-stack.2, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  $w0 = COPY %223:gpr32, debug-location !192; fft3d.c:172:13
  $w1 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  $w2 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  $w3 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  $w4 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !192; fft3d.c:172:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !193; fft3d.c:173:22
  PCN_STACKMAP 3, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %223:gpr32, %224:gpr32, %225:gpr32, %226:gpr32, %227:gpr32, %228:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !193 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:173:22
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !193; fft3d.c:173:22
  %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

bb.17.for.cond38:
; predecessors: %bb.16, %bb.21
  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)

  %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Bcc 12, %bb.22, implicit killed $nzcv, debug-location !201; fft3d.c:173:13
  B %bb.18, debug-location !201; fft3d.c:173:13

bb.18.for.body40:
; predecessors: %bb.17
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  STRWui $wzr, %stack.9.i, 0, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

bb.19.for.cond41:
; predecessors: %bb.18, %bb.20
  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)

  %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Bcc 10, %bb.21, implicit killed $nzcv, debug-location !210; fft3d.c:174:17
  B %bb.20, debug-location !210; fft3d.c:174:17

bb.20.for.body43:
; predecessors: %bb.19
  successors: %bb.19(0x80000000); %bb.19(100.00%)

  %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
  %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
  %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
  %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
  %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
  %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
  STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  B %bb.19, debug-location !225; fft3d.c:174:17

bb.21.for.inc58:
; predecessors: %bb.19
  successors: %bb.17(0x80000000); %bb.17(100.00%)

  %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  B %bb.17, debug-location !229; fft3d.c:173:13

bb.22.for.inc61:
; predecessors: %bb.17
  successors: %bb.7(0x80000000); %bb.7(100.00%)

  %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  B %bb.7, debug-location !234; fft3d.c:162:9

bb.23.for.inc64:
; predecessors: %bb.7
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  %206:gpr32common = nsw ADDWri %205:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  STRWui %206:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  B %bb.5, debug-location !238; fft3d.c:161:5

bb.24.for.end66:
; predecessors: %bb.5
  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)

  %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  %30:gpr32 = LDRWui %29:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  CBZW %30:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
  B %bb.25, debug-location !243; fft3d.c:180:9

bb.25.if.then68:
; predecessors: %bb.24
  successors: %bb.26(0x80000000); %bb.26(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9
  $w0 = MOVi32imm 7, debug-location !244; fft3d.c:181:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !244; fft3d.c:181:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !244; fft3d.c:181:9
  PCN_STACKMAP 4, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !244 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:181:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9

bb.26.if.end69:
; predecessors: %bb.24, %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

  %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  %33:gpr32 = MOVi32imm 8192
  %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
  %35:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
  dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  %37:gpr32 = MOVi32imm 32
  %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit killed $nzcv, debug-location !251; fft3d.c:184:9
  STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
  STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  $w0 = COPY %32:gpr32, debug-location !256; fft3d.c:187:11
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !256; fft3d.c:187:11
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !257; fft3d.c:187:9
  PCN_STACKMAP 5, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %32:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !257 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:187:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !257; fft3d.c:187:9
  %40:gpr32 = COPY killed $w8, debug-location !256; fft3d.c:187:11
  STRWui %40:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  %41:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  %42:gpr32 = LDRWui %41:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  CBZW %42:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
  B %bb.27, debug-location !260; fft3d.c:188:9

bb.27.if.then77:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9
  $w0 = MOVi32imm 8, debug-location !261; fft3d.c:189:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !261; fft3d.c:189:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !261; fft3d.c:189:9
  PCN_STACKMAP 6, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !261 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:189:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9

bb.28.if.end78:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  %171:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  %190:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

bb.29.for.cond79:
; predecessors: %bb.28, %bb.35
  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)

  %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  %46:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  dead $wzr = SUBSWrr %45:gpr32, %46:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Bcc 10, %bb.36, implicit killed $nzcv, debug-location !269; fft3d.c:190:5
  B %bb.30, debug-location !269; fft3d.c:190:5

bb.30.for.body81:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

bb.31.for.cond82:
; predecessors: %bb.30, %bb.34
  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)

  %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  %166:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  dead $wzr = SUBSWrr %165:gpr32, %166:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Bcc 10, %bb.35, implicit killed $nzcv, debug-location !278; fft3d.c:191:9
  B %bb.32, debug-location !278; fft3d.c:191:9

bb.32.for.body84:
; predecessors: %bb.31
  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)

  %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  %172:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  %173:gpr32common = nsw ADDWrr %170:gpr32, %172:gpr32, debug-location !282; fft3d.c:192:23
  %174:gpr32common = SUBWri %173:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  STRWui %174:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  %175:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  dead $wzr = SUBSWrr %174:gpr32common, %175:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Bcc 13, %bb.34, implicit killed $nzcv, debug-location !289; fft3d.c:193:17
  B %bb.33, debug-location !289; fft3d.c:193:17

bb.33.if.then88:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)

  %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  %178:gpr32common = SUBWri %177:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  STRWui %178:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

bb.34.if.end90:
; predecessors: %bb.32, %bb.33
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  %180:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
  %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
  %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
  STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  %183:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  %184:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  %185:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  %186:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
  %188:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  %189:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
  %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
  %193:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
  %195:gpr64 = LDRXui %fixed-stack.1, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  $w0 = COPY %183:gpr32, debug-location !310; fft3d.c:196:13
  $w1 = COPY %184:gpr32, debug-location !310; fft3d.c:196:13
  $w2 = COPY %182:gpr32common, debug-location !310; fft3d.c:196:13
  $w3 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  $w4 = COPY %187:gpr32sp, debug-location !310; fft3d.c:196:13
  $x5 = COPY %194:gpr64, debug-location !310; fft3d.c:196:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !311; fft3d.c:197:9
  PCN_STACKMAP 7, 0, %187:gpr32sp, %194:gpr64, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %183:gpr32, %184:gpr32, %182:gpr32common, %185:gpr32, %194:gpr64, %195:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !311 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:197:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; fft3d.c:197:9
  %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  %199:gpr32 = LDRWui %stack.13.bls, 0, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  %200:gpr32 = nsw ADDWrr %199:gpr32, %198:gpr32, debug-location !313; fft3d.c:191:37
  STRWui %200:gpr32, %stack.13.bls, 0, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  B %bb.31, debug-location !314; fft3d.c:191:9

bb.35.for.inc102:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !317; fft3d.c:190:26
  STRWui %169:gpr32common, %stack.11.k, 0, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  B %bb.29, debug-location !318; fft3d.c:190:5

bb.36.for.end104:
; predecessors: %bb.29
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  %49:gpr32 = LDRWui %48:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  CBZW %49:gpr32, %bb.38, debug-location !323; fft3d.c:199:9
  B %bb.37, debug-location !323; fft3d.c:199:9

bb.37.if.then106:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !324; fft3d.c:200:9
  $w0 = MOVi32imm 8, debug-location !324; fft3d.c:200:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !324; fft3d.c:200:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !324; fft3d.c:200:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !324; fft3d.c:200:9
  PCN_STACKMAP 8, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !324 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:200:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !324; fft3d.c:200:9

bb.38.if.end107:
; predecessors: %bb.36, %bb.37
  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)

  %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  %52:gpr32 = MOVi32imm 8192
  %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
  %54:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
  dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
  %56:gpr32 = MOVi32imm 32
  %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit killed $nzcv, debug-location !331; fft3d.c:203:9
  STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
  STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !336; fft3d.c:206:11
  $w0 = COPY %51:gpr32, debug-location !336; fft3d.c:206:11
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !336; fft3d.c:206:11
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !336; fft3d.c:206:11
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !337; fft3d.c:206:9
  PCN_STACKMAP 9, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %51:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !337 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:206:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !337; fft3d.c:206:9
  %59:gpr32 = COPY killed $w8, debug-location !336; fft3d.c:206:11
  STRWui %59:gpr32, %stack.12.log, 0, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  %60:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  %61:gpr32 = LDRWui %60:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  CBZW %61:gpr32, %bb.40, debug-location !340; fft3d.c:207:9
  B %bb.39, debug-location !340; fft3d.c:207:9

bb.39.if.then115:
; predecessors: %bb.38
  successors: %bb.40(0x80000000); %bb.40(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !341; fft3d.c:208:9
  $w0 = MOVi32imm 9, debug-location !341; fft3d.c:208:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !341; fft3d.c:208:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !341; fft3d.c:208:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !341; fft3d.c:208:9
  PCN_STACKMAP 10, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !341 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:208:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !341; fft3d.c:208:9

bb.40.if.end116:
; predecessors: %bb.38, %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)

  STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  %80:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  %154:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  %156:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

bb.41.for.cond117:
; predecessors: %bb.40, %bb.59
  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)

  %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  %65:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  dead $wzr = SUBSWrr %64:gpr32, %65:gpr32, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  Bcc 10, %bb.60, implicit killed $nzcv, debug-location !349; fft3d.c:209:5
  B %bb.42, debug-location !349; fft3d.c:209:5

bb.42.for.body119:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)

  STRWui $wzr, %stack.13.bls, 0, debug-location !350 :: (store 4 into %ir.bls); fft3d.c:210:18

bb.43.for.cond120:
; predecessors: %bb.42, %bb.58
  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)

  %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  %75:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  dead $wzr = SUBSWrr %74:gpr32, %75:gpr32, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  Bcc 10, %bb.59, implicit killed $nzcv, debug-location !358; fft3d.c:210:9
  B %bb.44, debug-location !358; fft3d.c:210:9

bb.44.for.body122:
; predecessors: %bb.43
  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)

  %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  %81:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  %82:gpr32common = nsw ADDWrr %79:gpr32, %81:gpr32, debug-location !362; fft3d.c:211:23
  %83:gpr32common = SUBWri %82:gpr32common, 1, 0, debug-location !363; fft3d.c:211:34
  STRWui %83:gpr32common, %stack.14.ble, 0, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  %84:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  dead $wzr = SUBSWrr %83:gpr32common, %84:gpr32, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  Bcc 13, %bb.46, implicit killed $nzcv, debug-location !369; fft3d.c:212:17
  B %bb.45, debug-location !369; fft3d.c:212:17

bb.45.if.then126:
; predecessors: %bb.44
  successors: %bb.46(0x80000000); %bb.46(100.00%)

  %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  %87:gpr32common = SUBWri %86:gpr32common, 1, 0, debug-location !371; fft3d.c:213:26
  STRWui %87:gpr32common, %stack.14.ble, 0, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21

bb.46.if.end128:
; predecessors: %bb.44, %bb.45
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  %89:gpr32 = LDRWui %stack.13.bls, 0, debug-location !375 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  %90:gpr32common = nsw SUBWrr %88:gpr32, %89:gpr32, debug-location !376; fft3d.c:214:23
  %91:gpr32common = nsw ADDWri %90:gpr32common, 1, 0, debug-location !377; fft3d.c:214:29
  STRWui %91:gpr32common, %stack.15.len, 0, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  STRWui $wzr, %stack.9.i, 0, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20

bb.47.for.cond131:
; predecessors: %bb.46, %bb.51
  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)

  %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  %94:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  dead $wzr = SUBSWrr %93:gpr32, %94:gpr32, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  Bcc 10, %bb.52, implicit killed $nzcv, debug-location !386; fft3d.c:215:13
  B %bb.48, debug-location !386; fft3d.c:215:13

bb.48.for.body133:
; predecessors: %bb.47
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  STRWui %139:gpr32, %stack.10.j, 0, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24

bb.49.for.cond134:
; predecessors: %bb.48, %bb.50
  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)

  %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  %141:gpr32 = LDRWui %stack.14.ble, 0, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  dead $wzr = SUBSWrr %140:gpr32, %141:gpr32, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  Bcc 12, %bb.51, implicit killed $nzcv, debug-location !396; fft3d.c:216:17
  B %bb.50, debug-location !396; fft3d.c:216:17

bb.50.for.body136:
; predecessors: %bb.49
  successors: %bb.49(0x80000000); %bb.49(100.00%)

  %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  %147:gpr32 = LDRWui %stack.13.bls, 0, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
  %149:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  %150:gpr64 = LDRSWui %stack.9.i, 0, debug-location !402 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
  %155:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
  %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
  %159:gpr64 = LDRSWui %stack.11.k, 0, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
  %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
  %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
  STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
  B %bb.49, debug-location !411; fft3d.c:216:17

bb.51.for.inc151:
; predecessors: %bb.49
  successors: %bb.47(0x80000000); %bb.47(100.00%)

  %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  %144:gpr32common = nsw ADDWri %143:gpr32common, 1, 0, debug-location !414; fft3d.c:215:34
  STRWui %144:gpr32common, %stack.9.i, 0, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  B %bb.47, debug-location !415; fft3d.c:215:13

bb.52.for.end153:
; predecessors: %bb.47
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  %97:gpr32 = LDRWui %stack.12.log, 0, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  %98:gpr32 = LDRWui %stack.15.len, 0, debug-location !420 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  %99:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  %100:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !422 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  %101:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !424; fft3d.c:220:13
  STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  $w0 = COPY %96:gpr32, debug-location !424; fft3d.c:220:13
  $w1 = COPY %97:gpr32, debug-location !424; fft3d.c:220:13
  $w2 = COPY %98:gpr32, debug-location !424; fft3d.c:220:13
  $w3 = COPY %99:gpr32, debug-location !424; fft3d.c:220:13
  $w4 = COPY %100:gpr32, debug-location !424; fft3d.c:220:13
  $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !424; fft3d.c:220:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !424; fft3d.c:220:13
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !425; fft3d.c:221:20
  PCN_STACKMAP 11, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %96:gpr32, %97:gpr32, %98:gpr32, %99:gpr32, %100:gpr32, %101:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !425 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:221:20
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !425; fft3d.c:221:20
  STRWui $wzr, %stack.9.i, 0, debug-location !425 :: (store 4 into %ir.i); fft3d.c:221:20

bb.53.for.cond154:
; predecessors: %bb.52, %bb.57
  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

  %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  %106:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  %107:gpr32common = SUBWri %106:gpr32common, 1, 0, debug-location !431; fft3d.c:221:33
  dead $wzr = SUBSWrr %105:gpr32, %107:gpr32common, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  Bcc 12, %bb.58, implicit killed $nzcv, debug-location !433; fft3d.c:221:13
  B %bb.54, debug-location !433; fft3d.c:221:13

bb.54.for.body157:
; predecessors: %bb.53
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  STRWui %113:gpr32, %stack.10.j, 0, debug-location !437 :: (store 4 into %ir.j); fft3d.c:222:24

bb.55.for.cond158:
; predecessors: %bb.54, %bb.56
  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

  %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  %115:gpr32 = LDRWui %stack.14.ble, 0, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  dead $wzr = SUBSWrr %114:gpr32, %115:gpr32, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  Bcc 12, %bb.57, implicit killed $nzcv, debug-location !443; fft3d.c:222:17
  B %bb.56, debug-location !443; fft3d.c:222:17

bb.56.for.body160:
; predecessors: %bb.55
  successors: %bb.55(0x80000000); %bb.55(100.00%)

  %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  %120:gpr32 = LDRWui %stack.10.j, 0, debug-location !446 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  %121:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
  %123:gpr32 = LDRWui %stack.11.k, 0, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  %124:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !450 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  %125:gpr32 = LDRWui %stack.9.i, 0, debug-location !451 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
  %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
  %130:gpr32 = LDRWui %stack.13.bls, 0, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
  %132:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
  %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  %137:gpr32common = LDRWui %stack.10.j, 0, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
  STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42
  B %bb.55, debug-location !465; fft3d.c:222:17

bb.57.for.inc176:
; predecessors: %bb.55
  successors: %bb.53(0x80000000); %bb.53(100.00%)

  %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  %118:gpr32common = nsw ADDWri %117:gpr32common, 1, 0, debug-location !468; fft3d.c:221:39
  STRWui %118:gpr32common, %stack.9.i, 0, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  B %bb.53, debug-location !469; fft3d.c:221:13

bb.58.for.inc179:
; predecessors: %bb.53
  successors: %bb.43(0x80000000); %bb.43(100.00%)

  %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  %111:gpr32 = LDRWui %stack.13.bls, 0, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  %112:gpr32 = nsw ADDWrr %111:gpr32, %110:gpr32, debug-location !473; fft3d.c:210:37
  STRWui %112:gpr32, %stack.13.bls, 0, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  B %bb.43, debug-location !474; fft3d.c:210:9

bb.59.for.inc182:
; predecessors: %bb.43
  successors: %bb.41(0x80000000); %bb.41(100.00%)

  %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  %78:gpr32common = nsw ADDWri %77:gpr32common, 1, 0, debug-location !477; fft3d.c:209:26
  STRWui %78:gpr32common, %stack.11.k, 0, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  B %bb.41, debug-location !478; fft3d.c:209:5

bb.60.for.end184:
; predecessors: %bb.41
  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)

  %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  %68:gpr32 = LDRWui %67:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  CBZW %68:gpr32, %bb.62, debug-location !483; fft3d.c:229:9
  B %bb.61, debug-location !483; fft3d.c:229:9

bb.61.if.then186:
; predecessors: %bb.60
  successors: %bb.62(0x80000000); %bb.62(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !484; fft3d.c:230:9
  $w0 = MOVi32imm 9, debug-location !484; fft3d.c:230:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !484; fft3d.c:230:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !484; fft3d.c:230:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !484; fft3d.c:230:9
  PCN_STACKMAP 12, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !484; fft3d.c:230:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !484; fft3d.c:230:9

bb.62.if.end187:
; predecessors: %bb.60, %bb.61
  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)

  %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  %71:gpr32 = LDRWui %70:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  CBZW %71:gpr32, %bb.64, debug-location !487; fft3d.c:231:9
  B %bb.63, debug-location !487; fft3d.c:231:9

bb.63.if.then189:
; predecessors: %bb.62
  successors: %bb.64(0x80000000); %bb.64(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !488; fft3d.c:232:9
  $w0 = MOVi32imm 3, debug-location !488; fft3d.c:232:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !488; fft3d.c:232:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !488; fft3d.c:232:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !488; fft3d.c:232:9
  PCN_STACKMAP 13, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !488; fft3d.c:232:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !488; fft3d.c:232:9

bb.64.if.end190:
; predecessors: %bb.62, %bb.63

  RET_ReallyLR debug-location !489; fft3d.c:233:1

# End machine code for function fftXYZ.

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: %7:gpr64 = COPY $x5
    To: CBZW %11:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
GPR32=6
Live In: W0 W1 W2 W3 W4 W5 
Live Out: %1 %0 
Live Thru: 
  LiveReg: %1
  LiveReg: %0
  LiveReg: %11
Top Pressure:
GPR32=6
Bottom Pressure:
GPR32=3
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %7:gpr64 = COPY $x5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(11): Data Latency=0 Reg=%7
  Pressure Diff      : 
  Single Issue       : false;
SU(1):   %6:gpr64 = COPY $x4
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(10): Data Latency=0 Reg=%6
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %5:gpr32 = COPY $w3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(9): Data Latency=0 Reg=%5
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %4:gpr32 = COPY $w2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(12): Data Latency=0 Reg=%4
    SU(8): Data Latency=0 Reg=%4
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %3:gpr32common = COPY $w1
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(13): Data Latency=0 Reg=%3
    SU(7): Data Latency=0 Reg=%3
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %2:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%2
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%2
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%3
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%4
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%4
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%3
  Pressure Diff      : 
  Single Issue       : false;
SU(14):   %10:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(15): Data Latency=1 Reg=%10
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(15):   %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(14): Data Latency=1 Reg=%10
  Successors:
    ExitSU: Data Latency=4 Reg=%11
  Pressure Diff      : GPR64temp 1
  Single Issue       : false;
ExitSU:   CBZW %11:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(15): Data Latency=4 Reg=%11
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 14 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %7:gpr64 = COPY $x5
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 1 2 3 4 5 11 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %6:gpr64 = COPY $x4
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 2 3 4 5 10 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(2) PHYS-REG                           
  Cand SU(2) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(2) %5:gpr32 = COPY $w3
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 3 4 5 9 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(3) PHYS-REG                           
  Cand SU(3) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(3) %4:gpr32 = COPY $w2
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 4 5 12 8 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(4) PHYS-REG                           
  Cand SU(4) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(4) %3:gpr32common = COPY $w1
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 5 12 13 7 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(5) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(5) %2:gpr32 = COPY $w0
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 12 13 6 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
Bottom Pressure:
GPR32=3
  LiveReg: %3
  UpdateRegP: SU(7) STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
              to 
  UpdateRegP: SU(13) undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
              to GPR32 -1
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 12 6 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
Bottom Pressure:
GPR32=3
  LiveReg: %4
  UpdateRegP: SU(8) STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
              to 
  UpdateRegP: SU(12) undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
              to GPR32 -1
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 7 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 6 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
Bottom Pressure:
GPR32=4
  LiveReg: %7
  UpdateRegP: SU(11) STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
              to 
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 7 8 10 9 
Queue TopQ.P: 
Queue TopQ.A: 14 6 10 9 8 7 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %6
  UpdateRegP: SU(10) STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
              to 
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 15 
Queue TopQ.P: 
Queue TopQ.A: 14 6 7 9 8 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(15) %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
Bottom Pressure:
GPR64temp=1
GPR32=5
  LiveReg: %10
  UpdateRegP: SU(15) %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(15) 1c
  BotQ.A BotLatency SU(15) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 14 
Queue TopQ.P: 
Queue TopQ.A: 14 6 7 9 8 
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %10:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A BotLatency SU(14) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 
Queue TopQ.P: 
Queue TopQ.A: 8 6 7 9 
  BotQ.A RemainingLatency 0 + 6c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %5
  UpdateRegP: SU(9) STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
              to 
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 
Queue TopQ.P: 
Queue TopQ.A: 8 6 7 
  BotQ.A RemainingLatency 0 + 7c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
Bottom Pressure:
GPR32=5
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
Queue TopQ.P: 
Queue TopQ.A: 7 6 
  BotQ.A RemainingLatency 0 + 8c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
Bottom Pressure:
GPR32=5
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
Bottom Pressure:
GPR32=6
  LiveReg: %2
  UpdateRegP: SU(6) STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
              to 
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %7:gpr64 = COPY $x5
SU(1):   %6:gpr64 = COPY $x4
SU(2):   %5:gpr32 = COPY $w3
SU(3):   %4:gpr32 = COPY $w2
SU(4):   %3:gpr32common = COPY $w1
SU(5):   %2:gpr32 = COPY $w0
SU(6):   STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
SU(7):   STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
SU(8):   STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
SU(9):   STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
SU(14):   %10:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
SU(15):   %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
SU(10):   STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
SU(11):   STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
SU(12):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
SU(13):   undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: %21:gpr32 = COPY killed $w8, debug-location !104; fft3d.c:158:11
    To: CBZW %23:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %21:gpr32 = COPY killed $w8, debug-location !104; fft3d.c:158:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%21
  Single Issue       : false;
SU(1):   STRWui %21:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%21
  Single Issue       : false;
SU(2):   %22:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=1 Reg=%22
  Single Issue       : false;
SU(3):   %23:gpr32 = LDRWui %22:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%22
  Successors:
    ExitSU: Data Latency=4 Reg=%23
  Single Issue       : false;
ExitSU:   CBZW %23:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=%23
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %21:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %21:gpr32 = COPY killed $w8, debug-location !104; fft3d.c:158:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %23:gpr32 = LDRWui %22:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  Ready @4c
  BotQ.A TopLatency SU(3) 1c
  BotQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %22:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(2):   %22:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
SU(3):   %23:gpr32 = LDRWui %22:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
SU(0):   %21:gpr32 = COPY $w8, debug-location !104; fft3d.c:158:11
SU(1):   STRWui %21:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
GPR32=4
Live In: 
Live Out: %13 
Live Thru: 
  LiveReg: %13
  UpdateRegP: SU(2) %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
              to 
Top Pressure:

Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%13
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %14:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%14
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%14
    SU(0): Data Latency=4 Reg=%13
  Successors:
    SU(6): Data Latency=1 Reg=%15
    SU(4): Data Latency=1 Reg=%15
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %16:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%16
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(4):   dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%15
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %18:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(6): Data Latency=1 Reg=%18
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%15
    SU(4): Data Latency=1 Reg=$nzcv
    SU(5): Data Latency=1 Reg=%18
  Successors:
    SU(8): Data Latency=1 Reg=%19
    SU(7): Data Latency=1 Reg=%19
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%19
    SU(3): Data Latency=1 Reg=%16
  Pressure Diff      : GPR64temp 1    GPR32 2
  Single Issue       : false;
SU(8):   %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%19
  Successors:
    SU(9): Data Latency=1 Reg=%20
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%20
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
Bottom Pressure:
GPR32=2
  LiveReg: %20
  UpdateRegP: SU(9) STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
              to 
  Ready @0c
  BotQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(7) 7c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
Bottom Pressure:
GPR32=2
  LiveReg: %19
  UpdateRegP: SU(7) STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to GPR64temp 1    GPR32 1
  UpdateRegP: SU(8) %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
Bottom Pressure:
GPR64temp=1
GPR32=3
  LiveReg: %16
  UpdateRegP: SU(7) STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to 
  Ready @2c
  BotQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 8
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %18
  UpdateRegP: SU(6) %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
              to 
  LiveReg: %15
  UpdateRegP: SU(4) dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
              to 
  UpdateRegP: SU(6) %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit killed $nzcv, debug-location !98; fft3d.c:155:9
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(4) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  Ready @4c
  BotQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %14
  UpdateRegP: SU(2) %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
              to GPR32 -1
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 5 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %18:gpr32 = MOVi32imm 32
Bottom Pressure:
GPR64temp=1
GPR32=3
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
  BotQ.A RemainingLatency 2 + 7c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %16:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
Bottom Pressure:
GPR32=2
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %14:gpr32 = MOVi32imm 8192
Bottom Pressure:
GPR32=1
  Ready @8c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
Bottom Pressure:

  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
SU(1):   %14:gpr32 = MOVi32imm 8192
SU(3):   %16:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
SU(5):   %18:gpr32 = MOVi32imm 32
SU(2):   %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
SU(4):   dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
SU(6):   %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
SU(7):   STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(8):   %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
SU(9):   STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10

********** MI Scheduling **********
fftXYZ:%bb.4 if.end8
  From: STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
    To: End RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %208:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %280:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(3):   %283:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %283:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %280:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 2c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %208:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
SU(1):   %208:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
SU(2):   %280:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
SU(3):   %283:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

********** MI Scheduling **********
fftXYZ:%bb.5 for.cond
  From: %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
    To: Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%26
  Single Issue       : false;
SU(1):   %27:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%27
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %26:gpr32, %27:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%27
    SU(0): Data Latency=4 Reg=%26
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %26:gpr32, %27:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %27:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
SU(1):   %27:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
SU(2):   dead $wzr = SUBSWrr %26:gpr32, %27:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5

********** MI Scheduling **********
fftXYZ:%bb.7 for.cond10
  From: %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
    To: Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%202
  Single Issue       : false;
SU(1):   %203:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%203
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %202:gpr32, %203:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%203
    SU(0): Data Latency=4 Reg=%202
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %202:gpr32, %203:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %203:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
SU(1):   %203:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
SU(2):   dead $wzr = SUBSWrr %202:gpr32, %203:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9

********** MI Scheduling **********
fftXYZ:%bb.8 for.body12
  From: %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
    To: Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%207
  Single Issue       : false;
SU(1):   %209:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%209
  Single Issue       : false;
SU(2):   %210:gpr32common = nsw ADDWrr %207:gpr32, %209:gpr32, debug-location !130; fft3d.c:163:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%209
    SU(0): Data Latency=4 Reg=%207
  Successors:
    SU(3): Data Latency=1 Reg=%210
  Single Issue       : false;
SU(3):   %211:gpr32common = SUBWri %210:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%210
  Successors:
    SU(6): Data Latency=1 Reg=%211
    SU(4): Data Latency=1 Reg=%211
  Single Issue       : false;
SU(4):   STRWui %211:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%211
  Single Issue       : false;
SU(5):   %212:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%212
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %211:gpr32common, %212:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%211
    SU(5): Data Latency=4 Reg=%212
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %211:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %211:gpr32common, %212:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %211:gpr32common = SUBWri %210:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %210:gpr32common = nsw ADDWrr %207:gpr32, %209:gpr32, debug-location !130; fft3d.c:163:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %212:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %209:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
SU(1):   %209:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
SU(5):   %212:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
SU(2):   %210:gpr32common = nsw ADDWrr %207:gpr32, %209:gpr32, debug-location !130; fft3d.c:163:23
SU(3):   %211:gpr32common = SUBWri %210:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
SU(6):   dead $wzr = SUBSWrr %211:gpr32common, %212:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
SU(4):   STRWui %211:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17

********** MI Scheduling **********
fftXYZ:%bb.9 if.then15
  From: %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%214
  Single Issue       : false;
SU(1):   %215:gpr32common = SUBWri %214:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%214
  Successors:
    SU(2): Data Latency=1 Reg=%215
  Single Issue       : false;
SU(2):   STRWui %215:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%215
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %215:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %215:gpr32common = SUBWri %214:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
SU(1):   %215:gpr32common = SUBWri %214:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
SU(2):   STRWui %215:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

********** MI Scheduling **********
fftXYZ:%bb.10 if.end17
  From: %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
    To: End RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%216
  Single Issue       : false;
SU(1):   %217:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Data Latency=4 Reg=%217
    SU(2): Data Latency=4 Reg=%217
  Single Issue       : false;
SU(2):   %218:gpr32common = nsw SUBWrr %216:gpr32, %217:gpr32, debug-location !144; fft3d.c:166:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%217
    SU(0): Data Latency=4 Reg=%216
  Successors:
    SU(3): Data Latency=1 Reg=%218
  Single Issue       : false;
SU(3):   %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%218
  Successors:
    SU(4): Data Latency=1 Reg=%219
  Single Issue       : false;
SU(4):   STRWui %219:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%219
  Single Issue       : false;
SU(5):   STRWui %217:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%217
  Single Issue       : false;
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) STRWui %217:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  Ready @0c
  BotQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %219:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %218:gpr32common = nsw SUBWrr %216:gpr32, %217:gpr32, debug-location !144; fft3d.c:166:23
  Ready @3c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %217:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
  Ready @7c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
SU(1):   %217:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
SU(2):   %218:gpr32common = nsw SUBWrr %216:gpr32, %217:gpr32, debug-location !144; fft3d.c:166:23
SU(3):   %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
SU(4):   STRWui %219:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
SU(5):   STRWui %217:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

********** MI Scheduling **********
fftXYZ:%bb.11 for.cond20
  From: %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%220
  Single Issue       : false;
SU(1):   %221:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%221
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %220:gpr32, %221:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%221
    SU(0): Data Latency=4 Reg=%220
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %220:gpr32, %221:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %221:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
SU(1):   %221:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
SU(2):   dead $wzr = SUBSWrr %220:gpr32, %221:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13

********** MI Scheduling **********
fftXYZ:%bb.13 for.cond23
  From: %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
    To: Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%266
  Single Issue       : false;
SU(1):   %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%267
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%267
    SU(0): Data Latency=4 Reg=%266
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
SU(1):   %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
SU(2):   dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !164; fft3d.c:168:17

********** MI Scheduling **********
fftXYZ:%bb.14 for.body25
  From: %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
    To: B %bb.13, debug-location !179; fft3d.c:168:17
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: %280 %1 %283 
Live Out: %280 %1 %283 
Live Thru: GPR32=3
  LiveReg: %280
  UpdateRegP: SU(13) STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  LiveReg: %1
  UpdateRegP: SU(10) %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %283
  UpdateRegP: SU(8) %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
              to 
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(10): Data Latency=4 Reg=%271
    SU(2): Data Latency=4 Reg=%271
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %273:gpr32 = LDRWui %stack.13.bls, 0, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%273
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%273
    SU(0): Data Latency=4 Reg=%271
  Successors:
    SU(5): Data Latency=1 Reg=%274
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %275:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%275
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(4):   %276:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(14): Data Latency=4 Reg=%276
    SU(12): Data Latency=4 Reg=%276
    SU(5): Data Latency=4 Reg=%276
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%274
    SU(3): Data Latency=4 Reg=%275
    SU(4): Data Latency=4 Reg=%276
  Successors:
    SU(13): Data Latency=1 Reg=%279
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(6):   %281:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(9): Data Latency=4 Reg=%281
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %282:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(8): Data Latency=4 Reg=%282
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(7): Data Latency=4 Reg=%282
  Successors:
    SU(9): Data Latency=1 Reg=%284
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(8): Data Latency=1 Reg=%284
    SU(6): Data Latency=4 Reg=%281
  Successors:
    SU(11): Data Latency=1 Reg=%285
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(0): Data Latency=4 Reg=%271
  Successors:
    SU(11): Data Latency=1 Reg=%286
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(9): Data Latency=1 Reg=%285
    SU(10): Data Latency=1 Reg=%286
  Successors:
    SU(12): Data Latency=1 Reg=%287
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(11): Data Latency=1 Reg=%287
    SU(4): Data Latency=4 Reg=%276
  Successors:
    SU(13): Data Latency=4 Reg=%288
    SU(15): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(13):   STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=4 Reg=%288
    SU(12): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%279
  Pressure Diff      : FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(14):   %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(4): Data Latency=4 Reg=%276
  Successors:
    SU(15): Data Latency=1 Reg=%289
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%289
    SU(12): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.13, debug-location !179; fft3d.c:168:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 11
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 7 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
Bottom Pressure:
GPR32=4
  LiveReg: %289
  UpdateRegP: SU(15) STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
              to 
  Ready @0c
  BotQ.A TopLatency SU(15) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 7 
BotQ.A RemLatency SU(13) 11c
  BotQ.A RemainingLatency 11 + 1c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %288
  UpdateRegP: SU(13) STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to GPR32 1
  LiveReg: %279
  UpdateRegP: SU(13) STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
              to 
  Ready @1c
  BotQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 14 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 7 
BotQ.A RemLatency SU(5) 5c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 10 + 2c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
  Cand SU(5) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %275
  UpdateRegP: SU(5) %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
              to GPR32 1
  LiveReg: %276
  UpdateRegP: SU(5) %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
              to 
  UpdateRegP: SU(12) %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(14) %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
              to GPR32 -1
  LiveReg: %274
  UpdateRegP: SU(5) %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 14 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 7 
BotQ.A RemLatency SU(14) 4c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 9 + 3c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %271
  UpdateRegP: SU(2) %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
              to 
  UpdateRegP: SU(10) %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  LiveReg: %273
  UpdateRegP: SU(2) %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 3 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %287
  UpdateRegP: SU(12) %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @5c
  BotQ.A BotLatency SU(12) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 4 
Queue BotQ.A: 11 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 7 
BotQ.A RemLatency SU(11) 6c
  BotQ.A RemainingLatency 6 + 6c > CritPath 11
Picking from Bot:
  Cand SU(11) ORDER                              
  Cand SU(3) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %275:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
Bottom Pressure:
GPR32=7
  Ready @6c
  BotQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 4 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %285
  UpdateRegP: SU(11) %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %286
  UpdateRegP: SU(11) %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 9 10 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 4 6 
BotQ.A RemLatency SU(9) 5c
  BotQ.A RemainingLatency 5 + 8c > CritPath 11
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(10) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(10) %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=7
  Ready @8c
  BotQ.A BotLatency SU(10) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 9 1 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 4 6 
BotQ.A RemLatency SU(9) 5c
  BotQ.A RemainingLatency 5 + 9c > CritPath 11
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %281
  UpdateRegP: SU(9) %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
              to 
  LiveReg: %284
  UpdateRegP: SU(9) %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @9c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 6 
Queue BotQ.A: 4 1 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 4 6 
BotQ.A RemLatency SU(8) 4c
  BotQ.A RemainingLatency 4 + 10c > CritPath 11
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(8) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
Bottom Pressure:
GPR32=8
  LiveReg: %282
  UpdateRegP: SU(8) %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
              to GPR32 -1
  Ready @10c
  BotQ.A BotLatency SU(8) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 6 7 
Queue BotQ.A: 4 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 4 6 
  BotQ.A RemainingLatency 3 + 11c > CritPath 11
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %276:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
Bottom Pressure:
GPR32=7
  Ready @11c
  BotQ.A BotLatency SU(4) 8c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 6 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 7 6 
  BotQ.A RemainingLatency 0 + 12c > CritPath 11
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %273:gpr32 = LDRWui %stack.13.bls, 0, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
Bottom Pressure:
GPR32=6
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 
Queue BotQ.A: 0 6 
Queue TopQ.P: 
Queue TopQ.A: 0 6 7 
  BotQ.A RemainingLatency 0 + 13c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %281:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
Bottom Pressure:
GPR32=5
  Ready @13c
  BotQ.A BotLatency SU(6) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 7 
  BotQ.A RemainingLatency 0 + 14c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %282:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
Bottom Pressure:
GPR32=4
  Ready @14c
  BotQ.A BotLatency SU(7) 11c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
Bottom Pressure:
GPR32=3
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
SU(7):   %282:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
SU(6):   %281:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
SU(1):   %273:gpr32 = LDRWui %stack.13.bls, 0, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
SU(4):   %276:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
SU(8):   %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
SU(9):   %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
SU(10):   %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
SU(11):   %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
SU(3):   %275:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
SU(12):   %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
SU(2):   %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
SU(14):   %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
SU(5):   %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
SU(13):   STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
SU(15):   STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38

********** MI Scheduling **********
fftXYZ:%bb.15 for.inc35
  From: %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
    To: B %bb.11, debug-location !183; fft3d.c:167:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%269
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %270:gpr32common = nsw ADDWri %269:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%269
  Successors:
    SU(2): Data Latency=1 Reg=%270
  Single Issue       : false;
SU(2):   STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%270
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.11, debug-location !183; fft3d.c:167:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %270:gpr32common = nsw ADDWri %269:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
SU(1):   %270:gpr32common = nsw ADDWri %269:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
SU(2):   STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%231
  Single Issue       : false;
SU(1):   STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%231
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
SU(1):   STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $w0 = COPY %223:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w1 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w2 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w3 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $w4 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $w4 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w3 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = COPY %223:gpr32, debug-location !192; fft3d.c:172:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !192; fft3d.c:172:13
  Ready @1c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(6):   $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !192; fft3d.c:172:13
SU(0):   STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
SU(1):   $w0 = COPY %223:gpr32, debug-location !192; fft3d.c:172:13
SU(2):   $w1 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
SU(3):   $w2 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
SU(4):   $w3 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
SU(5):   $w4 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
    To: ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %224:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %225:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %226:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %227:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %228:gpr64 = LDRXui %fixed-stack.2, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 0 1 2 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %228:gpr64 = LDRXui %fixed-stack.2, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  BotQ.A RemainingLatency 0 + 4c > CritPath 3
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %227:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 5c > CritPath 3
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %226:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 6c > CritPath 3
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %225:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 3
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %224:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
SU(1):   %224:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
SU(2):   %225:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
SU(3):   %226:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
SU(4):   %227:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
SU(5):   %228:gpr64 = LDRXui %fixed-stack.2, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59

********** MI Scheduling **********
fftXYZ:%bb.17 for.cond38
  From: %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
    To: Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%232
  Single Issue       : false;
SU(1):   %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%233
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%233
    SU(0): Data Latency=4 Reg=%232
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.17 ***
SU(0):   %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
SU(1):   %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
SU(2):   dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13

********** MI Scheduling **********
fftXYZ:%bb.19 for.cond41
  From: %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
    To: Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%240
  Single Issue       : false;
SU(1):   %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%241
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%241
    SU(0): Data Latency=4 Reg=%240
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.19 ***
SU(0):   %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
SU(1):   %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
SU(2):   dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17

********** MI Scheduling **********
fftXYZ:%bb.20 for.body43
  From: %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
    To: B %bb.19, debug-location !225; fft3d.c:174:17
 RegionInstrs: 18
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: %280 %1 %0 
Live Out: %280 %1 %0 
Live Thru: GPR32=3
  LiveReg: %280
  UpdateRegP: SU(13) %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  LiveReg: %1
  UpdateRegP: SU(2) %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to 
  UpdateRegP: SU(6) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %0
  UpdateRegP: SU(2) %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to GPR32 -1
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(4): Data Latency=4 Reg=%245
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 13
  Successors:
    SU(3): Data Latency=4 Reg=%246
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
    SU(3): Data Latency=1 Reg=%247
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(2): Data Latency=1 Reg=%247
    SU(1): Data Latency=4 Reg=%246
  Successors:
    SU(4): Data Latency=1 Reg=%248
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(3): Data Latency=1 Reg=%248
    SU(0): Data Latency=4 Reg=%245
  Successors:
    SU(7): Data Latency=1 Reg=%249
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%250
    SU(6): Data Latency=4 Reg=%250
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(5): Data Latency=4 Reg=%250
  Successors:
    SU(7): Data Latency=1 Reg=%252
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
    SU(4): Data Latency=1 Reg=%249
    SU(6): Data Latency=1 Reg=%252
  Successors:
    SU(14): Data Latency=1 Reg=%253
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(14): Data Latency=4 Reg=%254
    SU(12): Data Latency=4 Reg=%254
    SU(17): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%256
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(9): Data Latency=4 Reg=%256
    SU(5): Data Latency=4 Reg=%250
  Successors:
    SU(12): Data Latency=1 Reg=%257
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(12): Data Latency=4 Reg=%258
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(12):   %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(10): Data Latency=1 Reg=%257
    SU(11): Data Latency=4 Reg=%258
    SU(8): Data Latency=4 Reg=%254
  Successors:
    SU(13): Data Latency=1 Reg=%260
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(13):   %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(12): Data Latency=1 Reg=%260
  Successors:
    SU(14): Data Latency=4 Reg=%262
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(14):   STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  # preds left       : 10
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(13): Data Latency=4 Reg=%262
    SU(13): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Data Latency=4 Reg=%254
    SU(8): Ord  Latency=0 Memory
    SU(7): Data Latency=1 Reg=%253
    SU(5): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(17): Ord  Latency=0 Memory
    SU(15): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(15):   %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(16): Data Latency=4 Reg=%263
    SU(17): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(16):   %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(15): Data Latency=4 Reg=%263
  Successors:
    SU(17): Data Latency=1 Reg=%264
  Pressure Diff      : 
  Single Issue       : false;
SU(17):   STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%264
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.19, debug-location !225; fft3d.c:174:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
Bottom Pressure:
GPR32=4
  LiveReg: %264
  UpdateRegP: SU(17) STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
              to 
  Ready @0c
  BotQ.A TopLatency SU(17) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
Bottom Pressure:
GPR32=4
  LiveReg: %263
  UpdateRegP: SU(16) %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(16) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
Bottom Pressure:
GPR32=3
  Ready @5c
  BotQ.A BotLatency SU(15) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %262
  UpdateRegP: SU(14) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to GPR32 2
  LiveReg: %253
  UpdateRegP: SU(14) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to GPR32 1
  LiveReg: %254
  UpdateRegP: SU(12) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to GPR32 1
  UpdateRegP: SU(14) STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
              to 
  Ready @6c
  BotQ.A BotLatency SU(14) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %249
  UpdateRegP: SU(7) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %252
  UpdateRegP: SU(7) %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @7c
  BotQ.A BotLatency SU(7) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 4 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 8 9 11 
BotQ.A RemLatency SU(4) 5c
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %250
  UpdateRegP: SU(6) %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  UpdateRegP: SU(10) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
              to 
  Ready @8c
  BotQ.A BotLatency SU(6) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %245
  UpdateRegP: SU(4) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %248
  UpdateRegP: SU(4) %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 8 9 11 
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(13) %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
Bottom Pressure:
GPR32=8
  LiveReg: %260
  UpdateRegP: SU(13) %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @10c
  BotQ.A BotLatency SU(13) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 8 9 11 
BotQ.A RemLatency SU(12) 5c
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
Bottom Pressure:
GPR32=9
  LiveReg: %258
  UpdateRegP: SU(12) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to 
  LiveReg: %257
  UpdateRegP: SU(12) %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
              to GPR32 -1
  Ready @11c
  BotQ.A BotLatency SU(12) 11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 11 8 
Queue BotQ.A: 3 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 8 9 11 
BotQ.A RemLatency SU(3) 4c
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(10) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(10) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
Bottom Pressure:
GPR32=9
  LiveReg: %256
  UpdateRegP: SU(10) %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
              to GPR32 -1
  Ready @12c
  BotQ.A BotLatency SU(10) 12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 11 8 9 
Queue BotQ.A: 3 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 5 8 9 11 
BotQ.A RemLatency SU(3) 4c
  BotQ.A RemainingLatency 4 + 13c > CritPath 16
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(0) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(0) %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
Bottom Pressure:
GPR32=8
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 11 8 9 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
Bottom Pressure:
GPR32=9
  LiveReg: %246
  UpdateRegP: SU(3) %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
              to 
  LiveReg: %247
  UpdateRegP: SU(3) %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
              to GPR32 -1
  Ready @14c
  BotQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 1 9 
Queue BotQ.A: 2 11 8 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 5 8 9 
  BotQ.A RemainingLatency 3 + 15c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(11) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
Bottom Pressure:
GPR32=8
  Ready @15c
  BotQ.A BotLatency SU(11) 15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 2 8 5 9 
Queue TopQ.P: 
Queue TopQ.A: 9 1 2 5 8 
  BotQ.A RemainingLatency 2 + 16c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
Bottom Pressure:
GPR32=7
  Ready @16c
  BotQ.A BotLatency SU(9) 16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 2 8 5 
Queue TopQ.P: 
Queue TopQ.A: 8 1 2 5 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
Bottom Pressure:
GPR32=6
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 5 1 
Queue TopQ.P: 
Queue TopQ.A: 5 1 2 
  BotQ.A RemainingLatency 0 + 18c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
Bottom Pressure:
GPR32=5
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  BotQ.A RemainingLatency 0 + 19c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
Bottom Pressure:
GPR32=4
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
Bottom Pressure:
GPR32=3
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 18
  Executed: 21c
  Critical: 18c, 18 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.20 ***
SU(1):   %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
SU(2):   %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
SU(5):   %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
SU(8):   %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
SU(9):   %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
SU(11):   %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
SU(3):   %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
SU(0):   %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
SU(10):   %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
SU(12):   %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
SU(13):   %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
SU(4):   %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
SU(6):   %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
SU(7):   %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
SU(14):   STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
SU(15):   %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
SU(16):   %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
SU(17):   STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38

********** MI Scheduling **********
fftXYZ:%bb.21 for.inc58
  From: %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
    To: B %bb.17, debug-location !229; fft3d.c:173:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%243
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%243
  Successors:
    SU(2): Data Latency=1 Reg=%244
  Single Issue       : false;
SU(2):   STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%244
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.17, debug-location !229; fft3d.c:173:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
SU(1):   %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
SU(2):   STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38

********** MI Scheduling **********
fftXYZ:%bb.22 for.inc61
  From: %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
    To: B %bb.7, debug-location !234; fft3d.c:162:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%236
  Single Issue       : false;
SU(1):   %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%237
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%237
    SU(0): Data Latency=4 Reg=%236
  Successors:
    SU(3): Data Latency=1 Reg=%238
  Single Issue       : false;
SU(3):   STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%238
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.7, debug-location !234; fft3d.c:162:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
SU(1):   %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
SU(2):   %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
SU(3):   STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37

********** MI Scheduling **********
fftXYZ:%bb.23 for.inc64
  From: %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
    To: B %bb.5, debug-location !238; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%205
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %206:gpr32common = nsw ADDWri %205:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%205
  Successors:
    SU(2): Data Latency=1 Reg=%206
  Single Issue       : false;
SU(2):   STRWui %206:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%206
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.5, debug-location !238; fft3d.c:161:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %206:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %206:gpr32common = nsw ADDWri %205:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
SU(1):   %206:gpr32common = nsw ADDWri %205:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
SU(2):   STRWui %206:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26

********** MI Scheduling **********
fftXYZ:%bb.24 for.end66
  From: %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
    To: CBZW %30:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%29
  Single Issue       : false;
SU(1):   %30:gpr32 = LDRWui %29:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%29
  Successors:
    ExitSU: Data Latency=4 Reg=%30
  Single Issue       : false;
ExitSU:   CBZW %30:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%30
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %30:gpr32 = LDRWui %29:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
SU(1):   %30:gpr32 = LDRWui %29:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: %40:gpr32 = COPY $w8, debug-location !256; fft3d.c:187:11
    To: CBZW %42:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %40:gpr32 = COPY $w8, debug-location !256; fft3d.c:187:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%40
  Single Issue       : false;
SU(1):   STRWui %40:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%40
  Single Issue       : false;
SU(2):   %41:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=1 Reg=%41
  Single Issue       : false;
SU(3):   %42:gpr32 = LDRWui %41:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%41
  Successors:
    ExitSU: Data Latency=4 Reg=%42
  Single Issue       : false;
ExitSU:   CBZW %42:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=%42
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %40:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %40:gpr32 = COPY $w8, debug-location !256; fft3d.c:187:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %42:gpr32 = LDRWui %41:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  Ready @4c
  BotQ.A TopLatency SU(3) 1c
  BotQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %41:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(2):   %41:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
SU(3):   %42:gpr32 = LDRWui %41:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
SU(0):   %40:gpr32 = COPY $w8, debug-location !256; fft3d.c:187:11
SU(1):   STRWui %40:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
GPR32=4
Live In: 
Live Out: %32 
Live Thru: 
  LiveReg: %32
  UpdateRegP: SU(2) %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
              to 
Top Pressure:

Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%32
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %33:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%33
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%33
    SU(0): Data Latency=4 Reg=%32
  Successors:
    SU(6): Data Latency=1 Reg=%34
    SU(4): Data Latency=1 Reg=%34
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %35:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%35
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(4):   dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%34
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %37:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(6): Data Latency=1 Reg=%37
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%34
    SU(4): Data Latency=1 Reg=$nzcv
    SU(5): Data Latency=1 Reg=%37
  Successors:
    SU(8): Data Latency=1 Reg=%38
    SU(7): Data Latency=1 Reg=%38
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%38
    SU(3): Data Latency=1 Reg=%35
  Pressure Diff      : GPR64temp 1    GPR32 2
  Single Issue       : false;
SU(8):   %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%38
  Successors:
    SU(9): Data Latency=1 Reg=%39
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%39
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
Bottom Pressure:
GPR32=2
  LiveReg: %39
  UpdateRegP: SU(9) STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
              to 
  Ready @0c
  BotQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(7) 7c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
Bottom Pressure:
GPR32=2
  LiveReg: %38
  UpdateRegP: SU(7) STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to GPR64temp 1    GPR32 1
  UpdateRegP: SU(8) %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
Bottom Pressure:
GPR64temp=1
GPR32=3
  LiveReg: %35
  UpdateRegP: SU(7) STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to 
  Ready @2c
  BotQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 8
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %37
  UpdateRegP: SU(6) %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
              to 
  LiveReg: %34
  UpdateRegP: SU(4) dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
              to 
  UpdateRegP: SU(6) %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(4) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  Ready @4c
  BotQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %33
  UpdateRegP: SU(2) %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
              to GPR32 -1
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 5 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %37:gpr32 = MOVi32imm 32
Bottom Pressure:
GPR64temp=1
GPR32=3
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
  BotQ.A RemainingLatency 2 + 7c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %35:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
Bottom Pressure:
GPR32=2
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %33:gpr32 = MOVi32imm 8192
Bottom Pressure:
GPR32=1
  Ready @8c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
Bottom Pressure:

  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
SU(1):   %33:gpr32 = MOVi32imm 8192
SU(3):   %35:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
SU(5):   %37:gpr32 = MOVi32imm 32
SU(2):   %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
SU(4):   dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
SU(6):   %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
SU(7):   STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(8):   %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
SU(9):   STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10

********** MI Scheduling **********
fftXYZ:%bb.28 if.end78
  From: STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %171:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %190:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %190:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %171:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
SU(1):   %171:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
SU(2):   %190:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

********** MI Scheduling **********
fftXYZ:%bb.29 for.cond79
  From: %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
    To: Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%45
  Single Issue       : false;
SU(1):   %46:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%46
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %45:gpr32, %46:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%46
    SU(0): Data Latency=4 Reg=%45
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %45:gpr32, %46:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %46:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
SU(1):   %46:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
SU(2):   dead $wzr = SUBSWrr %45:gpr32, %46:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5

********** MI Scheduling **********
fftXYZ:%bb.31 for.cond82
  From: %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%165
  Single Issue       : false;
SU(1):   %166:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%166
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %165:gpr32, %166:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%166
    SU(0): Data Latency=4 Reg=%165
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %165:gpr32, %166:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %166:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
SU(1):   %166:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
SU(2):   dead $wzr = SUBSWrr %165:gpr32, %166:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9

********** MI Scheduling **********
fftXYZ:%bb.32 for.body84
  From: %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
    To: Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%170
  Single Issue       : false;
SU(1):   %172:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%172
  Single Issue       : false;
SU(2):   %173:gpr32common = nsw ADDWrr %170:gpr32, %172:gpr32, debug-location !282; fft3d.c:192:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%172
    SU(0): Data Latency=4 Reg=%170
  Successors:
    SU(3): Data Latency=1 Reg=%173
  Single Issue       : false;
SU(3):   %174:gpr32common = SUBWri %173:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%173
  Successors:
    SU(6): Data Latency=1 Reg=%174
    SU(4): Data Latency=1 Reg=%174
  Single Issue       : false;
SU(4):   STRWui %174:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%174
  Single Issue       : false;
SU(5):   %175:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%175
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %174:gpr32common, %175:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%174
    SU(5): Data Latency=4 Reg=%175
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %174:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %174:gpr32common, %175:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %174:gpr32common = SUBWri %173:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %173:gpr32common = nsw ADDWrr %170:gpr32, %172:gpr32, debug-location !282; fft3d.c:192:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %175:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %172:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
SU(1):   %172:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
SU(5):   %175:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
SU(2):   %173:gpr32common = nsw ADDWrr %170:gpr32, %172:gpr32, debug-location !282; fft3d.c:192:23
SU(3):   %174:gpr32common = SUBWri %173:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
SU(6):   dead $wzr = SUBSWrr %174:gpr32common, %175:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
SU(4):   STRWui %174:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17

********** MI Scheduling **********
fftXYZ:%bb.33 if.then88
  From: %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%177
  Single Issue       : false;
SU(1):   %178:gpr32common = SUBWri %177:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%177
  Successors:
    SU(2): Data Latency=1 Reg=%178
  Single Issue       : false;
SU(2):   STRWui %178:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%178
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %178:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %178:gpr32common = SUBWri %177:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
SU(1):   %178:gpr32common = SUBWri %177:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
SU(2):   STRWui %178:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
    To: B %bb.31, debug-location !314; fft3d.c:191:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%198
  Single Issue       : false;
SU(1):   %199:gpr32 = LDRWui %stack.13.bls, 0, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%199
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %200:gpr32 = nsw ADDWrr %199:gpr32, %198:gpr32, debug-location !313; fft3d.c:191:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%199
    SU(0): Data Latency=4 Reg=%198
  Successors:
    SU(3): Data Latency=1 Reg=%200
  Single Issue       : false;
SU(3):   STRWui %200:gpr32, %stack.13.bls, 0, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%200
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.31, debug-location !314; fft3d.c:191:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %200:gpr32, %stack.13.bls, 0, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %200:gpr32 = nsw ADDWrr %199:gpr32, %198:gpr32, debug-location !313; fft3d.c:191:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %199:gpr32 = LDRWui %stack.13.bls, 0, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
SU(1):   %199:gpr32 = LDRWui %stack.13.bls, 0, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
SU(2):   %200:gpr32 = nsw ADDWrr %199:gpr32, %198:gpr32, debug-location !313; fft3d.c:191:37
SU(3):   STRWui %200:gpr32, %stack.13.bls, 0, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $w0 = COPY %183:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w1 = COPY %184:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w2 = COPY %182:gpr32common, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w3 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $w4 = COPY %187:gpr32sp, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x5 = COPY %194:gpr64, debug-location !310; fft3d.c:196:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=0 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 6 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(6) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(6) $x5 = COPY %194:gpr64, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 5 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(5) $w4 = COPY %187:gpr32sp, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 4 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w3 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = COPY %182:gpr32common, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = COPY %184:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = COPY %183:gpr32, debug-location !310; fft3d.c:196:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
SU(1):   $w0 = COPY %183:gpr32, debug-location !310; fft3d.c:196:13
SU(2):   $w1 = COPY %184:gpr32, debug-location !310; fft3d.c:196:13
SU(3):   $w2 = COPY %182:gpr32common, debug-location !310; fft3d.c:196:13
SU(4):   $w3 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
SU(5):   $w4 = COPY %187:gpr32sp, debug-location !310; fft3d.c:196:13
SU(6):   $x5 = COPY %194:gpr64, debug-location !310; fft3d.c:196:13

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
    To: ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 17
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=8
Live In: %190 
Live Out: %195 %194 %190 %187 %185 %184 %183 %182 
Live Thru: GPR32=1
  LiveReg: %195
  LiveReg: %194
  LiveReg: %190
  UpdateRegP: SU(12) %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %187
  LiveReg: %185
  LiveReg: %184
  LiveReg: %183
  LiveReg: %182
  UpdateRegP: SU(4) STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
              to 
Top Pressure:
GPR32=1
Bottom Pressure:
GPR32=8
Excess PSets: 
Cluster ld/st SU(1) - SU(14)
  Copy Succ SU(2)
SU(0):   %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%179
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %180:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
  # preds left       : 0
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%180
    SU(14): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%180
    SU(0): Data Latency=4 Reg=%179
    SU(14): Ord  Latency=0 Artificial
  Successors:
    SU(3): Data Latency=1 Reg=%181
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%181
  Successors:
    SU(4): Data Latency=1 Reg=%182
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%182
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %183:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %184:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %185:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %186:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(9): Data Latency=4 Reg=%186
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(8): Data Latency=4 Reg=%186
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %188:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%188
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   %189:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(12): Data Latency=4 Reg=%189
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(12):   %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(11): Data Latency=4 Reg=%189
  Successors:
    SU(13): Data Latency=1 Reg=%191
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(12): Data Latency=1 Reg=%191
    SU(10): Data Latency=4 Reg=%188
  Successors:
    SU(15): Data Latency=1 Reg=%192
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %193:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
  # preds left       : 0
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(1): Ord  Latency=0 Cluster
  Successors:
    SU(15): Data Latency=4 Reg=%193
    SU(2): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(13): Data Latency=1 Reg=%192
    SU(14): Data Latency=4 Reg=%193
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(16):   %195:gpr64 = LDRXui %fixed-stack.1, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(16): Ord  Latency=3 Artificial
    SU(7): Ord  Latency=3 Artificial
    SU(6): Ord  Latency=3 Artificial
    SU(5): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 
Queue BotQ.A: 15 9 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(9) REG-MAX                            
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(9) %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
Bottom Pressure:
GPR32=8
  LiveReg: %186
  UpdateRegP: SU(9) %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
              to GPR32 -1
  Ready @0c
  BotQ.A TopLatency SU(9) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 8 
Queue BotQ.A: 15 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(4) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(4) STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
Bottom Pressure:
GPR32=8
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 7 6 5 8 
Queue BotQ.A: 15 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(3) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
Bottom Pressure:
GPR32=8
  LiveReg: %181
  UpdateRegP: SU(3) %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 15 2 16 7 5 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 16 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
  Cand SU(16) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(16) %195:gpr64 = LDRXui %fixed-stack.1, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
Bottom Pressure:
GPR32=7
  Ready @3c
  BotQ.A BotLatency SU(16) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 2 6 7 5 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 
BotQ.A RemLatency SU(15) 6c
  BotQ.A RemainingLatency 6 + 4c > CritPath 6
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(15) %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %192
  UpdateRegP: SU(15) %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %193
  UpdateRegP: SU(15) %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(15) 6c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 2 6 7 5 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 8 10 11 14 
BotQ.A RemLatency SU(13) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) %186:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
Bottom Pressure:
GPR32=7
  Ready @5c
  BotQ.A BotLatency SU(8) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 2 6 7 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
BotQ.A RemLatency SU(13) 5c
  BotQ.A RemainingLatency 5 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %188
  UpdateRegP: SU(13) %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
              to 
  LiveReg: %191
  UpdateRegP: SU(13) %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @6c
  BotQ.A TopLatency SU(13) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 5 2 6 7 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(12) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(12) %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
Bottom Pressure:
GPR32=8
  LiveReg: %189
  UpdateRegP: SU(12) %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
              to GPR32 -1
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 11 
Queue BotQ.A: 5 2 6 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 7 14 10 11 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %185:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
Bottom Pressure:
GPR32=7
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 11 
Queue BotQ.A: 5 2 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 14 10 
  BotQ.A RemainingLatency 0 + 9c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
Bottom Pressure:
GPR32=8
  LiveReg: %179
  UpdateRegP: SU(2) %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
              to 
  LiveReg: %180
  UpdateRegP: SU(2) %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
              to GPR32 -1
  Ready @9c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 11 1 
Queue BotQ.A: 5 6 14 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 14 10 
  BotQ.A RemainingLatency 0 + 10c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %193:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
Bottom Pressure:
GPR32=7
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 6 10 11 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 11 10 
  BotQ.A RemainingLatency 0 + 11c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(10) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) %189:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
Bottom Pressure:
GPR32=6
  Ready @11c
  BotQ.A BotLatency SU(11) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 6 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 10 
  BotQ.A RemainingLatency 0 + 12c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %188:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
Bottom Pressure:
GPR32=5
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 6 
  BotQ.A RemainingLatency 0 + 13c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
  Cand SU(1) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(1) %180:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
Bottom Pressure:
GPR32=4
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 6 0 
Queue TopQ.P: 
Queue TopQ.A: 0 6 5 
  BotQ.A RemainingLatency 0 + 14c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %184:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
Bottom Pressure:
GPR32=3
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 5 
  BotQ.A RemainingLatency 0 + 15c > CritPath 6
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %183:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
Bottom Pressure:
GPR32=2
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
Bottom Pressure:
GPR32=1
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
SU(5):   %183:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
SU(6):   %184:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
SU(1):   %180:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
SU(10):   %188:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
SU(11):   %189:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
SU(14):   %193:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
SU(2):   %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
SU(7):   %185:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
SU(12):   %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
SU(13):   %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
SU(8):   %186:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
SU(15):   %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
SU(16):   %195:gpr64 = LDRXui %fixed-stack.1, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
SU(3):   %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
SU(4):   STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
SU(9):   %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49

********** MI Scheduling **********
fftXYZ:%bb.35 for.inc102
  From: %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
    To: B %bb.29, debug-location !318; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%168
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !317; fft3d.c:190:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%168
  Successors:
    SU(2): Data Latency=1 Reg=%169
  Single Issue       : false;
SU(2):   STRWui %169:gpr32common, %stack.11.k, 0, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%169
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.29, debug-location !318; fft3d.c:190:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %169:gpr32common, %stack.11.k, 0, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !317; fft3d.c:190:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
SU(1):   %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !317; fft3d.c:190:26
SU(2):   STRWui %169:gpr32common, %stack.11.k, 0, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26

********** MI Scheduling **********
fftXYZ:%bb.36 for.end104
  From: %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
    To: CBZW %49:gpr32, %bb.38, debug-location !323; fft3d.c:199:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%48
  Single Issue       : false;
SU(1):   %49:gpr32 = LDRWui %48:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%48
  Successors:
    ExitSU: Data Latency=4 Reg=%49
  Single Issue       : false;
ExitSU:   CBZW %49:gpr32, %bb.38, debug-location !323; fft3d.c:199:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%49
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %49:gpr32 = LDRWui %48:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
SU(1):   %49:gpr32 = LDRWui %48:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: %59:gpr32 = COPY $w8, debug-location !336; fft3d.c:206:11
    To: CBZW %61:gpr32, %bb.40, debug-location !340; fft3d.c:207:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %59:gpr32 = COPY $w8, debug-location !336; fft3d.c:206:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%59
  Single Issue       : false;
SU(1):   STRWui %59:gpr32, %stack.12.log, 0, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%59
  Single Issue       : false;
SU(2):   %60:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=1 Reg=%60
  Single Issue       : false;
SU(3):   %61:gpr32 = LDRWui %60:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(2): Data Latency=1 Reg=%60
  Successors:
    ExitSU: Data Latency=4 Reg=%61
  Single Issue       : false;
ExitSU:   CBZW %61:gpr32, %bb.40, debug-location !340; fft3d.c:207:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=%61
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %59:gpr32, %stack.12.log, 0, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %59:gpr32 = COPY $w8, debug-location !336; fft3d.c:206:11
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %61:gpr32 = LDRWui %60:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  Ready @4c
  BotQ.A TopLatency SU(3) 1c
  BotQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %60:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(2):   %60:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
SU(3):   %61:gpr32 = LDRWui %60:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
SU(0):   %59:gpr32 = COPY $w8, debug-location !336; fft3d.c:206:11
SU(1):   STRWui %59:gpr32, %stack.12.log, 0, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !336; fft3d.c:206:11
 RegionInstrs: 10
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
GPR32=4
Live In: 
Live Out: %51 
Live Thru: 
  LiveReg: %51
  UpdateRegP: SU(2) %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
              to 
Top Pressure:

Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(2): Data Latency=4 Reg=%51
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %52:gpr32 = MOVi32imm 8192
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=1 Reg=%52
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(1): Data Latency=1 Reg=%52
    SU(0): Data Latency=4 Reg=%51
  Successors:
    SU(6): Data Latency=1 Reg=%53
    SU(4): Data Latency=1 Reg=%53
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %54:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%54
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(4):   dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=%53
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %56:gpr32 = MOVi32imm 32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(6): Data Latency=1 Reg=%56
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%53
    SU(4): Data Latency=1 Reg=$nzcv
    SU(5): Data Latency=1 Reg=%56
  Successors:
    SU(8): Data Latency=1 Reg=%57
    SU(7): Data Latency=1 Reg=%57
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%57
    SU(3): Data Latency=1 Reg=%54
  Pressure Diff      : GPR64temp 1    GPR32 2
  Single Issue       : false;
SU(8):   %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%57
  Successors:
    SU(9): Data Latency=1 Reg=%58
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%58
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !336; fft3d.c:206:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 8
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(9) STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
Bottom Pressure:
GPR32=2
  LiveReg: %58
  UpdateRegP: SU(9) STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
              to 
  Ready @0c
  BotQ.A TopLatency SU(9) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(7) 7c
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
Bottom Pressure:
GPR32=2
  LiveReg: %57
  UpdateRegP: SU(7) STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to GPR64temp 1    GPR32 1
  UpdateRegP: SU(8) %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
Bottom Pressure:
GPR64temp=1
GPR32=3
  LiveReg: %54
  UpdateRegP: SU(7) STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
              to 
  Ready @2c
  BotQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 8
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %56
  UpdateRegP: SU(6) %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
              to 
  LiveReg: %53
  UpdateRegP: SU(4) dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
              to 
  UpdateRegP: SU(6) %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 4 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(4) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
Bottom Pressure:
GPR64temp=1
GPR32=4
  Ready @4c
  BotQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
BotQ.A RemLatency SU(2) 4c
  BotQ.A RemainingLatency 4 + 5c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
Bottom Pressure:
GPR64temp=1
GPR32=4
  LiveReg: %52
  UpdateRegP: SU(2) %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
              to GPR32 -1
  Ready @5c
  BotQ.A BotLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 5 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 5 
  BotQ.A RemainingLatency 3 + 6c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(5) %56:gpr32 = MOVi32imm 32
Bottom Pressure:
GPR64temp=1
GPR32=3
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
  BotQ.A RemainingLatency 2 + 7c > CritPath 8
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %54:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
Bottom Pressure:
GPR32=2
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %52:gpr32 = MOVi32imm 8192
Bottom Pressure:
GPR32=1
  Ready @8c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
Bottom Pressure:

  Ready @9c
  BotQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
SU(1):   %52:gpr32 = MOVi32imm 8192
SU(3):   %54:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
SU(5):   %56:gpr32 = MOVi32imm 32
SU(2):   %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
SU(4):   dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
SU(6):   %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
SU(7):   STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(8):   %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
SU(9):   STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10

********** MI Scheduling **********
fftXYZ:%bb.40 if.end116
  From: STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
    To: End RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   %80:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(2):   %154:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(3):   %156:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 2 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(3) %156:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %154:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 2c > CritPath 0
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %80:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.40 ***
SU(0):   STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
SU(1):   %80:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
SU(2):   %154:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
SU(3):   %156:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

********** MI Scheduling **********
fftXYZ:%bb.41 for.cond117
  From: %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
    To: Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%64
  Single Issue       : false;
SU(1):   %65:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%65
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %64:gpr32, %65:gpr32, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%65
    SU(0): Data Latency=4 Reg=%64
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %64:gpr32, %65:gpr32, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %65:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
SU(1):   %65:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
SU(2):   dead $wzr = SUBSWrr %64:gpr32, %65:gpr32, implicit-def $nzcv, debug-location !349; fft3d.c:209:5

********** MI Scheduling **********
fftXYZ:%bb.43 for.cond120
  From: %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
    To: Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%74
  Single Issue       : false;
SU(1):   %75:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%75
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %74:gpr32, %75:gpr32, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%75
    SU(0): Data Latency=4 Reg=%74
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %74:gpr32, %75:gpr32, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %75:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
SU(1):   %75:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
SU(2):   dead $wzr = SUBSWrr %74:gpr32, %75:gpr32, implicit-def $nzcv, debug-location !358; fft3d.c:210:9

********** MI Scheduling **********
fftXYZ:%bb.44 for.body122
  From: %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
    To: Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%79
  Single Issue       : false;
SU(1):   %81:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Data Latency=4 Reg=%81
  Single Issue       : false;
SU(2):   %82:gpr32common = nsw ADDWrr %79:gpr32, %81:gpr32, debug-location !362; fft3d.c:211:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%81
    SU(0): Data Latency=4 Reg=%79
  Successors:
    SU(3): Data Latency=1 Reg=%82
  Single Issue       : false;
SU(3):   %83:gpr32common = SUBWri %82:gpr32common, 1, 0, debug-location !363; fft3d.c:211:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=%82
  Successors:
    SU(6): Data Latency=1 Reg=%83
    SU(4): Data Latency=1 Reg=%83
  Single Issue       : false;
SU(4):   STRWui %83:gpr32common, %stack.14.ble, 0, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%83
  Single Issue       : false;
SU(5):   %84:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(6): Data Latency=4 Reg=%84
  Single Issue       : false;
SU(6):   dead $wzr = SUBSWrr %83:gpr32common, %84:gpr32, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%83
    SU(5): Data Latency=4 Reg=%84
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %83:gpr32common, %stack.14.ble, 0, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  Ready @0c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) dead $wzr = SUBSWrr %83:gpr32common, %84:gpr32, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %83:gpr32common = SUBWri %82:gpr32common, 1, 0, debug-location !363; fft3d.c:211:34
  Ready @2c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %82:gpr32common = nsw ADDWrr %79:gpr32, %81:gpr32, debug-location !362; fft3d.c:211:23
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 0 1 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %84:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  Ready @5c
  BotQ.A BotLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %81:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  Ready @7c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
SU(1):   %81:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
SU(5):   %84:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
SU(2):   %82:gpr32common = nsw ADDWrr %79:gpr32, %81:gpr32, debug-location !362; fft3d.c:211:23
SU(3):   %83:gpr32common = SUBWri %82:gpr32common, 1, 0, debug-location !363; fft3d.c:211:34
SU(6):   dead $wzr = SUBSWrr %83:gpr32common, %84:gpr32, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
SU(4):   STRWui %83:gpr32common, %stack.14.ble, 0, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17

********** MI Scheduling **********
fftXYZ:%bb.45 if.then126
  From: %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%86
  Single Issue       : false;
SU(1):   %87:gpr32common = SUBWri %86:gpr32common, 1, 0, debug-location !371; fft3d.c:213:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%86
  Successors:
    SU(2): Data Latency=1 Reg=%87
  Single Issue       : false;
SU(2):   STRWui %87:gpr32common, %stack.14.ble, 0, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%87
  Single Issue       : false;
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %87:gpr32common, %stack.14.ble, 0, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %87:gpr32common = SUBWri %86:gpr32common, 1, 0, debug-location !371; fft3d.c:213:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.45 ***
SU(0):   %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
SU(1):   %87:gpr32common = SUBWri %86:gpr32common, 1, 0, debug-location !371; fft3d.c:213:26
SU(2):   STRWui %87:gpr32common, %stack.14.ble, 0, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21

********** MI Scheduling **********
fftXYZ:%bb.46 if.end128
  From: %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
    To: End RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%88
  Single Issue       : false;
SU(1):   %89:gpr32 = LDRWui %stack.13.bls, 0, debug-location !375 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%89
  Single Issue       : false;
SU(2):   %90:gpr32common = nsw SUBWrr %88:gpr32, %89:gpr32, debug-location !376; fft3d.c:214:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%89
    SU(0): Data Latency=4 Reg=%88
  Successors:
    SU(3): Data Latency=1 Reg=%90
  Single Issue       : false;
SU(3):   %91:gpr32common = nsw ADDWri %90:gpr32common, 1, 0, debug-location !377; fft3d.c:214:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%90
  Successors:
    SU(4): Data Latency=1 Reg=%91
  Single Issue       : false;
SU(4):   STRWui %91:gpr32common, %stack.15.len, 0, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%91
  Single Issue       : false;
SU(5):   STRWui $wzr, %stack.9.i, 0, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 5 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) STRWui $wzr, %stack.9.i, 0, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) STRWui %91:gpr32common, %stack.15.len, 0, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  Ready @1c
  BotQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %91:gpr32common = nsw ADDWri %90:gpr32common, 1, 0, debug-location !377; fft3d.c:214:29
  Ready @2c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %90:gpr32common = nsw SUBWrr %88:gpr32, %89:gpr32, debug-location !376; fft3d.c:214:23
  Ready @3c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 7 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %89:gpr32 = LDRWui %stack.13.bls, 0, debug-location !375 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
  Ready @7c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.46 ***
SU(0):   %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
SU(1):   %89:gpr32 = LDRWui %stack.13.bls, 0, debug-location !375 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
SU(2):   %90:gpr32common = nsw SUBWrr %88:gpr32, %89:gpr32, debug-location !376; fft3d.c:214:23
SU(3):   %91:gpr32common = nsw ADDWri %90:gpr32common, 1, 0, debug-location !377; fft3d.c:214:29
SU(4):   STRWui %91:gpr32common, %stack.15.len, 0, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
SU(5):   STRWui $wzr, %stack.9.i, 0, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20

********** MI Scheduling **********
fftXYZ:%bb.47 for.cond131
  From: %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
    To: Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%93
  Single Issue       : false;
SU(1):   %94:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%94
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %93:gpr32, %94:gpr32, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%94
    SU(0): Data Latency=4 Reg=%93
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %93:gpr32, %94:gpr32, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %94:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.47 ***
SU(0):   %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
SU(1):   %94:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
SU(2):   dead $wzr = SUBSWrr %93:gpr32, %94:gpr32, implicit-def $nzcv, debug-location !386; fft3d.c:215:13

********** MI Scheduling **********
fftXYZ:%bb.48 for.body133
  From: %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%139
  Single Issue       : false;
SU(1):   STRWui %139:gpr32, %stack.10.j, 0, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%139
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %139:gpr32, %stack.10.j, 0, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.48 ***
SU(0):   %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
SU(1):   STRWui %139:gpr32, %stack.10.j, 0, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24

********** MI Scheduling **********
fftXYZ:%bb.49 for.cond134
  From: %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
    To: Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%140
  Single Issue       : false;
SU(1):   %141:gpr32 = LDRWui %stack.14.ble, 0, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%141
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %140:gpr32, %141:gpr32, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%141
    SU(0): Data Latency=4 Reg=%140
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %140:gpr32, %141:gpr32, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %141:gpr32 = LDRWui %stack.14.ble, 0, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.49 ***
SU(0):   %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
SU(1):   %141:gpr32 = LDRWui %stack.14.ble, 0, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
SU(2):   dead $wzr = SUBSWrr %140:gpr32, %141:gpr32, implicit-def $nzcv, debug-location !396; fft3d.c:216:17

********** MI Scheduling **********
fftXYZ:%bb.50 for.body136
  From: %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
    To: B %bb.49, debug-location !411; fft3d.c:216:17
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: %154 %1 %156 
Live Out: %154 %1 %156 
Live Thru: GPR32=3
  LiveReg: %154
  UpdateRegP: SU(13) STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  LiveReg: %1
  UpdateRegP: SU(10) %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
              to 
  LiveReg: %156
  UpdateRegP: SU(7) %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
              to 
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(14): Data Latency=4 Reg=%145
    SU(12): Data Latency=4 Reg=%145
    SU(2): Data Latency=4 Reg=%145
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %147:gpr32 = LDRWui %stack.13.bls, 0, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%147
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%147
    SU(0): Data Latency=4 Reg=%145
  Successors:
    SU(5): Data Latency=1 Reg=%148
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %149:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%149
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(4):   %150:gpr64 = LDRSWui %stack.9.i, 0, debug-location !402 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(7): Data Latency=4 Reg=%150
    SU(5): Data Latency=4 Reg=%150
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%148
    SU(3): Data Latency=4 Reg=%149
    SU(4): Data Latency=4 Reg=%150
  Successors:
    SU(13): Data Latency=1 Reg=%153
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(6):   %155:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(8): Data Latency=4 Reg=%155
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(4): Data Latency=4 Reg=%150
  Successors:
    SU(8): Data Latency=1 Reg=%157
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(7): Data Latency=1 Reg=%157
    SU(6): Data Latency=4 Reg=%155
  Successors:
    SU(11): Data Latency=1 Reg=%158
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   %159:gpr64 = LDRSWui %stack.11.k, 0, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(10): Data Latency=4 Reg=%159
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(9): Data Latency=4 Reg=%159
  Successors:
    SU(11): Data Latency=1 Reg=%160
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%158
    SU(10): Data Latency=1 Reg=%160
  Successors:
    SU(12): Data Latency=1 Reg=%161
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(11): Data Latency=1 Reg=%161
    SU(0): Data Latency=4 Reg=%145
  Successors:
    SU(13): Data Latency=4 Reg=%162
    SU(15): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(13):   STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=4 Reg=%162
    SU(12): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%153
  Pressure Diff      : FPR8 1    GPR32 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(14):   %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%145
  Successors:
    SU(15): Data Latency=1 Reg=%163
  Pressure Diff      : 
  Single Issue       : false;
SU(15):   STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%163
    SU(12): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.49, debug-location !411; fft3d.c:216:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 11
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 15 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(15) STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
Bottom Pressure:
GPR32=4
  LiveReg: %163
  UpdateRegP: SU(15) STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
              to 
  Ready @0c
  BotQ.A TopLatency SU(15) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(13) 11c
  BotQ.A RemainingLatency 11 + 1c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(13) STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %162
  UpdateRegP: SU(13) STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to GPR32 1
  LiveReg: %153
  UpdateRegP: SU(13) STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
              to 
  Ready @1c
  BotQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 14 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(5) 5c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 10 + 2c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
  Cand SU(5) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %149
  UpdateRegP: SU(5) %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
              to GPR32 1
  LiveReg: %150
  UpdateRegP: SU(5) %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
              to 
  UpdateRegP: SU(7) %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
              to GPR32 -1
  LiveReg: %148
  UpdateRegP: SU(5) %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 14 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(14) 4c
BotQ.A RemLatency SU(12) 7c
  BotQ.A RemainingLatency 9 + 3c > CritPath 11
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(14) %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %145
  UpdateRegP: SU(2) %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
              to 
  UpdateRegP: SU(12) %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(14) %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
              to GPR32 -1
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 3 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %147
  UpdateRegP: SU(2) %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 3 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %161
  UpdateRegP: SU(12) %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @5c
  BotQ.A BotLatency SU(12) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 11 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 6 9 
BotQ.A RemLatency SU(11) 6c
  BotQ.A RemainingLatency 6 + 6c > CritPath 11
Picking from Bot:
  Cand SU(11) ORDER                              
  Cand SU(3) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %149:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
Bottom Pressure:
GPR32=7
  Ready @6c
  BotQ.A BotLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 0 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %158
  UpdateRegP: SU(11) %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
              to 
  LiveReg: %160
  UpdateRegP: SU(11) %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 8 10 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 9 4 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 8c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(10) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(10) %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %159
  UpdateRegP: SU(10) %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(10) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 9 4 6 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 9c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(1) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(1) %147:gpr32 = LDRWui %stack.13.bls, 0, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
Bottom Pressure:
GPR32=7
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 
Queue BotQ.A: 8 0 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
BotQ.A RemLatency SU(8) 5c
  BotQ.A RemainingLatency 5 + 10c > CritPath 11
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
Bottom Pressure:
GPR32=8
  LiveReg: %155
  UpdateRegP: SU(8) %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
              to 
  LiveReg: %157
  UpdateRegP: SU(8) %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
              to GPR32 -1
  Ready @10c
  BotQ.A TopLatency SU(8) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 9 6 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
BotQ.A RemLatency SU(7) 4c
  BotQ.A RemainingLatency 4 + 11c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
Bottom Pressure:
GPR32=7
  Ready @11c
  BotQ.A BotLatency SU(7) 7c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 6 
Queue BotQ.A: 0 9 
Queue TopQ.P: 
Queue TopQ.A: 0 6 9 4 
  BotQ.A RemainingLatency 0 + 12c > CritPath 11
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %159:gpr64 = LDRSWui %stack.11.k, 0, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
Bottom Pressure:
GPR32=6
  Ready @12c
  BotQ.A BotLatency SU(9) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 6 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
Bottom Pressure:
GPR32=5
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %155:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
Bottom Pressure:
GPR32=4
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %150:gpr64 = LDRSWui %stack.9.i, 0, debug-location !402 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
Bottom Pressure:
GPR32=3
  Ready @15c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.50 ***
SU(4):   %150:gpr64 = LDRSWui %stack.9.i, 0, debug-location !402 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
SU(6):   %155:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
SU(0):   %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
SU(9):   %159:gpr64 = LDRSWui %stack.11.k, 0, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
SU(7):   %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
SU(8):   %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
SU(1):   %147:gpr32 = LDRWui %stack.13.bls, 0, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
SU(10):   %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
SU(11):   %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
SU(3):   %149:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
SU(12):   %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
SU(2):   %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
SU(14):   %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
SU(5):   %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
SU(13):   STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
SU(15):   STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42

********** MI Scheduling **********
fftXYZ:%bb.51 for.inc151
  From: %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
    To: B %bb.47, debug-location !415; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%143
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %144:gpr32common = nsw ADDWri %143:gpr32common, 1, 0, debug-location !414; fft3d.c:215:34
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%143
  Successors:
    SU(2): Data Latency=1 Reg=%144
  Single Issue       : false;
SU(2):   STRWui %144:gpr32common, %stack.9.i, 0, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%144
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.47, debug-location !415; fft3d.c:215:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %144:gpr32common, %stack.9.i, 0, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %144:gpr32common = nsw ADDWri %143:gpr32common, 1, 0, debug-location !414; fft3d.c:215:34
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.51 ***
SU(0):   %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
SU(1):   %144:gpr32common = nsw ADDWri %143:gpr32common, 1, 0, debug-location !414; fft3d.c:215:34
SU(2):   STRWui %144:gpr32common, %stack.9.i, 0, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34

********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(1):   $w0 = COPY %96:gpr32, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(2):   $w1 = COPY %97:gpr32, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(3):   $w2 = COPY %98:gpr32, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(4):   $w3 = COPY %99:gpr32, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(5):   $w4 = COPY %100:gpr32, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(6):   $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=0 Artificial
    SU(4): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
    SU(1): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 5 4 3 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(5) $w4 = COPY %100:gpr32, debug-location !424; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(4) $w3 = COPY %99:gpr32, debug-location !424; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(3) $w2 = COPY %98:gpr32, debug-location !424; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w1 = COPY %97:gpr32, debug-location !424; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w0 = COPY %96:gpr32, debug-location !424; fft3d.c:220:13
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !424; fft3d.c:220:13
  Ready @1c
  BotQ.A BotLatency SU(6) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.52 ***
SU(6):   $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !424; fft3d.c:220:13
SU(0):   STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
SU(1):   $w0 = COPY %96:gpr32, debug-location !424; fft3d.c:220:13
SU(2):   $w1 = COPY %97:gpr32, debug-location !424; fft3d.c:220:13
SU(3):   $w2 = COPY %98:gpr32, debug-location !424; fft3d.c:220:13
SU(4):   $w3 = COPY %99:gpr32, debug-location !424; fft3d.c:220:13
SU(5):   $w4 = COPY %100:gpr32, debug-location !424; fft3d.c:220:13

********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
    To: ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !424; fft3d.c:220:13
 RegionInstrs: 6
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %97:gpr32 = LDRWui %stack.12.log, 0, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %98:gpr32 = LDRWui %stack.15.len, 0, debug-location !420 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %99:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %100:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !422 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(5):   %101:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !424; fft3d.c:220:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=3 Artificial
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 0 1 2 3 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %101:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  Ready @3c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  BotQ.A RemainingLatency 0 + 4c > CritPath 3
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %100:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !422 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 5c > CritPath 3
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %99:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 6c > CritPath 3
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %98:gpr32 = LDRWui %stack.15.len, 0, debug-location !420 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 7c > CritPath 3
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %97:gpr32 = LDRWui %stack.12.log, 0, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
SU(1):   %97:gpr32 = LDRWui %stack.12.log, 0, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
SU(2):   %98:gpr32 = LDRWui %stack.15.len, 0, debug-location !420 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
SU(3):   %99:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
SU(4):   %100:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !422 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
SU(5):   %101:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59

********** MI Scheduling **********
fftXYZ:%bb.53 for.cond154
  From: %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
    To: Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%105
  Single Issue       : false;
SU(1):   %106:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%106
  Single Issue       : false;
SU(2):   %107:gpr32common = SUBWri %106:gpr32common, 1, 0, debug-location !431; fft3d.c:221:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%106
  Successors:
    SU(3): Data Latency=1 Reg=%107
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %105:gpr32, %107:gpr32common, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%107
    SU(0): Data Latency=4 Reg=%105
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %105:gpr32, %107:gpr32common, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %107:gpr32common = SUBWri %106:gpr32common, 1, 0, debug-location !431; fft3d.c:221:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %106:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.53 ***
SU(1):   %106:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
SU(0):   %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
SU(2):   %107:gpr32common = SUBWri %106:gpr32common, 1, 0, debug-location !431; fft3d.c:221:33
SU(3):   dead $wzr = SUBSWrr %105:gpr32, %107:gpr32common, implicit-def $nzcv, debug-location !433; fft3d.c:221:13

********** MI Scheduling **********
fftXYZ:%bb.54 for.body157
  From: %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%113
  Single Issue       : false;
SU(1):   STRWui %113:gpr32, %stack.10.j, 0, debug-location !437 :: (store 4 into %ir.j); fft3d.c:222:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%113
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %113:gpr32, %stack.10.j, 0, debug-location !437 :: (store 4 into %ir.j); fft3d.c:222:24
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.54 ***
SU(0):   %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
SU(1):   STRWui %113:gpr32, %stack.10.j, 0, debug-location !437 :: (store 4 into %ir.j); fft3d.c:222:24

********** MI Scheduling **********
fftXYZ:%bb.55 for.cond158
  From: %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
    To: Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%114
  Single Issue       : false;
SU(1):   %115:gpr32 = LDRWui %stack.14.ble, 0, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%115
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %114:gpr32, %115:gpr32, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%115
    SU(0): Data Latency=4 Reg=%114
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %114:gpr32, %115:gpr32, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %115:gpr32 = LDRWui %stack.14.ble, 0, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.55 ***
SU(0):   %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
SU(1):   %115:gpr32 = LDRWui %stack.14.ble, 0, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
SU(2):   dead $wzr = SUBSWrr %114:gpr32, %115:gpr32, implicit-def $nzcv, debug-location !443; fft3d.c:222:17

********** MI Scheduling **********
fftXYZ:%bb.56 for.body160
  From: %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
    To: B %bb.55, debug-location !465; fft3d.c:222:17
 RegionInstrs: 18
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: %154 
Live Out: %154 
Live Thru: GPR32=1
  LiveReg: %154
  UpdateRegP: SU(13) %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
Top Pressure:
GPR32=1
Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(14): Data Latency=4 Reg=%119
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %120:gpr32 = LDRWui %stack.10.j, 0, debug-location !446 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%120
    SU(8): Data Latency=4 Reg=%120
    SU(17): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %121:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(3): Data Latency=4 Reg=%121
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(2): Data Latency=4 Reg=%121
  Successors:
    SU(8): Data Latency=1 Reg=%122
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %123:gpr32 = LDRWui %stack.11.k, 0, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%123
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %124:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !450 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 12
  Successors:
    SU(7): Data Latency=4 Reg=%124
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(6):   %125:gpr32 = LDRWui %stack.9.i, 0, debug-location !451 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(12): Data Latency=4 Reg=%125
    SU(7): Data Latency=4 Reg=%125
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(6): Data Latency=4 Reg=%125
    SU(5): Data Latency=4 Reg=%124
    SU(4): Data Latency=4 Reg=%123
  Successors:
    SU(8): Data Latency=1 Reg=%127
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(8):   %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(7): Data Latency=1 Reg=%127
    SU(3): Data Latency=1 Reg=%122
    SU(1): Data Latency=4 Reg=%120
  Successors:
    SU(14): Data Latency=1 Reg=%129
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(9):   %130:gpr32 = LDRWui %stack.13.bls, 0, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(10): Data Latency=4 Reg=%130
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(9): Data Latency=4 Reg=%130
    SU(1): Data Latency=4 Reg=%120
  Successors:
    SU(12): Data Latency=1 Reg=%131
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   %132:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(12): Data Latency=4 Reg=%132
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(12):   %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(10): Data Latency=1 Reg=%131
    SU(11): Data Latency=4 Reg=%132
    SU(6): Data Latency=4 Reg=%125
  Successors:
    SU(13): Data Latency=1 Reg=%134
  Pressure Diff      : GPR32 2
  Single Issue       : false;
SU(13):   %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(12): Data Latency=1 Reg=%134
  Successors:
    SU(14): Data Latency=4 Reg=%136
    SU(14): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(14):   STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  # preds left       : 12
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(13): Data Latency=4 Reg=%136
    SU(13): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(8): Data Latency=1 Reg=%129
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Data Latency=4 Reg=%119
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(17): Ord  Latency=0 Memory
    SU(15): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(15):   %137:gpr32common = LDRWui %stack.10.j, 0, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(16): Data Latency=4 Reg=%137
    SU(17): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(16):   %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(15): Data Latency=4 Reg=%137
  Successors:
    SU(17): Data Latency=1 Reg=%138
  Pressure Diff      : 
  Single Issue       : false;
SU(17):   STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%138
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.55, debug-location !465; fft3d.c:222:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42
Bottom Pressure:
GPR32=2
  LiveReg: %138
  UpdateRegP: SU(17) STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42
              to 
  Ready @0c
  BotQ.A TopLatency SU(17) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
Bottom Pressure:
GPR32=2
  LiveReg: %137
  UpdateRegP: SU(16) %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(16) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %137:gpr32common = LDRWui %stack.10.j, 0, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
Bottom Pressure:
GPR32=1
  Ready @5c
  BotQ.A BotLatency SU(15) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
Bottom Pressure:
FPR8=1
GPR32=3
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %136
  UpdateRegP: SU(14) STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to GPR32 2
  LiveReg: %119
  UpdateRegP: SU(14) STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to GPR32 1
  LiveReg: %129
  UpdateRegP: SU(14) STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
              to 
  Ready @6c
  BotQ.A BotLatency SU(14) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %122
  UpdateRegP: SU(8) %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
              to GPR32 1
  LiveReg: %127
  UpdateRegP: SU(8) %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
              to 
  LiveReg: %120
  UpdateRegP: SU(8) %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
              to GPR32 -1
  UpdateRegP: SU(10) %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
              to 
  Ready @7c
  BotQ.A BotLatency SU(8) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 
Queue BotQ.A: 7 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 9 11 
BotQ.A RemLatency SU(7) 4c
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(7) %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %124
  UpdateRegP: SU(7) %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
              to GPR32 1
  LiveReg: %125
  UpdateRegP: SU(7) %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
              to 
  UpdateRegP: SU(12) %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
              to GPR32 1
  LiveReg: %123
  UpdateRegP: SU(7) %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(7) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 0 5 4 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %121
  UpdateRegP: SU(3) %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
              to GPR32 -1
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 4 5 
Queue BotQ.A: 13 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 9 11 
BotQ.A RemLatency SU(13) 6c
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(0) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(0) %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  Ready @10c
  BotQ.A BotLatency SU(0) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 4 5 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
Bottom Pressure:
GPR32=7
  LiveReg: %134
  UpdateRegP: SU(13) %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @11c
  BotQ.A TopLatency SU(13) 6c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 12 4 5 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 5 6 9 
BotQ.A RemLatency SU(12) 5c
  BotQ.A RemainingLatency 5 + 12c > CritPath 16
Picking from Bot:
  Cand SU(12) ORDER                              
  Cand SU(4) REG-MAX                            
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(11) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(5) %124:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !450 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
Bottom Pressure:
GPR32=6
  Ready @12c
  BotQ.A BotLatency SU(5) 12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 4 2 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
BotQ.A RemLatency SU(12) 5c
  BotQ.A RemainingLatency 5 + 13c > CritPath 16
Picking from Bot:
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(12) %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
Bottom Pressure:
GPR32=7
  LiveReg: %132
  UpdateRegP: SU(12) %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
              to 
  LiveReg: %131
  UpdateRegP: SU(12) %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
              to GPR32 -1
  Ready @13c
  BotQ.A TopLatency SU(12) 5c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 
Queue BotQ.A: 2 4 10 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
BotQ.A RemLatency SU(10) 4c
  BotQ.A RemainingLatency 4 + 14c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(10) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
Bottom Pressure:
GPR32=7
  LiveReg: %130
  UpdateRegP: SU(10) %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
              to GPR32 -1
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 9 1 
Queue BotQ.A: 2 4 
Queue TopQ.P: 
Queue TopQ.A: 11 1 2 4 9 6 
  BotQ.A RemainingLatency 3 + 15c > CritPath 16
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %123:gpr32 = LDRWui %stack.11.k, 0, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
Bottom Pressure:
GPR32=6
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 11 6 9 1 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %121:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
Bottom Pressure:
GPR32=5
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 9 
Queue BotQ.A: 11 6 
Queue TopQ.P: 
Queue TopQ.A: 11 1 9 6 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) %132:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
Bottom Pressure:
GPR32=4
  Ready @17c
  BotQ.A BotLatency SU(11) 15c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 1 9 
Queue TopQ.P: 
Queue TopQ.A: 6 1 9 
  BotQ.A RemainingLatency 0 + 18c > CritPath 16
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %130:gpr32 = LDRWui %stack.13.bls, 0, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
Bottom Pressure:
GPR32=3
  Ready @18c
  BotQ.A BotLatency SU(9) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 1 
Queue TopQ.P: 
Queue TopQ.A: 6 1 
  BotQ.A RemainingLatency 0 + 19c > CritPath 16
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %125:gpr32 = LDRWui %stack.9.i, 0, debug-location !451 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
Bottom Pressure:
GPR32=2
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %120:gpr32 = LDRWui %stack.10.j, 0, debug-location !446 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
Bottom Pressure:
GPR32=1
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 18
  Executed: 21c
  Critical: 18c, 18 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.56 ***
SU(1):   %120:gpr32 = LDRWui %stack.10.j, 0, debug-location !446 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
SU(6):   %125:gpr32 = LDRWui %stack.9.i, 0, debug-location !451 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
SU(9):   %130:gpr32 = LDRWui %stack.13.bls, 0, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
SU(11):   %132:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
SU(2):   %121:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
SU(4):   %123:gpr32 = LDRWui %stack.11.k, 0, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
SU(10):   %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
SU(12):   %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
SU(5):   %124:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !450 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
SU(13):   %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
SU(0):   %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
SU(3):   %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
SU(7):   %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
SU(8):   %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
SU(14):   STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
SU(15):   %137:gpr32common = LDRWui %stack.10.j, 0, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
SU(16):   %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
SU(17):   STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42

********** MI Scheduling **********
fftXYZ:%bb.57 for.inc176
  From: %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
    To: B %bb.53, debug-location !469; fft3d.c:221:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%117
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %118:gpr32common = nsw ADDWri %117:gpr32common, 1, 0, debug-location !468; fft3d.c:221:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%117
  Successors:
    SU(2): Data Latency=1 Reg=%118
  Single Issue       : false;
SU(2):   STRWui %118:gpr32common, %stack.9.i, 0, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%118
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.53, debug-location !469; fft3d.c:221:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %118:gpr32common, %stack.9.i, 0, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %118:gpr32common = nsw ADDWri %117:gpr32common, 1, 0, debug-location !468; fft3d.c:221:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.57 ***
SU(0):   %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
SU(1):   %118:gpr32common = nsw ADDWri %117:gpr32common, 1, 0, debug-location !468; fft3d.c:221:39
SU(2):   STRWui %118:gpr32common, %stack.9.i, 0, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39

********** MI Scheduling **********
fftXYZ:%bb.58 for.inc179
  From: %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
    To: B %bb.43, debug-location !474; fft3d.c:210:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%110
  Single Issue       : false;
SU(1):   %111:gpr32 = LDRWui %stack.13.bls, 0, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%111
    SU(3): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   %112:gpr32 = nsw ADDWrr %111:gpr32, %110:gpr32, debug-location !473; fft3d.c:210:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%111
    SU(0): Data Latency=4 Reg=%110
  Successors:
    SU(3): Data Latency=1 Reg=%112
  Single Issue       : false;
SU(3):   STRWui %112:gpr32, %stack.13.bls, 0, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%112
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.43, debug-location !474; fft3d.c:210:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) STRWui %112:gpr32, %stack.13.bls, 0, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  Ready @0c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %112:gpr32 = nsw ADDWrr %111:gpr32, %110:gpr32, debug-location !473; fft3d.c:210:37
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %111:gpr32 = LDRWui %stack.13.bls, 0, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
SU(1):   %111:gpr32 = LDRWui %stack.13.bls, 0, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
SU(2):   %112:gpr32 = nsw ADDWrr %111:gpr32, %110:gpr32, debug-location !473; fft3d.c:210:37
SU(3):   STRWui %112:gpr32, %stack.13.bls, 0, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37

********** MI Scheduling **********
fftXYZ:%bb.59 for.inc182
  From: %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
    To: B %bb.41, debug-location !478; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%77
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %78:gpr32common = nsw ADDWri %77:gpr32common, 1, 0, debug-location !477; fft3d.c:209:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%77
  Successors:
    SU(2): Data Latency=1 Reg=%78
  Single Issue       : false;
SU(2):   STRWui %78:gpr32common, %stack.11.k, 0, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%78
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.41, debug-location !478; fft3d.c:209:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %78:gpr32common, %stack.11.k, 0, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %78:gpr32common = nsw ADDWri %77:gpr32common, 1, 0, debug-location !477; fft3d.c:209:26
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.59 ***
SU(0):   %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
SU(1):   %78:gpr32common = nsw ADDWri %77:gpr32common, 1, 0, debug-location !477; fft3d.c:209:26
SU(2):   STRWui %78:gpr32common, %stack.11.k, 0, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26

********** MI Scheduling **********
fftXYZ:%bb.60 for.end184
  From: %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
    To: CBZW %68:gpr32, %bb.62, debug-location !483; fft3d.c:229:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%67
  Single Issue       : false;
SU(1):   %68:gpr32 = LDRWui %67:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%67
  Successors:
    ExitSU: Data Latency=4 Reg=%68
  Single Issue       : false;
ExitSU:   CBZW %68:gpr32, %bb.62, debug-location !483; fft3d.c:229:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%68
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %68:gpr32 = LDRWui %67:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.60 ***
SU(0):   %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
SU(1):   %68:gpr32 = LDRWui %67:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9

********** MI Scheduling **********
fftXYZ:%bb.62 if.end187
  From: %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
    To: CBZW %71:gpr32, %bb.64, debug-location !487; fft3d.c:231:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%70
  Single Issue       : false;
SU(1):   %71:gpr32 = LDRWui %70:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%70
  Successors:
    ExitSU: Data Latency=4 Reg=%71
  Single Issue       : false;
ExitSU:   CBZW %71:gpr32, %bb.64, debug-location !487; fft3d.c:231:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%71
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %71:gpr32 = LDRWui %70:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.62 ***
SU(0):   %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
SU(1):   %71:gpr32 = LDRWui %70:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9

********** INTERVALS **********
NZCV [584r,592r:19)[1152r,1168r:18)[1296r,1312r:5)[1456r,1472r:4)[1728r,1744r:3)[1872r,1888r:0)[2736r,2752r:2)[2880r,2896r:1)[3864r,3872r:17)[4416r,4432r:16)[4560r,4576r:7)[4720r,4736r:6)[5832r,5840r:15)[6400r,6416r:14)[6544r,6560r:13)[6704r,6720r:12)[6992r,7008r:11)[7136r,7152r:8)[8016r,8032r:10)[8160r,8176r:9)  0@1872r 1@2880r 2@2736r 3@1728r 4@1456r 5@1296r 6@4720r 7@4560r 8@7136r 9@8160r 10@8016r 11@6992r 12@6704r 13@6544r 14@6400r 15@5832r 16@4416r 17@3864r 18@1152r 19@584r
WSP [352r,352d:69)[400r,400d:68)[416r,416d:67)[432r,432d:66)[464r,464d:65)[656r,656d:64)[688r,688d:63)[704r,704d:62)[720r,720d:61)[752r,752d:60)[880r,880d:59)[928r,928d:58)[944r,944d:57)[960r,960d:56)[992r,992d:55)[2432r,2432d:4)[2608r,2608d:3)[2616r,2616d:2)[2624r,2624d:1)[2640r,2640d:0)[3632r,3632d:54)[3680r,3680d:53)[3696r,3696d:52)[3712r,3712d:51)[3744r,3744d:50)[3936r,3936d:49)[3968r,3968d:48)[3984r,3984d:47)[4000r,4000d:46)[4032r,4032d:45)[4160r,4160d:44)[4208r,4208d:43)[4224r,4224d:42)[4240r,4240d:41)[4272r,4272d:40)[5160r,5160d:9)[5264r,5264d:8)[5280r,5280d:7)[5296r,5296d:6)[5328r,5328d:5)[5600r,5600d:39)[5648r,5648d:38)[5664r,5664d:37)[5680r,5680d:36)[5712r,5712d:35)[5904r,5904d:34)[5936r,5936d:33)[5952r,5952d:32)[5968r,5968d:31)[6000r,6000d:30)[6128r,6128d:29)[6176r,6176d:28)[6192r,6192d:27)[6208r,6208d:26)[6240r,6240d:25)[7696r,7696d:14)[7872r,7872d:13)[7880r,7880d:12)[7888r,7888d:11)[7904r,7904d:10)[8880r,8880d:24)[8928r,8928d:23)[8944r,8944d:22)[8960r,8960d:21)[8992r,8992d:20)[9104r,9104d:19)[9152r,9152d:18)[9168r,9168d:17)[9184r,9184d:16)[9216r,9216d:15)  0@2640r 1@2624r 2@2616r 3@2608r 4@2432r 5@5328r 6@5296r 7@5280r 8@5264r 9@5160r 10@7904r 11@7888r 12@7880r 13@7872r 14@7696r 15@9216r 16@9184r 17@9168r 18@9152r 19@9104r 20@8992r 21@8960r 22@8944r 23@8928r 24@8880r 25@6240r 26@6208r 27@6192r 28@6176r 29@6128r 30@6000r 31@5968r 32@5952r 33@5936r 34@5904r 35@5712r 36@5680r 37@5664r 38@5648r 39@5600r 40@4272r 41@4240r 42@4224r 43@4208r 44@4160r 45@4032r 46@4000r 47@3984r 48@3968r 49@3936r 50@3744r 51@3712r 52@3696r 53@3680r 54@3632r 55@992r 56@960r 57@944r 58@928r 59@880r 60@752r 61@720r 62@704r 63@688r 64@656r 65@464r 66@432r 67@416r 68@400r 69@352r
W0 [0B,96r:0)[384r,400r:14)[672r,688r:13)[912r,928r:12)[2568r,2608r:1)[3664r,3680r:11)[3952r,3968r:10)[4192r,4208r:9)[5184r,5264r:2)[5632r,5648r:8)[5920r,5936r:7)[6160r,6176r:6)[7832r,7872r:3)[8912r,8928r:5)[9136r,9152r:4)  0@0B-phi 1@2568r 2@5184r 3@7832r 4@9136r 5@8912r 6@6160r 7@5920r 8@5632r 9@4192r 10@3952r 11@3664r 12@912r 13@672r 14@384r
W1 [0B,80r:0)[2576r,2608r:1)[5192r,5264r:2)[7840r,7872r:3)  0@0B-phi 1@2576r 2@5192r 3@7840r
W2 [0B,64r:0)[2584r,2608r:1)[5200r,5264r:2)[7848r,7872r:3)  0@0B-phi 1@2584r 2@5200r 3@7848r
W3 [0B,48r:0)[2592r,2608r:1)[5216r,5264r:2)[7856r,7872r:3)  0@0B-phi 1@2592r 2@5216r 3@7856r
W4 [0B,32r:0)[2600r,2608r:1)[5232r,5264r:2)[7864r,7872r:3)  0@0B-phi 1@2600r 2@5232r 3@7864r
W5 [0B,16r:0)[2560r,2608r:1)[5248r,5264r:2)[7824r,7872r:3)  0@0B-phi 1@2560r 2@5248r 3@7824r
W8 [688r,820r:2)[3968r,4100r:1)[5936r,6068r:0)  0@5936r 1@3968r 2@688r
%0 [304r,8784B:0)  0@304r weight:0.000000e+00
%1 [312r,8784B:0)  0@312r weight:0.000000e+00
%2 [96r,112r:0)  0@96r weight:0.000000e+00
%3 [80r,312r:0)  0@80r weight:0.000000e+00
%4 [64r,304r:0)  0@64r weight:0.000000e+00
%5 [48r,160r:0)  0@48r weight:0.000000e+00
%6 [32r,292r:0)  0@32r weight:0.000000e+00
%7 [16r,296r:0)  0@16r weight:0.000000e+00
%10 [272r,288r:0)  0@272r weight:0.000000e+00
%11 [288r,320r:0)  0@288r weight:0.000000e+00
%13 [496r,736r:0)  0@496r weight:0.000000e+00
%14 [512r,580r:0)  0@512r weight:0.000000e+00
%15 [580r,592r:0)  0@580r weight:0.000000e+00
%16 [544r,608r:0)  0@544r weight:0.000000e+00
%18 [576r,592r:0)  0@576r weight:0.000000e+00
%19 [592r,624r:0)  0@592r weight:0.000000e+00
%20 [624r,640r:0)  0@624r weight:0.000000e+00
%21 [820r,824r:0)  0@820r weight:0.000000e+00
%22 [800r,816r:0)  0@800r weight:0.000000e+00
%23 [816r,832r:0)  0@816r weight:0.000000e+00
%26 [1120r,1152r:0)  0@1120r weight:0.000000e+00
%27 [1136r,1152r:0)  0@1136r weight:0.000000e+00
%29 [3552r,3568r:0)  0@3552r weight:0.000000e+00
%30 [3568r,3584r:0)  0@3568r weight:0.000000e+00
%32 [3776r,4016r:0)  0@3776r weight:0.000000e+00
%33 [3792r,3860r:0)  0@3792r weight:0.000000e+00
%34 [3860r,3872r:0)  0@3860r weight:0.000000e+00
%35 [3824r,3888r:0)  0@3824r weight:0.000000e+00
%37 [3856r,3872r:0)  0@3856r weight:0.000000e+00
%38 [3872r,3904r:0)  0@3872r weight:0.000000e+00
%39 [3904r,3920r:0)  0@3904r weight:0.000000e+00
%40 [4100r,4104r:0)  0@4100r weight:0.000000e+00
%41 [4080r,4096r:0)  0@4080r weight:0.000000e+00
%42 [4096r,4112r:0)  0@4096r weight:0.000000e+00
%45 [4384r,4416r:0)  0@4384r weight:0.000000e+00
%46 [4400r,4416r:0)  0@4400r weight:0.000000e+00
%48 [5520r,5536r:0)  0@5520r weight:0.000000e+00
%49 [5536r,5552r:0)  0@5536r weight:0.000000e+00
%51 [5744r,5984r:0)  0@5744r weight:0.000000e+00
%52 [5760r,5828r:0)  0@5760r weight:0.000000e+00
%53 [5828r,5840r:0)  0@5828r weight:0.000000e+00
%54 [5792r,5856r:0)  0@5792r weight:0.000000e+00
%56 [5824r,5840r:0)  0@5824r weight:0.000000e+00
%57 [5840r,5872r:0)  0@5840r weight:0.000000e+00
%58 [5872r,5888r:0)  0@5872r weight:0.000000e+00
%59 [6068r,6072r:0)  0@6068r weight:0.000000e+00
%60 [6048r,6064r:0)  0@6048r weight:0.000000e+00
%61 [6064r,6080r:0)  0@6064r weight:0.000000e+00
%64 [6368r,6400r:0)  0@6368r weight:0.000000e+00
%65 [6384r,6400r:0)  0@6384r weight:0.000000e+00
%67 [8800r,8816r:0)  0@8800r weight:0.000000e+00
%68 [8816r,8832r:0)  0@8816r weight:0.000000e+00
%70 [9024r,9040r:0)  0@9024r weight:0.000000e+00
%71 [9040r,9056r:0)  0@9040r weight:0.000000e+00
%74 [6512r,6544r:0)  0@6512r weight:0.000000e+00
%75 [6528r,6544r:0)  0@6528r weight:0.000000e+00
%77 [8720r,8736r:0)  0@8720r weight:0.000000e+00
%78 [8736r,8752r:0)  0@8736r weight:0.000000e+00
%79 [6608r,6692r:0)  0@6608r weight:0.000000e+00
%80 [6304r,8784B:0)  0@6304r weight:0.000000e+00
%81 [6624r,6692r:0)  0@6624r weight:0.000000e+00
%82 [6692r,6696r:0)  0@6692r weight:0.000000e+00
%83 [6696r,6712r:0)  0@6696r weight:0.000000e+00
%84 [6688r,6704r:0)  0@6688r weight:0.000000e+00
%86 [6768r,6784r:0)  0@6768r weight:0.000000e+00
%87 [6784r,6800r:0)  0@6784r weight:0.000000e+00
%88 [6832r,6864r:0)  0@6832r weight:0.000000e+00
%89 [6848r,6864r:0)  0@6848r weight:0.000000e+00
%90 [6864r,6880r:0)  0@6864r weight:0.000000e+00
%91 [6880r,6896r:0)  0@6880r weight:0.000000e+00
%93 [6960r,6992r:0)  0@6960r weight:0.000000e+00
%94 [6976r,6992r:0)  0@6976r weight:0.000000e+00
%96 [7600r,7896r:0)  0@7600r weight:0.000000e+00
%97 [7616r,7896r:0)  0@7616r weight:0.000000e+00
%98 [7632r,7896r:0)  0@7632r weight:0.000000e+00
%99 [7648r,7896r:0)  0@7648r weight:0.000000e+00
%100 [7664r,7896r:0)  0@7664r weight:0.000000e+00
%101 [7680r,7896r:0)  0@7680r weight:0.000000e+00
%105 [7992r,8016r:0)  0@7992r weight:0.000000e+00
%106 [7984r,8000r:0)  0@7984r weight:0.000000e+00
%107 [8000r,8016r:0)  0@8000r weight:0.000000e+00
%110 [8624r,8656r:0)  0@8624r weight:0.000000e+00
%111 [8640r,8656r:0)  0@8640r weight:0.000000e+00
%112 [8656r,8672r:0)  0@8656r weight:0.000000e+00
%113 [8080r,8096r:0)  0@8080r weight:0.000000e+00
%114 [8128r,8160r:0)  0@8128r weight:0.000000e+00
%115 [8144r,8160r:0)  0@8144r weight:0.000000e+00
%117 [8544r,8560r:0)  0@8544r weight:0.000000e+00
%118 [8560r,8576r:0)  0@8560r weight:0.000000e+00
%119 [8456r,8488r:0)  0@8456r weight:0.000000e+00
%120 [8240r,8480r:0)  0@8240r weight:0.000000e+00
%121 [8408r,8464r:0)  0@8408r weight:0.000000e+00
%122 [8464r,8480r:0)  0@8464r weight:0.000000e+00
%123 [8416r,8472r:0)  0@8416r weight:0.000000e+00
%124 [8440r,8472r:0)  0@8440r weight:0.000000e+00
%125 [8320r,8472r:0)  0@8320r weight:0.000000e+00
%127 [8472r,8480r:0)  0@8472r weight:0.000000e+00
%129 [8480r,8488r:0)  0@8480r weight:0.000000e+00
%130 [8368r,8424r:0)  0@8368r weight:0.000000e+00
%131 [8424r,8432r:0)  0@8424r weight:0.000000e+00
%132 [8400r,8432r:0)  0@8400r weight:0.000000e+00
%134 [8432r,8448r:0)  0@8432r weight:0.000000e+00
%136 [8448r,8488r:0)  0@8448r weight:0.000000e+00
%137 [8496r,8504r:0)  0@8496r weight:0.000000e+00
%138 [8504r,8512r:0)  0@8504r weight:0.000000e+00
%139 [7056r,7072r:0)  0@7056r weight:0.000000e+00
%140 [7104r,7136r:0)  0@7104r weight:0.000000e+00
%141 [7120r,7136r:0)  0@7120r weight:0.000000e+00
%143 [7520r,7536r:0)  0@7520r weight:0.000000e+00
%144 [7536r,7552r:0)  0@7536r weight:0.000000e+00
%145 [7336r,7456r:0)  0@7336r weight:0.000000e+00
%147 [7400r,7440r:0)  0@7400r weight:0.000000e+00
%148 [7440r,7460r:0)  0@7440r weight:0.000000e+00
%149 [7424r,7460r:0)  0@7424r weight:0.000000e+00
%150 [7280r,7460r:0)  0@7280r weight:0.000000e+00
%153 [7460r,7464r:0)  0@7460r weight:0.000000e+00
%154 [6320r,8784B:0)  0@6320r weight:0.000000e+00
%155 [7328r,7392r:0)  0@7328r weight:0.000000e+00
%156 [6336r,8784B:0)  0@6336r weight:0.000000e+00
%157 [7384r,7392r:0)  0@7384r weight:0.000000e+00
%158 [7392r,7416r:0)  0@7392r weight:0.000000e+00
%159 [7376r,7408r:0)  0@7376r weight:0.000000e+00
%160 [7408r,7416r:0)  0@7408r weight:0.000000e+00
%161 [7416r,7432r:0)  0@7416r weight:0.000000e+00
%162 [7432r,7464r:0)  0@7432r weight:0.000000e+00
%163 [7456r,7472r:0)  0@7456r weight:0.000000e+00
%165 [4528r,4560r:0)  0@4528r weight:0.000000e+00
%166 [4544r,4560r:0)  0@4544r weight:0.000000e+00
%168 [5440r,5456r:0)  0@5440r weight:0.000000e+00
%169 [5456r,5472r:0)  0@5456r weight:0.000000e+00
%170 [4624r,4708r:0)  0@4624r weight:0.000000e+00
%171 [4336r,5504B:0)  0@4336r weight:0.000000e+00
%172 [4640r,4708r:0)  0@4640r weight:0.000000e+00
%173 [4708r,4712r:0)  0@4708r weight:0.000000e+00
%174 [4712r,4728r:0)  0@4712r weight:0.000000e+00
%175 [4704r,4720r:0)  0@4704r weight:0.000000e+00
%177 [4784r,4800r:0)  0@4784r weight:0.000000e+00
%178 [4800r,4816r:0)  0@4800r weight:0.000000e+00
%179 [4848r,5080r:0)  0@4848r weight:0.000000e+00
%180 [4952r,5080r:0)  0@4952r weight:0.000000e+00
%181 [5080r,5136r:0)  0@5080r weight:0.000000e+00
%182 [5136r,5312r:0)  0@5136r weight:0.000000e+00
%183 [4928r,5312r:0)  0@4928r weight:0.000000e+00
%184 [4944r,5312r:0)  0@4944r weight:0.000000e+00
%185 [5088r,5312r:0)  0@5088r weight:0.000000e+00
%186 [5112r,5152r:0)  0@5112r weight:0.000000e+00
%187 [5152r,5312r:0)  0@5152r weight:0.000000e+00
%188 [5008r,5104r:0)  0@5008r weight:0.000000e+00
%189 [5024r,5096r:0)  0@5024r weight:0.000000e+00
%190 [4352r,5504B:0)  0@4352r weight:0.000000e+00
%191 [5096r,5104r:0)  0@5096r weight:0.000000e+00
%192 [5104r,5120r:0)  0@5104r weight:0.000000e+00
%193 [5072r,5120r:0)  0@5072r weight:0.000000e+00
%194 [5120r,5312r:0)  0@5120r weight:0.000000e+00
%195 [5128r,5312r:0)  0@5128r weight:0.000000e+00
%198 [5344r,5376r:0)  0@5344r weight:0.000000e+00
%199 [5360r,5376r:0)  0@5360r weight:0.000000e+00
%200 [5376r,5392r:0)  0@5376r weight:0.000000e+00
%202 [1264r,1296r:0)  0@1264r weight:0.000000e+00
%203 [1280r,1296r:0)  0@1280r weight:0.000000e+00
%205 [3472r,3488r:0)  0@3472r weight:0.000000e+00
%206 [3488r,3504r:0)  0@3488r weight:0.000000e+00
%207 [1360r,1444r:0)  0@1360r weight:0.000000e+00
%208 [1056r,3536B:0)  0@1056r weight:0.000000e+00
%209 [1376r,1444r:0)  0@1376r weight:0.000000e+00
%210 [1444r,1448r:0)  0@1444r weight:0.000000e+00
%211 [1448r,1464r:0)  0@1448r weight:0.000000e+00
%212 [1440r,1456r:0)  0@1440r weight:0.000000e+00
%214 [1520r,1536r:0)  0@1520r weight:0.000000e+00
%215 [1536r,1552r:0)  0@1536r weight:0.000000e+00
%216 [1584r,1616r:0)  0@1584r weight:0.000000e+00
%217 [1600r,1664r:0)  0@1600r weight:0.000000e+00
%218 [1616r,1632r:0)  0@1616r weight:0.000000e+00
%219 [1632r,1648r:0)  0@1632r weight:0.000000e+00
%220 [1696r,1728r:0)  0@1696r weight:0.000000e+00
%221 [1712r,1728r:0)  0@1712r weight:0.000000e+00
%223 [2336r,2632r:0)  0@2336r weight:0.000000e+00
%224 [2352r,2632r:0)  0@2352r weight:0.000000e+00
%225 [2368r,2632r:0)  0@2368r weight:0.000000e+00
%226 [2384r,2632r:0)  0@2384r weight:0.000000e+00
%227 [2400r,2632r:0)  0@2400r weight:0.000000e+00
%228 [2416r,2632r:0)  0@2416r weight:0.000000e+00
%231 [2656r,2672r:0)  0@2656r weight:0.000000e+00
%232 [2704r,2736r:0)  0@2704r weight:0.000000e+00
%233 [2720r,2736r:0)  0@2720r weight:0.000000e+00
%236 [3376r,3408r:0)  0@3376r weight:0.000000e+00
%237 [3392r,3408r:0)  0@3392r weight:0.000000e+00
%238 [3408r,3424r:0)  0@3408r weight:0.000000e+00
%240 [2848r,2880r:0)  0@2848r weight:0.000000e+00
%241 [2864r,2880r:0)  0@2864r weight:0.000000e+00
%243 [3296r,3312r:0)  0@3296r weight:0.000000e+00
%244 [3312r,3328r:0)  0@3312r weight:0.000000e+00
%245 [3168r,3200r:0)  0@3168r weight:0.000000e+00
%246 [2960r,3160r:0)  0@2960r weight:0.000000e+00
%247 [2976r,3160r:0)  0@2976r weight:0.000000e+00
%248 [3160r,3200r:0)  0@3160r weight:0.000000e+00
%249 [3200r,3216r:0)  0@3200r weight:0.000000e+00
%250 [3024r,3208r:0)  0@3024r weight:0.000000e+00
%252 [3208r,3216r:0)  0@3208r weight:0.000000e+00
%253 [3216r,3224r:0)  0@3216r weight:0.000000e+00
%254 [3088r,3224r:0)  0@3088r weight:0.000000e+00
%256 [3120r,3176r:0)  0@3120r weight:0.000000e+00
%257 [3176r,3184r:0)  0@3176r weight:0.000000e+00
%258 [3152r,3184r:0)  0@3152r weight:0.000000e+00
%260 [3184r,3192r:0)  0@3184r weight:0.000000e+00
%262 [3192r,3224r:0)  0@3192r weight:0.000000e+00
%263 [3232r,3240r:0)  0@3232r weight:0.000000e+00
%264 [3240r,3248r:0)  0@3240r weight:0.000000e+00
%266 [1840r,1872r:0)  0@1840r weight:0.000000e+00
%267 [1856r,1872r:0)  0@1856r weight:0.000000e+00
%269 [2256r,2272r:0)  0@2256r weight:0.000000e+00
%270 [2272r,2288r:0)  0@2272r weight:0.000000e+00
%271 [1936r,2168r:0)  0@1936r weight:0.000000e+00
%273 [2096r,2168r:0)  0@2096r weight:0.000000e+00
%274 [2168r,2196r:0)  0@2168r weight:0.000000e+00
%275 [2152r,2196r:0)  0@2152r weight:0.000000e+00
%276 [2104r,2196r:0)  0@2104r weight:0.000000e+00
%279 [2196r,2200r:0)  0@2196r weight:0.000000e+00
%280 [1072r,3536B:0)  0@1072r weight:0.000000e+00
%281 [2088r,2120r:0)  0@2088r weight:0.000000e+00
%282 [2080r,2112r:0)  0@2080r weight:0.000000e+00
%283 [1088r,3536B:0)  0@1088r weight:0.000000e+00
%284 [2112r,2120r:0)  0@2112r weight:0.000000e+00
%285 [2120r,2144r:0)  0@2120r weight:0.000000e+00
%286 [2128r,2144r:0)  0@2128r weight:0.000000e+00
%287 [2144r,2160r:0)  0@2144r weight:0.000000e+00
%288 [2160r,2200r:0)  0@2160r weight:0.000000e+00
%289 [2192r,2208r:0)  0@2192r weight:0.000000e+00
RegMasks: 400r 688r 928r 2608r 3680r 3968r 4208r 5264r 5648r 5936r 6176r 7872r 8928r 9152r
********** MACHINEINSTRS **********
# Machine code for function fftXYZ: NoPHIs, TracksLiveness
Frame Objects:
  fi#-3: size=8, align=16, fixed, at location [SP+16]
  fi#-2: size=8, align=8, fixed, at location [SP+8]
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=8, align=8, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: dead
  fi#7: dead
  fi#8: dead
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=4, align=4, at location [SP]
  fi#12: size=4, align=4, at location [SP]
  fi#13: size=4, align=4, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
Function Live Ins: $w0 in %2, $w1 in %3, $w2 in %4, $w3 in %5, $x4 in %6, $x5 in %7

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $w0, $w1, $w2, $w3, $x4, $x5
16B	  %7:gpr64 = COPY $x5
32B	  %6:gpr64 = COPY $x4
48B	  %5:gpr32 = COPY $w3
64B	  %4:gpr32 = COPY $w2
80B	  %3:gpr32common = COPY $w1
96B	  %2:gpr32 = COPY $w0
112B	  STRWui %2:gpr32, %stack.0.sign.addr, 0 :: (store 4 into %ir.sign.addr)
128B	  STRWui %3:gpr32common, %stack.1.n1.addr, 0 :: (store 4 into %ir.n1.addr)
144B	  STRWui %4:gpr32, %stack.2.n2.addr, 0 :: (store 4 into %ir.n2.addr)
160B	  STRWui %5:gpr32, %stack.3.n3.addr, 0 :: (store 4 into %ir.n3.addr)
272B	  %10:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
288B	  %11:gpr32 = LDRWui %10:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
292B	  STRXui %6:gpr64, %stack.4.x.addr, 0 :: (store 8 into %ir.x.addr)
296B	  STRXui %7:gpr64, %stack.5.xout.addr, 0 :: (store 8 into %ir.xout.addr)
304B	  undef %0.sub_32:gpr64 = ORRWrs $wzr, %4:gpr32, 0, debug-location !60; fft3d.c:142:62
312B	  undef %1.sub_32:gpr64common = nsw ADDWri %3:gpr32common, 1, 0, debug-location !62; fft3d.c:142:69
320B	  CBZW %11:gpr32, %bb.2, debug-location !90; fft3d.c:151:9
328B	  B %bb.1, debug-location !90; fft3d.c:151:9

336B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

352B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9
384B	  $w0 = MOVi32imm 3, debug-location !91; fft3d.c:152:9
400B	  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9
416B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !91; fft3d.c:152:9
432B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !91; fft3d.c:152:9
448B	  PCN_STACKMAP 0, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !91 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:152:9
464B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !91; fft3d.c:152:9

480B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)

496B	  %13:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
512B	  %14:gpr32 = MOVi32imm 8192
544B	  %16:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
576B	  %18:gpr32 = MOVi32imm 32
580B	  %15:gpr32common = SDIVWr %14:gpr32, %13:gpr32, debug-location !93; fft3d.c:154:26
584B	  dead $wzr = SUBSWri %15:gpr32common, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
592B	  %19:gpr32common = CSELWr %18:gpr32, %15:gpr32common, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
608B	  STRWui %19:gpr32common, %16:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
624B	  %20:gpr32common = nsw ADDWri %19:gpr32common, 1, 0, debug-location !101; fft3d.c:157:21
640B	  STRWui %20:gpr32common, %stack.16.blkp, 0, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
656B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !104; fft3d.c:158:11
672B	  $w0 = COPY %13:gpr32, debug-location !104; fft3d.c:158:11
688B	  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !104; fft3d.c:158:11
704B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !104; fft3d.c:158:11
720B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !105; fft3d.c:158:9
736B	  PCN_STACKMAP 1, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %13:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !105 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:158:9
752B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !105; fft3d.c:158:9
800B	  %22:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
816B	  %23:gpr32 = LDRWui %22:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
820B	  %21:gpr32 = COPY $w8, debug-location !104; fft3d.c:158:11
824B	  STRWui %21:gpr32, %stack.12.log, 0, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
832B	  CBZW %23:gpr32, %bb.4, debug-location !108; fft3d.c:159:9
848B	  B %bb.3, debug-location !108; fft3d.c:159:9

864B	bb.3.if.then7:
	; predecessors: %bb.2
	  successors: %bb.4(0x80000000); %bb.4(100.00%)

880B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9
912B	  $w0 = MOVi32imm 7, debug-location !109; fft3d.c:160:9
928B	  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9
944B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !109; fft3d.c:160:9
960B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !109; fft3d.c:160:9
976B	  PCN_STACKMAP 2, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !109 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:160:9
992B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !109; fft3d.c:160:9

1008B	bb.4.if.end8:
	; predecessors: %bb.2, %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

1040B	  STRWui $wzr, %stack.11.k, 0, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
1056B	  %208:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
1072B	  %280:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
1088B	  %283:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

1104B	bb.5.for.cond:
	; predecessors: %bb.4, %bb.23
	  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)

1120B	  %26:gpr32 = LDRWui %stack.11.k, 0, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
1136B	  %27:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
1152B	  dead $wzr = SUBSWrr %26:gpr32, %27:gpr32, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
1168B	  Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
1184B	  B %bb.6, debug-location !117; fft3d.c:161:5

1200B	bb.6.for.body:
	; predecessors: %bb.5
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

1232B	  STRWui $wzr, %stack.13.bls, 0, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

1248B	bb.7.for.cond10:
	; predecessors: %bb.6, %bb.22
	  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)

1264B	  %202:gpr32 = LDRWui %stack.13.bls, 0, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
1280B	  %203:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
1296B	  dead $wzr = SUBSWrr %202:gpr32, %203:gpr32, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
1312B	  Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
1328B	  B %bb.8, debug-location !126; fft3d.c:162:9

1344B	bb.8.for.body12:
	; predecessors: %bb.7
	  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)

1360B	  %207:gpr32 = LDRWui %stack.13.bls, 0, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
1376B	  %209:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
1440B	  %212:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
1444B	  %210:gpr32common = nsw ADDWrr %207:gpr32, %209:gpr32, debug-location !130; fft3d.c:163:23
1448B	  %211:gpr32common = SUBWri %210:gpr32common, 1, 0, debug-location !131; fft3d.c:163:34
1456B	  dead $wzr = SUBSWrr %211:gpr32common, %212:gpr32, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
1464B	  STRWui %211:gpr32common, %stack.14.ble, 0, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
1472B	  Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
1488B	  B %bb.9, debug-location !137; fft3d.c:164:17

1504B	bb.9.if.then15:
	; predecessors: %bb.8
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

1520B	  %214:gpr32common = LDRWui %stack.2.n2.addr, 0, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
1536B	  %215:gpr32common = SUBWri %214:gpr32common, 1, 0, debug-location !139; fft3d.c:165:26
1552B	  STRWui %215:gpr32common, %stack.14.ble, 0, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

1568B	bb.10.if.end17:
	; predecessors: %bb.8, %bb.9
	  successors: %bb.11(0x80000000); %bb.11(100.00%)

1584B	  %216:gpr32 = LDRWui %stack.14.ble, 0, debug-location !142 :: (dereferenceable load 4 from %ir.ble); fft3d.c:166:19
1600B	  %217:gpr32 = LDRWui %stack.13.bls, 0, debug-location !143 :: (dereferenceable load 4 from %ir.bls); fft3d.c:166:25
1616B	  %218:gpr32common = nsw SUBWrr %216:gpr32, %217:gpr32, debug-location !144; fft3d.c:166:23
1632B	  %219:gpr32common = nsw ADDWri %218:gpr32common, 1, 0, debug-location !145; fft3d.c:166:29
1648B	  STRWui %219:gpr32common, %stack.15.len, 0, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
1664B	  STRWui %217:gpr32, %stack.10.j, 0, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

1680B	bb.11.for.cond20:
	; predecessors: %bb.10, %bb.15
	  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)

1696B	  %220:gpr32 = LDRWui %stack.10.j, 0, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
1712B	  %221:gpr32 = LDRWui %stack.14.ble, 0, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
1728B	  dead $wzr = SUBSWrr %220:gpr32, %221:gpr32, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
1744B	  Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
1760B	  B %bb.12, debug-location !155; fft3d.c:167:13

1776B	bb.12.for.body22:
	; predecessors: %bb.11
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

1808B	  STRWui $wzr, %stack.9.i, 0, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

1824B	bb.13.for.cond23:
	; predecessors: %bb.12, %bb.14
	  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)

1840B	  %266:gpr32 = LDRWui %stack.9.i, 0, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
1856B	  %267:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
1872B	  dead $wzr = SUBSWrr %266:gpr32, %267:gpr32, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
1888B	  Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17
1904B	  B %bb.14, debug-location !164; fft3d.c:168:17

1920B	bb.14.for.body25:
	; predecessors: %bb.13
	  successors: %bb.13(0x80000000); %bb.13(100.00%)

1936B	  %271:gpr64 = LDRSWui %stack.10.j, 0, debug-location !165 :: (dereferenceable load 4 from %ir.j); fft3d.c:169:27
2080B	  %282:gpr64 = LDRSWui %stack.11.k, 0, debug-location !175 :: (dereferenceable load 4 from %ir.k); fft3d.c:169:51
2088B	  %281:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
2096B	  %273:gpr32 = LDRWui %stack.13.bls, 0, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
2104B	  %276:gpr64common = LDRSWui %stack.9.i, 0, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
2112B	  %284:gpr64 = nsw MADDXrrr %282:gpr64, %283:gpr64, $xzr, debug-location !174; fft3d.c:169:49
2120B	  %285:gpr64 = ADDXrs %281:gpr64, %284:gpr64, 4, debug-location !174; fft3d.c:169:49
2128B	  %286:gpr64 = nsw MADDXrrr %271:gpr64, %1:gpr64common, $xzr, debug-location !174; fft3d.c:169:49
2144B	  %287:gpr64common = ADDXrs %285:gpr64, %286:gpr64, 4, debug-location !174; fft3d.c:169:49
2152B	  %275:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
2160B	  %288:fpr128 = LDRQroX %287:gpr64common, %276:gpr64common, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
2168B	  %274:gpr32 = nsw SUBWrr %271.sub_32:gpr64, %273:gpr32, debug-location !168; fft3d.c:169:29
2192B	  %289:gpr32common = nsw ADDWri %276.sub_32:gpr64common, 1, 0, debug-location !178; fft3d.c:168:38
2196B	  %279:gpr32 = MADDWrrr %275:gpr32, %276.sub_32:gpr64common, %274:gpr32, debug-location !172; fft3d.c:169:35
2200B	  STRQroW %288:fpr128, %280:gpr64common, %279:gpr32, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
2208B	  STRWui %289:gpr32common, %stack.9.i, 0, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
2224B	  B %bb.13, debug-location !179; fft3d.c:168:17

2240B	bb.15.for.inc35:
	; predecessors: %bb.13
	  successors: %bb.11(0x80000000); %bb.11(100.00%)

2256B	  %269:gpr32common = LDRWui %stack.10.j, 0, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
2272B	  %270:gpr32common = nsw ADDWri %269:gpr32common, 1, 0, debug-location !182; fft3d.c:167:38
2288B	  STRWui %270:gpr32common, %stack.10.j, 0, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
2304B	  B %bb.11, debug-location !183; fft3d.c:167:13

2320B	bb.16.for.end37:
	; predecessors: %bb.11
	  successors: %bb.17(0x80000000); %bb.17(100.00%)

2336B	  %223:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:172:26
2352B	  %224:gpr32 = LDRWui %stack.12.log, 0, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
2368B	  %225:gpr32 = LDRWui %stack.15.len, 0, debug-location !188 :: (dereferenceable load 4 from %ir.len); fft3d.c:172:37
2384B	  %226:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !189 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:42
2400B	  %227:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !190 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:172:46
2416B	  %228:gpr64 = LDRXui %fixed-stack.2, 0, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
2432B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !192; fft3d.c:172:13
2560B	  $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !192; fft3d.c:172:13
2564B	  STRXui %228:gpr64, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
2568B	  $w0 = COPY %223:gpr32, debug-location !192; fft3d.c:172:13
2576B	  $w1 = COPY %224:gpr32, debug-location !192; fft3d.c:172:13
2584B	  $w2 = COPY %225:gpr32, debug-location !192; fft3d.c:172:13
2592B	  $w3 = COPY %226:gpr32, debug-location !192; fft3d.c:172:13
2600B	  $w4 = COPY %227:gpr32, debug-location !192; fft3d.c:172:13
2608B	  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
2616B	  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !192; fft3d.c:172:13
2624B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !193; fft3d.c:173:22
2632B	  PCN_STACKMAP 3, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.2, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %223:gpr32, %224:gpr32, %225:gpr32, %226:gpr32, %227:gpr32, %228:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !193 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:173:22
2640B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !193; fft3d.c:173:22
2656B	  %231:gpr32 = LDRWui %stack.13.bls, 0, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22
2672B	  STRWui %231:gpr32, %stack.10.j, 0, debug-location !195 :: (store 4 into %ir.j); fft3d.c:173:20

2688B	bb.17.for.cond38:
	; predecessors: %bb.16, %bb.21
	  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)

2704B	  %232:gpr32 = LDRWui %stack.10.j, 0, debug-location !197 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:27
2720B	  %233:gpr32 = LDRWui %stack.14.ble, 0, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
2736B	  dead $wzr = SUBSWrr %232:gpr32, %233:gpr32, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
2752B	  Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
2768B	  B %bb.18, debug-location !201; fft3d.c:173:13

2784B	bb.18.for.body40:
	; predecessors: %bb.17
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

2816B	  STRWui $wzr, %stack.9.i, 0, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

2832B	bb.19.for.cond41:
	; predecessors: %bb.18, %bb.20
	  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)

2848B	  %240:gpr32 = LDRWui %stack.9.i, 0, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
2864B	  %241:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
2880B	  dead $wzr = SUBSWrr %240:gpr32, %241:gpr32, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
2896B	  Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
2912B	  B %bb.20, debug-location !210; fft3d.c:174:17

2928B	bb.20.for.body43:
	; predecessors: %bb.19
	  successors: %bb.19(0x80000000); %bb.19(100.00%)

2960B	  %246:gpr64 = LDRSWui %stack.11.k, 0, debug-location !213 :: (dereferenceable load 4 from %ir.k); fft3d.c:175:23
2976B	  %247:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
3024B	  %250:gpr64 = LDRSWui %stack.10.j, 0, debug-location !214 :: (dereferenceable load 4 from %ir.j); fft3d.c:175:26
3088B	  %254:gpr64 = LDRSWui %stack.9.i, 0, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
3120B	  %256:gpr32 = LDRWui %stack.13.bls, 0, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
3152B	  %258:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
3160B	  %248:gpr64 = nsw MADDXrrr %246:gpr64, %247:gpr64, $xzr, debug-location !211; fft3d.c:175:21
3168B	  %245:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
3176B	  %257:gpr32 = nsw SUBWrr %250.sub_32:gpr64, %256:gpr32, debug-location !218; fft3d.c:175:42
3184B	  %260:gpr32 = MADDWrrr %258:gpr32, %254.sub_32:gpr64, %257:gpr32, debug-location !222; fft3d.c:175:48
3192B	  %262:fpr128 = LDRQroW %280:gpr64common, %260:gpr32, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
3200B	  %249:gpr64 = ADDXrs %245:gpr64, %248:gpr64, 4, debug-location !211; fft3d.c:175:21
3208B	  %252:gpr64 = nsw MADDXrrr %250:gpr64, %1:gpr64common, $xzr, debug-location !211; fft3d.c:175:21
3216B	  %253:gpr64common = ADDXrs %249:gpr64, %252:gpr64, 4, debug-location !211; fft3d.c:175:21
3224B	  STRQroX %262:fpr128, %253:gpr64common, %254:gpr64, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
3232B	  %263:gpr32common = LDRWui %stack.9.i, 0, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
3240B	  %264:gpr32common = nsw ADDWri %263:gpr32common, 1, 0, debug-location !224; fft3d.c:174:38
3248B	  STRWui %264:gpr32common, %stack.9.i, 0, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
3264B	  B %bb.19, debug-location !225; fft3d.c:174:17

3280B	bb.21.for.inc58:
	; predecessors: %bb.19
	  successors: %bb.17(0x80000000); %bb.17(100.00%)

3296B	  %243:gpr32common = LDRWui %stack.10.j, 0, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
3312B	  %244:gpr32common = nsw ADDWri %243:gpr32common, 1, 0, debug-location !228; fft3d.c:173:38
3328B	  STRWui %244:gpr32common, %stack.10.j, 0, debug-location !228 :: (store 4 into %ir.j); fft3d.c:173:38
3344B	  B %bb.17, debug-location !229; fft3d.c:173:13

3360B	bb.22.for.inc61:
	; predecessors: %bb.17
	  successors: %bb.7(0x80000000); %bb.7(100.00%)

3376B	  %236:gpr32 = LDRWui %208:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
3392B	  %237:gpr32 = LDRWui %stack.13.bls, 0, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
3408B	  %238:gpr32 = nsw ADDWrr %237:gpr32, %236:gpr32, debug-location !233; fft3d.c:162:37
3424B	  STRWui %238:gpr32, %stack.13.bls, 0, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
3440B	  B %bb.7, debug-location !234; fft3d.c:162:9

3456B	bb.23.for.inc64:
	; predecessors: %bb.7
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

3472B	  %205:gpr32common = LDRWui %stack.11.k, 0, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
3488B	  %206:gpr32common = nsw ADDWri %205:gpr32common, 1, 0, debug-location !237; fft3d.c:161:26
3504B	  STRWui %206:gpr32common, %stack.11.k, 0, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
3520B	  B %bb.5, debug-location !238; fft3d.c:161:5

3536B	bb.24.for.end66:
	; predecessors: %bb.5
	  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)

3552B	  %29:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
3568B	  %30:gpr32 = LDRWui %29:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
3584B	  CBZW %30:gpr32, %bb.26, debug-location !243; fft3d.c:180:9
3600B	  B %bb.25, debug-location !243; fft3d.c:180:9

3616B	bb.25.if.then68:
	; predecessors: %bb.24
	  successors: %bb.26(0x80000000); %bb.26(100.00%)

3632B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9
3664B	  $w0 = MOVi32imm 7, debug-location !244; fft3d.c:181:9
3680B	  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9
3696B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !244; fft3d.c:181:9
3712B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !244; fft3d.c:181:9
3728B	  PCN_STACKMAP 4, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !244 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:181:9
3744B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !244; fft3d.c:181:9

3760B	bb.26.if.end69:
	; predecessors: %bb.24, %bb.25
	  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)

3776B	  %32:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
3792B	  %33:gpr32 = MOVi32imm 8192
3824B	  %35:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
3856B	  %37:gpr32 = MOVi32imm 32
3860B	  %34:gpr32common = SDIVWr %33:gpr32, %32:gpr32, debug-location !246; fft3d.c:183:26
3864B	  dead $wzr = SUBSWri %34:gpr32common, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
3872B	  %38:gpr32common = CSELWr %37:gpr32, %34:gpr32common, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
3888B	  STRWui %38:gpr32common, %35:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
3904B	  %39:gpr32common = nsw ADDWri %38:gpr32common, 1, 0, debug-location !253; fft3d.c:186:21
3920B	  STRWui %39:gpr32common, %stack.16.blkp, 0, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
3936B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !256; fft3d.c:187:11
3952B	  $w0 = COPY %32:gpr32, debug-location !256; fft3d.c:187:11
3968B	  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !256; fft3d.c:187:11
3984B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !256; fft3d.c:187:11
4000B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !257; fft3d.c:187:9
4016B	  PCN_STACKMAP 5, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %32:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !257 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:187:9
4032B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !257; fft3d.c:187:9
4080B	  %41:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
4096B	  %42:gpr32 = LDRWui %41:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
4100B	  %40:gpr32 = COPY $w8, debug-location !256; fft3d.c:187:11
4104B	  STRWui %40:gpr32, %stack.12.log, 0, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
4112B	  CBZW %42:gpr32, %bb.28, debug-location !260; fft3d.c:188:9
4128B	  B %bb.27, debug-location !260; fft3d.c:188:9

4144B	bb.27.if.then77:
	; predecessors: %bb.26
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4160B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9
4192B	  $w0 = MOVi32imm 8, debug-location !261; fft3d.c:189:9
4208B	  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9
4224B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !261; fft3d.c:189:9
4240B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !261; fft3d.c:189:9
4256B	  PCN_STACKMAP 6, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !261 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:189:9
4272B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !261; fft3d.c:189:9

4288B	bb.28.if.end78:
	; predecessors: %bb.26, %bb.27
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

4320B	  STRWui $wzr, %stack.11.k, 0, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
4336B	  %171:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
4352B	  %190:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

4368B	bb.29.for.cond79:
	; predecessors: %bb.28, %bb.35
	  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)

4384B	  %45:gpr32 = LDRWui %stack.11.k, 0, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
4400B	  %46:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
4416B	  dead $wzr = SUBSWrr %45:gpr32, %46:gpr32, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
4432B	  Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
4448B	  B %bb.30, debug-location !269; fft3d.c:190:5

4464B	bb.30.for.body81:
	; predecessors: %bb.29
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

4496B	  STRWui $wzr, %stack.13.bls, 0, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

4512B	bb.31.for.cond82:
	; predecessors: %bb.30, %bb.34
	  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)

4528B	  %165:gpr32 = LDRWui %stack.13.bls, 0, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
4544B	  %166:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
4560B	  dead $wzr = SUBSWrr %165:gpr32, %166:gpr32, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
4576B	  Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
4592B	  B %bb.32, debug-location !278; fft3d.c:191:9

4608B	bb.32.for.body84:
	; predecessors: %bb.31
	  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)

4624B	  %170:gpr32 = LDRWui %stack.13.bls, 0, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
4640B	  %172:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
4704B	  %175:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
4708B	  %173:gpr32common = nsw ADDWrr %170:gpr32, %172:gpr32, debug-location !282; fft3d.c:192:23
4712B	  %174:gpr32common = SUBWri %173:gpr32common, 1, 0, debug-location !283; fft3d.c:192:34
4720B	  dead $wzr = SUBSWrr %174:gpr32common, %175:gpr32, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
4728B	  STRWui %174:gpr32common, %stack.14.ble, 0, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
4736B	  Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
4752B	  B %bb.33, debug-location !289; fft3d.c:193:17

4768B	bb.33.if.then88:
	; predecessors: %bb.32
	  successors: %bb.34(0x80000000); %bb.34(100.00%)

4784B	  %177:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
4800B	  %178:gpr32common = SUBWri %177:gpr32common, 1, 0, debug-location !291; fft3d.c:194:26
4816B	  STRWui %178:gpr32common, %stack.14.ble, 0, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

4832B	bb.34.if.end90:
	; predecessors: %bb.32, %bb.33
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

4848B	  %179:gpr32 = LDRWui %stack.14.ble, 0, debug-location !294 :: (dereferenceable load 4 from %ir.ble); fft3d.c:195:19
4928B	  %183:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
4944B	  %184:gpr32 = LDRWui %stack.12.log, 0, debug-location !300 :: (dereferenceable load 4 from %ir.log); fft3d.c:196:32
4952B	  %180:gpr32 = LDRWui %stack.13.bls, 0, debug-location !295 :: (dereferenceable load 4 from %ir.bls); fft3d.c:195:25
5008B	  %188:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
5024B	  %189:gpr64 = LDRSWui %stack.11.k, 0, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
5072B	  %193:gpr64 = LDRSWui %stack.13.bls, 0, debug-location !307 :: (dereferenceable load 4 from %ir.bls); fft3d.c:196:63
5080B	  %181:gpr32common = nsw SUBWrr %179:gpr32, %180:gpr32, debug-location !296; fft3d.c:195:23
5088B	  %185:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
5096B	  %191:gpr64 = nsw MADDXrrr %189:gpr64, %190:gpr64, $xzr, debug-location !305; fft3d.c:196:55
5104B	  %192:gpr64 = ADDXrs %188:gpr64, %191:gpr64, 4, debug-location !305; fft3d.c:196:55
5112B	  %186:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
5120B	  %194:gpr64 = ADDXrs %192:gpr64, %193:gpr64, 4, debug-location !305; fft3d.c:196:55
5128B	  %195:gpr64 = LDRXui %fixed-stack.1, 0, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
5136B	  %182:gpr32common = nsw ADDWri %181:gpr32common, 1, 0, debug-location !297; fft3d.c:195:29
5144B	  STRWui %182:gpr32common, %stack.15.len, 0, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
5152B	  %187:gpr32sp = nsw ADDWri %186:gpr32common, 1, 0, debug-location !304; fft3d.c:196:49
5160B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !310; fft3d.c:196:13
5176B	  STRXui %195:gpr64, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
5184B	  $w0 = COPY %183:gpr32, debug-location !310; fft3d.c:196:13
5192B	  $w1 = COPY %184:gpr32, debug-location !310; fft3d.c:196:13
5200B	  $w2 = COPY %182:gpr32common, debug-location !310; fft3d.c:196:13
5216B	  $w3 = COPY %185:gpr32, debug-location !310; fft3d.c:196:13
5232B	  $w4 = COPY %187:gpr32sp, debug-location !310; fft3d.c:196:13
5248B	  $x5 = COPY %194:gpr64, debug-location !310; fft3d.c:196:13
5264B	  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
5280B	  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !310; fft3d.c:196:13
5296B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !311; fft3d.c:197:9
5312B	  PCN_STACKMAP 7, 0, %187:gpr32sp, %194:gpr64, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.1, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %183:gpr32, %184:gpr32, %182:gpr32common, %185:gpr32, %194:gpr64, %195:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !311 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:197:9
5328B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !311; fft3d.c:197:9
5344B	  %198:gpr32 = LDRWui %171:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
5360B	  %199:gpr32 = LDRWui %stack.13.bls, 0, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
5376B	  %200:gpr32 = nsw ADDWrr %199:gpr32, %198:gpr32, debug-location !313; fft3d.c:191:37
5392B	  STRWui %200:gpr32, %stack.13.bls, 0, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
5408B	  B %bb.31, debug-location !314; fft3d.c:191:9

5424B	bb.35.for.inc102:
	; predecessors: %bb.31
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

5440B	  %168:gpr32common = LDRWui %stack.11.k, 0, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
5456B	  %169:gpr32common = nsw ADDWri %168:gpr32common, 1, 0, debug-location !317; fft3d.c:190:26
5472B	  STRWui %169:gpr32common, %stack.11.k, 0, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
5488B	  B %bb.29, debug-location !318; fft3d.c:190:5

5504B	bb.36.for.end104:
	; predecessors: %bb.29
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

5520B	  %48:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
5536B	  %49:gpr32 = LDRWui %48:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
5552B	  CBZW %49:gpr32, %bb.38, debug-location !323; fft3d.c:199:9
5568B	  B %bb.37, debug-location !323; fft3d.c:199:9

5584B	bb.37.if.then106:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

5600B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !324; fft3d.c:200:9
5632B	  $w0 = MOVi32imm 8, debug-location !324; fft3d.c:200:9
5648B	  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !324; fft3d.c:200:9
5664B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !324; fft3d.c:200:9
5680B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !324; fft3d.c:200:9
5696B	  PCN_STACKMAP 8, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !324 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:200:9
5712B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !324; fft3d.c:200:9

5728B	bb.38.if.end107:
	; predecessors: %bb.36, %bb.37
	  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)

5744B	  %51:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
5760B	  %52:gpr32 = MOVi32imm 8192
5792B	  %54:gpr64temp = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
5824B	  %56:gpr32 = MOVi32imm 32
5828B	  %53:gpr32common = SDIVWr %52:gpr32, %51:gpr32, debug-location !326; fft3d.c:202:26
5832B	  dead $wzr = SUBSWri %53:gpr32common, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
5840B	  %57:gpr32common = CSELWr %56:gpr32, %53:gpr32common, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
5856B	  STRWui %57:gpr32common, %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
5872B	  %58:gpr32common = nsw ADDWri %57:gpr32common, 1, 0, debug-location !333; fft3d.c:205:21
5888B	  STRWui %58:gpr32common, %stack.16.blkp, 0, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
5904B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !336; fft3d.c:206:11
5920B	  $w0 = COPY %51:gpr32, debug-location !336; fft3d.c:206:11
5936B	  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !336; fft3d.c:206:11
5952B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !336; fft3d.c:206:11
5968B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !337; fft3d.c:206:9
5984B	  PCN_STACKMAP 9, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %51:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !337 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:206:9
6000B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !337; fft3d.c:206:9
6048B	  %60:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
6064B	  %61:gpr32 = LDRWui %60:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
6068B	  %59:gpr32 = COPY $w8, debug-location !336; fft3d.c:206:11
6072B	  STRWui %59:gpr32, %stack.12.log, 0, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
6080B	  CBZW %61:gpr32, %bb.40, debug-location !340; fft3d.c:207:9
6096B	  B %bb.39, debug-location !340; fft3d.c:207:9

6112B	bb.39.if.then115:
	; predecessors: %bb.38
	  successors: %bb.40(0x80000000); %bb.40(100.00%)

6128B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !341; fft3d.c:208:9
6160B	  $w0 = MOVi32imm 9, debug-location !341; fft3d.c:208:9
6176B	  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !341; fft3d.c:208:9
6192B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !341; fft3d.c:208:9
6208B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !341; fft3d.c:208:9
6224B	  PCN_STACKMAP 10, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !341 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:208:9
6240B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !341; fft3d.c:208:9

6256B	bb.40.if.end116:
	; predecessors: %bb.38, %bb.39
	  successors: %bb.41(0x80000000); %bb.41(100.00%)

6288B	  STRWui $wzr, %stack.11.k, 0, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
6304B	  %80:gpr64temp = ADRP target-flags(aarch64-page) @fftblock
6320B	  %154:gpr64common = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane
6336B	  %156:gpr64 = nuw MADDXrrr %0:gpr64, %1:gpr64common, $xzr

6352B	bb.41.for.cond117:
	; predecessors: %bb.40, %bb.59
	  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)

6368B	  %64:gpr32 = LDRWui %stack.11.k, 0, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
6384B	  %65:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
6400B	  dead $wzr = SUBSWrr %64:gpr32, %65:gpr32, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
6416B	  Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5
6432B	  B %bb.42, debug-location !349; fft3d.c:209:5

6448B	bb.42.for.body119:
	; predecessors: %bb.41
	  successors: %bb.43(0x80000000); %bb.43(100.00%)

6480B	  STRWui $wzr, %stack.13.bls, 0, debug-location !350 :: (store 4 into %ir.bls); fft3d.c:210:18

6496B	bb.43.for.cond120:
	; predecessors: %bb.42, %bb.58
	  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)

6512B	  %74:gpr32 = LDRWui %stack.13.bls, 0, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
6528B	  %75:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
6544B	  dead $wzr = SUBSWrr %74:gpr32, %75:gpr32, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
6560B	  Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9
6576B	  B %bb.44, debug-location !358; fft3d.c:210:9

6592B	bb.44.for.body122:
	; predecessors: %bb.43
	  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)

6608B	  %79:gpr32 = LDRWui %stack.13.bls, 0, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
6624B	  %81:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
6688B	  %84:gpr32 = LDRWui %stack.1.n1.addr, 0, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
6692B	  %82:gpr32common = nsw ADDWrr %79:gpr32, %81:gpr32, debug-location !362; fft3d.c:211:23
6696B	  %83:gpr32common = SUBWri %82:gpr32common, 1, 0, debug-location !363; fft3d.c:211:34
6704B	  dead $wzr = SUBSWrr %83:gpr32common, %84:gpr32, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
6712B	  STRWui %83:gpr32common, %stack.14.ble, 0, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
6720B	  Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17
6736B	  B %bb.45, debug-location !369; fft3d.c:212:17

6752B	bb.45.if.then126:
	; predecessors: %bb.44
	  successors: %bb.46(0x80000000); %bb.46(100.00%)

6768B	  %86:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
6784B	  %87:gpr32common = SUBWri %86:gpr32common, 1, 0, debug-location !371; fft3d.c:213:26
6800B	  STRWui %87:gpr32common, %stack.14.ble, 0, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21

6816B	bb.46.if.end128:
	; predecessors: %bb.44, %bb.45
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

6832B	  %88:gpr32 = LDRWui %stack.14.ble, 0, debug-location !374 :: (dereferenceable load 4 from %ir.ble); fft3d.c:214:19
6848B	  %89:gpr32 = LDRWui %stack.13.bls, 0, debug-location !375 :: (dereferenceable load 4 from %ir.bls); fft3d.c:214:25
6864B	  %90:gpr32common = nsw SUBWrr %88:gpr32, %89:gpr32, debug-location !376; fft3d.c:214:23
6880B	  %91:gpr32common = nsw ADDWri %90:gpr32common, 1, 0, debug-location !377; fft3d.c:214:29
6896B	  STRWui %91:gpr32common, %stack.15.len, 0, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
6928B	  STRWui $wzr, %stack.9.i, 0, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20

6944B	bb.47.for.cond131:
	; predecessors: %bb.46, %bb.51
	  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)

6960B	  %93:gpr32 = LDRWui %stack.9.i, 0, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
6976B	  %94:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
6992B	  dead $wzr = SUBSWrr %93:gpr32, %94:gpr32, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
7008B	  Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13
7024B	  B %bb.48, debug-location !386; fft3d.c:215:13

7040B	bb.48.for.body133:
	; predecessors: %bb.47
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

7056B	  %139:gpr32 = LDRWui %stack.13.bls, 0, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
7072B	  STRWui %139:gpr32, %stack.10.j, 0, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24

7088B	bb.49.for.cond134:
	; predecessors: %bb.48, %bb.50
	  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)

7104B	  %140:gpr32 = LDRWui %stack.10.j, 0, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
7120B	  %141:gpr32 = LDRWui %stack.14.ble, 0, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
7136B	  dead $wzr = SUBSWrr %140:gpr32, %141:gpr32, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
7152B	  Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17
7168B	  B %bb.50, debug-location !396; fft3d.c:216:17

7184B	bb.50.for.body136:
	; predecessors: %bb.49
	  successors: %bb.49(0x80000000); %bb.49(100.00%)

7280B	  %150:gpr64 = LDRSWui %stack.9.i, 0, debug-location !402 :: (dereferenceable load 4 from %ir.i); fft3d.c:217:44
7328B	  %155:gpr64 = LDRXui %stack.4.x.addr, 0, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
7336B	  %145:gpr64common = LDRSWui %stack.10.j, 0, debug-location !397 :: (dereferenceable load 4 from %ir.j); fft3d.c:217:27
7376B	  %159:gpr64 = LDRSWui %stack.11.k, 0, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
7384B	  %157:gpr64 = nsw MADDXrrr %150:gpr64, %156:gpr64, $xzr, debug-location !406; fft3d.c:217:49
7392B	  %158:gpr64 = ADDXrs %155:gpr64, %157:gpr64, 4, debug-location !406; fft3d.c:217:49
7400B	  %147:gpr32 = LDRWui %stack.13.bls, 0, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
7408B	  %160:gpr64 = nsw MADDXrrr %159:gpr64, %1:gpr64common, $xzr, debug-location !406; fft3d.c:217:49
7416B	  %161:gpr64common = ADDXrs %158:gpr64, %160:gpr64, 4, debug-location !406; fft3d.c:217:49
7424B	  %149:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
7432B	  %162:fpr128 = LDRQroX %161:gpr64common, %145:gpr64common, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
7440B	  %148:gpr32 = nsw SUBWrr %145.sub_32:gpr64common, %147:gpr32, debug-location !400; fft3d.c:217:29
7456B	  %163:gpr32common = nsw ADDWri %145.sub_32:gpr64common, 1, 0, debug-location !410; fft3d.c:216:42
7460B	  %153:gpr32 = MADDWrrr %149:gpr32, %150.sub_32:gpr64, %148:gpr32, debug-location !404; fft3d.c:217:35
7464B	  STRQroW %162:fpr128, %154:gpr64common, %153:gpr32, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
7472B	  STRWui %163:gpr32common, %stack.10.j, 0, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
7488B	  B %bb.49, debug-location !411; fft3d.c:216:17

7504B	bb.51.for.inc151:
	; predecessors: %bb.49
	  successors: %bb.47(0x80000000); %bb.47(100.00%)

7520B	  %143:gpr32common = LDRWui %stack.9.i, 0, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
7536B	  %144:gpr32common = nsw ADDWri %143:gpr32common, 1, 0, debug-location !414; fft3d.c:215:34
7552B	  STRWui %144:gpr32common, %stack.9.i, 0, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
7568B	  B %bb.47, debug-location !415; fft3d.c:215:13

7584B	bb.52.for.end153:
	; predecessors: %bb.47
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

7600B	  %96:gpr32 = LDRWui %stack.0.sign.addr, 0, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
7616B	  %97:gpr32 = LDRWui %stack.12.log, 0, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
7632B	  %98:gpr32 = LDRWui %stack.15.len, 0, debug-location !420 :: (dereferenceable load 4 from %ir.len); fft3d.c:220:37
7648B	  %99:gpr32 = LDRWui %stack.3.n3.addr, 0, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
7664B	  %100:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !422 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:220:46
7680B	  %101:gpr64 = LDRXui %fixed-stack.0, 0, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
7696B	  ADJCALLSTACKDOWN 8, 0, implicit-def dead $sp, implicit $sp, debug-location !424; fft3d.c:220:13
7824B	  $x5 = MOVaddr target-flags(aarch64-page) @plane, target-flags(aarch64-pageoff, aarch64-nc) @plane, debug-location !424; fft3d.c:220:13
7828B	  STRXui %101:gpr64, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
7832B	  $w0 = COPY %96:gpr32, debug-location !424; fft3d.c:220:13
7840B	  $w1 = COPY %97:gpr32, debug-location !424; fft3d.c:220:13
7848B	  $w2 = COPY %98:gpr32, debug-location !424; fft3d.c:220:13
7856B	  $w3 = COPY %99:gpr32, debug-location !424; fft3d.c:220:13
7864B	  $w4 = COPY %100:gpr32, debug-location !424; fft3d.c:220:13
7872B	  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
7880B	  ADJCALLSTACKUP 8, 0, implicit-def $sp, implicit $sp, debug-location !424; fft3d.c:220:13
7888B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !425; fft3d.c:221:20
7896B	  PCN_STACKMAP 11, 0, 0, %stack.14.ble, 0, 0, %stack.16.blkp, 0, 0, %stack.13.bls, 0, 0, %fixed-stack.0, 0, 0, %stack.9.i, 0, 0, %stack.10.j, 0, 0, %stack.11.k, 0, 0, %stack.15.len, 0, 0, %stack.12.log, 0, 0, %stack.1.n1.addr, 0, 0, %stack.2.n2.addr, 0, 0, %stack.3.n3.addr, 0, 0, %stack.0.sign.addr, 0, 0, %stack.4.x.addr, 0, 0, %stack.5.xout.addr, 0, %0:gpr64, %1:gpr64common, %96:gpr32, %97:gpr32, %98:gpr32, %99:gpr32, %100:gpr32, %101:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !425 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:221:20
7904B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !425; fft3d.c:221:20
7936B	  STRWui $wzr, %stack.9.i, 0, debug-location !425 :: (store 4 into %ir.i); fft3d.c:221:20

7952B	bb.53.for.cond154:
	; predecessors: %bb.52, %bb.57
	  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)

7984B	  %106:gpr32common = LDRWui %stack.3.n3.addr, 0, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
7992B	  %105:gpr32 = LDRWui %stack.9.i, 0, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
8000B	  %107:gpr32common = SUBWri %106:gpr32common, 1, 0, debug-location !431; fft3d.c:221:33
8016B	  dead $wzr = SUBSWrr %105:gpr32, %107:gpr32common, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
8032B	  Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13
8048B	  B %bb.54, debug-location !433; fft3d.c:221:13

8064B	bb.54.for.body157:
	; predecessors: %bb.53
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

8080B	  %113:gpr32 = LDRWui %stack.13.bls, 0, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26
8096B	  STRWui %113:gpr32, %stack.10.j, 0, debug-location !437 :: (store 4 into %ir.j); fft3d.c:222:24

8112B	bb.55.for.cond158:
	; predecessors: %bb.54, %bb.56
	  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)

8128B	  %114:gpr32 = LDRWui %stack.10.j, 0, debug-location !439 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:31
8144B	  %115:gpr32 = LDRWui %stack.14.ble, 0, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
8160B	  dead $wzr = SUBSWrr %114:gpr32, %115:gpr32, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
8176B	  Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17
8192B	  B %bb.56, debug-location !443; fft3d.c:222:17

8208B	bb.56.for.body160:
	; predecessors: %bb.55
	  successors: %bb.55(0x80000000); %bb.55(100.00%)

8240B	  %120:gpr32 = LDRWui %stack.10.j, 0, debug-location !446 :: (dereferenceable load 4 from %ir.j); fft3d.c:223:26
8320B	  %125:gpr32 = LDRWui %stack.9.i, 0, debug-location !451 :: (dereferenceable load 4 from %ir.i); fft3d.c:223:51
8368B	  %130:gpr32 = LDRWui %stack.13.bls, 0, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
8400B	  %132:gpr32 = LDRWui %stack.16.blkp, 0, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
8408B	  %121:gpr32common = LDRWui %stack.1.n1.addr, 0, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:223:31
8416B	  %123:gpr32 = LDRWui %stack.11.k, 0, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
8424B	  %131:gpr32 = nsw SUBWrr %120:gpr32, %130:gpr32, debug-location !458; fft3d.c:224:33
8432B	  %134:gpr32 = MADDWrrr %132:gpr32, %125:gpr32, %131:gpr32, debug-location !462; fft3d.c:224:39
8440B	  %124:gpr32 = LDRWui %stack.2.n2.addr, 0, debug-location !450 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:46
8448B	  %136:fpr128 = LDRQroW %154:gpr64common, %134:gpr32, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
8456B	  %119:gpr64common = LDRXui %stack.5.xout.addr, 0, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
8464B	  %122:gpr32common = nsw ADDWri %121:gpr32common, 1, 0, debug-location !448; fft3d.c:223:34
8472B	  %127:gpr32 = MADDWrrr %124:gpr32, %125:gpr32, %123:gpr32, debug-location !453; fft3d.c:223:44
8480B	  %129:gpr32 = MADDWrrr %122:gpr32common, %127:gpr32, %120:gpr32, debug-location !455; fft3d.c:223:28
8488B	  STRQroW %136:fpr128, %119:gpr64common, %129:gpr32, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
8496B	  %137:gpr32common = LDRWui %stack.10.j, 0, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
8504B	  %138:gpr32common = nsw ADDWri %137:gpr32common, 1, 0, debug-location !464; fft3d.c:222:42
8512B	  STRWui %138:gpr32common, %stack.10.j, 0, debug-location !464 :: (store 4 into %ir.j); fft3d.c:222:42
8520B	  B %bb.55, debug-location !465; fft3d.c:222:17

8528B	bb.57.for.inc176:
	; predecessors: %bb.55
	  successors: %bb.53(0x80000000); %bb.53(100.00%)

8544B	  %117:gpr32common = LDRWui %stack.9.i, 0, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
8560B	  %118:gpr32common = nsw ADDWri %117:gpr32common, 1, 0, debug-location !468; fft3d.c:221:39
8576B	  STRWui %118:gpr32common, %stack.9.i, 0, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
8592B	  B %bb.53, debug-location !469; fft3d.c:221:13

8608B	bb.58.for.inc179:
	; predecessors: %bb.53
	  successors: %bb.43(0x80000000); %bb.43(100.00%)

8624B	  %110:gpr32 = LDRWui %80:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
8640B	  %111:gpr32 = LDRWui %stack.13.bls, 0, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
8656B	  %112:gpr32 = nsw ADDWrr %111:gpr32, %110:gpr32, debug-location !473; fft3d.c:210:37
8672B	  STRWui %112:gpr32, %stack.13.bls, 0, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
8688B	  B %bb.43, debug-location !474; fft3d.c:210:9

8704B	bb.59.for.inc182:
	; predecessors: %bb.43
	  successors: %bb.41(0x80000000); %bb.41(100.00%)

8720B	  %77:gpr32common = LDRWui %stack.11.k, 0, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
8736B	  %78:gpr32common = nsw ADDWri %77:gpr32common, 1, 0, debug-location !477; fft3d.c:209:26
8752B	  STRWui %78:gpr32common, %stack.11.k, 0, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
8768B	  B %bb.41, debug-location !478; fft3d.c:209:5

8784B	bb.60.for.end184:
	; predecessors: %bb.41
	  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)

8800B	  %67:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
8816B	  %68:gpr32 = LDRWui %67:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
8832B	  CBZW %68:gpr32, %bb.62, debug-location !483; fft3d.c:229:9
8848B	  B %bb.61, debug-location !483; fft3d.c:229:9

8864B	bb.61.if.then186:
	; predecessors: %bb.60
	  successors: %bb.62(0x80000000); %bb.62(100.00%)

8880B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !484; fft3d.c:230:9
8912B	  $w0 = MOVi32imm 9, debug-location !484; fft3d.c:230:9
8928B	  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !484; fft3d.c:230:9
8944B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !484; fft3d.c:230:9
8960B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !484; fft3d.c:230:9
8976B	  PCN_STACKMAP 12, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !484; fft3d.c:230:9
8992B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !484; fft3d.c:230:9

9008B	bb.62.if.end187:
	; predecessors: %bb.60, %bb.61
	  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)

9024B	  %70:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
9040B	  %71:gpr32 = LDRWui %70:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
9056B	  CBZW %71:gpr32, %bb.64, debug-location !487; fft3d.c:231:9
9072B	  B %bb.63, debug-location !487; fft3d.c:231:9

9088B	bb.63.if.then189:
	; predecessors: %bb.62
	  successors: %bb.64(0x80000000); %bb.64(100.00%)

9104B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !488; fft3d.c:232:9
9136B	  $w0 = MOVi32imm 3, debug-location !488; fft3d.c:232:9
9152B	  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !488; fft3d.c:232:9
9168B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !488; fft3d.c:232:9
9184B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !488; fft3d.c:232:9
9200B	  PCN_STACKMAP 13, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !488; fft3d.c:232:9
9216B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !488; fft3d.c:232:9

9232B	bb.64.if.end190:
	; predecessors: %bb.62, %bb.63

9248B	  RET_ReallyLR debug-location !489; fft3d.c:233:1

# End machine code for function fftXYZ.

warning: fft3d.c:172:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled register X20 across call to Swarztrauber
warning: fft3d.c:196:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled stack slot 18 across call to Swarztrauber
warning: fft3d.c:220:13: (x86_64-unknown-linux-gnu) Stack transformation: unhandled register X20 across call to Swarztrauber
Before post-MI-sched:
# Machine code for function fftXYZ: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#-3: size=8, align=16, fixed, at location [SP+16]
  fi#-2: size=8, align=8, fixed, at location [SP+8]
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP-44]
  fi#1: size=4, align=4, at location [SP-48]
  fi#2: size=4, align=4, at location [SP-52]
  fi#3: size=4, align=4, at location [SP-56]
  fi#4: size=8, align=8, at location [SP-64]
  fi#5: size=8, align=8, at location [SP-72]
  fi#6: dead
  fi#7: dead
  fi#8: dead
  fi#9: size=4, align=4, at location [SP-76]
  fi#10: size=4, align=4, at location [SP-80]
  fi#11: size=4, align=4, at location [SP-84]
  fi#12: size=4, align=4, at location [SP-88]
  fi#13: size=4, align=4, at location [SP-92]
  fi#14: size=4, align=4, at location [SP-96]
  fi#15: size=4, align=4, at location [SP-100]
  fi#16: size=4, align=4, at location [SP-104]
  fi#17: size=8, align=8, at location [SP-112]
  fi#18: size=8, align=8, at location [SP-120]
  fi#19: size=4, align=4, at location [SP-124]
  fi#20: size=4, align=4, at location [SP-128]
  fi#21: size=4, align=4, at location [SP-132]
  fi#22: size=4, align=4, at location [SP-136]
  fi#23: size=4, align=4, at location [SP-140]
  fi#24: size=8, align=8, at location [SP-152]
  fi#25: dead
  fi#26: dead
  fi#27: dead
  fi#28: dead
  fi#29: dead
  fi#30: dead
  fi#31: dead
  fi#32: dead
  fi#33: dead
  fi#34: dead
  fi#35: dead
  fi#36: dead
  fi#37: dead
  fi#38: dead
  fi#39: dead
  fi#40: size=8, align=8, at location [SP-40]
  fi#41: size=8, align=8, at location [SP-8]
  fi#42: size=8, align=8, at location [SP-16]
  fi#43: size=8, align=8, at location [SP-24]
  fi#44: size=8, align=8, at location [SP-32]
Function Live Ins: $w0, $w1, $w2, $w3, $x4, $x5

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $x4, $x5, $x19, $x20, $lr
  $sp = frame-setup SUBXri $sp, 160, 0
  frame-setup STPXi killed $x20, killed $x19, $sp, 16 :: (store 8 into %stack.44), (store 8 into %stack.43)
  frame-setup STPXi killed $fp, killed $lr, $sp, 18 :: (store 8 into %stack.42), (store 8 into %stack.41)
  $fp = frame-setup ADDXri $sp, 144, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  frame-setup CFI_INSTRUCTION offset $w20, -32
  STPWi renamable $w1, renamable $w0, $fp, -8 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  STPWi renamable $w3, renamable $w2, $fp, -10 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  STPXi renamable $x5, renamable $x4, $fp, -7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  renamable $w20 = ORRWrs $wzr, killed renamable $w2, 0, implicit-def $x20, debug-location !60; fft3d.c:142:62
  renamable $w19 = nsw ADDWri killed renamable $w1, 1, 0, implicit-def $x19, debug-location !62; fft3d.c:142:69
  CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)
  liveins: $x19, $x20
  $w0 = MOVZWi 3, 0, debug-location !91; fft3d.c:152:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !91; fft3d.c:152:9
  PCN_STACKMAP 0, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !91 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:152:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x50000000), %bb.4(0x30000000); %bb.3(62.50%), %bb.4(37.50%)
  liveins: $x19, $x20
  renamable $w0 = LDURWi $fp, -32, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  STRWui renamable $w0, $sp, 12 :: (store 4 into %stack.17)
  $w8 = MOVZWi 8192, 0
  renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  $w17 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  renamable $w8 = CSELWr killed renamable $w17, killed renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  STRWui renamable $w8, killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  STRWui killed renamable $w8, $sp, 14, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !104; fft3d.c:158:11
  PCN_STACKMAP 1, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, 1, 4, $fp, -96, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !105 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 4 from %stack.17); fft3d.c:158:9
  renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  renamable $w16 = LDRWui killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  STRWui killed renamable $w8, $sp, 18, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  $x2 = ORRXrs $xzr, $x20, 0
  STRXui $x20, $sp, 6 :: (store 8 into %stack.17)
  CBZW killed renamable $w16, %bb.4, debug-location !108; fft3d.c:159:9

bb.3.if.then7:
; predecessors: %bb.2
  successors: %bb.4(0x80000000); %bb.4(100.00%)
  liveins: $x19
  $w0 = MOVZWi 7, 0, debug-location !109; fft3d.c:160:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !109; fft3d.c:160:9
  renamable $x2 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  PCN_STACKMAP 2, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !109 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:160:9

bb.4.if.end8:
; predecessors: %bb.2, %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x2, $x19
  STURWi $wzr, $fp, -68, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  $x3 = ADRP target-flags(aarch64-page) @plane
  renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  renamable $x20 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr

bb.5.for.cond:
; predecessors: %bb.4, %bb.23
  successors: %bb.6(0x7c000000), %bb.24(0x04000000); %bb.6(96.88%), %bb.24(3.12%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -68, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  renamable $w16 = LDURWi $fp, -40, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5

bb.6.for.body:
; predecessors: %bb.5
  successors: %bb.7(0x80000000); %bb.7(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  STRWui $wzr, $sp, 17, debug-location !118 :: (store 4 into %ir.bls); fft3d.c:162:18

bb.7.for.cond10:
; predecessors: %bb.6, %bb.22
  successors: %bb.8(0x7c000000), %bb.23(0x04000000); %bb.8(96.88%), %bb.23(3.12%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  renamable $w16 = LDURWi $fp, -36, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9

bb.8.for.body12:
; predecessors: %bb.7
  successors: %bb.9(0x40000000), %bb.10(0x40000000); %bb.9(50.00%), %bb.10(50.00%)
  liveins: $x3, $x6, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  renamable $w16 = LDRWui killed renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  renamable $w17 = LDURWi $fp, -36, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w16, 0, debug-location !130; fft3d.c:163:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  STRWui killed renamable $w8, $sp, 16, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17

bb.9.if.then15:
; predecessors: %bb.8
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x3, $x19, $x20
  renamable $w8 = LDURWi $fp, -36, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  STRWui killed renamable $w8, $sp, 16, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

bb.10.if.end17:
; predecessors: %bb.8, %bb.9
  successors: %bb.11(0x80000000); %bb.11(100.00%)
  liveins: $x3, $x19, $x20
  renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  $w8 = SUBWrs killed renamable $w8, renamable $w16, 0, debug-location !144; fft3d.c:166:23
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  STRWui killed renamable $w8, $sp, 15, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  STURWi killed renamable $w16, $fp, -64, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

bb.11.for.cond20:
; predecessors: %bb.10, %bb.15
  successors: %bb.12(0x7c000000), %bb.16(0x04000000); %bb.12(96.88%), %bb.16(3.12%)
  liveins: $x3, $x19, $x20
  renamable $w8 = LDURWi $fp, -64, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  renamable $w16 = LDRWui $sp, 16, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13

bb.12.for.body22:
; predecessors: %bb.11
  successors: %bb.13(0x80000000); %bb.13(100.00%)
  liveins: $x3, $x19, $x20
  STURWi $wzr, $fp, -60, debug-location !156 :: (store 4 into %ir.i); fft3d.c:168:24

bb.13.for.cond23:
; predecessors: %bb.12, %bb.14
  successors: %bb.14(0x7c000000), %bb.15(0x04000000); %bb.14(96.88%), %bb.15(3.12%)
  liveins: $x3, $x19, $x20
  renamable $w8 = LDURWi $fp, -60, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  renamable $w16 = LDURWi $fp, -32, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17

bb.14.for.body25:
; predecessors: %bb.13
  successors: %bb.13(0x80000000); %bb.13(100.00%)
  liveins: $x3, $x19, $x20
  renamable $x16, renamable $x8 = LDPSWi $fp, -17, debug-location !165 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.k); fft3d.c:169:27
  renamable $x17 = LDURXi $fp, -48, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  renamable $w18 = LDRWui $sp, 17, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  renamable $x0 = LDURSWi $fp, -60, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  renamable $x16 = nsw MADDXrrr killed renamable $x16, renamable $x20, $xzr, debug-location !174; fft3d.c:169:49
  renamable $x16 = ADDXrs killed renamable $x17, killed renamable $x16, 4, debug-location !174; fft3d.c:169:49
  renamable $x17 = nsw MADDXrrr renamable $x8, renamable $x19, $xzr, debug-location !174; fft3d.c:169:49
  renamable $x16 = ADDXrs killed renamable $x16, killed renamable $x17, 4, debug-location !174; fft3d.c:169:49
  renamable $w17 = LDRWui $sp, 14, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  renamable $q0 = LDRQroX killed renamable $x16, renamable $x0, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  $w8 = SUBWrs renamable $w8, killed renamable $w18, 0, implicit killed $x8, debug-location !168; fft3d.c:169:29
  renamable $w16 = nsw ADDWri renamable $w0, 1, 0, debug-location !178; fft3d.c:168:38
  renamable $w8 = MADDWrrr killed renamable $w17, renamable $w0, killed renamable $w8, implicit killed $x0, debug-location !172; fft3d.c:169:35
  STRQroW killed renamable $q0, renamable $x3, killed renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  STURWi killed renamable $w16, $fp, -60, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  B %bb.13

bb.15.for.inc35:
; predecessors: %bb.13
  successors: %bb.11(0x80000000); %bb.11(100.00%)
  liveins: $x3, $x19, $x20
  renamable $w8 = LDURWi $fp, -64, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  STURWi killed renamable $w8, $fp, -64, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  B %bb.11

bb.16.for.end37:
; predecessors: %bb.11
  successors: %bb.17(0x80000000); %bb.17(100.00%)
  liveins: $x19, $x20
  renamable $w3, renamable $w0 = LDPWi $fp, -8, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  renamable $w1 = LDRWui $sp, 18, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  STRWui renamable $w1, $sp, 9 :: (store 4 into %stack.19)
  renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  STPWi renamable $w0, renamable $w2, $sp, 7 :: (store 4 into %stack.21), (store 4 into %stack.20)
  STPWi renamable $w4, renamable $w3, $sp, 5 :: (store 4 into %stack.22), (store 4 into %stack.23)
  renamable $x8 = LDRXui $fp, 2, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !192; fft3d.c:172:13
  $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !192; fft3d.c:172:13
  STRXui killed renamable $x8, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
  $x3 = ADRP target-flags(aarch64-page) @plane
  renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  renamable $x2 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  PCN_STACKMAP 3, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -116, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !193 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:173:22
  renamable $w8 = LDRWui $sp, 17, debug-location !193 :: (dereferenceable load 4 from %ir.bls); fft3d.c:173:22

bb.17.for.cond38:
; predecessors: %bb.16, %bb.21
  successors: %bb.18(0x7c000000), %bb.22(0x04000000); %bb.18(96.88%), %bb.22(3.12%)
  liveins: $x2, $x3, $x6, $x19, $x20, $w8
  STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  $w8 = ORRWrs $wzr, killed renamable $w8, 0, debug-location !197; fft3d.c:173:27
  renamable $w16 = LDRWui $sp, 16, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13

bb.18.for.body40:
; predecessors: %bb.17
  successors: %bb.19(0x80000000); %bb.19(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  STURWi $wzr, $fp, -60, debug-location !202 :: (store 4 into %ir.i); fft3d.c:174:24

bb.19.for.cond41:
; predecessors: %bb.18, %bb.20
  successors: %bb.20(0x7c000000), %bb.21(0x04000000); %bb.20(96.88%), %bb.21(3.12%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -60, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  renamable $w16 = LDURWi $fp, -32, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17

bb.20.for.body43:
; predecessors: %bb.19
  successors: %bb.19(0x80000000); %bb.19(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $x8, renamable $x17 = LDPSWi $fp, -17, debug-location !213 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:175:23
  renamable $x16 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  renamable $x18 = LDURSWi $fp, -60, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  renamable $w0 = LDRWui $sp, 17, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  renamable $w1 = LDRWui $sp, 14, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  renamable $x8 = nsw MADDXrrr killed renamable $x8, killed renamable $x16, $xzr, debug-location !211; fft3d.c:175:21
  renamable $x16 = LDURXi $fp, -48, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  $w0 = SUBWrs renamable $w17, killed renamable $w0, 0, debug-location !218; fft3d.c:175:42
  renamable $w0 = MADDWrrr killed renamable $w1, renamable $w18, killed renamable $w0, debug-location !222; fft3d.c:175:48
  renamable $q0 = LDRQroW renamable $x3, killed renamable $w0, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  renamable $x8 = ADDXrs killed renamable $x16, killed renamable $x8, 4, debug-location !211; fft3d.c:175:21
  renamable $x16 = nsw MADDXrrr killed renamable $x17, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  renamable $x8 = ADDXrs killed renamable $x8, killed renamable $x16, 4, debug-location !211; fft3d.c:175:21
  STRQroX killed renamable $q0, killed renamable $x8, killed renamable $x18, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  renamable $w8 = LDURWi $fp, -60, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  STURWi killed renamable $w8, $fp, -60, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  B %bb.19

bb.21.for.inc58:
; predecessors: %bb.19
  successors: %bb.17(0x80000000); %bb.17(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -64, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  B %bb.17

bb.22.for.inc61:
; predecessors: %bb.17
  successors: %bb.7(0x80000000); %bb.7(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  renamable $w16 = LDRWui $sp, 17, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  $w8 = ADDWrs killed renamable $w16, killed renamable $w8, 0, debug-location !233; fft3d.c:162:37
  STRWui killed renamable $w8, $sp, 17, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  B %bb.7

bb.23.for.inc64:
; predecessors: %bb.7
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x2, $x3, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -68, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  STURWi killed renamable $w8, $fp, -68, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  B %bb.5

bb.24.for.end66:
; predecessors: %bb.5
  successors: %bb.25(0x50000000), %bb.26(0x30000000); %bb.25(62.50%), %bb.26(37.50%)
  liveins: $x2, $x19
  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  $x20 = ORRXrs $xzr, killed $x2, 0
  CBZW killed renamable $w8, %bb.26, debug-location !243; fft3d.c:180:9

bb.25.if.then68:
; predecessors: %bb.24
  successors: %bb.26(0x80000000); %bb.26(100.00%)
  liveins: $x19, $x20
  $w0 = MOVZWi 7, 0, debug-location !244; fft3d.c:181:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !244; fft3d.c:181:9
  PCN_STACKMAP 4, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !244 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:181:9

bb.26.if.end69:
; predecessors: %bb.24, %bb.25
  successors: %bb.27(0x50000000), %bb.28(0x30000000); %bb.27(62.50%), %bb.28(37.50%)
  liveins: $x19, $x20
  renamable $w0 = LDURWi $fp, -36, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  $w8 = MOVZWi 8192, 0
  renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
  $w17 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  renamable $w8 = CSELWr killed renamable $w17, killed renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  STRWui renamable $w8, killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  STRWui killed renamable $w8, $sp, 14, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !256; fft3d.c:187:11
  PCN_STACKMAP 5, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, 1, 4, $fp, -104, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !257 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 4 from %stack.18); fft3d.c:187:9
  renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  renamable $w16 = LDRWui killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  STRWui killed renamable $w8, $sp, 18, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  $x18 = ORRXrs $xzr, killed $x20, 0
  CBZW killed renamable $w16, %bb.28, debug-location !260; fft3d.c:188:9

bb.27.if.then77:
; predecessors: %bb.26
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x19
  $w0 = MOVZWi 8, 0, debug-location !261; fft3d.c:189:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !261; fft3d.c:189:9
  renamable $x18 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  PCN_STACKMAP 6, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !261 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:189:9

bb.28.if.end78:
; predecessors: %bb.26, %bb.27
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x18, $x19
  STURWi $wzr, $fp, -68, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  renamable $x8 = nuw MADDXrrr renamable $x18, renamable $x19, $xzr
  STRXui killed renamable $x8, $sp, 1 :: (store 8 into %stack.24)

bb.29.for.cond79:
; predecessors: %bb.28, %bb.35
  successors: %bb.30(0x7c000000), %bb.36(0x04000000); %bb.30(96.88%), %bb.36(3.12%)
  liveins: $x17, $x18, $x19
  renamable $w8 = LDURWi $fp, -68, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  renamable $w16 = LDURWi $fp, -40, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5

bb.30.for.body81:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x17, $x18, $x19
  STRWui $wzr, $sp, 17, debug-location !270 :: (store 4 into %ir.bls); fft3d.c:191:18

bb.31.for.cond82:
; predecessors: %bb.30, %bb.34
  successors: %bb.32(0x7c000000), %bb.35(0x04000000); %bb.32(96.88%), %bb.35(3.12%)
  liveins: $x17, $x18, $x19
  renamable $w8 = LDRWui $sp, 17, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  renamable $w16 = LDURWi $fp, -32, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9

bb.32.for.body84:
; predecessors: %bb.31
  successors: %bb.33(0x40000000), %bb.34(0x40000000); %bb.33(50.00%), %bb.34(50.00%)
  liveins: $x17, $x19
  renamable $w8 = LDRWui $sp, 17, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  renamable $w16 = LDRWui killed renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  renamable $w17 = LDURWi $fp, -32, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w16, 0, debug-location !282; fft3d.c:192:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  STRWui killed renamable $w8, $sp, 16, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17

bb.33.if.then88:
; predecessors: %bb.32
  successors: %bb.34(0x80000000); %bb.34(100.00%)
  liveins: $x19
  renamable $w8 = LDURWi $fp, -32, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  STRWui killed renamable $w8, $sp, 16, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

bb.34.if.end90:
; predecessors: %bb.32, %bb.33
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x19
  renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  renamable $w0 = LDURWi $fp, -28, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  $w2, renamable $w1 = LDPWi $sp, 17, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.bls); fft3d.c:196:32
  $w2 = KILL $w2, implicit-def $x2, debug-location !300; fft3d.c:196:32
  $x2 = SBFMXri $x2, 0, 31, debug-location !300; fft3d.c:196:32
  STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  renamable $x17 = LDURXi $fp, -48, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  renamable $x18 = LDURSWi $fp, -68, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  $w8 = SUBWrs killed renamable $w8, killed renamable $w16, 0, debug-location !296; fft3d.c:195:23
  renamable $w3 = LDURWi $fp, -36, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  renamable $x16 = LDRXui $sp, 1 :: (load 8 from %stack.24)
  renamable $x16 = nsw MADDXrrr killed renamable $x18, killed renamable $x16, $xzr, debug-location !305; fft3d.c:196:55
  renamable $x16 = ADDXrs killed renamable $x17, killed renamable $x16, 4, debug-location !305; fft3d.c:196:55
  renamable $w17 = LDURWi $fp, -32, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  renamable $x5 = ADDXrs killed renamable $x16, killed renamable $x2, 4, debug-location !305; fft3d.c:196:55
  STRXui renamable $x5, $sp, 5 :: (store 8 into %stack.18)
  renamable $x20 = LDRXui $fp, 3, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  renamable $w2 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.22), (store 4 into %stack.21)
  STRWui renamable $w2, $sp, 15, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  renamable $w4 = nsw ADDWri killed renamable $w17, 1, 0, debug-location !304; fft3d.c:196:49
  STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  STRXui renamable $x20, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
  renamable $x18 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  PCN_STACKMAP 7, 0, 1, 4, $fp, -124, 1, 8, $fp, -104, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -116, 1, 4, $fp, -120, 1, 8, $fp, -104, killed renamable $x20, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !311 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23), (load 8 from %stack.18); fft3d.c:197:9
  renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  renamable $w8 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  renamable $w16 = LDRWui $sp, 17, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  $w8 = ADDWrs killed renamable $w16, killed renamable $w8, 0, debug-location !313; fft3d.c:191:37
  STRWui killed renamable $w8, $sp, 17, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  B %bb.31

bb.35.for.inc102:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x17, $x18, $x19
  renamable $w8 = LDURWi $fp, -68, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !317; fft3d.c:190:26
  STURWi killed renamable $w8, $fp, -68, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  B %bb.29

bb.36.for.end104:
; predecessors: %bb.29
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)
  liveins: $x18, $x19
  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  $x20 = ORRXrs $xzr, killed $x18, 0
  CBZW killed renamable $w8, %bb.38, debug-location !323; fft3d.c:199:9

bb.37.if.then106:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)
  liveins: $x19, $x20
  $w0 = MOVZWi 8, 0, debug-location !324; fft3d.c:200:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !324; fft3d.c:200:9
  PCN_STACKMAP 8, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !324 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:200:9

bb.38.if.end107:
; predecessors: %bb.36, %bb.37
  successors: %bb.39(0x50000000), %bb.40(0x30000000); %bb.39(62.50%), %bb.40(37.50%)
  liveins: $x19, $x20
  renamable $w0 = LDURWi $fp, -40, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  $w8 = MOVZWi 8192, 0
  renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
  $w17 = MOVZWi 32, 0
  renamable $w8 = SDIVWr killed renamable $w8, renamable $w0, debug-location !326; fft3d.c:202:26
  dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
  renamable $w8 = CSELWr killed renamable $w17, killed renamable $w8, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
  STRWui renamable $w8, killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !333; fft3d.c:205:21
  STRWui killed renamable $w8, $sp, 14, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
  BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !336; fft3d.c:206:11
  PCN_STACKMAP 9, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, renamable $x20, renamable $x19, 1, 4, $fp, -104, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !337 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 4 from %stack.18); fft3d.c:206:9
  renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  renamable $w16 = LDRWui killed renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  STRWui killed renamable $w8, $sp, 18, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  CBZW killed renamable $w16, %bb.40, debug-location !340; fft3d.c:207:9

bb.39.if.then115:
; predecessors: %bb.38
  successors: %bb.40(0x80000000); %bb.40(100.00%)
  liveins: $x19
  $w0 = MOVZWi 9, 0, debug-location !341; fft3d.c:208:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !341; fft3d.c:208:9
  renamable $x20 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  PCN_STACKMAP 10, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !341 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr); fft3d.c:208:9

bb.40.if.end116:
; predecessors: %bb.38, %bb.39
  successors: %bb.41(0x80000000); %bb.41(100.00%)
  liveins: $x19, $x20
  STURWi $wzr, $fp, -68, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  $x2 = ADRP target-flags(aarch64-page) @plane
  renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  renamable $x20 = nuw MADDXrrr killed renamable $x20, renamable $x19, $xzr

bb.41.for.cond117:
; predecessors: %bb.40, %bb.59
  successors: %bb.42(0x7c000000), %bb.60(0x04000000); %bb.42(96.88%), %bb.60(3.12%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -68, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  renamable $w16 = LDURWi $fp, -36, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5

bb.42.for.body119:
; predecessors: %bb.41
  successors: %bb.43(0x80000000); %bb.43(100.00%)
  liveins: $x2, $x6, $x19, $x20
  STRWui $wzr, $sp, 17, debug-location !350 :: (store 4 into %ir.bls); fft3d.c:210:18

bb.43.for.cond120:
; predecessors: %bb.42, %bb.58
  successors: %bb.44(0x7c000000), %bb.59(0x04000000); %bb.44(96.88%), %bb.59(3.12%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  renamable $w16 = LDURWi $fp, -32, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9

bb.44.for.body122:
; predecessors: %bb.43
  successors: %bb.45(0x40000000), %bb.46(0x40000000); %bb.45(50.00%), %bb.46(50.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  renamable $w16 = LDRWui killed renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  renamable $w17 = LDURWi $fp, -32, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  $w8 = ADDWrs killed renamable $w8, killed renamable $w16, 0, debug-location !362; fft3d.c:211:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !363; fft3d.c:211:34
  $wzr = SUBSWrs renamable $w8, killed renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  STRWui killed renamable $w8, $sp, 16, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17

bb.45.if.then126:
; predecessors: %bb.44
  successors: %bb.46(0x80000000); %bb.46(100.00%)
  liveins: $x2, $x19, $x20
  renamable $w8 = LDURWi $fp, -32, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !371; fft3d.c:213:26
  STRWui killed renamable $w8, $sp, 16, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21

bb.46.if.end128:
; predecessors: %bb.44, %bb.45
  successors: %bb.47(0x80000000); %bb.47(100.00%)
  liveins: $x2, $x19, $x20
  renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !374 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  $w8 = SUBWrs killed renamable $w8, killed renamable $w16, 0, debug-location !376; fft3d.c:214:23
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !377; fft3d.c:214:29
  STRWui killed renamable $w8, $sp, 15, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  STURWi $wzr, $fp, -60, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20

bb.47.for.cond131:
; predecessors: %bb.46, %bb.51
  successors: %bb.48(0x7c000000), %bb.52(0x04000000); %bb.48(96.88%), %bb.52(3.12%)
  liveins: $x2, $x19, $x20
  renamable $w8 = LDURWi $fp, -60, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  renamable $w16 = LDURWi $fp, -40, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13

bb.48.for.body133:
; predecessors: %bb.47
  successors: %bb.49(0x80000000); %bb.49(100.00%)
  liveins: $x2, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  STURWi killed renamable $w8, $fp, -64, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24

bb.49.for.cond134:
; predecessors: %bb.48, %bb.50
  successors: %bb.50(0x7c000000), %bb.51(0x04000000); %bb.50(96.88%), %bb.51(3.12%)
  liveins: $x2, $x19, $x20
  renamable $w8 = LDURWi $fp, -64, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  renamable $w16 = LDRWui $sp, 16, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17

bb.50.for.body136:
; predecessors: %bb.49
  successors: %bb.49(0x80000000); %bb.49(100.00%)
  liveins: $x2, $x19, $x20
  renamable $x17, renamable $x8 = LDPSWi $fp, -16, debug-location !402 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  renamable $x16 = LDURXi $fp, -48, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  renamable $x18 = LDURSWi $fp, -68, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  renamable $x0 = nsw MADDXrrr renamable $x8, renamable $x20, $xzr, debug-location !406; fft3d.c:217:49
  renamable $x16 = ADDXrs killed renamable $x16, killed renamable $x0, 4, debug-location !406; fft3d.c:217:49
  renamable $w0 = LDRWui $sp, 17, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  renamable $x18 = nsw MADDXrrr killed renamable $x18, renamable $x19, $xzr, debug-location !406; fft3d.c:217:49
  renamable $x16 = ADDXrs killed renamable $x16, killed renamable $x18, 4, debug-location !406; fft3d.c:217:49
  renamable $w18 = LDRWui $sp, 14, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  renamable $q0 = LDRQroX killed renamable $x16, renamable $x17, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  $w16 = SUBWrs renamable $w17, killed renamable $w0, 0, debug-location !400; fft3d.c:217:29
  renamable $w17 = nsw ADDWri renamable $w17, 1, 0, implicit killed $x17, debug-location !410; fft3d.c:216:42
  renamable $w8 = MADDWrrr killed renamable $w18, renamable $w8, killed renamable $w16, implicit killed $x8, debug-location !404; fft3d.c:217:35
  STRQroW killed renamable $q0, renamable $x2, killed renamable $w8, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  STURWi killed renamable $w17, $fp, -64, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
  B %bb.49

bb.51.for.inc151:
; predecessors: %bb.49
  successors: %bb.47(0x80000000); %bb.47(100.00%)
  liveins: $x2, $x19, $x20
  renamable $w8 = LDURWi $fp, -60, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !414; fft3d.c:215:34
  STURWi killed renamable $w8, $fp, -60, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  B %bb.47

bb.52.for.end153:
; predecessors: %bb.47
  successors: %bb.53(0x80000000); %bb.53(100.00%)
  liveins: $x19, $x20
  renamable $w0 = LDURWi $fp, -28, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  renamable $w1 = LDRWui $sp, 18, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !420 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  renamable $w3 = LDURWi $fp, -40, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.21), (store 4 into %stack.22)
  STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  renamable $x8 = LDRXui $fp, 4, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !424; fft3d.c:220:13
  $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !424; fft3d.c:220:13
  STRXui killed renamable $x8, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
  $x2 = ADRP target-flags(aarch64-page) @plane
  renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  PCN_STACKMAP 11, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -116, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !425 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.17), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:221:20
  STURWi $wzr, $fp, -60, debug-location !425 :: (store 4 into %ir.i); fft3d.c:221:20

bb.53.for.cond154:
; predecessors: %bb.52, %bb.57
  successors: %bb.54(0x7c000000), %bb.58(0x04000000); %bb.54(96.88%), %bb.58(3.12%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -40, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  renamable $w16 = LDURWi $fp, -60, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  renamable $w8 = SUBWri killed renamable $w8, 1, 0, debug-location !431; fft3d.c:221:33
  $wzr = SUBSWrs killed renamable $w16, killed renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13

bb.54.for.body157:
; predecessors: %bb.53
  successors: %bb.55(0x80000000); %bb.55(100.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDRWui $sp, 17, debug-location !434 :: (dereferenceable load 4 from %ir.bls); fft3d.c:222:26

bb.55.for.cond158:
; predecessors: %bb.54, %bb.56
  successors: %bb.56(0x7c000000), %bb.57(0x04000000); %bb.56(96.88%), %bb.57(3.12%)
  liveins: $x2, $x6, $x19, $x20, $w8
  STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !435) :: (store 4 into %ir.j); fft3d.c:0
  $w8 = ORRWrs $wzr, killed renamable $w8, 0, debug-location !439; fft3d.c:222:31
  renamable $w16 = LDRWui $sp, 16, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  $wzr = SUBSWrs killed renamable $w8, killed renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17

bb.56.for.body160:
; predecessors: %bb.55
  successors: %bb.55(0x80000000); %bb.55(100.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8, renamable $w16 = LDPWi $fp, -16, debug-location !446 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  renamable $w17 = LDRWui $sp, 17, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  renamable $w18 = LDRWui $sp, 14, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  renamable $w1 = LDURWi $fp, -68, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  $w17 = SUBWrs renamable $w8, killed renamable $w17, 0, debug-location !458; fft3d.c:224:33
  renamable $w17 = MADDWrrr killed renamable $w18, renamable $w16, killed renamable $w17, debug-location !462; fft3d.c:224:39
  renamable $w18, renamable $w0 = LDPWi $fp, -9, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr), (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:31
  renamable $q0 = LDRQroW renamable $x2, killed renamable $w17, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  renamable $x17 = LDURXi $fp, -56, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  renamable $w0 = nsw ADDWri killed renamable $w0, 1, 0, debug-location !448; fft3d.c:223:34
  renamable $w16 = MADDWrrr killed renamable $w18, killed renamable $w16, killed renamable $w1, debug-location !453; fft3d.c:223:44
  renamable $w8 = MADDWrrr killed renamable $w0, killed renamable $w16, killed renamable $w8, debug-location !455; fft3d.c:223:28
  STRQroW killed renamable $q0, killed renamable $x17, killed renamable $w8, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  renamable $w8 = LDURWi $fp, -64, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !464; fft3d.c:222:42
  B %bb.55

bb.57.for.inc176:
; predecessors: %bb.55
  successors: %bb.53(0x80000000); %bb.53(100.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -60, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !468; fft3d.c:221:39
  STURWi killed renamable $w8, $fp, -60, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  B %bb.53

bb.58.for.inc179:
; predecessors: %bb.53
  successors: %bb.43(0x80000000); %bb.43(100.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  renamable $w16 = LDRWui $sp, 17, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  $w8 = ADDWrs killed renamable $w16, killed renamable $w8, 0, debug-location !473; fft3d.c:210:37
  STRWui killed renamable $w8, $sp, 17, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  B %bb.43

bb.59.for.inc182:
; predecessors: %bb.43
  successors: %bb.41(0x80000000); %bb.41(100.00%)
  liveins: $x2, $x6, $x19, $x20
  renamable $w8 = LDURWi $fp, -68, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  renamable $w8 = nsw ADDWri killed renamable $w8, 1, 0, debug-location !477; fft3d.c:209:26
  STURWi killed renamable $w8, $fp, -68, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  B %bb.41

bb.60.for.end184:
; predecessors: %bb.41
  successors: %bb.61(0x50000000), %bb.62(0x30000000); %bb.61(62.50%), %bb.62(37.50%)

  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  CBZW killed renamable $w8, %bb.62, debug-location !483; fft3d.c:229:9

bb.61.if.then186:
; predecessors: %bb.60
  successors: %bb.62(0x80000000); %bb.62(100.00%)

  $w0 = MOVZWi 9, 0, debug-location !484; fft3d.c:230:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !484; fft3d.c:230:9
  PCN_STACKMAP 12, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !484; fft3d.c:230:9

bb.62.if.end187:
; predecessors: %bb.60, %bb.61
  successors: %bb.63(0x50000000), %bb.64(0x30000000); %bb.63(62.50%), %bb.64(37.50%)

  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  CBZW killed renamable $w8, %bb.64, debug-location !487; fft3d.c:231:9

bb.63.if.then189:
; predecessors: %bb.62
  successors: %bb.64(0x80000000); %bb.64(100.00%)

  $w0 = MOVZWi 3, 0, debug-location !488; fft3d.c:232:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !488; fft3d.c:232:9
  PCN_STACKMAP 13, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !488; fft3d.c:232:9

bb.64.if.end190:
; predecessors: %bb.62, %bb.63

  $fp, $lr = frame-destroy LDPXi $sp, 18, debug-location !489 :: (load 8 from %stack.42), (load 8 from %stack.41); fft3d.c:233:1
  $x20, $x19 = frame-destroy LDPXi $sp, 16, debug-location !489 :: (load 8 from %stack.44), (load 8 from %stack.43); fft3d.c:233:1
  $sp = frame-destroy ADDXri $sp, 160, 0, debug-location !489; fft3d.c:233:1
  RET undef $lr, debug-location !489; fft3d.c:233:1

# End machine code for function fftXYZ.

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: STPWi renamable $w1, renamable $w0, $fp, -8 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
    To: CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -8 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -10 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x8
SU(3):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(4):   STPXi renamable $x5, renamable $x4, $fp, -7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(5):   renamable $w20 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x20, debug-location !60; fft3d.c:142:62
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   renamable $w19 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x19, debug-location !62; fft3d.c:142:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.2, debug-location !90; fft3d.c:151:9
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(5): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=4 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 4 5 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(5) ORDER                              
  Cand SU(3) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
  Ready @1c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 4 5 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $w20 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x20, debug-location !60; fft3d.c:142:62
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $w19 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x19, debug-location !62; fft3d.c:142:69
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STPWi renamable $w1, renamable $w0, $fp, -8 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(4) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STPWi renamable $w3, renamable $w2, $fp, -10 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STPXi renamable $x5, renamable $x4, $fp, -7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !88; fft3d.c:151:9
SU(3):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !88 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:151:9
SU(5):   renamable $w20 = ORRWrs $wzr, renamable $w2, 0, implicit-def $x20, debug-location !60; fft3d.c:142:62
SU(6):   renamable $w19 = nsw ADDWri renamable $w1, 1, 0, implicit-def $x19, debug-location !62; fft3d.c:142:69
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -8 :: (store 4 into %ir.sign.addr), (store 4 into %ir.n1.addr)
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -10 :: (store 4 into %ir.n2.addr), (store 4 into %ir.n3.addr)
SU(4):   STPXi renamable $x5, renamable $x4, $fp, -7 :: (store 8 into %ir.x.addr), (store 8 into %ir.xout.addr)

********** MI Scheduling **********
fftXYZ:%bb.0 entry
  From: frame-setup STPXi killed $x20, killed $x19, $sp, 16 :: (store 8 into %stack.44), (store 8 into %stack.43)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STPXi $x20, $x19, $sp, 16 :: (store 8 into %stack.44), (store 8 into %stack.43)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $fp, $lr, $sp, 18 :: (store 8 into %stack.42), (store 8 into %stack.41)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(2): Anti Latency=0
SU(2):   $fp = frame-setup ADDXri $sp, 144, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STPXi $x20, $x19, $sp, 16 :: (store 8 into %stack.44), (store 8 into %stack.43)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) frame-setup STPXi $fp, $lr, $sp, 18 :: (store 8 into %stack.42), (store 8 into %stack.41)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $fp = frame-setup ADDXri $sp, 144, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STPXi $x20, $x19, $sp, 16 :: (store 8 into %stack.44), (store 8 into %stack.43)
SU(1):   frame-setup STPXi $fp, $lr, $sp, 18 :: (store 8 into %stack.42), (store 8 into %stack.41)
SU(2):   $fp = frame-setup ADDXri $sp, 144, 0

Fixup kills for %bb.0
Fixup kills for %bb.1
********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
    To: CBZW killed renamable $w16, %bb.4, debug-location !108; fft3d.c:159:9
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x16
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x16
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   $x2 = ORRXrs $xzr, $x20, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   STRXui $x20, $sp, 6 :: (store 8 into %stack.17)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w16, %bb.4, debug-location !108; fft3d.c:159:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) $x2 = ORRXrs $xzr, $x20, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) STRWui renamable $w8, $sp, 18, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STRXui $x20, $sp, 6 :: (store 8 into %stack.17)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !106; fft3d.c:159:9
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !106 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:159:9
SU(3):   $x2 = ORRXrs $xzr, $x20, 0
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !105 :: (store 4 into %ir.log); fft3d.c:158:9
SU(4):   STRXui $x20, $sp, 6 :: (store 8 into %stack.17)

********** MI Scheduling **********
fftXYZ:%bb.2 if.end
  From: renamable $w0 = LDURWi $fp, -32, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
    To: BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !104; fft3d.c:158:11
 RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -32, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w0
    SU(1): Data Latency=4 Reg=$w0
SU(1):   STRWui renamable $w0, $sp, 12 :: (store 4 into %stack.17)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w0
SU(2):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Data Latency=1 Reg=$x16
SU(4):   $w17 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(7): Data Latency=1 Reg=$w17
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Data Latency=1 Reg=$nzcv
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=$nzcv
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w17
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w8
    SU(8): Data Latency=1 Reg=$w8
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
    SU(3): Data Latency=1 Reg=$x16
  Successors:
    SU(9): Anti Latency=0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
  Successors:
    SU(10): Data Latency=1 Reg=$w8
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !104; fft3d.c:158:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -32, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $w17 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(5) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
  Ready @4c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(6) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
  Ready @5c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 7 
  TopQ.A RemainingLatency 0 + 6c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(7) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
  Ready @6c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(8) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(9) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
  Ready @8c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 8
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STRWui renamable $w0, $sp, 12 :: (store 4 into %stack.17)
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) STRWui renamable $w8, $sp, 14, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10
  Ready @10c
  TopQ.A TopLatency SU(10) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $w0 = LDURWi $fp, -32, debug-location !92 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:154:28
SU(2):   $w8 = MOVZWi 8192, 0
SU(4):   $w17 = MOVZWi 32, 0
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !94; fft3d.c:154:14
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !93; fft3d.c:154:26
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !98; fft3d.c:155:9
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !98; fft3d.c:155:9
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !101; fft3d.c:157:21
SU(1):   STRWui renamable $w0, $sp, 12 :: (store 4 into %stack.17)
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !102 :: (store 4 into %ir.blkp); fft3d.c:157:10

Fixup kills for %bb.2
Fixup kills for %bb.3
********** MI Scheduling **********
fftXYZ:%bb.4 if.end8
  From: STURWi $wzr, $fp, -68, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   STURWi $wzr, $fp, -68, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x3 = ADRP target-flags(aarch64-page) @plane
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x3
SU(3):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x3
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   renamable $x20 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x3 = ADRP target-flags(aarch64-page) @plane
  Ready @0c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  Ready @2c
  TopQ.A TopLatency SU(3) 1c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(4) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x20 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr
  Ready @3c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STURWi $wzr, $fp, -68, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(2):   $x3 = ADRP target-flags(aarch64-page) @plane
SU(1):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
SU(3):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
SU(4):   renamable $x20 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr
SU(0):   STURWi $wzr, $fp, -68, debug-location !110 :: (store 4 into %ir.k); fft3d.c:161:12

Fixup kills for %bb.4
********** MI Scheduling **********
fftXYZ:%bb.5 for.cond
  From: renamable $w8 = LDURWi $fp, -68, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
    To: Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.24, implicit $nzcv, debug-location !117; fft3d.c:161:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -40, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !113 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:17
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !115 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:161:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !117; fft3d.c:161:5

Fixup kills for %bb.5
Fixup kills for %bb.6
********** MI Scheduling **********
fftXYZ:%bb.7 for.cond10
  From: renamable $w8 = LDRWui $sp, 17, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
    To: Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -36, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.23, implicit $nzcv, debug-location !126; fft3d.c:162:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -36, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !122 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:23
SU(1):   renamable $w16 = LDURWi $fp, -36, debug-location !124 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:162:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !126; fft3d.c:162:9

Fixup kills for %bb.7
********** MI Scheduling **********
fftXYZ:%bb.8 for.body12
  From: renamable $w8 = LDRWui $sp, 17, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
    To: Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w16
SU(2):   renamable $w17 = LDURWi $fp, -36, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=$w17
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !130; fft3d.c:163:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w17
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.10, implicit $nzcv, debug-location !137; fft3d.c:164:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w17 = LDURWi $fp, -36, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !130; fft3d.c:163:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 16, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !127 :: (dereferenceable load 4 from %ir.bls); fft3d.c:163:19
SU(1):   renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !129 :: (dereferenceable load 4 from @fftblock); fft3d.c:163:25
SU(2):   renamable $w17 = LDURWi $fp, -36, debug-location !135 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:164:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !130; fft3d.c:163:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !131; fft3d.c:163:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !137; fft3d.c:164:17
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !132 :: (store 4 into %ir.ble); fft3d.c:163:17

Fixup kills for %bb.8
********** MI Scheduling **********
fftXYZ:%bb.9 if.then15
  From: renamable $w8 = LDURWi $fp, -36, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -36, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -36, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 16, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   renamable $w8 = LDURWi $fp, -36, debug-location !138 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:165:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !139; fft3d.c:165:26
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !140 :: (store 4 into %ir.ble); fft3d.c:165:21

Fixup kills for %bb.9
********** MI Scheduling **********
fftXYZ:%bb.10 if.end17
  From: renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(4): Data Latency=4 Reg=$w16
    SU(1): Data Latency=4 Reg=$w16
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !144; fft3d.c:166:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w16
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 15, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
SU(4):   STURWi renamable $w16, $fp, -64, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w16
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 1 
  TopQ.A RemainingLatency 0 + 4c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(1) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !144; fft3d.c:166:23
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 6c > CritPath 6
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) STRWui renamable $w8, $sp, 15, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
  Ready @6c
  TopQ.A TopLatency SU(3) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STURWi renamable $w16, $fp, -64, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !142 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:166:19
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !144; fft3d.c:166:23
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !145; fft3d.c:166:29
SU(3):   STRWui renamable $w8, $sp, 15, debug-location !146 :: (store 4 into %ir.len); fft3d.c:166:17
SU(4):   STURWi renamable $w16, $fp, -64, debug-location !149 :: (store 4 into %ir.j); fft3d.c:167:20

Fixup kills for %bb.10
********** MI Scheduling **********
fftXYZ:%bb.11 for.cond20
  From: renamable $w8 = LDURWi $fp, -64, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui $sp, 16, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !155; fft3d.c:167:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -64, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDRWui $sp, 16, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.11 ***
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !151 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:27
SU(1):   renamable $w16 = LDRWui $sp, 16, debug-location !153 :: (dereferenceable load 4 from %ir.ble); fft3d.c:167:32
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !155; fft3d.c:167:13

Fixup kills for %bb.11
Fixup kills for %bb.12
********** MI Scheduling **********
fftXYZ:%bb.13 for.cond23
  From: renamable $w8 = LDURWi $fp, -60, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
    To: Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.15, implicit $nzcv, debug-location !164; fft3d.c:168:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -60, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -32, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !164; fft3d.c:168:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !160 :: (dereferenceable load 4 from %ir.i); fft3d.c:168:29
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !162 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:168:33
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !164; fft3d.c:168:17

Fixup kills for %bb.13
********** MI Scheduling **********
fftXYZ:%bb.14 for.body25
  From: renamable $x16, renamable $x8 = LDPSWi $fp, -17, debug-location !165 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.k); fft3d.c:169:27
    To: B %bb.13
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $x16, renamable $x8 = LDPSWi $fp, -17, debug-location !165 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.k); fft3d.c:169:27
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$x16
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w8
    SU(10): Data Latency=0 Reg=$x8
    SU(6): Data Latency=4 Reg=$x8
SU(1):   renamable $x17 = LDURXi $fp, -48, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=4 Reg=$x17
SU(2):   renamable $w18 = LDRWui $sp, 17, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=$w18
SU(3):   renamable $x0 = LDURSWi $fp, -60, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(12): Data Latency=4 Reg=$w0
    SU(11): Data Latency=4 Reg=$w0
    SU(12): Data Latency=0 Reg=$x0
    SU(9): Data Latency=4 Reg=$x0
    SU(14): Ord  Latency=0 Memory
SU(4):   renamable $x16 = nsw MADDXrrr renamable $x16, renamable $x20, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x16
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x16
SU(5):   renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x16
    SU(1): Data Latency=4 Reg=$x17
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x16
    SU(6): Anti Latency=0
SU(6):   renamable $x17 = nsw MADDXrrr renamable $x8, renamable $x19, $xzr, debug-location !174; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(5): Anti Latency=0
    SU(1): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x17
    SU(10): Anti Latency=0
SU(7):   renamable $x16 = ADDXrs renamable $x16, renamable $x17, 4, debug-location !174; fft3d.c:169:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(6): Data Latency=1 Reg=$x17
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x16
  Successors:
    SU(11): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x16
    SU(8): Anti Latency=0
SU(8):   renamable $w17 = LDRWui $sp, 14, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$w17
SU(9):   renamable $q0 = LDRQroX renamable $x16, renamable $x0, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(7): Data Latency=1 Reg=$x16
    SU(3): Data Latency=4 Reg=$x0
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(11): Anti Latency=0
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
SU(10):   $w8 = SUBWrs renamable $w8, renamable $w18, 0, implicit $x8, debug-location !168; fft3d.c:169:29
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(6): Anti Latency=0
    SU(2): Data Latency=4 Reg=$w18
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=0 Reg=$x8
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$w8
SU(11):   renamable $w16 = nsw ADDWri renamable $w0, 1, 0, debug-location !178; fft3d.c:168:38
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(9): Anti Latency=0
    SU(7): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w0
  Successors:
    SU(14): Data Latency=1 Reg=$w16
SU(12):   renamable $w8 = MADDWrrr renamable $w17, renamable $w0, renamable $w8, implicit $x0, debug-location !172; fft3d.c:169:35
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(8): Data Latency=4 Reg=$w17
    SU(10): Data Latency=1 Reg=$w8
    SU(10): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w0
    SU(3): Data Latency=0 Reg=$x0
  Successors:
    SU(13): Data Latency=1 Reg=$w8
SU(13):   STRQroW renamable $q0, renamable $x3, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=$w8
    SU(9): Data Latency=4 Reg=$q0
    SU(9): Ord  Latency=0 Memory
SU(14):   STURWi renamable $w16, $fp, -60, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(11): Data Latency=1 Reg=$w16
    SU(9): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
ExitSU:   B %bb.13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 11
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 11
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x16, renamable $x8 = LDPSWi $fp, -17, debug-location !165 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.k); fft3d.c:169:27
  Ready @0c
  TopQ.A BotLatency SU(0) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 11
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x17 = LDURXi $fp, -48, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 11
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x0 = LDURSWi $fp, -60, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w18 = LDRWui $sp, 17, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x16 = nsw MADDXrrr renamable $x16, renamable $x20, $xzr, debug-location !174; fft3d.c:169:49
  Ready @4c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !174; fft3d.c:169:49
  Ready @5c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $x17 = nsw MADDXrrr renamable $x8, renamable $x19, $xzr, debug-location !174; fft3d.c:169:49
  Ready @6c
  TopQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 10 
  TopQ.A RemainingLatency 0 + 7c > CritPath 11
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x16 = ADDXrs renamable $x16, renamable $x17, 4, debug-location !174; fft3d.c:169:49
  Ready @7c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 11
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  4 cycles 
  Cand SU(8) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $w17 = LDRWui $sp, 14, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
  Ready @8c
  TopQ.A BotLatency SU(8) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 9c > CritPath 11
  Cand SU(10) ORDER                              
  Cand SU(9) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x16, renamable $x0, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
  Ready @9c
  TopQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 11 
  TopQ.A RemainingLatency 0 + 10c > CritPath 11
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) $w8 = SUBWrs renamable $w8, renamable $w18, 0, implicit $x8, debug-location !168; fft3d.c:169:29
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 12 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w16 = nsw ADDWri renamable $w0, 1, 0, debug-location !178; fft3d.c:168:38
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 12 
  TopQ.A RemainingLatency 0 + 12c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(12) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $w8 = MADDWrrr renamable $w17, renamable $w0, renamable $w8, implicit $x0, debug-location !172; fft3d.c:169:35
  Ready @12c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 13 
  TopQ.A RemainingLatency 0 + 13c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
Pick Top ORDER     
Scheduling SU(13) STRQroW renamable $q0, renamable $x3, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
  Ready @13c
  TopQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) STURWi renamable $w16, $fp, -60, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   renamable $x16, renamable $x8 = LDPSWi $fp, -17, debug-location !165 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.k); fft3d.c:169:27
SU(1):   renamable $x17 = LDURXi $fp, -48, debug-location !174 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:169:49
SU(3):   renamable $x0 = LDURSWi $fp, -60, debug-location !170 :: (dereferenceable load 4 from %ir.i); fft3d.c:169:44
SU(2):   renamable $w18 = LDRWui $sp, 17, debug-location !167 :: (dereferenceable load 4 from %ir.bls); fft3d.c:169:31
SU(4):   renamable $x16 = nsw MADDXrrr renamable $x16, renamable $x20, $xzr, debug-location !174; fft3d.c:169:49
SU(5):   renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !174; fft3d.c:169:49
SU(6):   renamable $x17 = nsw MADDXrrr renamable $x8, renamable $x19, $xzr, debug-location !174; fft3d.c:169:49
SU(7):   renamable $x16 = ADDXrs renamable $x16, renamable $x17, 4, debug-location !174; fft3d.c:169:49
SU(8):   renamable $w17 = LDRWui $sp, 14, debug-location !169 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:169:37
SU(9):   renamable $q0 = LDRQroX renamable $x16, renamable $x0, 0, 1, debug-location !174 :: (load 16 from %ir.50, align 8); fft3d.c:169:49
SU(10):   $w8 = SUBWrs renamable $w8, renamable $w18, 0, implicit $x8, debug-location !168; fft3d.c:169:29
SU(11):   renamable $w16 = nsw ADDWri renamable $w0, 1, 0, debug-location !178; fft3d.c:168:38
SU(12):   renamable $w8 = MADDWrrr renamable $w17, renamable $w0, renamable $w8, implicit $x0, debug-location !172; fft3d.c:169:35
SU(13):   STRQroW renamable $q0, renamable $x3, renamable $w8, 1, 1, debug-location !174 :: (store 16 into %ir.49, align 8); fft3d.c:169:49
SU(14):   STURWi renamable $w16, $fp, -60, debug-location !178 :: (store 4 into %ir.i); fft3d.c:168:38

Fixup kills for %bb.14
********** MI Scheduling **********
fftXYZ:%bb.15 for.inc35
  From: renamable $w8 = LDURWi $fp, -64, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
    To: B %bb.11
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -64, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -64, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -64, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !182 :: (dereferenceable load 4 from %ir.j); fft3d.c:167:38
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !182; fft3d.c:167:38
SU(2):   STURWi renamable $w8, $fp, -64, debug-location !182 :: (store 4 into %ir.j); fft3d.c:167:38

Fixup kills for %bb.15
********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: $x3 = ADRP target-flags(aarch64-page) @plane
    To: PCN_STACKMAP 3, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -116, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !193 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:173:22
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   $x3 = ADRP target-flags(aarch64-page) @plane
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x3
SU(1):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x3
SU(2):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   renamable $x2 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   PCN_STACKMAP 3, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 16, 0, $fp, 24, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -116, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !193 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.2, align 16), (load 8 from %fixed-stack.1), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:173:22
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x2 = LDRXui $sp, 6 :: (load 8 from %stack.17)
  Ready @0c
  TopQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x3 = ADRP target-flags(aarch64-page) @plane
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 2c > CritPath 3
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  Ready @2c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.16 ***
SU(3):   renamable $x2 = LDRXui $sp, 6 :: (load 8 from %stack.17)
SU(0):   $x3 = ADRP target-flags(aarch64-page) @plane
SU(1):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
SU(2):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock

********** MI Scheduling **********
fftXYZ:%bb.16 for.end37
  From: renamable $w3, renamable $w0 = LDPWi $fp, -8, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
 RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w3, renamable $w0 = LDPWi $fp, -8, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w3
    SU(4): Data Latency=4 Reg=$w0
SU(1):   renamable $w1 = LDRWui $sp, 18, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Data Latency=4 Reg=$w1
SU(2):   STRWui renamable $w1, $sp, 9 :: (store 4 into %stack.19)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=$w1
SU(3):   renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w4
    SU(4): Data Latency=4 Reg=$w2
SU(4):   STPWi renamable $w0, renamable $w2, $sp, 7 :: (store 4 into %stack.21), (store 4 into %stack.20)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=$w2
    SU(0): Data Latency=4 Reg=$w0
SU(5):   STPWi renamable $w4, renamable $w3, $sp, 5 :: (store 4 into %stack.22), (store 4 into %stack.23)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=$w4
    SU(0): Data Latency=4 Reg=$w3
SU(6):   renamable $x8 = LDRXui $fp, 2, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(10): Data Latency=4 Reg=$x8
    SU(7): Data Latency=4 Reg=$x8
SU(7):   STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(6): Data Latency=4 Reg=$x8
SU(8):   $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !192; fft3d.c:172:13
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x5
SU(9):   $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !192; fft3d.c:172:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(10):   STRXui renamable $x8, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(6): Data Latency=4 Reg=$x8
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !192; fft3d.c:172:13
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(9): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 6 8 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w3, renamable $w0 = LDPWi $fp, -8, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 1 3 6 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(8) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w1 = LDRWui $sp, 18, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
  Ready @1c
  TopQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 8 6 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(8) ORDER                              
  Cand SU(6) TOP-PATH                  4 cycles 
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
  Ready @2c
  TopQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 5 4 
Queue TopQ.A: 8 6 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(8) ORDER                              
  Cand SU(6) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $x8 = LDRXui $fp, 2, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
  Ready @3c
  TopQ.A BotLatency SU(6) 4c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 5 4 10 7 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !192; fft3d.c:172:13
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 5 4 10 
Queue TopQ.A: 9 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 4
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !192; fft3d.c:172:13
  Ready @5c
  TopQ.A TopLatency SU(9) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 10 
Queue TopQ.A: 2 5 4 
  TopQ.A RemainingLatency 0 + 6c > CritPath 4
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) STRWui renamable $w1, $sp, 9 :: (store 4 into %stack.19)
  Ready @6c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 5 7 10 
  TopQ.A RemainingLatency 0 + 7c > CritPath 4
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) STPWi renamable $w0, renamable $w2, $sp, 7 :: (store 4 into %stack.21), (store 4 into %stack.20)
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 5 7 
  TopQ.A RemainingLatency 0 + 8c > CritPath 4
  Cand SU(10) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) STPWi renamable $w4, renamable $w3, $sp, 5 :: (store 4 into %stack.22), (store 4 into %stack.23)
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 7 
  TopQ.A RemainingLatency 0 + 9c > CritPath 4
  Cand SU(10) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) STRXui renamable $x8, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   renamable $w3, renamable $w0 = LDPWi $fp, -8, debug-location !186 :: (dereferenceable load 4 from %ir.sign.addr), (dereferenceable load 4 from %ir.n1.addr); fft3d.c:172:26
SU(1):   renamable $w1 = LDRWui $sp, 18, debug-location !187 :: (dereferenceable load 4 from %ir.log); fft3d.c:172:32
SU(3):   renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !188 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:172:37
SU(6):   renamable $x8 = LDRXui $fp, 2, debug-location !191 :: (dereferenceable load 8 from %ir.exp1.addr, align 16); fft3d.c:172:59
SU(8):   $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !192; fft3d.c:172:13
SU(9):   $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !192; fft3d.c:172:13
SU(2):   STRWui renamable $w1, $sp, 9 :: (store 4 into %stack.19)
SU(4):   STPWi renamable $w0, renamable $w2, $sp, 7 :: (store 4 into %stack.21), (store 4 into %stack.20)
SU(5):   STPWi renamable $w4, renamable $w3, $sp, 5 :: (store 4 into %stack.22), (store 4 into %stack.23)
SU(7):   STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
SU(10):   STRXui renamable $x8, $sp, 0, debug-location !192 :: (store 8 into stack); fft3d.c:172:13

Fixup kills for %bb.16
********** MI Scheduling **********
fftXYZ:%bb.17 for.cond38
  From: STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
    To: Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(2):   renamable $w16 = LDRWui $sp, 16, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w16
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w16
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.22, implicit $nzcv, debug-location !201; fft3d.c:173:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w16 = LDRWui $sp, 16, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.17 ***
SU(2):   renamable $w16 = LDRWui $sp, 16, debug-location !199 :: (dereferenceable load 4 from %ir.ble); fft3d.c:173:32
SU(0):   STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !194) :: (store 4 into %ir.j); fft3d.c:0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !197; fft3d.c:173:27
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !201; fft3d.c:173:13

Fixup kills for %bb.17
Fixup kills for %bb.18
********** MI Scheduling **********
fftXYZ:%bb.19 for.cond41
  From: renamable $w8 = LDURWi $fp, -60, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
    To: Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.21, implicit $nzcv, debug-location !210; fft3d.c:174:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -60, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -32, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.19 ***
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !206 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:29
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !208 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:174:33
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !210; fft3d.c:174:17

Fixup kills for %bb.19
********** MI Scheduling **********
fftXYZ:%bb.20 for.body43
  From: renamable $x8, renamable $x17 = LDPSWi $fp, -17, debug-location !213 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:175:23
    To: B %bb.19
 RegionInstrs: 17
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8, renamable $x17 = LDPSWi $fp, -17, debug-location !213 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:175:23
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$x8
    SU(7): Data Latency=4 Reg=$w17
    SU(11): Data Latency=4 Reg=$x17
    SU(13): Ord  Latency=0 Memory
SU(1):   renamable $x16 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 13
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x16
SU(2):   renamable $x18 = LDURSWi $fp, -60, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(8): Data Latency=4 Reg=$w18
    SU(13): Data Latency=4 Reg=$x18
    SU(16): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
SU(3):   renamable $w0 = LDRWui $sp, 17, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$w0
    SU(13): Ord  Latency=0 Memory
SU(4):   renamable $w1 = LDRWui $sp, 14, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(8): Data Latency=4 Reg=$w1
    SU(13): Ord  Latency=0 Memory
SU(5):   renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x16, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Data Latency=1 Reg=$x16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x8
    SU(6): Anti Latency=0
SU(6):   renamable $x16 = LDURXi $fp, -48, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(5): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(11): Out  Latency=1
    SU(10): Data Latency=4 Reg=$x16
    SU(13): Ord  Latency=0 Memory
SU(7):   $w0 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !218; fft3d.c:175:42
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w17
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w0
SU(8):   renamable $w0 = MADDWrrr renamable $w1, renamable $w18, renamable $w0, debug-location !222; fft3d.c:175:48
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w0
    SU(4): Data Latency=4 Reg=$w1
    SU(2): Data Latency=4 Reg=$w18
  Successors:
    SU(9): Data Latency=1 Reg=$w0
SU(9):   renamable $q0 = LDRQroW renamable $x3, renamable $w0, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(8): Data Latency=1 Reg=$w0
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(13): Ord  Latency=0 Memory
SU(10):   renamable $x8 = ADDXrs renamable $x16, renamable $x8, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 8
  Predecessors:
    SU(6): Data Latency=4 Reg=$x16
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x8
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x8
    SU(11): Anti Latency=0
SU(11):   renamable $x16 = nsw MADDXrrr renamable $x17, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 8
  Predecessors:
    SU(10): Anti Latency=0
    SU(6): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x17
  Successors:
    SU(12): Data Latency=1 Reg=$x16
SU(12):   renamable $x8 = ADDXrs renamable $x8, renamable $x16, 4, debug-location !211; fft3d.c:175:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 7
  Predecessors:
    SU(11): Data Latency=1 Reg=$x16
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x8
  Successors:
    SU(14): Out  Latency=1
    SU(13): Data Latency=1 Reg=$x8
SU(13):   STRQroX renamable $q0, renamable $x8, renamable $x18, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  # preds left       : 9
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(12): Data Latency=1 Reg=$x8
    SU(9): Data Latency=4 Reg=$q0
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Data Latency=4 Reg=$x18
    SU(2): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(14): Anti Latency=0
    SU(16): Ord  Latency=0 Memory
    SU(14): Ord  Latency=1 Memory
SU(14):   renamable $w8 = LDURWi $fp, -60, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(13): Anti Latency=0
    SU(13): Ord  Latency=1 Memory
    SU(12): Out  Latency=1
  Successors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=4 Reg=$w8
    SU(16): Ord  Latency=0 Memory
SU(15):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$w8
  Successors:
    SU(16): Data Latency=1 Reg=$w8
SU(16):   STURWi renamable $w8, $fp, -60, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(15): Data Latency=1 Reg=$w8
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.19
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8, renamable $x17 = LDPSWi $fp, -17, debug-location !213 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:175:23
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(3) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $w0 = LDRWui $sp, 17, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
  Ready @1c
  TopQ.A BotLatency SU(3) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 
Queue TopQ.A: 4 1 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 16
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $x18 = LDURSWi $fp, -60, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 
Queue TopQ.A: 4 1 
  TopQ.A RemainingLatency 0 + 3c > CritPath 16
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w1 = LDRWui $sp, 14, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
  Ready @3c
  TopQ.A BotLatency SU(4) 15c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 7 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $x16 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 7 
  TopQ.A RemainingLatency 0 + 5c > CritPath 16
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x16, $xzr, debug-location !211; fft3d.c:175:21
  Ready @5c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 16
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) renamable $x16 = LDURXi $fp, -48, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) $w0 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !218; fft3d.c:175:42
  Ready @7c
  TopQ.A BotLatency SU(7) 12c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $w0 = MADDWrrr renamable $w1, renamable $w18, renamable $w0, debug-location !222; fft3d.c:175:48
  Ready @8c
  TopQ.A TopLatency SU(8) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $q0 = LDRQroW renamable $x3, renamable $w0, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
  Ready @9c
  TopQ.A TopLatency SU(9) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $x8 = ADDXrs renamable $x16, renamable $x8, 4, debug-location !211; fft3d.c:175:21
  Ready @10c
  TopQ.A TopLatency SU(10) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $x16 = nsw MADDXrrr renamable $x17, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) renamable $x8 = ADDXrs renamable $x8, renamable $x16, 4, debug-location !211; fft3d.c:175:21
  Ready @12c
  TopQ.A TopLatency SU(12) 9c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) STRQroX renamable $q0, renamable $x8, renamable $x18, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
  Ready @13c
  TopQ.A TopLatency SU(13) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $w8 = LDURWi $fp, -60, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
  Ready @14c
  TopQ.A TopLatency SU(14) 11c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 18 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 15 
Pick Top ONLY1     
Scheduling SU(15) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
  Ready @18c
  TopQ.A TopLatency SU(15) 15c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 
Pick Top ONLY1     
Scheduling SU(16) STURWi renamable $w8, $fp, -60, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38
  Ready @19c
  TopQ.A TopLatency SU(16) 16c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   renamable $x8, renamable $x17 = LDPSWi $fp, -17, debug-location !213 :: (dereferenceable load 4 from %ir.k), (dereferenceable load 4 from %ir.j); fft3d.c:175:23
SU(3):   renamable $w0 = LDRWui $sp, 17, debug-location !217 :: (dereferenceable load 4 from %ir.bls); fft3d.c:175:44
SU(2):   renamable $x18 = LDURSWi $fp, -60, debug-location !215 :: (dereferenceable load 4 from %ir.i); fft3d.c:175:29
SU(4):   renamable $w1 = LDRWui $sp, 14, debug-location !219 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:175:50
SU(1):   renamable $x16 = nuw MADDXrrr renamable $x2, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
SU(5):   renamable $x8 = nsw MADDXrrr renamable $x8, renamable $x16, $xzr, debug-location !211; fft3d.c:175:21
SU(6):   renamable $x16 = LDURXi $fp, -48, debug-location !211 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:175:21
SU(7):   $w0 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !218; fft3d.c:175:42
SU(8):   renamable $w0 = MADDWrrr renamable $w1, renamable $w18, renamable $w0, debug-location !222; fft3d.c:175:48
SU(9):   renamable $q0 = LDRQroW renamable $x3, renamable $w0, 1, 1, debug-location !223 :: (load 16 from %ir.76, align 8); fft3d.c:175:34
SU(10):   renamable $x8 = ADDXrs renamable $x16, renamable $x8, 4, debug-location !211; fft3d.c:175:21
SU(11):   renamable $x16 = nsw MADDXrrr renamable $x17, renamable $x19, $xzr, debug-location !211; fft3d.c:175:21
SU(12):   renamable $x8 = ADDXrs renamable $x8, renamable $x16, 4, debug-location !211; fft3d.c:175:21
SU(13):   STRQroX renamable $q0, renamable $x8, renamable $x18, 0, 1, debug-location !223 :: (store 16 into %ir.75, align 8); fft3d.c:175:34
SU(14):   renamable $w8 = LDURWi $fp, -60, debug-location !224 :: (dereferenceable load 4 from %ir.i); fft3d.c:174:38
SU(15):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !224; fft3d.c:174:38
SU(16):   STURWi renamable $w8, $fp, -60, debug-location !224 :: (store 4 into %ir.i); fft3d.c:174:38

Fixup kills for %bb.20
********** MI Scheduling **********
fftXYZ:%bb.21 for.inc58
  From: renamable $w8 = LDURWi $fp, -64, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
    To: B %bb.17
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
ExitSU:   B %bb.17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -64, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !228 :: (dereferenceable load 4 from %ir.j); fft3d.c:173:38
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !228; fft3d.c:173:38

Fixup kills for %bb.21
********** MI Scheduling **********
fftXYZ:%bb.22 for.inc61
  From: renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
    To: B %bb.7
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui $sp, 17, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
    SU(3): Ord  Latency=0 Memory
SU(2):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !233; fft3d.c:162:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 17, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Ord  Latency=0 Memory
ExitSU:   B %bb.7
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDRWui $sp, 17, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !233; fft3d.c:162:37
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 17, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !232 :: (dereferenceable load 4 from @fftblock); fft3d.c:162:40
SU(1):   renamable $w16 = LDRWui $sp, 17, debug-location !233 :: (dereferenceable load 4 from %ir.bls); fft3d.c:162:37
SU(2):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !233; fft3d.c:162:37
SU(3):   STRWui renamable $w8, $sp, 17, debug-location !233 :: (store 4 into %ir.bls); fft3d.c:162:37

Fixup kills for %bb.22
********** MI Scheduling **********
fftXYZ:%bb.23 for.inc64
  From: renamable $w8 = LDURWi $fp, -68, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
    To: B %bb.5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -68, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !237 :: (dereferenceable load 4 from %ir.k); fft3d.c:161:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !237; fft3d.c:161:26
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !237 :: (store 4 into %ir.k); fft3d.c:161:26

Fixup kills for %bb.23
********** MI Scheduling **********
fftXYZ:%bb.24 for.end66
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
    To: CBZW killed renamable $w8, %bb.26, debug-location !243; fft3d.c:180:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   $x20 = ORRXrs $xzr, $x2, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.26, debug-location !243; fft3d.c:180:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x20 = ORRXrs $xzr, $x2, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !241; fft3d.c:180:9
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !241 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:180:9
SU(2):   $x20 = ORRXrs $xzr, $x2, 0

Fixup kills for %bb.24
Fixup kills for %bb.25
********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
    To: CBZW killed renamable $w16, %bb.28, debug-location !260; fft3d.c:188:9
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x16
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x16
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(3):   $x18 = ORRXrs $xzr, $x20, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w16, %bb.28, debug-location !260; fft3d.c:188:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x18 = ORRXrs $xzr, $x20, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 18, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !258; fft3d.c:188:9
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !258 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:188:9
SU(3):   $x18 = ORRXrs $xzr, $x20, 0
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !257 :: (store 4 into %ir.log); fft3d.c:187:9

********** MI Scheduling **********
fftXYZ:%bb.26 if.end69
  From: renamable $w0 = LDURWi $fp, -36, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
    To: BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !256; fft3d.c:187:11
 RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -36, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w0
    SU(1): Data Latency=4 Reg=$w0
SU(1):   STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w0
SU(2):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Data Latency=1 Reg=$x16
SU(4):   $w17 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(7): Data Latency=1 Reg=$w17
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Data Latency=1 Reg=$nzcv
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=$nzcv
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w17
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w8
    SU(8): Data Latency=1 Reg=$w8
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
    SU(3): Data Latency=1 Reg=$x16
  Successors:
    SU(9): Anti Latency=0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
  Successors:
    SU(10): Data Latency=1 Reg=$w8
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !256; fft3d.c:187:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -36, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $w17 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(5) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
  Ready @4c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(6) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
  Ready @5c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 7 
  TopQ.A RemainingLatency 0 + 6c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(7) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
  Ready @6c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(8) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(9) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
  Ready @8c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 8
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) STRWui renamable $w8, $sp, 14, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10
  Ready @10c
  TopQ.A TopLatency SU(10) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $w0 = LDURWi $fp, -36, debug-location !245 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:183:28
SU(2):   $w8 = MOVZWi 8192, 0
SU(4):   $w17 = MOVZWi 32, 0
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !247; fft3d.c:183:14
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !246; fft3d.c:183:26
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !251; fft3d.c:184:9
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !251; fft3d.c:184:9
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !253; fft3d.c:186:21
SU(1):   STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !254 :: (store 4 into %ir.blkp); fft3d.c:186:10

Fixup kills for %bb.26
Fixup kills for %bb.27
********** MI Scheduling **********
fftXYZ:%bb.28 if.end78
  From: STURWi $wzr, $fp, -68, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
    To: End RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STURWi $wzr, $fp, -68, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   renamable $x8 = nuw MADDXrrr renamable $x18, renamable $x19, $xzr
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=$x8
SU(3):   STRXui renamable $x8, $sp, 1 :: (store 8 into %stack.24)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$x8
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 1
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  Ready @0c
  TopQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 1
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x8 = nuw MADDXrrr renamable $x18, renamable $x19, $xzr
  Ready @1c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 1
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STURWi $wzr, $fp, -68, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRXui renamable $x8, $sp, 1 :: (store 8 into %stack.24)
  Ready @3c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.28 ***
SU(1):   renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
SU(2):   renamable $x8 = nuw MADDXrrr renamable $x18, renamable $x19, $xzr
SU(0):   STURWi $wzr, $fp, -68, debug-location !262 :: (store 4 into %ir.k); fft3d.c:190:12
SU(3):   STRXui renamable $x8, $sp, 1 :: (store 8 into %stack.24)

Fixup kills for %bb.28
********** MI Scheduling **********
fftXYZ:%bb.29 for.cond79
  From: renamable $w8 = LDURWi $fp, -68, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
    To: Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.36, implicit $nzcv, debug-location !269; fft3d.c:190:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -40, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !265 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:17
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !267 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:190:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !269; fft3d.c:190:5

Fixup kills for %bb.29
Fixup kills for %bb.30
********** MI Scheduling **********
fftXYZ:%bb.31 for.cond82
  From: renamable $w8 = LDRWui $sp, 17, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !278; fft3d.c:191:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -32, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !274 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:23
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !276 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:191:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !278; fft3d.c:191:9

Fixup kills for %bb.31
********** MI Scheduling **********
fftXYZ:%bb.32 for.body84
  From: renamable $w8 = LDRWui $sp, 17, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
    To: Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w16
    SU(2): Anti Latency=0
SU(2):   renamable $w17 = LDURWi $fp, -32, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Predecessors:
    SU(1): Anti Latency=0
  Successors:
    SU(5): Data Latency=4 Reg=$w17
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !282; fft3d.c:192:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w17
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.34, implicit $nzcv, debug-location !289; fft3d.c:193:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w17 = LDURWi $fp, -32, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !282; fft3d.c:192:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 16, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !279 :: (dereferenceable load 4 from %ir.bls); fft3d.c:192:19
SU(1):   renamable $w16 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !281 :: (dereferenceable load 4 from @fftblock); fft3d.c:192:25
SU(2):   renamable $w17 = LDURWi $fp, -32, debug-location !287 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:193:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !282; fft3d.c:192:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !283; fft3d.c:192:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !289; fft3d.c:193:17
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !284 :: (store 4 into %ir.ble); fft3d.c:192:17

Fixup kills for %bb.32
********** MI Scheduling **********
fftXYZ:%bb.33 if.then88
  From: renamable $w8 = LDURWi $fp, -32, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -32, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -32, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 16, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   renamable $w8 = LDURWi $fp, -32, debug-location !290 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:194:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !291; fft3d.c:194:26
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !292 :: (store 4 into %ir.ble); fft3d.c:194:21

Fixup kills for %bb.33
********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
    To: B %bb.31
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Data Latency=1 Reg=$x17
SU(1):   renamable $w8 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
    SU(0): Data Latency=1 Reg=$x17
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(2):   renamable $w16 = LDRWui $sp, 17, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w16
    SU(4): Ord  Latency=0 Memory
SU(3):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !313; fft3d.c:191:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w8
    SU(1): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w16
  Successors:
    SU(4): Data Latency=1 Reg=$w8
SU(4):   STRWui renamable $w8, $sp, 17, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=$w8
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.31
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 6
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $w8 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w16 = LDRWui $sp, 17, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
  Ready @2c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 6 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !313; fft3d.c:191:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STRWui renamable $w8, $sp, 17, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37
  Ready @7c
  TopQ.A TopLatency SU(4) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $x17 = ADRP target-flags(aarch64-page) @fftblock
SU(1):   renamable $w8 = LDRWui renamable $x17, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !312 :: (dereferenceable load 4 from @fftblock); fft3d.c:191:40
SU(2):   renamable $w16 = LDRWui $sp, 17, debug-location !313 :: (dereferenceable load 4 from %ir.bls); fft3d.c:191:37
SU(3):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !313; fft3d.c:191:37
SU(4):   STRWui renamable $w8, $sp, 17, debug-location !313 :: (store 4 into %ir.bls); fft3d.c:191:37

********** MI Scheduling **********
fftXYZ:%bb.34 if.end90
  From: renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
 RegionInstrs: 23
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 14
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$w8
    SU(10): Out  Latency=1
    SU(8): Data Latency=4 Reg=$w16
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w0
SU(2):   $w2, renamable $w1 = LDPWi $sp, 17, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.bls); fft3d.c:196:32
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=0 Reg=$w2
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w1
SU(3):   $w2 = KILL $w2, implicit-def $x2, debug-location !300; fft3d.c:196:32
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=0 Reg=$w2
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=0 Reg=$x2
SU(4):   $x2 = SBFMXri $x2, 0, 31, debug-location !300; fft3d.c:196:32
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=0 Reg=$x2
  Successors:
    SU(17): Out  Latency=1
    SU(14): Data Latency=1 Reg=$x2
SU(5):   STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Data Latency=4 Reg=$w1
    SU(1): Data Latency=4 Reg=$w0
SU(6):   renamable $x17 = LDURXi $fp, -48, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(13): Out  Latency=1
    SU(12): Data Latency=4 Reg=$x17
SU(7):   renamable $x18 = LDURSWi $fp, -68, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(11): Data Latency=4 Reg=$x18
SU(8):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !296; fft3d.c:195:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 10
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w16
  Successors:
    SU(17): Data Latency=1 Reg=$w8
    SU(10): Anti Latency=0
SU(9):   renamable $w3 = LDURWi $fp, -36, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(18): Data Latency=4 Reg=$w3
SU(10):   renamable $x16 = LDRXui $sp, 1 :: (load 8 from %stack.24)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 10
  Predecessors:
    SU(8): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=4 Reg=$x16
SU(11):   renamable $x16 = nsw MADDXrrr renamable $x18, renamable $x16, $xzr, debug-location !305; fft3d.c:196:55
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 6
  Predecessors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$x16
    SU(7): Data Latency=4 Reg=$x18
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x16
SU(12):   renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 5
  Predecessors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$x16
    SU(6): Data Latency=4 Reg=$x17
  Successors:
    SU(14): Data Latency=1 Reg=$x16
    SU(13): Anti Latency=0
SU(13):   renamable $w17 = LDURWi $fp, -32, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 9
  Height             : 5
  Predecessors:
    SU(12): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(20): Data Latency=4 Reg=$w17
SU(14):   renamable $x5 = ADDXrs renamable $x16, renamable $x2, 4, debug-location !305; fft3d.c:196:55
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(12): Data Latency=1 Reg=$x16
    SU(4): Data Latency=1 Reg=$x2
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(15): Data Latency=1 Reg=$x5
    SU(17): Anti Latency=0
SU(15):   STRXui renamable $x5, $sp, 5 :: (store 8 into %stack.18)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=$x5
SU(16):   renamable $x20 = LDRXui $fp, 3, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(22): Data Latency=4 Reg=$x20
SU(17):   renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(14): Anti Latency=0
    SU(8): Data Latency=1 Reg=$w8
    SU(4): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(19): Data Latency=1 Reg=$w2
    SU(18): Data Latency=1 Reg=$w2
SU(18):   STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.22), (store 4 into %stack.21)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(17): Data Latency=1 Reg=$w2
    SU(9): Data Latency=4 Reg=$w3
SU(19):   STRWui renamable $w2, $sp, 15, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(17): Data Latency=1 Reg=$w2
SU(20):   renamable $w4 = nsw ADDWri renamable $w17, 1, 0, debug-location !304; fft3d.c:196:49
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 1
  Predecessors:
    SU(13): Data Latency=4 Reg=$w17
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(21): Data Latency=1 Reg=$w4
SU(21):   STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 14
  Height             : 0
  Predecessors:
    SU(20): Data Latency=1 Reg=$w4
SU(22):   STRXui renamable $x20, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(16): Data Latency=4 Reg=$x20
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !310; fft3d.c:196:13
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 14
  Height             : 0
  Predecessors:
    SU(20): Ord  Latency=1 Artificial
    SU(17): Ord  Latency=1 Artificial
    SU(14): Ord  Latency=1 Artificial
    SU(9): Ord  Latency=4 Artificial
    SU(2): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 14
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 7 9 16 
  TopQ.A RemainingLatency 0 + 0c > CritPath 14
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
  Ready @0c
  TopQ.A BotLatency SU(0) 14c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 16 1 2 6 7 9 
  TopQ.A RemainingLatency 0 + 1c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(6) TOP-PATH                  9 cycles 
  Cand SU(7) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x18 = LDURSWi $fp, -68, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 16 1 2 6 9 
  TopQ.A RemainingLatency 0 + 2c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(1) ORDER                              
  Cand SU(6) TOP-PATH                  9 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $x17 = LDURXi $fp, -48, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 16 1 2 9 
  TopQ.A RemainingLatency 0 + 3c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -28, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 9 2 8 
  TopQ.A RemainingLatency 0 + 4c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(8) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !296; fft3d.c:195:23
  Ready @4c
  TopQ.A TopLatency SU(8) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 9 2 10 
  TopQ.A RemainingLatency 0 + 5c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(10) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $x16 = LDRXui $sp, 1 :: (load 8 from %stack.24)
  Ready @5c
  TopQ.A BotLatency SU(10) 10c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 16 9 2 
  TopQ.A RemainingLatency 0 + 6c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $w2, renamable $w1 = LDPWi $sp, 17, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.bls); fft3d.c:196:32
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 5 
Queue TopQ.A: 16 9 3 
  TopQ.A RemainingLatency 0 + 7c > CritPath 14
  Cand SU(16) ORDER                              
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) renamable $w3 = LDURWi $fp, -36, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 5 
Queue TopQ.A: 16 3 
  TopQ.A RemainingLatency 0 + 8c > CritPath 14
  Cand SU(16) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(16) renamable $x20 = LDRXui $fp, 3, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 5 
Queue TopQ.A: 3 11 
  TopQ.A RemainingLatency 0 + 9c > CritPath 14
  Cand SU(3) ORDER                              
  Cand SU(11) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(11) renamable $x16 = nsw MADDXrrr renamable $x18, renamable $x16, $xzr, debug-location !305; fft3d.c:196:55
  Ready @9c
  TopQ.A TopLatency SU(11) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 
Queue TopQ.A: 3 12 5 
  TopQ.A RemainingLatency 0 + 10c > CritPath 14
  Cand SU(3) ORDER                              
  Cand SU(12) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !305; fft3d.c:196:55
  Ready @10c
  TopQ.A TopLatency SU(12) 9c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 
Queue TopQ.A: 3 5 13 
  TopQ.A RemainingLatency 0 + 11c > CritPath 14
  Cand SU(3) ORDER                              
  Cand SU(13) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(13) renamable $w17 = LDURWi $fp, -32, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
  Ready @11c
  TopQ.A BotLatency SU(13) 5c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 20 
Queue TopQ.A: 3 5 22 
  TopQ.A RemainingLatency 0 + 12c > CritPath 14
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $w2 = KILL $w2, implicit-def $x2, debug-location !300; fft3d.c:196:32
  Ready @12c
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 20 4 
Queue TopQ.A: 22 5 
  TopQ.A RemainingLatency 0 + 12c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 20 
Queue TopQ.A: 22 4 
  TopQ.A RemainingLatency 0 + 13c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(4) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) $x2 = SBFMXri $x2, 0, 31, debug-location !300; fft3d.c:196:32
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 20 
Queue TopQ.A: 22 14 
  TopQ.A RemainingLatency 0 + 14c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(14) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(14) renamable $x5 = ADDXrs renamable $x16, renamable $x2, 4, debug-location !305; fft3d.c:196:55
  Ready @14c
  TopQ.A TopLatency SU(14) 10c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 15 17 20 
  TopQ.A RemainingLatency 0 + 15c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(17) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(17) renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 15 20 19 18 
  TopQ.A RemainingLatency 0 + 16c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(20) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(20) renamable $w4 = nsw ADDWri renamable $w17, 1, 0, debug-location !304; fft3d.c:196:49
  Ready @16c
  TopQ.A TopLatency SU(20) 13c
  TopQ.A BotLatency SU(20) 1c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 15 18 19 21 
  TopQ.A RemainingLatency 0 + 17c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(15) ORDER                              
Pick Top ORDER     
Scheduling SU(15) STRXui renamable $x5, $sp, 5 :: (store 8 into %stack.18)
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 21 18 19 
  TopQ.A RemainingLatency 0 + 18c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(18) ORDER                              
Pick Top ORDER     
Scheduling SU(18) STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.22), (store 4 into %stack.21)
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 21 19 
  TopQ.A RemainingLatency 0 + 19c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(21) ORDER                              
  Cand SU(19) ORDER                              
Pick Top ORDER     
Scheduling SU(19) STRWui renamable $w2, $sp, 15, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 21 
  TopQ.A RemainingLatency 0 + 20c > CritPath 14
  Cand SU(22) ORDER                              
  Cand SU(21) ORDER                              
Pick Top ORDER     
Scheduling SU(21) STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  Ready @20c
  TopQ.A TopLatency SU(21) 14c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 22 
Pick Top ONLY1     
Scheduling SU(22) STRXui renamable $x20, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !294 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:195:19
SU(7):   renamable $x18 = LDURSWi $fp, -68, debug-location !306 :: (dereferenceable load 4 from %ir.k); fft3d.c:196:57
SU(6):   renamable $x17 = LDURXi $fp, -48, debug-location !305 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:196:55
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !299 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:196:26
SU(8):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !296; fft3d.c:195:23
SU(10):   renamable $x16 = LDRXui $sp, 1 :: (load 8 from %stack.24)
SU(2):   $w2, renamable $w1 = LDPWi $sp, 17, debug-location !300 :: (dereferenceable load 4 from %ir.log), (dereferenceable load 4 from %ir.bls); fft3d.c:196:32
SU(9):   renamable $w3 = LDURWi $fp, -36, debug-location !302 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:196:42
SU(16):   renamable $x20 = LDRXui $fp, 3, debug-location !309 :: (dereferenceable load 8 from %ir.exp2.addr); fft3d.c:196:69
SU(11):   renamable $x16 = nsw MADDXrrr renamable $x18, renamable $x16, $xzr, debug-location !305; fft3d.c:196:55
SU(12):   renamable $x16 = ADDXrs renamable $x17, renamable $x16, 4, debug-location !305; fft3d.c:196:55
SU(13):   renamable $w17 = LDURWi $fp, -32, debug-location !303 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:196:46
SU(3):   $w2 = KILL $w2, implicit-def $x2, debug-location !300; fft3d.c:196:32
SU(5):   STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
SU(4):   $x2 = SBFMXri $x2, 0, 31, debug-location !300; fft3d.c:196:32
SU(14):   renamable $x5 = ADDXrs renamable $x16, renamable $x2, 4, debug-location !305; fft3d.c:196:55
SU(17):   renamable $w2 = nsw ADDWri renamable $w8, 1, 0, debug-location !297; fft3d.c:195:29
SU(20):   renamable $w4 = nsw ADDWri renamable $w17, 1, 0, debug-location !304; fft3d.c:196:49
SU(15):   STRXui renamable $x5, $sp, 5 :: (store 8 into %stack.18)
SU(18):   STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.22), (store 4 into %stack.21)
SU(19):   STRWui renamable $w2, $sp, 15, debug-location !298 :: (store 4 into %ir.len); fft3d.c:195:17
SU(21):   STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
SU(22):   STRXui renamable $x20, $sp, 0, debug-location !310 :: (store 8 into stack); fft3d.c:196:13

Fixup kills for %bb.34
********** MI Scheduling **********
fftXYZ:%bb.35 for.inc102
  From: renamable $w8 = LDURWi $fp, -68, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
    To: B %bb.29
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !317; fft3d.c:190:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.29
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !317; fft3d.c:190:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -68, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !317 :: (dereferenceable load 4 from %ir.k); fft3d.c:190:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !317; fft3d.c:190:26
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !317 :: (store 4 into %ir.k); fft3d.c:190:26

Fixup kills for %bb.35
********** MI Scheduling **********
fftXYZ:%bb.36 for.end104
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
    To: CBZW killed renamable $w8, %bb.38, debug-location !323; fft3d.c:199:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   $x20 = ORRXrs $xzr, $x18, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.38, debug-location !323; fft3d.c:199:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x20 = ORRXrs $xzr, $x18, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !321; fft3d.c:199:9
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !321 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:199:9
SU(2):   $x20 = ORRXrs $xzr, $x18, 0

Fixup kills for %bb.36
Fixup kills for %bb.37
********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
    To: CBZW killed renamable $w16, %bb.40, debug-location !340; fft3d.c:207:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x16
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x16
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   CBZW killed renamable $w16, %bb.40, debug-location !340; fft3d.c:207:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 18, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   renamable $x16 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !338; fft3d.c:207:9
SU(1):   renamable $w16 = LDRWui renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !338 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:207:9
SU(2):   STRWui renamable $w8, $sp, 18, debug-location !337 :: (store 4 into %ir.log); fft3d.c:206:9

********** MI Scheduling **********
fftXYZ:%bb.38 if.end107
  From: renamable $w0 = LDURWi $fp, -40, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
    To: BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !336; fft3d.c:206:11
 RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -40, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w0
    SU(1): Data Latency=4 Reg=$w0
SU(1):   STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w0
SU(2):   $w8 = MOVZWi 8192, 0
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(8): Data Latency=1 Reg=$x16
SU(4):   $w17 = MOVZWi 32, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(7): Data Latency=1 Reg=$w17
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !326; fft3d.c:202:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
    SU(6): Data Latency=1 Reg=$w8
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(5): Data Latency=1 Reg=$w8
  Successors:
    SU(7): Data Latency=1 Reg=$nzcv
    SU(7): Anti Latency=0
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(6): Data Latency=1 Reg=$nzcv
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w8
    SU(4): Data Latency=1 Reg=$w17
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$w8
    SU(8): Data Latency=1 Reg=$w8
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(7): Data Latency=1 Reg=$w8
    SU(3): Data Latency=1 Reg=$x16
  Successors:
    SU(9): Anti Latency=0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !333; fft3d.c:205:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w8
  Successors:
    SU(10): Data Latency=1 Reg=$w8
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=$w8
ExitSU:   BL @ilog2, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, implicit-def $w8, debug-location !336; fft3d.c:206:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -40, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $w8 = MOVZWi 8192, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 8
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $w17 = MOVZWi 32, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(5) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !326; fft3d.c:202:26
  Ready @4c
  TopQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(6) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
  Ready @5c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 7 
  TopQ.A RemainingLatency 0 + 6c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(7) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
  Ready @6c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(8) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
  Ready @7c
  TopQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 8
  Cand SU(1) ORDER                              
  Cand SU(9) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !333; fft3d.c:205:21
  Ready @8c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 8
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) STRWui renamable $w8, $sp, 14, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10
  Ready @10c
  TopQ.A TopLatency SU(10) 8c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   renamable $w0 = LDURWi $fp, -40, debug-location !325 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:202:28
SU(2):   $w8 = MOVZWi 8192, 0
SU(4):   $w17 = MOVZWi 32, 0
SU(3):   renamable $x16 = ADRP target-flags(aarch64-page) @fftblock, debug-location !327; fft3d.c:202:14
SU(5):   renamable $w8 = SDIVWr renamable $w8, renamable $w0, debug-location !326; fft3d.c:202:26
SU(6):   dead $wzr = SUBSWri renamable $w8, 31, 0, implicit-def $nzcv, debug-location !331; fft3d.c:203:9
SU(7):   renamable $w8 = CSELWr renamable $w17, renamable $w8, 12, implicit $nzcv, debug-location !331; fft3d.c:203:9
SU(8):   STRWui renamable $w8, renamable $x16, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !99 :: (store 4 into @fftblock); fft3d.c:0
SU(9):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !333; fft3d.c:205:21
SU(1):   STRWui renamable $w0, $sp, 10 :: (store 4 into %stack.18)
SU(10):   STRWui renamable $w8, $sp, 14, debug-location !334 :: (store 4 into %ir.blkp); fft3d.c:205:10

Fixup kills for %bb.38
Fixup kills for %bb.39
********** MI Scheduling **********
fftXYZ:%bb.40 if.end116
  From: STURWi $wzr, $fp, -68, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   STURWi $wzr, $fp, -68, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $x2 = ADRP target-flags(aarch64-page) @plane
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x2
SU(3):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x2
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   renamable $x20 = nuw MADDXrrr renamable $x20, renamable $x19, $xzr
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x2 = ADRP target-flags(aarch64-page) @plane
  Ready @0c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(3) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  Ready @2c
  TopQ.A TopLatency SU(3) 1c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(4) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(4) renamable $x20 = nuw MADDXrrr renamable $x20, renamable $x19, $xzr
  Ready @3c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STURWi $wzr, $fp, -68, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.40 ***
SU(2):   $x2 = ADRP target-flags(aarch64-page) @plane
SU(1):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
SU(3):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
SU(4):   renamable $x20 = nuw MADDXrrr renamable $x20, renamable $x19, $xzr
SU(0):   STURWi $wzr, $fp, -68, debug-location !342 :: (store 4 into %ir.k); fft3d.c:209:12

Fixup kills for %bb.40
********** MI Scheduling **********
fftXYZ:%bb.41 for.cond117
  From: renamable $w8 = LDURWi $fp, -68, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
    To: Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -36, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.60, implicit $nzcv, debug-location !349; fft3d.c:209:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -36, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !349; fft3d.c:209:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.41 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !345 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:17
SU(1):   renamable $w16 = LDURWi $fp, -36, debug-location !347 :: (dereferenceable load 4 from %ir.n2.addr); fft3d.c:209:21
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !349; fft3d.c:209:5

Fixup kills for %bb.41
Fixup kills for %bb.42
********** MI Scheduling **********
fftXYZ:%bb.43 for.cond120
  From: renamable $w8 = LDRWui $sp, 17, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
    To: Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.59, implicit $nzcv, debug-location !358; fft3d.c:210:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -32, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !358; fft3d.c:210:9
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.43 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !354 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:23
SU(1):   renamable $w16 = LDURWi $fp, -32, debug-location !356 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:210:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !358; fft3d.c:210:9

Fixup kills for %bb.43
********** MI Scheduling **********
fftXYZ:%bb.44 for.body122
  From: renamable $w8 = LDRWui $sp, 17, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
    To: Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=$w16
SU(2):   renamable $w17 = LDURWi $fp, -32, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=$w17
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !362; fft3d.c:211:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w8
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !363; fft3d.c:211:34
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w8
  Successors:
    SU(6): Data Latency=1 Reg=$w8
    SU(5): Data Latency=1 Reg=$w8
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
    SU(2): Data Latency=4 Reg=$w17
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=$w8
ExitSU:   Bcc 13, %bb.46, implicit $nzcv, debug-location !369; fft3d.c:212:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 7
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
  Ready @1c
  TopQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w17 = LDURWi $fp, -32, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !362; fft3d.c:211:23
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !363; fft3d.c:211:34
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 7
  Cand SU(6) ORDER                              
  Cand SU(5) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRWui renamable $w8, $sp, 16, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.44 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !359 :: (dereferenceable load 4 from %ir.bls); fft3d.c:211:19
SU(1):   renamable $w16 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !361 :: (dereferenceable load 4 from @fftblock); fft3d.c:211:25
SU(2):   renamable $w17 = LDURWi $fp, -32, debug-location !367 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:212:23
SU(3):   $w8 = ADDWrs renamable $w8, renamable $w16, 0, debug-location !362; fft3d.c:211:23
SU(4):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !363; fft3d.c:211:34
SU(5):   $wzr = SUBSWrs renamable $w8, renamable $w17, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !369; fft3d.c:212:17
SU(6):   STRWui renamable $w8, $sp, 16, debug-location !364 :: (store 4 into %ir.ble); fft3d.c:211:17

Fixup kills for %bb.44
********** MI Scheduling **********
fftXYZ:%bb.45 if.then126
  From: renamable $w8 = LDURWi $fp, -32, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -32, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !371; fft3d.c:213:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -32, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !371; fft3d.c:213:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui renamable $w8, $sp, 16, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.45 ***
SU(0):   renamable $w8 = LDURWi $fp, -32, debug-location !370 :: (dereferenceable load 4 from %ir.n1.addr); fft3d.c:213:23
SU(1):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !371; fft3d.c:213:26
SU(2):   STRWui renamable $w8, $sp, 16, debug-location !372 :: (store 4 into %ir.ble); fft3d.c:213:21

Fixup kills for %bb.45
********** MI Scheduling **********
fftXYZ:%bb.46 if.end128
  From: renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !374 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
    To: End RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !374 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(1): Data Latency=4 Reg=$w16
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !376; fft3d.c:214:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=4 Reg=$w16
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w8
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !377; fft3d.c:214:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 15, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
SU(4):   STURWi $wzr, $fp, -60, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !374 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) STURWi $wzr, $fp, -60, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !376; fft3d.c:214:23
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !377; fft3d.c:214:29
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 15, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17
  Ready @6c
  TopQ.A TopLatency SU(3) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.46 ***
SU(0):   renamable $w8, renamable $w16 = LDPWi $sp, 16, debug-location !374 :: (dereferenceable load 4 from %ir.ble), (dereferenceable load 4 from %ir.bls); fft3d.c:214:19
SU(4):   STURWi $wzr, $fp, -60, debug-location !379 :: (store 4 into %ir.i); fft3d.c:215:20
SU(1):   $w8 = SUBWrs renamable $w8, renamable $w16, 0, debug-location !376; fft3d.c:214:23
SU(2):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !377; fft3d.c:214:29
SU(3):   STRWui renamable $w8, $sp, 15, debug-location !378 :: (store 4 into %ir.len); fft3d.c:214:17

Fixup kills for %bb.46
********** MI Scheduling **********
fftXYZ:%bb.47 for.cond131
  From: renamable $w8 = LDURWi $fp, -60, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
    To: Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.52, implicit $nzcv, debug-location !386; fft3d.c:215:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -60, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -40, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !386; fft3d.c:215:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.47 ***
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !382 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:25
SU(1):   renamable $w16 = LDURWi $fp, -40, debug-location !384 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:215:29
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !386; fft3d.c:215:13

Fixup kills for %bb.47
********** MI Scheduling **********
fftXYZ:%bb.48 for.body133
  From: renamable $w8 = LDRWui $sp, 17, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
    To: End RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=$w8
SU(1):   STURWi renamable $w8, $fp, -64, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$w8
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDRWui $sp, 17, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi renamable $w8, $fp, -64, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.48 ***
SU(0):   renamable $w8 = LDRWui $sp, 17, debug-location !387 :: (dereferenceable load 4 from %ir.bls); fft3d.c:216:26
SU(1):   STURWi renamable $w8, $fp, -64, debug-location !390 :: (store 4 into %ir.j); fft3d.c:216:24

Fixup kills for %bb.48
********** MI Scheduling **********
fftXYZ:%bb.49 for.cond134
  From: renamable $w8 = LDURWi $fp, -64, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
    To: Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui $sp, 16, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.51, implicit $nzcv, debug-location !396; fft3d.c:216:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -64, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDRWui $sp, 16, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !396; fft3d.c:216:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.49 ***
SU(0):   renamable $w8 = LDURWi $fp, -64, debug-location !392 :: (dereferenceable load 4 from %ir.j); fft3d.c:216:31
SU(1):   renamable $w16 = LDRWui $sp, 16, debug-location !394 :: (dereferenceable load 4 from %ir.ble); fft3d.c:216:36
SU(2):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !396; fft3d.c:216:17

Fixup kills for %bb.49
********** MI Scheduling **********
fftXYZ:%bb.50 for.body136
  From: renamable $x17, renamable $x8 = LDPSWi $fp, -16, debug-location !402 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
    To: B %bb.49
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $x17, renamable $x8 = LDPSWi $fp, -16, debug-location !402 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  # preds left       : 0
  # succs left       : 10
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=4 Reg=$w17
    SU(10): Data Latency=4 Reg=$w17
    SU(11): Data Latency=0 Reg=$x17
    SU(9): Data Latency=4 Reg=$x17
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$w8
    SU(12): Data Latency=0 Reg=$x8
    SU(3): Data Latency=4 Reg=$x8
    SU(14): Ord  Latency=0 Memory
SU(1):   renamable $x16 = LDURXi $fp, -48, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$x16
SU(2):   renamable $x18 = LDURSWi $fp, -68, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x18
SU(3):   renamable $x0 = nsw MADDXrrr renamable $x8, renamable $x20, $xzr, debug-location !406; fft3d.c:217:49
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 7
  Predecessors:
    SU(0): Data Latency=4 Reg=$x8
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x0
    SU(12): Anti Latency=0
SU(4):   renamable $x16 = ADDXrs renamable $x16, renamable $x0, 4, debug-location !406; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(3): Data Latency=1 Reg=$x0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x16
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x16
    SU(5): Anti Latency=0
SU(5):   renamable $w0 = LDRWui $sp, 17, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(10): Data Latency=4 Reg=$w0
SU(6):   renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !406; fft3d.c:217:49
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$x18
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x18
SU(7):   renamable $x16 = ADDXrs renamable $x16, renamable $x18, 4, debug-location !406; fft3d.c:217:49
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(4): Data Latency=1 Reg=$x16
    SU(4): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x18
  Successors:
    SU(10): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x16
    SU(8): Anti Latency=0
SU(8):   renamable $w18 = LDRWui $sp, 14, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$w18
SU(9):   renamable $q0 = LDRQroX renamable $x16, renamable $x17, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(7): Data Latency=1 Reg=$x16
    SU(0): Data Latency=4 Reg=$x17
  Successors:
    SU(13): Data Latency=4 Reg=$q0
    SU(10): Anti Latency=0
    SU(11): Anti Latency=0
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
SU(10):   $w16 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !400; fft3d.c:217:29
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
    SU(9): Anti Latency=0
    SU(7): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w17
  Successors:
    SU(12): Data Latency=1 Reg=$w16
    SU(11): Anti Latency=0
SU(11):   renamable $w17 = nsw ADDWri renamable $w17, 1, 0, implicit $x17, debug-location !410; fft3d.c:216:42
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 1
  Predecessors:
    SU(10): Anti Latency=0
    SU(9): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w17
    SU(0): Data Latency=0 Reg=$x17
  Successors:
    SU(14): Data Latency=1 Reg=$w17
SU(12):   renamable $w8 = MADDWrrr renamable $w18, renamable $w8, renamable $w16, implicit $x8, debug-location !404; fft3d.c:217:35
  # preds left       : 6
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(10): Data Latency=1 Reg=$w16
    SU(8): Data Latency=4 Reg=$w18
    SU(3): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
    SU(0): Data Latency=0 Reg=$x8
  Successors:
    SU(13): Data Latency=1 Reg=$w8
SU(13):   STRQroW renamable $q0, renamable $x2, renamable $w8, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=$w8
    SU(9): Data Latency=4 Reg=$q0
    SU(9): Ord  Latency=0 Memory
SU(14):   STURWi renamable $w17, $fp, -64, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 0
  Predecessors:
    SU(11): Data Latency=1 Reg=$w17
    SU(9): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.49
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 11
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 11
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x17, renamable $x8 = LDPSWi $fp, -16, debug-location !402 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
  Ready @0c
  TopQ.A BotLatency SU(0) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 11
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x16 = LDURXi $fp, -48, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x18 = LDURSWi $fp, -68, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
  Ready @2c
  TopQ.A BotLatency SU(2) 10c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 6 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x0 = nsw MADDXrrr renamable $x8, renamable $x20, $xzr, debug-location !406; fft3d.c:217:49
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x16 = ADDXrs renamable $x16, renamable $x0, 4, debug-location !406; fft3d.c:217:49
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 11
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $w0 = LDRWui $sp, 17, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !406; fft3d.c:217:49
  Ready @7c
  TopQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $x16 = ADDXrs renamable $x16, renamable $x18, 4, debug-location !406; fft3d.c:217:49
  Ready @8c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 11
  Cand SU(9) ORDER                              
  Cand SU(8) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $w18 = LDRWui $sp, 14, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
  Ready @9c
  TopQ.A BotLatency SU(8) 5c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x16, renamable $x17, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
  Ready @10c
  TopQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $w16 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !400; fft3d.c:217:29
  Ready @11c
  TopQ.A TopLatency SU(10) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 12 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w17 = nsw ADDWri renamable $w17, 1, 0, implicit $x17, debug-location !410; fft3d.c:216:42
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 12 
  TopQ.A RemainingLatency 0 + 13c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(12) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $w8 = MADDWrrr renamable $w18, renamable $w8, renamable $w16, implicit $x8, debug-location !404; fft3d.c:217:35
  Ready @13c
  TopQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 13
  Executed: 14c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 13 
  TopQ.A RemainingLatency 0 + 14c > CritPath 11
  Cand SU(14) ORDER                              
  Cand SU(13) ORDER                              
Pick Top ORDER     
Scheduling SU(13) STRQroW renamable $q0, renamable $x2, renamable $w8, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
  Ready @14c
  TopQ.A TopLatency SU(13) 11c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 14
  Executed: 15c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) STURWi renamable $w17, $fp, -64, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 15
  Executed: 16c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.50 ***
SU(0):   renamable $x17, renamable $x8 = LDPSWi $fp, -16, debug-location !402 :: (dereferenceable load 4 from %ir.i), (dereferenceable load 4 from %ir.j); fft3d.c:217:44
SU(1):   renamable $x16 = LDURXi $fp, -48, debug-location !406 :: (dereferenceable load 8 from %ir.x.addr); fft3d.c:217:49
SU(2):   renamable $x18 = LDURSWi $fp, -68, debug-location !408 :: (dereferenceable load 4 from %ir.k); fft3d.c:217:54
SU(3):   renamable $x0 = nsw MADDXrrr renamable $x8, renamable $x20, $xzr, debug-location !406; fft3d.c:217:49
SU(4):   renamable $x16 = ADDXrs renamable $x16, renamable $x0, 4, debug-location !406; fft3d.c:217:49
SU(5):   renamable $w0 = LDRWui $sp, 17, debug-location !399 :: (dereferenceable load 4 from %ir.bls); fft3d.c:217:31
SU(6):   renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !406; fft3d.c:217:49
SU(7):   renamable $x16 = ADDXrs renamable $x16, renamable $x18, 4, debug-location !406; fft3d.c:217:49
SU(8):   renamable $w18 = LDRWui $sp, 14, debug-location !401 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:217:37
SU(9):   renamable $q0 = LDRQroX renamable $x16, renamable $x17, 0, 1, debug-location !406 :: (load 16 from %ir.149, align 8); fft3d.c:217:49
SU(10):   $w16 = SUBWrs renamable $w17, renamable $w0, 0, debug-location !400; fft3d.c:217:29
SU(11):   renamable $w17 = nsw ADDWri renamable $w17, 1, 0, implicit $x17, debug-location !410; fft3d.c:216:42
SU(12):   renamable $w8 = MADDWrrr renamable $w18, renamable $w8, renamable $w16, implicit $x8, debug-location !404; fft3d.c:217:35
SU(13):   STRQroW renamable $q0, renamable $x2, renamable $w8, 1, 1, debug-location !406 :: (store 16 into %ir.148, align 8); fft3d.c:217:49
SU(14):   STURWi renamable $w17, $fp, -64, debug-location !410 :: (store 4 into %ir.j); fft3d.c:216:42

Fixup kills for %bb.50
********** MI Scheduling **********
fftXYZ:%bb.51 for.inc151
  From: renamable $w8 = LDURWi $fp, -60, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
    To: B %bb.47
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !414; fft3d.c:215:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -60, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.47
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -60, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !414; fft3d.c:215:34
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -60, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.51 ***
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !414 :: (dereferenceable load 4 from %ir.i); fft3d.c:215:34
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !414; fft3d.c:215:34
SU(2):   STURWi renamable $w8, $fp, -60, debug-location !414 :: (store 4 into %ir.i); fft3d.c:215:34

Fixup kills for %bb.51
********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: $x2 = ADRP target-flags(aarch64-page) @plane
    To: PCN_STACKMAP 11, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -116, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !425 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.17), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:221:20
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $x2 = ADRP target-flags(aarch64-page) @plane
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x2
SU(1):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x2
SU(2):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
ExitSU:   PCN_STACKMAP 11, 0, 0, $fp, -80, 0, $fp, -88, 0, $fp, -76, 0, $fp, 32, 0, $fp, -60, 0, $fp, -64, 0, $fp, -68, 0, $fp, -84, 0, $fp, -72, 0, $fp, -32, 0, $fp, -36, 0, $fp, -40, 0, $fp, -28, 0, $fp, -48, 0, $fp, -56, 1, 8, $fp, -96, renamable $x19, 1, 4, $fp, -108, 1, 4, $fp, -112, 1, 4, $fp, -116, 1, 4, $fp, -120, 1, 4, $fp, -124, 1, 8, $fp, -104, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !425 :: (load 8 from %stack.14.ble, align 4), (load 8 from %stack.16.blkp, align 4), (load 8 from %stack.13.bls, align 4), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.9.i, align 4), (load 8 from %stack.10.j, align 4), (load 8 from %stack.11.k, align 4), (load 8 from %stack.15.len, align 4), (load 8 from %stack.12.log, align 4), (load 8 from %stack.1.n1.addr, align 4), (load 8 from %stack.2.n2.addr, align 4), (load 8 from %stack.3.n3.addr, align 4), (load 8 from %stack.0.sign.addr, align 4), (load 8 from %stack.4.x.addr), (load 8 from %stack.5.xout.addr), (load 8 from %stack.17), (load 8 from %stack.18), (load 4 from %stack.19), (load 4 from %stack.20), (load 4 from %stack.21), (load 4 from %stack.22), (load 4 from %stack.23); fft3d.c:221:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 1
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x2 = ADRP target-flags(aarch64-page) @plane
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 1
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x6 = ADRP target-flags(aarch64-page) @fftblock
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   $x2 = ADRP target-flags(aarch64-page) @plane
SU(1):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0
SU(2):   renamable $x6 = ADRP target-flags(aarch64-page) @fftblock

********** MI Scheduling **********
fftXYZ:%bb.52 for.end153
  From: renamable $w0 = LDURWi $fp, -28, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
    To: BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $w0 = LDURWi $fp, -28, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Data Latency=4 Reg=$w0
SU(1):   renamable $w1 = LDRWui $sp, 18, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Data Latency=4 Reg=$w1
SU(2):   STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=$w1
    SU(0): Data Latency=4 Reg=$w0
SU(3):   renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !420 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(6): Data Latency=4 Reg=$w4
    SU(5): Data Latency=4 Reg=$w2
SU(4):   renamable $w3 = LDURWi $fp, -40, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(5): Data Latency=4 Reg=$w3
SU(5):   STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.21), (store 4 into %stack.22)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(4): Data Latency=4 Reg=$w3
    SU(3): Data Latency=4 Reg=$w2
SU(6):   STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(3): Data Latency=4 Reg=$w4
SU(7):   renamable $x8 = LDRXui $fp, 4, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(11): Data Latency=4 Reg=$x8
    SU(8): Data Latency=4 Reg=$x8
SU(8):   STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(7): Data Latency=4 Reg=$x8
SU(9):   $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !424; fft3d.c:220:13
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x5
SU(10):   $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !424; fft3d.c:220:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x5
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(11):   STRXui renamable $x8, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(7): Data Latency=4 Reg=$x8
ExitSU:   BL @Swarztrauber, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $x5, implicit-def $sp, debug-location !424; fft3d.c:220:13
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(10): Ord  Latency=1 Artificial
    SU(4): Ord  Latency=4 Artificial
    SU(3): Ord  Latency=4 Artificial
    SU(1): Ord  Latency=4 Artificial
    SU(0): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 4 7 9 
  TopQ.A RemainingLatency 0 + 0c > CritPath 4
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w0 = LDURWi $fp, -28, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 1 3 4 7 
  TopQ.A RemainingLatency 0 + 1c > CritPath 4
  Cand SU(9) ORDER                              
  Cand SU(1) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w1 = LDRWui $sp, 18, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
  Ready @1c
  TopQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 9 7 3 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 4
  Cand SU(9) ORDER                              
  Cand SU(7) TOP-PATH                  4 cycles 
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !420 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
  Ready @2c
  TopQ.A BotLatency SU(3) 4c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 6 
Queue TopQ.A: 9 7 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 4
  Cand SU(9) ORDER                              
  Cand SU(7) TOP-PATH                  4 cycles 
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) renamable $w3 = LDURWi $fp, -40, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
  Ready @3c
  TopQ.A BotLatency SU(4) 4c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 6 5 
Queue TopQ.A: 9 7 
  TopQ.A RemainingLatency 0 + 4c > CritPath 4
  Cand SU(9) ORDER                              
  Cand SU(7) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x8 = LDRXui $fp, 4, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
  Ready @4c
  TopQ.A BotLatency SU(7) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 6 5 11 
Queue TopQ.A: 9 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 4
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !424; fft3d.c:220:13
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 11 5 
Queue TopQ.A: 2 10 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 4
  Cand SU(2) ORDER                              
  Cand SU(10) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !424; fft3d.c:220:13
  Ready @6c
  TopQ.A TopLatency SU(10) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 11 
Queue TopQ.A: 2 6 5 
  TopQ.A RemainingLatency 0 + 7c > CritPath 4
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
  Ready @7c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 8 11 
  TopQ.A RemainingLatency 0 + 8c > CritPath 4
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.21), (store 4 into %stack.22)
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 6 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 4
  Cand SU(11) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 8 
  TopQ.A RemainingLatency 0 + 10c > CritPath 4
  Cand SU(11) ORDER                              
  Cand SU(8) ORDER                              
Pick Top ORDER     
Scheduling SU(8) STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STRXui renamable $x8, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.52 ***
SU(0):   renamable $w0 = LDURWi $fp, -28, debug-location !418 :: (dereferenceable load 4 from %ir.sign.addr); fft3d.c:220:26
SU(1):   renamable $w1 = LDRWui $sp, 18, debug-location !419 :: (dereferenceable load 4 from %ir.log); fft3d.c:220:32
SU(3):   renamable $w4, renamable $w2 = LDPWi $sp, 14, debug-location !420 :: (dereferenceable load 4 from %ir.len), (dereferenceable load 4 from %ir.blkp); fft3d.c:220:37
SU(4):   renamable $w3 = LDURWi $fp, -40, debug-location !421 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:220:42
SU(7):   renamable $x8 = LDRXui $fp, 4, debug-location !423 :: (dereferenceable load 8 from %ir.exp3.addr, align 16); fft3d.c:220:59
SU(9):   $x5 = ADRP target-flags(aarch64-page) @plane, debug-location !424; fft3d.c:220:13
SU(10):   $x5 = ADDXri $x5, target-flags(aarch64-pageoff, aarch64-nc) @plane, 0, debug-location !424; fft3d.c:220:13
SU(2):   STPWi renamable $w1, renamable $w0, $sp, 8 :: (store 4 into %stack.19), (store 4 into %stack.20)
SU(5):   STPWi renamable $w3, renamable $w2, $sp, 6 :: (store 4 into %stack.21), (store 4 into %stack.22)
SU(6):   STRWui renamable $w4, $sp, 5 :: (store 4 into %stack.23)
SU(8):   STRXui renamable $x8, $sp, 5 :: (store 8 into %stack.18)
SU(11):   STRXui renamable $x8, $sp, 0, debug-location !424 :: (store 8 into stack); fft3d.c:220:13

Fixup kills for %bb.52
********** MI Scheduling **********
fftXYZ:%bb.53 for.cond154
  From: renamable $w8 = LDURWi $fp, -40, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
    To: Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDURWi $fp, -60, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w16
SU(2):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !431; fft3d.c:221:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   $wzr = SUBSWrs renamable $w16, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Data Latency=4 Reg=$w16
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.58, implicit $nzcv, debug-location !433; fft3d.c:221:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8 = LDURWi $fp, -40, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDURWi $fp, -60, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !431; fft3d.c:221:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w16, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !433; fft3d.c:221:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.53 ***
SU(0):   renamable $w8 = LDURWi $fp, -40, debug-location !430 :: (dereferenceable load 4 from %ir.n3.addr); fft3d.c:221:30
SU(1):   renamable $w16 = LDURWi $fp, -60, debug-location !428 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:25
SU(2):   renamable $w8 = SUBWri renamable $w8, 1, 0, debug-location !431; fft3d.c:221:33
SU(3):   $wzr = SUBSWrs renamable $w16, renamable $w8, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !433; fft3d.c:221:13

Fixup kills for %bb.53
Fixup kills for %bb.54
********** MI Scheduling **********
fftXYZ:%bb.55 for.cond158
  From: STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !435) :: (store 4 into %ir.j); fft3d.c:0
    To: Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !435) :: (store 4 into %ir.j); fft3d.c:0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Anti Latency=0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !439; fft3d.c:222:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(2):   renamable $w16 = LDRWui $sp, 16, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w16
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=$w16
    SU(1): Data Latency=1 Reg=$w8
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.57, implicit $nzcv, debug-location !443; fft3d.c:222:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w16 = LDRWui $sp, 16, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !435) :: (store 4 into %ir.j); fft3d.c:0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !439; fft3d.c:222:31
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !443; fft3d.c:222:17
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.55 ***
SU(2):   renamable $w16 = LDRWui $sp, 16, debug-location !441 :: (dereferenceable load 4 from %ir.ble); fft3d.c:222:36
SU(0):   STURWi renamable $w8, $fp, -64, debug-location !DILocation(line: 0, scope: !435) :: (store 4 into %ir.j); fft3d.c:0
SU(1):   $w8 = ORRWrs $wzr, renamable $w8, 0, debug-location !439; fft3d.c:222:31
SU(3):   $wzr = SUBSWrs renamable $w8, renamable $w16, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !443; fft3d.c:222:17

Fixup kills for %bb.55
********** MI Scheduling **********
fftXYZ:%bb.56 for.body160
  From: renamable $w8, renamable $w16 = LDPWi $fp, -16, debug-location !446 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
    To: B %bb.55
 RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8, renamable $w16 = LDPWi $fp, -16, debug-location !446 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=4 Reg=$w8
    SU(4): Data Latency=4 Reg=$w8
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w16
    SU(5): Data Latency=4 Reg=$w16
    SU(12): Ord  Latency=0 Memory
SU(1):   renamable $w17 = LDRWui $sp, 17, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(4): Out  Latency=1
    SU(8): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w17
    SU(12): Ord  Latency=0 Memory
SU(2):   renamable $w18 = LDRWui $sp, 14, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w18
    SU(12): Ord  Latency=0 Memory
SU(3):   renamable $w1 = LDURWi $fp, -68, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(10): Data Latency=4 Reg=$w1
    SU(12): Ord  Latency=0 Memory
SU(4):   $w17 = SUBWrs renamable $w8, renamable $w17, 0, debug-location !458; fft3d.c:224:33
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w17
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(5): Out  Latency=1
    SU(8): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w17
    SU(11): Anti Latency=0
    SU(8): Anti Latency=0
SU(5):   renamable $w17 = MADDWrrr renamable $w18, renamable $w16, renamable $w17, debug-location !462; fft3d.c:224:39
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w17
    SU(2): Data Latency=4 Reg=$w18
    SU(0): Data Latency=4 Reg=$w16
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w17
    SU(6): Anti Latency=0
    SU(10): Anti Latency=0
    SU(8): Anti Latency=0
SU(6):   renamable $w18, renamable $w0 = LDPWi $fp, -9, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr), (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:31
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(5): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(10): Data Latency=4 Reg=$w18
    SU(9): Out  Latency=1
    SU(9): Data Latency=4 Reg=$w0
    SU(12): Ord  Latency=0 Memory
SU(7):   renamable $q0 = LDRQroW renamable $x2, renamable $w17, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(5): Data Latency=1 Reg=$w17
  Successors:
    SU(12): Data Latency=4 Reg=$q0
    SU(8): Anti Latency=0
    SU(12): Ord  Latency=0 Memory
SU(8):   renamable $x17 = LDURXi $fp, -56, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  # preds left       : 6
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 9
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(12): Data Latency=4 Reg=$x17
    SU(12): Ord  Latency=0 Memory
SU(9):   renamable $w0 = nsw ADDWri renamable $w0, 1, 0, debug-location !448; fft3d.c:223:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 7
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w0
  Successors:
    SU(11): Data Latency=1 Reg=$w0
SU(10):   renamable $w16 = MADDWrrr renamable $w18, renamable $w16, renamable $w1, debug-location !453; fft3d.c:223:44
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 7
  Predecessors:
    SU(6): Data Latency=4 Reg=$w18
    SU(5): Anti Latency=0
    SU(3): Data Latency=4 Reg=$w1
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w16
  Successors:
    SU(11): Data Latency=1 Reg=$w16
SU(11):   renamable $w8 = MADDWrrr renamable $w0, renamable $w16, renamable $w8, debug-location !455; fft3d.c:223:28
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(10): Data Latency=1 Reg=$w16
    SU(9): Data Latency=1 Reg=$w0
    SU(4): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(13): Out  Latency=1
    SU(12): Data Latency=1 Reg=$w8
SU(12):   STRQroW renamable $q0, renamable $x17, renamable $w8, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  # preds left       : 10
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(11): Data Latency=1 Reg=$w8
    SU(8): Data Latency=4 Reg=$x17
    SU(8): Ord  Latency=0 Memory
    SU(7): Data Latency=4 Reg=$q0
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(13): Anti Latency=0
    SU(13): Ord  Latency=1 Memory
SU(13):   renamable $w8 = LDURWi $fp, -64, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 4
  Predecessors:
    SU(12): Anti Latency=0
    SU(12): Ord  Latency=1 Memory
    SU(11): Out  Latency=1
  Successors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$w8
SU(14):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !464; fft3d.c:222:42
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=4 Reg=$w8
ExitSU:   B %bb.55
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w8, renamable $w16 = LDPWi $fp, -16, debug-location !446 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w17 = LDRWui $sp, 17, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 16
  Cand SU(3) ORDER                              
  Cand SU(2) TOP-PATH                  15 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $w18 = LDRWui $sp, 14, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $w1 = LDURWi $fp, -68, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w17 = SUBWrs renamable $w8, renamable $w17, 0, debug-location !458; fft3d.c:224:33
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w17 = MADDWrrr renamable $w18, renamable $w16, renamable $w17, debug-location !462; fft3d.c:224:39
  Ready @6c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 6 
  TopQ.A RemainingLatency 0 + 7c > CritPath 16
  Cand SU(7) ORDER                              
  Cand SU(6) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $w18, renamable $w0 = LDPWi $fp, -9, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr), (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:31
  Ready @7c
  TopQ.A BotLatency SU(6) 11c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 9 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $q0 = LDRQroW renamable $x2, renamable $w17, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
  Ready @8c
  TopQ.A TopLatency SU(7) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 9 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $x17 = LDURXi $fp, -56, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 11 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 11c > CritPath 16
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $w0 = nsw ADDWri renamable $w0, 1, 0, debug-location !448; fft3d.c:223:34
  Ready @11c
  TopQ.A TopLatency SU(9) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $w16 = MADDWrrr renamable $w18, renamable $w16, renamable $w1, debug-location !453; fft3d.c:223:44
  Ready @12c
  TopQ.A BotLatency SU(10) 7c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 11
  Executed: 13c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) renamable $w8 = MADDWrrr renamable $w0, renamable $w16, renamable $w8, debug-location !455; fft3d.c:223:28
  Ready @13c
  TopQ.A TopLatency SU(11) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 12
  Executed: 14c
  Critical: 12c, 12 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) STRQroW renamable $q0, renamable $x17, renamable $w8, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
  Ready @14c
  TopQ.A TopLatency SU(12) 11c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 13
  Executed: 15c
  Critical: 13c, 13 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) renamable $w8 = LDURWi $fp, -64, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
  Ready @15c
  TopQ.A TopLatency SU(13) 12c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 14
  Executed: 16c
  Critical: 14c, 14 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 19 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !464; fft3d.c:222:42
  Ready @19c
  TopQ.A TopLatency SU(14) 16c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 15
  Executed: 20c
  Critical: 15c, 15 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.56 ***
SU(0):   renamable $w8, renamable $w16 = LDPWi $fp, -16, debug-location !446 :: (dereferenceable load 4 from %ir.j), (dereferenceable load 4 from %ir.i); fft3d.c:223:26
SU(1):   renamable $w17 = LDRWui $sp, 17, debug-location !457 :: (dereferenceable load 4 from %ir.bls); fft3d.c:224:35
SU(2):   renamable $w18 = LDRWui $sp, 14, debug-location !459 :: (dereferenceable load 4 from %ir.blkp); fft3d.c:224:41
SU(3):   renamable $w1 = LDURWi $fp, -68, debug-location !449 :: (dereferenceable load 4 from %ir.k); fft3d.c:223:42
SU(4):   $w17 = SUBWrs renamable $w8, renamable $w17, 0, debug-location !458; fft3d.c:224:33
SU(5):   renamable $w17 = MADDWrrr renamable $w18, renamable $w16, renamable $w17, debug-location !462; fft3d.c:224:39
SU(6):   renamable $w18, renamable $w0 = LDPWi $fp, -9, debug-location !447 :: (dereferenceable load 4 from %ir.n1.addr), (dereferenceable load 4 from %ir.n2.addr); fft3d.c:223:31
SU(7):   renamable $q0 = LDRQroW renamable $x2, renamable $w17, 1, 1, debug-location !463 :: (load 16 from %ir.174, align 8); fft3d.c:224:25
SU(8):   renamable $x17 = LDURXi $fp, -56, debug-location !444 :: (dereferenceable load 8 from %ir.xout.addr); fft3d.c:223:21
SU(9):   renamable $w0 = nsw ADDWri renamable $w0, 1, 0, debug-location !448; fft3d.c:223:34
SU(10):   renamable $w16 = MADDWrrr renamable $w18, renamable $w16, renamable $w1, debug-location !453; fft3d.c:223:44
SU(11):   renamable $w8 = MADDWrrr renamable $w0, renamable $w16, renamable $w8, debug-location !455; fft3d.c:223:28
SU(12):   STRQroW renamable $q0, renamable $x17, renamable $w8, 1, 1, debug-location !463 :: (store 16 into %ir.173, align 8); fft3d.c:224:25
SU(13):   renamable $w8 = LDURWi $fp, -64, debug-location !464 :: (dereferenceable load 4 from %ir.j); fft3d.c:222:42
SU(14):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !464; fft3d.c:222:42

Fixup kills for %bb.56
********** MI Scheduling **********
fftXYZ:%bb.57 for.inc176
  From: renamable $w8 = LDURWi $fp, -60, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
    To: B %bb.53
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !468; fft3d.c:221:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -60, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.53
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -60, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !468; fft3d.c:221:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -60, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.57 ***
SU(0):   renamable $w8 = LDURWi $fp, -60, debug-location !468 :: (dereferenceable load 4 from %ir.i); fft3d.c:221:39
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !468; fft3d.c:221:39
SU(2):   STURWi renamable $w8, $fp, -60, debug-location !468 :: (store 4 into %ir.i); fft3d.c:221:39

Fixup kills for %bb.57
********** MI Scheduling **********
fftXYZ:%bb.58 for.inc179
  From: renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
    To: B %bb.43
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w8
SU(1):   renamable $w16 = LDRWui $sp, 17, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w16
    SU(3): Ord  Latency=0 Memory
SU(2):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !473; fft3d.c:210:37
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w16
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(3): Data Latency=1 Reg=$w8
SU(3):   STRWui renamable $w8, $sp, 17, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w8
    SU(1): Ord  Latency=0 Memory
ExitSU:   B %bb.43
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w16 = LDRWui $sp, 17, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !473; fft3d.c:210:37
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w8, $sp, 17, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37
  Ready @6c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.58 ***
SU(0):   renamable $w8 = LDRWui renamable $x6, target-flags(aarch64-pageoff, aarch64-nc) @fftblock, debug-location !472 :: (dereferenceable load 4 from @fftblock); fft3d.c:210:40
SU(1):   renamable $w16 = LDRWui $sp, 17, debug-location !473 :: (dereferenceable load 4 from %ir.bls); fft3d.c:210:37
SU(2):   $w8 = ADDWrs renamable $w16, renamable $w8, 0, debug-location !473; fft3d.c:210:37
SU(3):   STRWui renamable $w8, $sp, 17, debug-location !473 :: (store 4 into %ir.bls); fft3d.c:210:37

Fixup kills for %bb.58
********** MI Scheduling **********
fftXYZ:%bb.59 for.inc182
  From: renamable $w8 = LDURWi $fp, -68, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
    To: B %bb.41
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w8
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !477; fft3d.c:209:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w8
  Successors:
    SU(2): Data Latency=1 Reg=$w8
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w8
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.41
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w8 = LDURWi $fp, -68, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !477; fft3d.c:209:26
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w8, $fp, -68, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.59 ***
SU(0):   renamable $w8 = LDURWi $fp, -68, debug-location !477 :: (dereferenceable load 4 from %ir.k); fft3d.c:209:26
SU(1):   renamable $w8 = nsw ADDWri renamable $w8, 1, 0, debug-location !477; fft3d.c:209:26
SU(2):   STURWi renamable $w8, $fp, -68, debug-location !477 :: (store 4 into %ir.k); fft3d.c:209:26

Fixup kills for %bb.59
********** MI Scheduling **********
fftXYZ:%bb.60 for.end184
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
    To: CBZW killed renamable $w8, %bb.62, debug-location !483; fft3d.c:229:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.62, debug-location !483; fft3d.c:229:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.60 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !481; fft3d.c:229:9
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !481 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:229:9

Fixup kills for %bb.60
Fixup kills for %bb.61
********** MI Scheduling **********
fftXYZ:%bb.62 if.end187
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
    To: CBZW killed renamable $w8, %bb.64, debug-location !487; fft3d.c:231:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.64, debug-location !487; fft3d.c:231:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.62 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !485; fft3d.c:231:9
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !485 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:231:9

Fixup kills for %bb.62
Fixup kills for %bb.63
********** MI Scheduling **********
fftXYZ:%bb.64 if.end190
  From: $fp, $lr = frame-destroy LDPXi $sp, 18, debug-location !489 :: (load 8 from %stack.42), (load 8 from %stack.41); fft3d.c:233:1
    To: $sp = frame-destroy ADDXri $sp, 160, 0, debug-location !489; fft3d.c:233:1
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 18, debug-location !489 :: (load 8 from %stack.42), (load 8 from %stack.41); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 16, debug-location !489 :: (load 8 from %stack.44), (load 8 from %stack.43); fft3d.c:233:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 160, 0, debug-location !489; fft3d.c:233:1
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $fp, $lr = frame-destroy LDPXi $sp, 18, debug-location !489 :: (load 8 from %stack.42), (load 8 from %stack.41); fft3d.c:233:1
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $x20, $x19 = frame-destroy LDPXi $sp, 16, debug-location !489 :: (load 8 from %stack.44), (load 8 from %stack.43); fft3d.c:233:1
  Ready @1c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.64 ***
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 18, debug-location !489 :: (load 8 from %stack.42), (load 8 from %stack.41); fft3d.c:233:1
SU(1):   $x20, $x19 = frame-destroy LDPXi $sp, 16, debug-location !489 :: (load 8 from %stack.44), (load 8 from %stack.43); fft3d.c:233:1

Fixup kills for %bb.64
Before MISched:
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: dead
  fi#7: size=8, align=8, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=16, align=16, at location [SP]
  fi#12: size=16, align=16, at location [SP]
  fi#13: size=16, align=16, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
  fi#17: size=4, align=4, at location [SP]
  fi#18: size=4, align=4, at location [SP]
  fi#19: size=4, align=4, at location [SP]
  fi#20: size=4, align=4, at location [SP]
  fi#21: size=4, align=4, at location [SP]
  fi#22: size=4, align=4, at location [SP]
  fi#23: size=4, align=4, at location [SP]
  fi#24: size=16, align=8, at location [SP]
  fi#25: size=16, align=8, at location [SP]
  fi#26: size=16, align=8, at location [SP]
  fi#27: size=16, align=8, at location [SP]
  fi#28: size=16, align=8, at location [SP]
  fi#29: size=16, align=8, at location [SP]
  fi#30: size=16, align=8, at location [SP]
  fi#31: size=16, align=8, at location [SP]
  fi#32: size=16, align=8, at location [SP]
  fi#33: size=16, align=8, at location [SP]
  fi#34: size=16, align=8, at location [SP]
  fi#35: size=16, align=8, at location [SP]
  fi#36: size=16, align=8, at location [SP]
  fi#37: size=16, align=8, at location [SP]
Function Live Ins: $w0 in %5, $w1 in %6, $w2 in %7, $w3 in %8, $w4 in %9, $x5 in %10

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $w4, $x5
  %10:gpr64 = COPY $x5
  %9:gpr32 = COPY $w4
  %8:gpr32 = COPY $w3
  %7:gpr32 = COPY $w2
  %6:gpr32 = COPY $w1
  %5:gpr32 = COPY $w0
  STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
  STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
  STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
  STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
  STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
  STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
  undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
  STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15
  %12:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
  %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  CBZW %13:gpr32, %bb.2, debug-location !550; fft3d.c:66:9
  B %bb.1, debug-location !550; fft3d.c:66:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !551; fft3d.c:67:9
  $w0 = MOVi32imm 4, debug-location !551; fft3d.c:67:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !551; fft3d.c:67:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !551; fft3d.c:67:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !551; fft3d.c:67:9
  PCN_STACKMAP 0, 0, 0, %stack.24..compoundliteral, 0, 0, %stack.31..compoundliteral155, 0, 0, %stack.32..compoundliteral190, 0, 0, %stack.33..compoundliteral204, 0, 0, %stack.34..compoundliteral207, 0, 0, %stack.35..compoundliteral219, 0, 0, %stack.36..compoundliteral233, 0, 0, %stack.37..compoundliteral245, 0, 0, %stack.25..compoundliteral43, 0, 0, %stack.26..compoundliteral57, 0, 0, %stack.27..compoundliteral60, 0, 0, %stack.28..compoundliteral72, 0, 0, %stack.29..compoundliteral86, 0, 0, %stack.30..compoundliteral98, 0, 0, %fixed-stack.0, 0, 0, %stack.8.i, 0, 0, %stack.20.i11, 0, 0, %stack.21.i12, 0, 0, %stack.22.i21, 0, 0, %stack.23.i22, 0, 0, %stack.0.is.addr, 0, 0, %stack.9.j, 0, 0, %stack.14.k, 0, 0, %stack.19.ku, 0, 0, %stack.10.l, 0, 0, %stack.16.li, 0, 0, %stack.17.lj, 0, 0, %stack.18.lk, 0, 0, %stack.1.m.addr, 0, 0, %stack.3.n.addr, 0, 0, %stack.15.n1, 0, 0, %stack.11.u1, 0, 0, %stack.2.vlen.addr, 0, 0, %stack.7.x, 0, 0, %stack.12.x11, 0, 0, %stack.13.x21, 0, %0:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !551 :: (load 8 from %stack.24..compoundliteral), (load 8 from %stack.31..compoundliteral155), (load 8 from %stack.32..compoundliteral190), (load 8 from %stack.33..compoundliteral204), (load 8 from %stack.34..compoundliteral207), (load 8 from %stack.35..compoundliteral219), (load 8 from %stack.36..compoundliteral233), (load 8 from %stack.37..compoundliteral245), (load 8 from %stack.25..compoundliteral43), (load 8 from %stack.26..compoundliteral57), (load 8 from %stack.27..compoundliteral60), (load 8 from %stack.28..compoundliteral72), (load 8 from %stack.29..compoundliteral86), (load 8 from %stack.30..compoundliteral98), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.8.i, align 4), (load 8 from %stack.20.i11, align 4), (load 8 from %stack.21.i12, align 4), (load 8 from %stack.22.i21, align 4), (load 8 from %stack.23.i22, align 4), (load 8 from %stack.0.is.addr, align 4), (load 8 from %stack.9.j, align 4), (load 8 from %stack.14.k, align 4), (load 8 from %stack.19.ku, align 4), (load 8 from %stack.10.l, align 4), (load 8 from %stack.16.li, align 4), (load 8 from %stack.17.lj, align 4), (load 8 from %stack.18.lk, align 4), (load 8 from %stack.1.m.addr, align 4), (load 8 from %stack.3.n.addr, align 4), (load 8 from %stack.15.n1, align 4), (load 8 from %stack.11.u1, align 16), (load 8 from %stack.2.vlen.addr, align 4), (load 8 from %stack.7.x), (load 8 from %stack.12.x11, align 16), (load 8 from %stack.13.x21, align 16); fft3d.c:67:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !551; fft3d.c:67:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
  %15:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
  %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit killed $nzcv, debug-location !553; fft3d.c:71:12
  %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
  STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
  %19:gpr32 = MOVi32imm 1
  STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
  undef %21.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
  STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
  STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
  %233:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
  undef %170.sub_32:gpr64 = MOVi32imm 528

bb.3.for.cond:
; predecessors: %bb.2, %bb.35
  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

  %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  %25:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  dead $wzr = SUBSWrr %24:gpr32, %25:gpr32, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  Bcc 12, %bb.36, implicit killed $nzcv, debug-location !566; fft3d.c:74:5
  B %bb.4, debug-location !566; fft3d.c:74:5

bb.4.for.body:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
  %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
  STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
  %32:gpr32common = LDRWui %stack.16.li, 0, debug-location !573 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
  %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit killed $nzcv, debug-location !574; fft3d.c:77:17
  %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
  STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
  STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
  STRWui $wzr, %stack.8.i, 0, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16

bb.5.for.cond2:
; predecessors: %bb.4, %bb.15
  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

  %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  %38:gpr32common = LDRWui %stack.16.li, 0, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  %39:gpr32common = SUBWri %38:gpr32common, 1, 0, debug-location !584; fft3d.c:80:29
  dead $wzr = SUBSWrr %37:gpr32, %39:gpr32common, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  Bcc 12, %bb.16, implicit killed $nzcv, debug-location !586; fft3d.c:80:9
  B %bb.6, debug-location !586; fft3d.c:80:9

bb.6.for.body4:
; predecessors: %bb.5
  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

  %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  %178:gpr32 = LDRWui %stack.18.lk, 0, debug-location !589 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
  STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
  %180:gpr32 = LDRWui %stack.15.n1, 0, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
  STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
  %182:gpr32 = LDRWui %stack.17.lj, 0, debug-location !597 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
  %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
  STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
  %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
  STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
  %185:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
  Bcc 11, %bb.8, implicit killed $nzcv, debug-location !607; fft3d.c:86:17
  B %bb.7, debug-location !607; fft3d.c:86:17

bb.7.if.then9:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  %198:gpr32 = LDRWui %stack.19.ku, 0, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  %199:gpr32 = LDRWui %stack.8.i, 0, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  %200:gpr32 = nsw ADDWrr %198:gpr32, %199:gpr32, debug-location !612; fft3d.c:87:34
  %269:gpr64sp = ADDXrx %197:gpr64common, %200:gpr32, 52, debug-location !608; fft3d.c:87:22
  B %bb.9, debug-location !613; fft3d.c:88:13

bb.8.if.else:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)

  %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  %189:gpr32 = LDRWui %stack.19.ku, 0, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  %190:gpr32 = LDRWui %stack.8.i, 0, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
  %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
  %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
  STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
  %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
  %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
  STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
  %269:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

bb.9.if.end20:
; predecessors: %bb.8, %bb.7
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  STRQui %202:fpr128, %268:gpr64sp, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0
  STRWui $wzr, %stack.14.k, 0, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20

bb.10.for.cond21:
; predecessors: %bb.9, %bb.14
  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

  %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  %205:gpr32common = LDRWui %stack.18.lk, 0, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  %206:gpr32common = SUBWri %205:gpr32common, 1, 0, debug-location !623; fft3d.c:92:33
  dead $wzr = SUBSWrr %204:gpr32, %206:gpr32common, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  Bcc 12, %bb.15, implicit killed $nzcv, debug-location !625; fft3d.c:92:13
  B %bb.11, debug-location !625; fft3d.c:92:13

bb.11.for.body24:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !626 :: (store 4 into %ir.j); fft3d.c:93:24

bb.12.for.cond25:
; predecessors: %bb.11, %bb.13
  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

  %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  %212:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  dead $wzr = SUBSWrr %211:gpr32, %212:gpr32, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  Bcc 10, %bb.14, implicit killed $nzcv, debug-location !634; fft3d.c:93:17
  B %bb.13, debug-location !634; fft3d.c:93:17

bb.13.for.body27:
; predecessors: %bb.12
  successors: %bb.12(0x80000000); %bb.12(100.00%)

  %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  %217:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !637 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  %218:gpr64 = LDRSWui %stack.14.k, 0, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
  %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
  %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
  %223:gpr64 = LDRSWui %stack.9.j, 0, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
  %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
  %226:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !642 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
  %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
  %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
  %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
  %231:gpr32 = LDRWui %stack.22.i21, 0, debug-location !646 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
  %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
  %236:fpr64 = LDRDui %stack.12.x11, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  %237:fpr64 = LDRDui %stack.13.x21, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
  STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
  %239:fpr64 = LDRDui %stack.12.x11, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  %240:fpr64 = LDRDui %stack.13.x21, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
  STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
  %242:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  %243:gpr32 = LDRWui %stack.23.i22, 0, debug-location !652 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  %244:gpr32 = LDRWui %stack.14.k, 0, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
  %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
  %247:gpr64 = LDRSWui %stack.9.j, 0, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  %248:fpr64 = LDRDui %stack.11.u1, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  %249:fpr64 = LDRDui %stack.12.x11, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  %250:fpr64 = LDRDui %stack.13.x21, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
  %252:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  %253:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
  %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
  %256:fpr64 = LDRDui %stack.11.u1, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
  STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
  STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
  %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
  %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
  STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
  STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
  %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
  %260:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  %261:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
  %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
  %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
  STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
  %265:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  %266:gpr32common = LDRWui %stack.9.j, 0, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
  STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
  B %bb.12, debug-location !659; fft3d.c:93:17

bb.14.for.inc110:
; predecessors: %bb.12
  successors: %bb.10(0x80000000); %bb.10(100.00%)

  %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  %215:gpr32common = nsw ADDWri %214:gpr32common, 1, 0, debug-location !662; fft3d.c:92:39
  STRWui %215:gpr32common, %stack.14.k, 0, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  B %bb.10, debug-location !663; fft3d.c:92:13

bb.15.for.inc113:
; predecessors: %bb.10
  successors: %bb.5(0x80000000); %bb.5(100.00%)

  %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  %209:gpr32common = nsw ADDWri %208:gpr32common, 1, 0, debug-location !666; fft3d.c:80:35
  STRWui %209:gpr32common, %stack.8.i, 0, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  B %bb.5, debug-location !667; fft3d.c:80:9

bb.16.for.end115:
; predecessors: %bb.5
  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

  %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  %42:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  dead $wzr = SUBSWrr %41:gpr32, %42:gpr32, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  Bcc 1, %bb.23, implicit killed $nzcv, debug-location !674; fft3d.c:102:13
  B %bb.17, debug-location !674; fft3d.c:102:13

bb.17.if.then117:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  STRWui $wzr, %stack.14.k, 0, debug-location !675 :: (store 4 into %ir.k); fft3d.c:103:20

bb.18.for.cond118:
; predecessors: %bb.17, %bb.22
  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

  %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  %153:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  dead $wzr = SUBSWrr %152:gpr32, %153:gpr32, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  Bcc 10, %bb.35, implicit killed $nzcv, debug-location !683; fft3d.c:103:13
  B %bb.19, debug-location !683; fft3d.c:103:13

bb.19.for.body120:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !684 :: (store 4 into %ir.j); fft3d.c:104:24

bb.20.for.cond121:
; predecessors: %bb.19, %bb.21
  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

  %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  %159:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  dead $wzr = SUBSWrr %158:gpr32, %159:gpr32, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  Bcc 10, %bb.22, implicit killed $nzcv, debug-location !692; fft3d.c:104:17
  B %bb.21, debug-location !692; fft3d.c:104:17

bb.21.for.body123:
; predecessors: %bb.20
  successors: %bb.20(0x80000000); %bb.20(100.00%)

  %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  %164:gpr64 = LDRSWui %stack.14.k, 0, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
  %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
  %167:gpr64 = LDRSWui %stack.9.j, 0, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
  %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
  %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  %175:gpr32common = LDRWui %stack.9.j, 0, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
  STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
  B %bb.20, debug-location !701; fft3d.c:104:17

bb.22.for.inc135:
; predecessors: %bb.20
  successors: %bb.18(0x80000000); %bb.18(100.00%)

  %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  %162:gpr32common = nsw ADDWri %161:gpr32common, 1, 0, debug-location !704; fft3d.c:103:33
  STRWui %162:gpr32common, %stack.14.k, 0, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  B %bb.18, debug-location !705; fft3d.c:103:13

bb.23.if.else138:
; predecessors: %bb.16
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
  %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
  STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
  %46:gpr32common = LDRWui %stack.16.li, 0, debug-location !714 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
  %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit killed $nzcv, debug-location !715; fft3d.c:112:21
  %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
  STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
  STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
  STRWui $wzr, %stack.8.i, 0, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20

bb.24.for.cond141:
; predecessors: %bb.23, %bb.34
  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

  %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  %52:gpr32common = LDRWui %stack.16.li, 0, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  %53:gpr32common = SUBWri %52:gpr32common, 1, 0, debug-location !725; fft3d.c:115:33
  dead $wzr = SUBSWrr %51:gpr32, %53:gpr32common, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  Bcc 12, %bb.35, implicit killed $nzcv, debug-location !727; fft3d.c:115:13
  B %bb.25, debug-location !727; fft3d.c:115:13

bb.25.for.body144:
; predecessors: %bb.24
  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

  %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  %56:gpr32 = LDRWui %stack.18.lk, 0, debug-location !730 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
  STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
  %58:gpr32 = LDRWui %stack.15.n1, 0, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
  STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
  %60:gpr32 = LDRWui %stack.17.lj, 0, debug-location !738 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
  %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
  STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
  %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
  STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
  %63:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
  Bcc 11, %bb.27, implicit killed $nzcv, debug-location !748; fft3d.c:121:21
  B %bb.26, debug-location !748; fft3d.c:121:21

bb.26.if.then150:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  %76:gpr32 = LDRWui %stack.19.ku, 0, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  %77:gpr32 = LDRWui %stack.8.i, 0, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  %78:gpr32 = nsw ADDWrr %76:gpr32, %77:gpr32, debug-location !753; fft3d.c:122:38
  %270:gpr64sp = ADDXrx %75:gpr64common, %78:gpr32, 52, debug-location !749; fft3d.c:122:26
  B %bb.28, debug-location !754; fft3d.c:123:17

bb.27.if.else154:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)

  %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  %67:gpr32 = LDRWui %stack.19.ku, 0, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  %68:gpr32 = LDRWui %stack.8.i, 0, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
  %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
  %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
  STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
  %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
  %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
  STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
  %270:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

bb.28.if.end167:
; predecessors: %bb.27, %bb.26
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  STRQui %80:fpr128, %268:gpr64sp, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0
  STRWui $wzr, %stack.14.k, 0, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24

bb.29.for.cond168:
; predecessors: %bb.28, %bb.33
  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

  %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  %83:gpr32common = LDRWui %stack.18.lk, 0, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  %84:gpr32common = SUBWri %83:gpr32common, 1, 0, debug-location !764; fft3d.c:127:37
  dead $wzr = SUBSWrr %82:gpr32, %84:gpr32common, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  Bcc 12, %bb.34, implicit killed $nzcv, debug-location !766; fft3d.c:127:17
  B %bb.30, debug-location !766; fft3d.c:127:17

bb.30.for.body171:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  STRWui $wzr, %stack.9.j, 0, debug-location !767 :: (store 4 into %ir.j); fft3d.c:128:28

bb.31.for.cond172:
; predecessors: %bb.30, %bb.32
  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

  %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  %90:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  dead $wzr = SUBSWrr %89:gpr32, %90:gpr32, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  Bcc 10, %bb.33, implicit killed $nzcv, debug-location !775; fft3d.c:128:21
  B %bb.32, debug-location !775; fft3d.c:128:21

bb.32.for.body174:
; predecessors: %bb.31
  successors: %bb.31(0x80000000); %bb.31(100.00%)

  %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  %95:gpr32 = LDRWui %stack.14.k, 0, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
  %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
  %100:gpr64 = LDRSWui %stack.9.j, 0, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
  %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
  %103:gpr32 = LDRWui %stack.21.i12, 0, debug-location !782 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
  %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
  %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
  %107:gpr64 = LDRXui %stack.7.x, 0, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  %108:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  %109:gpr64 = LDRSWui %stack.14.k, 0, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
  %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
  %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
  %113:fpr64 = LDRDui %stack.12.x11, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  %114:fpr64 = LDRDui %stack.13.x21, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
  STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
  %116:fpr64 = LDRDui %stack.12.x11, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  %117:fpr64 = LDRDui %stack.13.x21, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
  STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
  %119:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  %120:gpr64 = LDRXui %stack.7.x, 0, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  %121:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  %122:gpr64 = LDRSWui %stack.14.k, 0, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
  %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
  %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
  %126:gpr64 = LDRSWui %stack.9.j, 0, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  %127:fpr64 = LDRDui %stack.11.u1, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  %128:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  %129:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
  %131:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  %132:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
  %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
  %135:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
  STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
  %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
  %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
  STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
  STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
  %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
  %139:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  %140:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  %141:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
  %143:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  %144:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
  %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
  %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
  STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
  %148:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  %149:gpr32common = LDRWui %stack.9.j, 0, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
  STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
  B %bb.31, debug-location !800; fft3d.c:128:21

bb.33.for.inc260:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)

  %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  %93:gpr32common = nsw ADDWri %92:gpr32common, 1, 0, debug-location !803; fft3d.c:127:43
  STRWui %93:gpr32common, %stack.14.k, 0, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  B %bb.29, debug-location !804; fft3d.c:127:17

bb.34.for.inc263:
; predecessors: %bb.29
  successors: %bb.24(0x80000000); %bb.24(100.00%)

  %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  %87:gpr32common = nsw ADDWri %86:gpr32common, 1, 0, debug-location !807; fft3d.c:115:39
  STRWui %87:gpr32common, %stack.8.i, 0, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  B %bb.24, debug-location !808; fft3d.c:115:13

bb.35.for.inc267:
; predecessors: %bb.24, %bb.18
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  %156:gpr32common = nsw ADDWri %155:gpr32common, 2, 0, debug-location !811; fft3d.c:74:27
  STRWui %156:gpr32common, %stack.10.l, 0, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  B %bb.3, debug-location !812; fft3d.c:74:5

bb.36.for.end269:
; predecessors: %bb.3
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  %28:gpr32 = LDRWui %27:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  CBZW %28:gpr32, %bb.38, debug-location !817; fft3d.c:138:9
  B %bb.37, debug-location !817; fft3d.c:138:9

bb.37.if.then271:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !818; fft3d.c:139:9
  $w0 = MOVi32imm 4, debug-location !818; fft3d.c:139:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !818; fft3d.c:139:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !818; fft3d.c:139:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !818; fft3d.c:139:9
  PCN_STACKMAP 1, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !818; fft3d.c:139:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !818; fft3d.c:139:9

bb.38.if.end272:
; predecessors: %bb.36, %bb.37

  RET_ReallyLR debug-location !819; fft3d.c:140:1

# End machine code for function Swarztrauber.

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: %10:gpr64 = COPY $x5
    To: CBZW %13:gpr32, %bb.2, debug-location !550; fft3d.c:66:9
 RegionInstrs: 16
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
GPR32=6
Live In: W0 W1 W2 W3 W4 W5 
Live Out: %0 
Live Thru: 
  LiveReg: %0
  LiveReg: %13
Top Pressure:
GPR32=6
Bottom Pressure:
GPR32=2
Excess PSets: 
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %10:gpr64 = COPY $x5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(13): Data Latency=0 Reg=%10
    SU(11): Data Latency=0 Reg=%10
  Pressure Diff      : 
  Single Issue       : false;
SU(1):   %9:gpr32 = COPY $w4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(12): Data Latency=0 Reg=%9
    SU(10): Data Latency=0 Reg=%9
  Pressure Diff      : 
  Single Issue       : false;
SU(2):   %8:gpr32 = COPY $w3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(9): Data Latency=0 Reg=%8
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %7:gpr32 = COPY $w2
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(8): Data Latency=0 Reg=%7
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %6:gpr32 = COPY $w1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(7): Data Latency=0 Reg=%6
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %5:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(6): Data Latency=0 Reg=%5
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(5): Data Latency=0 Reg=%5
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%6
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Data Latency=0 Reg=%7
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(2): Data Latency=0 Reg=%8
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%9
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%9
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%10
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %12:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(15): Data Latency=1 Reg=%12
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(15):   %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(14): Data Latency=1 Reg=%12
  Successors:
    ExitSU: Data Latency=4 Reg=%13
  Pressure Diff      : GPR64temp 1
  Single Issue       : false;
ExitSU:   CBZW %13:gpr32, %bb.2, debug-location !550; fft3d.c:66:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(15): Data Latency=4 Reg=%13
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 14 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %10:gpr64 = COPY $x5
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 1 2 3 4 5 13 11 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %9:gpr32 = COPY $w4
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 2 3 4 5 13 12 10 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(2) PHYS-REG                           
  Cand SU(2) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(2) %8:gpr32 = COPY $w3
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 3 4 5 13 12 9 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(3) PHYS-REG                           
  Cand SU(3) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(3) %7:gpr32 = COPY $w2
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 4 5 13 12 8 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(4) PHYS-REG                           
  Cand SU(4) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(4) %6:gpr32 = COPY $w1
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 5 13 12 7 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(5) PHYS-REG                           
  Cand SU(5) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(5) %5:gpr32 = COPY $w0
Top Pressure:
GPR32=6
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 13 12 11 10 9 8 7 6 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 13 12 6 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(14) ORDER                              
  Cand SU(11) REG-MAX                            
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Bot ORDER     
Scheduling SU(13) STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15
Bottom Pressure:
GPR32=3
  LiveReg: %10
  UpdateRegP: SU(11) STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
              to 
  UpdateRegP: SU(13) STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15
              to 
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 12 11 10 9 8 7 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 6 12 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
Bottom Pressure:
GPR32=3
  LiveReg: %9
  UpdateRegP: SU(10) STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
              to 
  UpdateRegP: SU(12) undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
              to GPR32 -1
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 7 11 10 9 8 
Queue TopQ.P: 
Queue TopQ.A: 14 11 10 9 8 7 6 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
Bottom Pressure:
GPR32=3
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 6 7 8 10 9 
Queue TopQ.P: 
Queue TopQ.A: 14 6 10 9 8 7 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
Bottom Pressure:
GPR32=3
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 15 
Queue TopQ.P: 
Queue TopQ.A: 14 6 7 9 8 
BotQ.A RemLatency SU(15) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(15) %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
Bottom Pressure:
GPR64temp=1
GPR32=3
  LiveReg: %12
  UpdateRegP: SU(15) %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(15) 1c
  BotQ.A BotLatency SU(15) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 14 
Queue TopQ.P: 
Queue TopQ.A: 14 6 7 9 8 
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %12:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
Bottom Pressure:
GPR32=2
  Ready @5c
  BotQ.A BotLatency SU(14) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 9 
Queue TopQ.P: 
Queue TopQ.A: 8 6 7 9 
  BotQ.A RemainingLatency 0 + 6c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
Bottom Pressure:
GPR32=3
  LiveReg: %8
  UpdateRegP: SU(9) STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
              to 
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 8 
Queue TopQ.P: 
Queue TopQ.A: 8 6 7 
  BotQ.A RemainingLatency 0 + 7c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
Bottom Pressure:
GPR32=4
  LiveReg: %7
  UpdateRegP: SU(8) STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
              to 
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 7 
Queue TopQ.P: 
Queue TopQ.A: 7 6 
  BotQ.A RemainingLatency 0 + 8c > CritPath 5
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(6) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
Bottom Pressure:
GPR32=5
  LiveReg: %6
  UpdateRegP: SU(7) STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
              to 
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
Bottom Pressure:
GPR32=6
  LiveReg: %5
  UpdateRegP: SU(6) STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
              to 
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %10:gpr64 = COPY $x5
SU(1):   %9:gpr32 = COPY $w4
SU(2):   %8:gpr32 = COPY $w3
SU(3):   %7:gpr32 = COPY $w2
SU(4):   %6:gpr32 = COPY $w1
SU(5):   %5:gpr32 = COPY $w0
SU(6):   STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
SU(7):   STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
SU(8):   STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
SU(9):   STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
SU(14):   %12:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
SU(15):   %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
SU(10):   STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
SU(11):   STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
SU(12):   undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
SU(13):   STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15

********** MI Scheduling **********
Swarztrauber:%bb.2 if.end
  From: %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
    To: End RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=3
Live In: 
Live Out: %170 %233 %268 
Live Thru: 
  LiveReg: %170
  LiveReg: %233
  LiveReg: %268
Top Pressure:

Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %15:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(3): Data Latency=4 Reg=%15
    SU(2): Data Latency=4 Reg=%15
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Data Latency=4 Reg=%15
  Successors:
    SU(3): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit killed $nzcv, debug-location !553; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$nzcv
    SU(1): Data Latency=4 Reg=%15
  Successors:
    SU(4): Data Latency=1 Reg=%17
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(3): Data Latency=1 Reg=%17
  Successors:
    SU(5): Data Latency=1 Reg=%18
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%18
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %19:gpr32 = MOVi32imm 1
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(11): Data Latency=1 Reg=%19
    SU(9): Data Latency=1 Reg=%19
    SU(7): Data Latency=1 Reg=%19
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%19
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   undef %21.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(9): Data Latency=4 Reg=%21
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(8): Data Latency=4 Reg=%21
    SU(6): Data Latency=1 Reg=%19
  Successors:
    SU(10): Data Latency=1 Reg=%23
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(9): Data Latency=1 Reg=%23
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%19
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %233:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(13):   undef %170.sub_32:gpr64 = MOVi32imm 528
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 12 11 10 7 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 13 
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot REG-MAX   
Scheduling SU(13) undef %170.sub_32:gpr64 = MOVi32imm 528
Bottom Pressure:
GPR32=2
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(5) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(11) BOT-PATH                  1 cycles 
  Cand SU(10) BOT-PATH                  5 cycles 
  Cand SU(5) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
Bottom Pressure:
GPR32=3
  LiveReg: %18
  UpdateRegP: SU(5) STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
              to 
  Ready @1c
  BotQ.A TopLatency SU(5) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(4) 6c
  BotQ.A RemainingLatency 6 + 2c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(4) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
Bottom Pressure:
GPR32=3
  LiveReg: %17
  UpdateRegP: SU(4) %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(10) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit killed $nzcv, debug-location !553; fft3d.c:71:12
Bottom Pressure:
GPR32=3
  LiveReg: %15
  UpdateRegP: SU(2) dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
              to 
  UpdateRegP: SU(3) %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(3) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 12 11 10 7 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(10) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
  Cand SU(2) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(2) dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
Bottom Pressure:
GPR32=3
  Ready @4c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 12 11 10 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 12 
BotQ.A RemLatency SU(10) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(12) %233:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
Bottom Pressure:
GPR32=2
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 7 11 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 
BotQ.A RemLatency SU(10) 5c
  BotQ.A RemainingLatency 5 + 6c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) BOT-PATH                  1 cycles 
  Cand SU(11) ORDER                              
  Cand SU(10) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
Bottom Pressure:
GPR32=3
  LiveReg: %23
  UpdateRegP: SU(10) STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
              to 
  Ready @6c
  BotQ.A TopLatency SU(10) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 7 11 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 8 
BotQ.A RemLatency SU(9) 4c
  BotQ.A RemainingLatency 4 + 7c > CritPath 7
Picking from Bot:
  Cand SU(0) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(0) %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
Bottom Pressure:
GPR32=2
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 7 11 1 
Queue TopQ.P: 
Queue TopQ.A: 8 1 6 
  BotQ.A RemainingLatency 0 + 8c > CritPath 7
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(8) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot BOT-PATH  
Scheduling SU(9) %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
Bottom Pressure:
GPR32=3
  LiveReg: %19
  UpdateRegP: SU(7) STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
              to 
  UpdateRegP: SU(9) %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
              to 
  UpdateRegP: SU(11) STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
              to 
  LiveReg: %21
  UpdateRegP: SU(9) %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
              to GPR32 -1
  Ready @8c
  BotQ.A TopLatency SU(9) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 1 7 11 
Queue TopQ.P: 
Queue TopQ.A: 8 1 6 
  BotQ.A RemainingLatency 0 + 9c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(7) BOT-PATH                  1 cycles 
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(11) STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
Bottom Pressure:
GPR32=3
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 1 7 
Queue TopQ.P: 
Queue TopQ.A: 8 1 6 
  BotQ.A RemainingLatency 0 + 10c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(7) BOT-PATH                  1 cycles 
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
Bottom Pressure:
GPR32=3
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 1 6 
Queue TopQ.P: 
Queue TopQ.A: 8 1 6 
  BotQ.A RemainingLatency 0 + 11c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %19:gpr32 = MOVi32imm 1
Bottom Pressure:
GPR32=2
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 8 
Queue TopQ.P: 
Queue TopQ.A: 8 1 
  BotQ.A RemainingLatency 0 + 12c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) undef %21.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
Bottom Pressure:
GPR32=1
  Ready @12c
  BotQ.A BotLatency SU(8) 5c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %15:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
Bottom Pressure:

  Ready @13c
  BotQ.A BotLatency SU(1) 7c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(1):   %15:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
SU(8):   undef %21.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
SU(6):   %19:gpr32 = MOVi32imm 1
SU(7):   STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
SU(11):   STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
SU(9):   %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
SU(0):   %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
SU(10):   STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
SU(12):   %233:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
SU(2):   dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
SU(3):   %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
SU(4):   %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
SU(5):   STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
SU(13):   undef %170.sub_32:gpr64 = MOVi32imm 528

********** MI Scheduling **********
Swarztrauber:%bb.3 for.cond
  From: %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
    To: Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%24
  Single Issue       : false;
SU(1):   %25:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%25
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %24:gpr32, %25:gpr32, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%25
    SU(0): Data Latency=4 Reg=%24
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %24:gpr32, %25:gpr32, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %25:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
SU(1):   %25:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
SU(2):   dead $wzr = SUBSWrr %24:gpr32, %25:gpr32, implicit-def $nzcv, debug-location !566; fft3d.c:74:5

********** MI Scheduling **********
Swarztrauber:%bb.4 for.body
  From: %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=1
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%30
    SU(1): Data Latency=4 Reg=%30
    SU(3): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%30
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(2):   %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%30
  Successors:
    SU(3): Data Latency=1 Reg=%31
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%31
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %32:gpr32common = LDRWui %stack.16.li, 0, debug-location !573 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(6): Data Latency=4 Reg=%32
    SU(5): Data Latency=4 Reg=%32
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%32
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=4 Reg=%32
  Successors:
    SU(7): Data Latency=1 Reg=%34
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%34
  Successors:
    SU(9): Data Latency=1 Reg=%35
    SU(8): Data Latency=1 Reg=%35
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%35
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%35
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 8 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 4 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) STRWui $wzr, %stack.8.i, 0, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16
Bottom Pressure:

  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 9 8 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(9) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(9) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
Bottom Pressure:
GPR32=1
  LiveReg: %35
  UpdateRegP: SU(8) STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
              to 
  UpdateRegP: SU(9) STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
              to 
  Ready @1c
  BotQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 8 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(8) 7c
  BotQ.A RemainingLatency 7 + 2c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(8) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
Bottom Pressure:
GPR32=1
  Ready @2c
  BotQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 7 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(7) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(7) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(7) %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
Bottom Pressure:
GPR32=1
  LiveReg: %34
  UpdateRegP: SU(7) %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 6 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(6) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(6) %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
Bottom Pressure:
GPR32=1
  LiveReg: %32
  UpdateRegP: SU(5) dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
              to 
  UpdateRegP: SU(6) %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(5) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(5) dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
Bottom Pressure:
GPR32=1
  Ready @5c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 6c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
Bottom Pressure:
GPR32=2
  LiveReg: %31
  UpdateRegP: SU(3) STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
              to 
  Ready @6c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 7c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
Bottom Pressure:
GPR32=2
  LiveReg: %30
  UpdateRegP: SU(1) STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
              to 
  UpdateRegP: SU(2) %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
              to GPR32 -1
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
Bottom Pressure:
GPR32=2
  Ready @8c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %32:gpr32common = LDRWui %stack.16.li, 0, debug-location !573 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
Bottom Pressure:
GPR32=1
  Ready @9c
  BotQ.A BotLatency SU(4) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 12 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
Bottom Pressure:

  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 11
  Executed: 13c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
SU(4):   %32:gpr32common = LDRWui %stack.16.li, 0, debug-location !573 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
SU(1):   STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
SU(2):   %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
SU(3):   STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
SU(5):   dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
SU(6):   %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
SU(7):   %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
SU(8):   STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
SU(9):   STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16

********** MI Scheduling **********
Swarztrauber:%bb.5 for.cond2
  From: %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%37
  Single Issue       : false;
SU(1):   %38:gpr32common = LDRWui %stack.16.li, 0, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%38
  Single Issue       : false;
SU(2):   %39:gpr32common = SUBWri %38:gpr32common, 1, 0, debug-location !584; fft3d.c:80:29
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%38
  Successors:
    SU(3): Data Latency=1 Reg=%39
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %37:gpr32, %39:gpr32common, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%39
    SU(0): Data Latency=4 Reg=%37
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %37:gpr32, %39:gpr32common, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %39:gpr32common = SUBWri %38:gpr32common, 1, 0, debug-location !584; fft3d.c:80:29
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %38:gpr32common = LDRWui %stack.16.li, 0, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.5 ***
SU(1):   %38:gpr32common = LDRWui %stack.16.li, 0, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
SU(0):   %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
SU(2):   %39:gpr32common = SUBWri %38:gpr32common, 1, 0, debug-location !584; fft3d.c:80:29
SU(3):   dead $wzr = SUBSWrr %37:gpr32, %39:gpr32common, implicit-def $nzcv, debug-location !586; fft3d.c:80:9

********** MI Scheduling **********
Swarztrauber:%bb.6 for.body4
  From: %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
    To: Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17
 RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=4
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%177
    SU(2): Data Latency=4 Reg=%177
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %178:gpr32 = LDRWui %stack.18.lk, 0, debug-location !589 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=%178
    SU(2): Data Latency=4 Reg=%178
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%178
    SU(0): Data Latency=4 Reg=%177
  Successors:
    SU(5): Data Latency=1 Reg=%179
    SU(3): Data Latency=1 Reg=%179
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%179
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %180:gpr32 = LDRWui %stack.15.n1, 0, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%180
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%179
    SU(4): Data Latency=4 Reg=%180
  Successors:
    SU(6): Data Latency=1 Reg=%181
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%181
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   %182:gpr32 = LDRWui %stack.17.lj, 0, debug-location !597 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%182
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(7): Data Latency=4 Reg=%182
    SU(0): Data Latency=4 Reg=%177
  Successors:
    SU(10): Data Latency=1 Reg=%183
    SU(9): Data Latency=1 Reg=%183
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%183
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=%183
    SU(1): Data Latency=4 Reg=%178
  Successors:
    SU(11): Data Latency=1 Reg=%184
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%184
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %185:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%185
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(13):   dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(12): Data Latency=4 Reg=%185
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(13): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 11 9 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
Bottom Pressure:
GPR32=1
  LiveReg: %184
  UpdateRegP: SU(11) STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
              to 
  Ready @0c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 6 10 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
Bottom Pressure:
GPR32=2
  LiveReg: %181
  UpdateRegP: SU(6) STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
              to 
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 2c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
Bottom Pressure:
GPR32=3
  LiveReg: %183
  UpdateRegP: SU(9) STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
              to 
  UpdateRegP: SU(10) %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
              to 
  LiveReg: %178
  UpdateRegP: SU(2) %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
              to 
  UpdateRegP: SU(10) %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
Bottom Pressure:
GPR32=3
  Ready @3c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
Bottom Pressure:
GPR32=4
  LiveReg: %179
  UpdateRegP: SU(3) STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
              to 
  UpdateRegP: SU(5) %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
              to 
  LiveReg: %180
  UpdateRegP: SU(5) %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 3 8 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 13 8 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(13) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(2) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
Bottom Pressure:
GPR32=4
  LiveReg: %177
  UpdateRegP: SU(2) %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
              to GPR32 -1
  UpdateRegP: SU(8) %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
              to 
  Ready @6c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 1 
Queue BotQ.A: 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(8) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
Bottom Pressure:
GPR32=4
  LiveReg: %182
  UpdateRegP: SU(8) %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(8) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 7 
Queue BotQ.A: 13 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(4) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(4) %180:gpr32 = LDRWui %stack.15.n1, 0, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
Bottom Pressure:
GPR32=3
  Ready @8c
  BotQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 7 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
Bottom Pressure:
GPR32=4
  LiveReg: %185
  UpdateRegP: SU(13) dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
              to 
  Ready @9c
  BotQ.A TopLatency SU(13) 4c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 12 7 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %178:gpr32 = LDRWui %stack.18.lk, 0, debug-location !589 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
Bottom Pressure:
GPR32=3
  Ready @10c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 7 12 
  BotQ.A RemainingLatency 0 + 11c > CritPath 6
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %182:gpr32 = LDRWui %stack.17.lj, 0, debug-location !597 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
Bottom Pressure:
GPR32=2
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
Bottom Pressure:
GPR32=1
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %185:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
Bottom Pressure:

  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(12):   %185:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
SU(0):   %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
SU(7):   %182:gpr32 = LDRWui %stack.17.lj, 0, debug-location !597 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
SU(1):   %178:gpr32 = LDRWui %stack.18.lk, 0, debug-location !589 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
SU(13):   dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
SU(4):   %180:gpr32 = LDRWui %stack.15.n1, 0, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
SU(8):   %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
SU(2):   %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
SU(3):   STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
SU(5):   %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
SU(9):   STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
SU(10):   %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
SU(6):   STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
SU(11):   STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17

********** MI Scheduling **********
Swarztrauber:%bb.7 if.then9
  From: %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
    To: B %bb.9, debug-location !613; fft3d.c:88:13
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=%197
  Single Issue       : false;
SU(1):   %198:gpr32 = LDRWui %stack.19.ku, 0, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%198
  Single Issue       : false;
SU(2):   %199:gpr32 = LDRWui %stack.8.i, 0, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%199
  Single Issue       : false;
SU(3):   %200:gpr32 = nsw ADDWrr %198:gpr32, %199:gpr32, debug-location !612; fft3d.c:87:34
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=%199
    SU(1): Data Latency=4 Reg=%198
  Successors:
    SU(4): Data Latency=1 Reg=%200
  Single Issue       : false;
SU(4):   %269:gpr64sp = ADDXrx %197:gpr64common, %200:gpr32, 52, debug-location !608; fft3d.c:87:22
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%200
    SU(0): Data Latency=4 Reg=%197
  Single Issue       : false;
ExitSU:   B %bb.9, debug-location !613; fft3d.c:88:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %269:gpr64sp = ADDXrx %197:gpr64common, %200:gpr32, 52, debug-location !608; fft3d.c:87:22
  Ready @0c
  BotQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %200:gpr32 = nsw ADDWrr %198:gpr32, %199:gpr32, debug-location !612; fft3d.c:87:34
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %199:gpr32 = LDRWui %stack.8.i, 0, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %198:gpr32 = LDRWui %stack.19.ku, 0, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.7 ***
SU(1):   %198:gpr32 = LDRWui %stack.19.ku, 0, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
SU(2):   %199:gpr32 = LDRWui %stack.8.i, 0, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
SU(0):   %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
SU(3):   %200:gpr32 = nsw ADDWrr %198:gpr32, %199:gpr32, debug-location !612; fft3d.c:87:34
SU(4):   %269:gpr64sp = ADDXrx %197:gpr64common, %200:gpr32, 52, debug-location !608; fft3d.c:87:22

********** MI Scheduling **********
Swarztrauber:%bb.8 if.else
  From: %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=3
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: 
Live Out: %269 
Live Thru: 
  LiveReg: %269
Top Pressure:

Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=%188
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %189:gpr32 = LDRWui %stack.19.ku, 0, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%189
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %190:gpr32 = LDRWui %stack.8.i, 0, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%190
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(2): Data Latency=4 Reg=%190
    SU(1): Data Latency=4 Reg=%189
  Successors:
    SU(4): Data Latency=1 Reg=%191
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Data Latency=1 Reg=%191
    SU(0): Data Latency=4 Reg=%188
  Successors:
    SU(7): Data Latency=1 Reg=%192
    SU(5): Data Latency=1 Reg=%192
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=%192
  Successors:
    SU(6): Data Latency=4 Reg=%193
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(6):   STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=%193
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(7):   %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%192
  Successors:
    SU(8): Data Latency=4 Reg=%194
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(8):   %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Data Latency=4 Reg=%194
  Successors:
    SU(9): Data Latency=1 Reg=%195
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%195
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(10):   %269:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %269:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0
Bottom Pressure:

  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
Bottom Pressure:
FPR8=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %195
  UpdateRegP: SU(9) STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
              to 
  Ready @1c
  BotQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
Bottom Pressure:
FPR8=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %194
  UpdateRegP: SU(8) %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @2c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 6 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
Bottom Pressure:
GPR32=1
  LiveReg: %192
  UpdateRegP: SU(5) %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(7) %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @6c
  BotQ.A BotLatency SU(7) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
Bottom Pressure:
FPR8=1
GPR32=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %193
  UpdateRegP: SU(6) STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
              to 
  Ready @7c
  BotQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 11 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
Bottom Pressure:
GPR32=1
  Ready @11c
  BotQ.A BotLatency SU(5) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 6
  Executed: 12c
  Critical: 6c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
Bottom Pressure:
GPR32=2
  LiveReg: %188
  UpdateRegP: SU(4) %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
              to 
  LiveReg: %191
  UpdateRegP: SU(4) %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
              to GPR32 -1
  Ready @12c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 7
  Executed: 13c
  Critical: 7c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
Bottom Pressure:
GPR32=3
  LiveReg: %189
  UpdateRegP: SU(3) %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
              to 
  LiveReg: %190
  UpdateRegP: SU(3) %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
              to GPR32 -1
  Ready @13c
  BotQ.A BotLatency SU(3) 12c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 8
  Executed: 14c
  Critical: 8c, 8 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 16 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
Bottom Pressure:
GPR32=2
  Ready @16c
  BotQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 9
  Executed: 17c
  Critical: 9c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %190:gpr32 = LDRWui %stack.8.i, 0, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
Bottom Pressure:
GPR32=1
  Ready @17c
  BotQ.A BotLatency SU(2) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 10
  Executed: 18c
  Critical: 10c, 10 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %189:gpr32 = LDRWui %stack.19.ku, 0, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
Bottom Pressure:

  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 11
  Executed: 19c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.8 ***
SU(1):   %189:gpr32 = LDRWui %stack.19.ku, 0, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
SU(2):   %190:gpr32 = LDRWui %stack.8.i, 0, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
SU(0):   %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
SU(3):   %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
SU(4):   %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
SU(5):   %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
SU(6):   STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
SU(7):   %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
SU(8):   %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
SU(9):   STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
SU(10):   %269:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

********** MI Scheduling **********
Swarztrauber:%bb.9 if.end20
  From: %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%202
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRQui %202:fpr128, %268:gpr64sp, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%202
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 1 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui $wzr, %stack.14.k, 0, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRQui %202:fpr128, %268:gpr64sp, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
SU(1):   STRQui %202:fpr128, %268:gpr64sp, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0

********** MI Scheduling **********
Swarztrauber:%bb.10 for.cond21
  From: %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
    To: Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%204
  Single Issue       : false;
SU(1):   %205:gpr32common = LDRWui %stack.18.lk, 0, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%205
  Single Issue       : false;
SU(2):   %206:gpr32common = SUBWri %205:gpr32common, 1, 0, debug-location !623; fft3d.c:92:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%205
  Successors:
    SU(3): Data Latency=1 Reg=%206
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %204:gpr32, %206:gpr32common, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%206
    SU(0): Data Latency=4 Reg=%204
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %204:gpr32, %206:gpr32common, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %206:gpr32common = SUBWri %205:gpr32common, 1, 0, debug-location !623; fft3d.c:92:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %205:gpr32common = LDRWui %stack.18.lk, 0, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.10 ***
SU(1):   %205:gpr32common = LDRWui %stack.18.lk, 0, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
SU(0):   %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
SU(2):   %206:gpr32common = SUBWri %205:gpr32common, 1, 0, debug-location !623; fft3d.c:92:33
SU(3):   dead $wzr = SUBSWrr %204:gpr32, %206:gpr32common, implicit-def $nzcv, debug-location !625; fft3d.c:92:13

********** MI Scheduling **********
Swarztrauber:%bb.12 for.cond25
  From: %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
    To: Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%211
  Single Issue       : false;
SU(1):   %212:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%212
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %211:gpr32, %212:gpr32, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%212
    SU(0): Data Latency=4 Reg=%211
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %211:gpr32, %212:gpr32, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %212:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
SU(1):   %212:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
SU(2):   dead $wzr = SUBSWrr %211:gpr32, %212:gpr32, implicit-def $nzcv, debug-location !634; fft3d.c:93:17

********** MI Scheduling **********
Swarztrauber:%bb.13 for.body27
  From: %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
    To: B %bb.12, debug-location !659; fft3d.c:93:17
 RegionInstrs: 66
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
Live In: %170 %233 %268 %0 
Live Out: %170 %233 %268 %0 
Live Thru: GPR32=4
  LiveReg: %170
  UpdateRegP: SU(18) %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
              to GPR32 1
  UpdateRegP: SU(32) %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
              to GPR32 1
  LiveReg: %233
  UpdateRegP: SU(18) %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
              to 
  UpdateRegP: SU(32) %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
              to 
  LiveReg: %268
  UpdateRegP: SU(9) STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  UpdateRegP: SU(15) STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  LiveReg: %0
  UpdateRegP: SU(4) %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
              to 
  UpdateRegP: SU(12) %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
              to 
Top Pressure:
GPR32=4
Bottom Pressure:
GPR32=4
Excess PSets: 
Cluster ld/st SU(2) - SU(30)
  Copy Succ SU(17)
  Copy Succ SU(11)
  Copy Succ SU(3)
Cluster ld/st SU(44) - SU(34)
  Copy Succ SU(58)
  Copy Succ SU(47)
Cluster ld/st SU(6) - SU(33)
  Copy Succ SU(7)
  Copy Succ SU(65)
Cluster ld/st SU(23) - SU(39)
  Copy Succ SU(25)
Cluster ld/st SU(54) - SU(19)
  Copy Succ SU(56)
Cluster ld/st SU(24) - SU(40)
  Copy Succ SU(25)
Cluster ld/st SU(55) - SU(20)
  Copy Succ SU(56)
Cluster ld/st SU(57) - SU(53)
Cluster ld/st SU(51) - SU(50)
Cluster ld/st SU(46) - SU(45)
Cluster ld/st SU(42) - SU(38)
Cluster ld/st SU(60) - SU(49)
  Copy Succ SU(61)
Cluster ld/st SU(26) - SU(22)
  Copy Succ SU(27)
SU(0):   %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 27
  Successors:
    SU(13): Data Latency=4 Reg=%216
    SU(5): Data Latency=4 Reg=%216
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %217:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !637 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(3): Data Latency=4 Reg=%217
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %218:gpr64 = LDRSWui %stack.14.k, 0, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  # preds left       : 0
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 29
  Successors:
    SU(17): Data Latency=4 Reg=%218
    SU(11): Data Latency=4 Reg=%218
    SU(3): Data Latency=4 Reg=%218
    SU(30): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 25
  Predecessors:
    SU(2): Data Latency=4 Reg=%218
    SU(1): Data Latency=4 Reg=%217
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(4): Data Latency=1 Reg=%220
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 24
  Predecessors:
    SU(3): Data Latency=1 Reg=%220
  Successors:
    SU(5): Data Latency=1 Reg=%221
  Pressure Diff      : 
  Single Issue       : false;
SU(5):   %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 23
  Predecessors:
    SU(4): Data Latency=1 Reg=%221
    SU(0): Data Latency=4 Reg=%216
  Successors:
    SU(8): Data Latency=1 Reg=%222
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %223:gpr64 = LDRSWui %stack.9.j, 0, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  # preds left       : 0
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 27
  Successors:
    SU(7): Data Latency=4 Reg=%223
    SU(65): Ord  Latency=0 Memory
    SU(33): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 23
  Predecessors:
    SU(6): Data Latency=4 Reg=%223
    SU(33): Ord  Latency=0 Artificial
  Successors:
    SU(28): Data Latency=1 Reg=%224
    SU(14): Data Latency=1 Reg=%224
    SU(8): Data Latency=1 Reg=%224
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 18
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 22
  Predecessors:
    SU(5): Data Latency=1 Reg=%222
    SU(7): Data Latency=1 Reg=%224
  Successors:
    SU(9): Data Latency=4 Reg=%225
    SU(65): Ord  Latency=0 Memory
    SU(62): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(45): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(9):   STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 18
  Predecessors:
    SU(8): Data Latency=4 Reg=%225
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(54): Ord  Latency=1 Memory
    SU(39): Ord  Latency=1 Memory
    SU(35): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(14): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(10):   %226:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !642 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 24
  Successors:
    SU(11): Data Latency=4 Reg=%226
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 20
  Predecessors:
    SU(10): Data Latency=4 Reg=%226
    SU(2): Data Latency=4 Reg=%218
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(12): Data Latency=1 Reg=%227
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 19
  Predecessors:
    SU(11): Data Latency=1 Reg=%227
  Successors:
    SU(13): Data Latency=1 Reg=%228
  Pressure Diff      : 
  Single Issue       : false;
SU(13):   %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 18
  Predecessors:
    SU(12): Data Latency=1 Reg=%228
    SU(0): Data Latency=4 Reg=%216
  Successors:
    SU(14): Data Latency=1 Reg=%229
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 17
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 17
  Predecessors:
    SU(13): Data Latency=1 Reg=%229
    SU(9): Ord  Latency=1 Memory
    SU(7): Data Latency=1 Reg=%224
  Successors:
    SU(15): Data Latency=4 Reg=%230
    SU(65): Ord  Latency=0 Memory
    SU(62): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(45): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(15):   STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 13
  Predecessors:
    SU(14): Data Latency=4 Reg=%230
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(55): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(16):   %231:gpr32 = LDRWui %stack.22.i21, 0, debug-location !646 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(17): Data Latency=4 Reg=%231
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(17):   %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(16): Data Latency=4 Reg=%231
    SU(2): Data Latency=4 Reg=%218
    SU(30): Ord  Latency=0 Artificial
  Successors:
    SU(18): Data Latency=1 Reg=%232
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(18):   %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(17): Data Latency=1 Reg=%232
  Successors:
    SU(28): Data Latency=1 Reg=%235
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %236:fpr64 = LDRDui %stack.12.x11, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 10
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%236
    SU(56): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(20):   %237:fpr64 = LDRDui %stack.13.x21, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 10
  Predecessors:
    SU(15): Ord  Latency=1 Memory
    SU(55): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%237
    SU(56): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(21):   %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 6
  Predecessors:
    SU(20): Data Latency=4 Reg=%237
    SU(19): Data Latency=4 Reg=%236
  Successors:
    SU(22): Data Latency=1 Reg=%238
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(22):   STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(21): Data Latency=1 Reg=%238
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Cluster
  Successors:
    SU(27): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(23):   %239:fpr64 = LDRDui %stack.12.x11, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%239
    SU(39): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(24):   %240:fpr64 = LDRDui %stack.13.x21, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%240
    SU(40): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(25):   %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 6
  Predecessors:
    SU(24): Data Latency=4 Reg=%240
    SU(23): Data Latency=4 Reg=%239
    SU(39): Ord  Latency=0 Artificial
    SU(40): Ord  Latency=0 Artificial
  Successors:
    SU(26): Data Latency=1 Reg=%241
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(26):   STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
  # preds left       : 3
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 5
  Predecessors:
    SU(25): Data Latency=1 Reg=%241
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(22): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(27):   %242:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 23
  Height             : 4
  Predecessors:
    SU(26): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
  Successors:
    SU(28): Data Latency=4 Reg=%242
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(28):   STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 0
  Predecessors:
    SU(27): Data Latency=4 Reg=%242
    SU(18): Data Latency=1 Reg=%235
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Data Latency=1 Reg=%224
  Successors:
    SU(62): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(29):   %243:gpr32 = LDRWui %stack.23.i22, 0, debug-location !652 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(31): Data Latency=4 Reg=%243
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(30):   %244:gpr32 = LDRWui %stack.14.k, 0, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  # preds left       : 0
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 25
  Predecessors:
    SU(2): Ord  Latency=0 Cluster
  Successors:
    SU(31): Data Latency=4 Reg=%244
    SU(17): Ord  Latency=0 Artificial
    SU(11): Ord  Latency=0 Artificial
    SU(3): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(31):   %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(30): Data Latency=4 Reg=%244
    SU(29): Data Latency=4 Reg=%243
  Successors:
    SU(32): Data Latency=1 Reg=%245
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(32):   %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(31): Data Latency=1 Reg=%245
  Successors:
    SU(62): Data Latency=1 Reg=%246
  Pressure Diff      : 
  Single Issue       : false;
SU(33):   %247:gpr64 = LDRSWui %stack.9.j, 0, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  # preds left       : 0
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 23
  Predecessors:
    SU(6): Ord  Latency=0 Cluster
  Successors:
    SU(62): Data Latency=4 Reg=%247
    SU(65): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(34):   %248:fpr64 = LDRDui %stack.11.u1, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Predecessors:
    SU(44): Ord  Latency=0 Cluster
  Successors:
    SU(52): Data Latency=4 Reg=%248
    SU(43): Data Latency=4 Reg=%248
    SU(58): Ord  Latency=0 Artificial
    SU(47): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(35):   %249:fpr64 = LDRDui %stack.12.x11, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(37): Data Latency=4 Reg=%249
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(36):   %250:fpr64 = LDRDui %stack.13.x21, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(37): Data Latency=4 Reg=%250
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(37):   %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 8
  Predecessors:
    SU(36): Data Latency=4 Reg=%250
    SU(35): Data Latency=4 Reg=%249
  Successors:
    SU(58): Data Latency=1 Reg=%251
    SU(53): Data Latency=1 Reg=%251
    SU(50): Data Latency=1 Reg=%251
    SU(45): Data Latency=1 Reg=%251
    SU(43): Data Latency=1 Reg=%251
    SU(38): Data Latency=1 Reg=%251
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(38):   STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(39):   %252:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 12
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(23): Ord  Latency=0 Cluster
  Successors:
    SU(41): Data Latency=4 Reg=%252
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(40):   %253:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 12
  Predecessors:
    SU(15): Ord  Latency=1 Memory
    SU(24): Ord  Latency=0 Cluster
  Successors:
    SU(41): Data Latency=4 Reg=%253
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(41):   %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 8
  Predecessors:
    SU(40): Data Latency=4 Reg=%253
    SU(39): Data Latency=4 Reg=%252
  Successors:
    SU(52): Data Latency=1 Reg=%254
    SU(51): Data Latency=1 Reg=%254
    SU(47): Data Latency=1 Reg=%254
    SU(46): Data Latency=1 Reg=%254
    SU(42): Data Latency=1 Reg=%254
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(42):   STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%254
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(38): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(43):   %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(34): Data Latency=4 Reg=%248
  Successors:
    SU(48): Data Latency=1 Reg=%255
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(44):   %256:fpr64 = LDRDui %stack.11.u1, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
  # preds left       : 0
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(58): Data Latency=4 Reg=%256
    SU(47): Data Latency=4 Reg=%256
    SU(34): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(45):   STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(46):   STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%254
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(45): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(47):   %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(41): Data Latency=1 Reg=%254
    SU(44): Data Latency=4 Reg=%256
    SU(34): Ord  Latency=0 Artificial
  Successors:
    SU(48): Data Latency=1 Reg=%257
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(48):   %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 23
  Height             : 6
  Predecessors:
    SU(47): Data Latency=1 Reg=%257
    SU(43): Data Latency=1 Reg=%255
  Successors:
    SU(49): Data Latency=1 Reg=%258
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(49):   STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 24
  Height             : 5
  Predecessors:
    SU(48): Data Latency=1 Reg=%258
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Cluster
  Successors:
    SU(61): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(50):   STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(51):   STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(41): Data Latency=1 Reg=%254
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(50): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(52):   %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(41): Data Latency=1 Reg=%254
    SU(34): Data Latency=4 Reg=%248
  Successors:
    SU(59): Data Latency=1 Reg=%259
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(53):   STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(54):   %260:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 10
  Predecessors:
    SU(9): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%260
    SU(19): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(55):   %261:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 10
  Predecessors:
    SU(15): Ord  Latency=1 Memory
  Successors:
    SU(56): Data Latency=4 Reg=%261
    SU(20): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(56):   %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 1
  Predecessors:
    SU(55): Data Latency=4 Reg=%261
    SU(54): Data Latency=4 Reg=%260
    SU(19): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Successors:
    SU(57): Data Latency=1 Reg=%262
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(57):   STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 0
  Predecessors:
    SU(56): Data Latency=1 Reg=%262
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(53): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(58):   %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 7
  Predecessors:
    SU(37): Data Latency=1 Reg=%251
    SU(44): Data Latency=4 Reg=%256
    SU(34): Ord  Latency=0 Artificial
  Successors:
    SU(59): Data Latency=1 Reg=%263
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(59):   %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 23
  Height             : 6
  Predecessors:
    SU(58): Data Latency=1 Reg=%263
    SU(52): Data Latency=1 Reg=%259
  Successors:
    SU(60): Data Latency=1 Reg=%264
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(60):   STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 24
  Height             : 5
  Predecessors:
    SU(59): Data Latency=1 Reg=%264
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Successors:
    SU(61): Ord  Latency=1 Memory
    SU(49): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(61):   %265:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 25
  Height             : 4
  Predecessors:
    SU(60): Ord  Latency=1 Memory
    SU(49): Ord  Latency=1 Memory
  Successors:
    SU(62): Data Latency=4 Reg=%265
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(62):   STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 0
  Predecessors:
    SU(61): Data Latency=4 Reg=%265
    SU(33): Data Latency=4 Reg=%247
    SU(32): Data Latency=1 Reg=%246
    SU(28): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(63):   %266:gpr32common = LDRWui %stack.9.j, 0, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(64): Data Latency=4 Reg=%266
    SU(65): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(64):   %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(63): Data Latency=4 Reg=%266
  Successors:
    SU(65): Data Latency=1 Reg=%267
  Pressure Diff      : 
  Single Issue       : false;
SU(65):   STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(64): Data Latency=1 Reg=%267
    SU(63): Ord  Latency=0 Memory
    SU(33): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.12, debug-location !659; fft3d.c:93:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 29
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 65 62 57 53 51 50 46 45 42 38 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
Picking from Bot:
  Cand SU(65) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot WEAK      
Scheduling SU(65) STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
Bottom Pressure:
GPR32=5
  LiveReg: %267
  UpdateRegP: SU(65) STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
              to 
  Ready @0c
  BotQ.A TopLatency SU(65) 12c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 62 57 53 51 50 46 45 42 64 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(62) 29c
  BotQ.A RemainingLatency 29 + 1c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(62) BOT-PATH                  29 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(62) STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %265
  UpdateRegP: SU(62) STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to GPR32 2
  LiveReg: %246
  UpdateRegP: SU(62) STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to GPR32 1
  LiveReg: %247
  UpdateRegP: SU(62) STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
              to 
  Ready @1c
  BotQ.A TopLatency SU(62) 29c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 57 53 51 50 46 45 42 32 28 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 28 + 2c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(53) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(53) STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %251
  UpdateRegP: SU(38) STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
              to 
  UpdateRegP: SU(43) %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
              to 
  UpdateRegP: SU(45) STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
              to 
  UpdateRegP: SU(50) STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
              to 
  UpdateRegP: SU(53) STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
              to 
  UpdateRegP: SU(58) %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
              to 
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 57 28 51 50 46 45 42 32 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 27 + 3c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(57) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(57) STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  LiveReg: %262
  UpdateRegP: SU(57) STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
              to 
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 61 
Queue BotQ.A: 38 64 32 28 51 50 46 45 42 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
BotQ.A RemLatency SU(61) 25c
  BotQ.A RemainingLatency 27 + 4c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(50) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(50) STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 51 56 46 45 42 61 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 5c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(51) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(51) STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %254
  UpdateRegP: SU(42) STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
              to 
  UpdateRegP: SU(46) STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
              to 
  UpdateRegP: SU(47) %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
              to 
  UpdateRegP: SU(51) STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
              to 
  UpdateRegP: SU(52) %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
              to 
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 61 56 46 45 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 6c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(61) BOT-PATH                  25 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(61) %265:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=7
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @6c
  BotQ.A TopLatency SU(61) 25c
  BotQ.A BotLatency SU(61) 4c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 60 49 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 7c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(49) BOT-PATH                  24 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(49) STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %258
  UpdateRegP: SU(49) STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
              to 
  Ready @7c
  BotQ.A BotLatency SU(49) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 60 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 8c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(60) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(60) STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %264
  UpdateRegP: SU(60) STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
              to 
  Ready @8c
  BotQ.A TopLatency SU(60) 24c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 59 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 9c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(48) BOT-PATH                  23 cycles 
  Cand SU(59) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(59) %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %259
  UpdateRegP: SU(59) %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
              to 
  LiveReg: %263
  UpdateRegP: SU(59) %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @9c
  BotQ.A BotLatency SU(59) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 58 52 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 10c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(58) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(58) %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %256
  UpdateRegP: SU(47) %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(58) %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @10c
  BotQ.A BotLatency SU(58) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 52 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 11c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
  Cand SU(52) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(52) %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %248
  UpdateRegP: SU(43) %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(52) %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @11c
  BotQ.A TopLatency SU(52) 22c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 45 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 12c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(45) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(45) STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @12c
  BotQ.A TopLatency SU(45) 22c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 46 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 13c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
  Cand SU(46) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(46) STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @13c
  BotQ.A TopLatency SU(46) 22c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 64 32 28 42 56 48 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 14c > CritPath 29
Picking from Bot:
  Cand SU(38) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(38) STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @14c
  BotQ.A TopLatency SU(38) 22c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 32 28 42 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 15c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
  Cand SU(32) BOT-PATH                  5 cycles 
  Cand SU(42) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(42) STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @15c
  BotQ.A TopLatency SU(42) 22c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 32 28 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 16c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
  Cand SU(32) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(32) %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %245
  UpdateRegP: SU(32) %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
              to GPR32 -1
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 48 64 56 28 31 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 17c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(64) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(64) %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
Bottom Pressure:
FPR8=6
GPR32=7
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %266
  UpdateRegP: SU(64) %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
              to GPR32 -1
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 
Queue BotQ.A: 48 31 56 28 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 18c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(31) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(31) %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
Bottom Pressure:
FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %243
  UpdateRegP: SU(31) %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
              to 
  LiveReg: %244
  UpdateRegP: SU(31) %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
              to GPR32 -1
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 29 
Queue BotQ.A: 48 28 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(28) 27c
  BotQ.A RemainingLatency 27 + 19c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(28) BOT-PATH                  27 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(28) STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %242
  UpdateRegP: SU(28) STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to GPR32 2
  LiveReg: %235
  UpdateRegP: SU(28) STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to GPR32 1
  LiveReg: %224
  UpdateRegP: SU(8) %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(14) %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(28) STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
              to 
  Ready @19c
  BotQ.A TopLatency SU(28) 27c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 63 29 27 
Queue BotQ.A: 48 56 18 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 26 + 20c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(18) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(18) %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %232
  UpdateRegP: SU(18) %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
              to GPR32 -1
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 29 
Queue BotQ.A: 48 56 17 63 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 63 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 25 + 21c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(17) REG-MAX    GPR32:1                    
  Cand SU(63) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(63) %266:gpr32common = LDRWui %stack.9.j, 0, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 BotQ.A
BotQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 
Queue BotQ.A: 48 56 17 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
BotQ.A RemLatency SU(27) 23c
  BotQ.A RemainingLatency 24 + 22c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(17) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(17) %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %231
  UpdateRegP: SU(17) %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
              to 
  LiveReg: %218
  UpdateRegP: SU(3) %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
              to 
  UpdateRegP: SU(11) %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
              to 
  UpdateRegP: SU(17) %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
              to GPR32 -1
  Ready @22c
  *** Max MOps 1 at cycle 22
Cycle: 23 BotQ.A
BotQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 48 56 29 27 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
  BotQ.A RemainingLatency 23 + 23c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
  Cand SU(29) REG-MAX                            
  Cand SU(27) BOT-PATH                  23 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(27) %242:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @23c
  *** Max MOps 1 at cycle 23
Cycle: 24 BotQ.A
BotQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 48 56 29 26 22 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(48) 23c
  BotQ.A RemainingLatency 23 + 24c > CritPath 29
Picking from Bot:
  Cand SU(48) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(48) %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %255
  UpdateRegP: SU(48) %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
              to 
  LiveReg: %257
  UpdateRegP: SU(48) %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @24c
  BotQ.A TopLatency SU(48) 23c
  *** Max MOps 1 at cycle 24
Cycle: 25 BotQ.A
BotQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 16 
Queue BotQ.A: 22 56 29 26 47 43 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 25c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
  Cand SU(29) REG-MAX                            
  Cand SU(47) BOT-PATH                  22 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(47) %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 BotQ.A
BotQ.A @26c
  Retired: 26
  Executed: 26c
  Critical: 26c, 26 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 
Queue BotQ.A: 22 56 29 26 43 41 16 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 26c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
  Cand SU(43) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(43) %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=10
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @26c
  BotQ.A TopLatency SU(43) 22c
  *** Max MOps 1 at cycle 26
Cycle: 27 BotQ.A
BotQ.A @27c
  Retired: 27
  Executed: 27c
  Critical: 27c, 27 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 34 
Queue BotQ.A: 22 56 29 26 16 41 37 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(22) 22c
  BotQ.A RemainingLatency 22 + 27c > CritPath 29
Picking from Bot:
  Cand SU(22) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(22) STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
Bottom Pressure:
FPR8=6
GPR32=10
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %238
  UpdateRegP: SU(22) STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
              to 
  Ready @27c
  BotQ.A TopLatency SU(22) 22c
  *** Max MOps 1 at cycle 27
Cycle: 28 BotQ.A
BotQ.A @28c
  Retired: 28
  Executed: 28c
  Critical: 28c, 28 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 44 34 
Queue BotQ.A: 37 56 29 26 16 41 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(26) 22c
  BotQ.A RemainingLatency 22 + 28c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(26) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(26) STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=10
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %241
  UpdateRegP: SU(26) STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
              to 
  Ready @28c
  BotQ.A TopLatency SU(26) 22c
  *** Max MOps 1 at cycle 28
Cycle: 29 BotQ.A
BotQ.A @29c
  Retired: 29
  Executed: 29c
  Critical: 29c, 29 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 34 
Queue BotQ.A: 37 56 29 21 16 41 25 44 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 29 30 33 34 44 
BotQ.A RemLatency SU(37) 21c
  BotQ.A RemainingLatency 21 + 29c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(29) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(29) %243:gpr32 = LDRWui %stack.23.i22, 0, debug-location !652 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @29c
  *** Max MOps 1 at cycle 29
Cycle: 30 BotQ.A
BotQ.A @30c
  Retired: 30
  Executed: 30c
  Critical: 30c, 30 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 44 21 16 41 25 34 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 44 30 33 34 
  BotQ.A RemainingLatency 0 + 30c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(16) REG-MAX                            
  Cand SU(34) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(34) %248:fpr64 = LDRDui %stack.11.u1, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=9
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @30c
  BotQ.A BotLatency SU(34) 11c
  *** Max MOps 1 at cycle 30
Cycle: 31 BotQ.A
BotQ.A @31c
  Retired: 31
  Executed: 31c
  Critical: 31c, 31 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 44 21 16 41 25 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 44 30 33 
  BotQ.A RemainingLatency 0 + 31c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
  Cand SU(44) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(44) %256:fpr64 = LDRDui %stack.11.u1, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
Bottom Pressure:
FPR8=5
GPR32=9
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 BotQ.A
BotQ.A @32c
  Retired: 32
  Executed: 32c
  Critical: 32c, 32 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 56 25 21 16 41 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 32c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(56) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(56) %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=9
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %260
  UpdateRegP: SU(56) %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
              to 
  LiveReg: %261
  UpdateRegP: SU(56) %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @32c
  BotQ.A TopLatency SU(56) 21c
  *** Max MOps 1 at cycle 32
Cycle: 33 BotQ.A
BotQ.A @33c
  Retired: 33
  Executed: 33c
  Critical: 33c, 33 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 41 25 21 16 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 33c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(41) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(41) %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=7
GPR32=9
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %252
  UpdateRegP: SU(41) %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
              to 
  LiveReg: %253
  UpdateRegP: SU(41) %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @33c
  BotQ.A TopLatency SU(41) 21c
  *** Max MOps 1 at cycle 33
Cycle: 34 BotQ.A
BotQ.A @34c
  Retired: 34
  Executed: 34c
  Critical: 34c, 34 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 16 25 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 16 33 30 
  BotQ.A RemainingLatency 0 + 34c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(16) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(16) %231:gpr32 = LDRWui %stack.22.i21, 0, debug-location !646 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
Bottom Pressure:
FPR8=7
GPR32=8
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @34c
  *** Max MOps 1 at cycle 34
Cycle: 35 BotQ.A
BotQ.A @35c
  Retired: 35
  Executed: 35c
  Critical: 35c, 35 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 55 54 
Queue BotQ.A: 37 21 25 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 35c > CritPath 29
Picking from Bot:
  Cand SU(37) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(37) %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  LiveReg: %249
  UpdateRegP: SU(37) %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
              to 
  LiveReg: %250
  UpdateRegP: SU(37) %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @35c
  BotQ.A TopLatency SU(37) 21c
  *** Max MOps 1 at cycle 35
Cycle: 36 BotQ.A
BotQ.A @36c
  Retired: 36
  Executed: 36c
  Critical: 36c, 36 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 
Queue BotQ.A: 25 21 55 54 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 36c > CritPath 29
Picking from Bot:
  Cand SU(25) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(25) %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
Bottom Pressure:
FPR8=9
GPR32=8
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %239
  UpdateRegP: SU(25) %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
              to 
  LiveReg: %240
  UpdateRegP: SU(25) %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @36c
  BotQ.A TopLatency SU(25) 21c
  *** Max MOps 1 at cycle 36
Cycle: 37 BotQ.A
BotQ.A @37c
  Retired: 37
  Executed: 37c
  Critical: 37c, 37 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 24 23 
Queue BotQ.A: 54 21 55 39 40 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 37c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(21) WEAK                               
  Cand SU(39) REG-MAX                            
  Cand SU(40) BOT-PATH                  17 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(40) %253:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  Ready @37c
  BotQ.A BotLatency SU(40) 12c
  *** Max MOps 1 at cycle 37
Cycle: 38 BotQ.A
BotQ.A @38c
  Retired: 38
  Executed: 38c
  Critical: 38c, 38 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 35 36 24 23 
Queue BotQ.A: 54 21 55 39 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 38c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(21) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(21) %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
Bottom Pressure:
FPR8=9
GPR32=8
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %236
  UpdateRegP: SU(21) %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
              to 
  LiveReg: %237
  UpdateRegP: SU(21) %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @38c
  BotQ.A TopLatency SU(21) 21c
  *** Max MOps 1 at cycle 38
Cycle: 39 BotQ.A
BotQ.A @39c
  Retired: 39
  Executed: 39c
  Critical: 39c, 39 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 24 23 
Queue BotQ.A: 54 39 55 35 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 39c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
  Cand SU(36) BOT-PATH                  17 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(36) %250:fpr64 = LDRDui %stack.13.x21, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=8
GPR32=8
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  Ready @39c
  *** Max MOps 1 at cycle 39
Cycle: 40 BotQ.A
BotQ.A @40c
  Retired: 40
  Executed: 40c
  Critical: 40c, 40 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 54 39 55 35 24 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 40c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
  Cand SU(24) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(24) %240:fpr64 = LDRDui %stack.13.x21, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
Bottom Pressure:
FPR8=7
GPR32=8
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @40c
  *** Max MOps 1 at cycle 40
Cycle: 41 BotQ.A
BotQ.A @41c
  Retired: 41
  Executed: 41c
  Critical: 41c, 41 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 54 39 55 35 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 41c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(39) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(39) %252:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
Bottom Pressure:
FPR8=6
GPR32=8
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @41c
  *** Max MOps 1 at cycle 41
Cycle: 42 BotQ.A
BotQ.A @42c
  Retired: 42
  Executed: 42c
  Critical: 42c, 42 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 23 55 35 19 20 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 42c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(23) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(23) %239:fpr64 = LDRDui %stack.12.x11, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
Bottom Pressure:
FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @42c
  *** Max MOps 1 at cycle 42
Cycle: 43 BotQ.A
BotQ.A @43c
  Retired: 43
  Executed: 43c
  Critical: 43c, 43 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 20 55 35 19 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 43c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(20) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(20) %237:fpr64 = LDRDui %stack.13.x21, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  Ready @43c
  BotQ.A TopLatency SU(20) 17c
  *** Max MOps 1 at cycle 43
Cycle: 44 BotQ.A
BotQ.A @44c
  Retired: 44
  Executed: 44c
  Critical: 44c, 44 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 19 55 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 44c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(55) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(55) %261:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @44c
  BotQ.A TopLatency SU(55) 17c
  *** Max MOps 1 at cycle 44
Cycle: 45 BotQ.A
BotQ.A @45c
  Retired: 45
  Executed: 45c
  Critical: 45c, 45 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 54 19 35 15 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 45c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(35) ORDER                              
  Cand SU(15) BOT-PATH                  16 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(15) STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %230
  UpdateRegP: SU(15) STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
              to 
  Ready @45c
  BotQ.A BotLatency SU(15) 13c
  *** Max MOps 1 at cycle 45
Cycle: 46 BotQ.A
BotQ.A @46c
  Retired: 46
  Executed: 46c
  Critical: 46c, 46 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 19 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 46c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(35) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(35) %249:fpr64 = LDRDui %stack.12.x11, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @46c
  *** Max MOps 1 at cycle 46
Cycle: 47 BotQ.A
BotQ.A @47c
  Retired: 47
  Executed: 47c
  Critical: 47c, 47 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 19 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 47c > CritPath 29
Picking from Bot:
  Cand SU(54) ORDER                              
  Cand SU(19) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(19) %236:fpr64 = LDRDui %stack.12.x11, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @47c
  *** Max MOps 1 at cycle 47
Cycle: 48 BotQ.A
BotQ.A @48c
  Retired: 48
  Executed: 48c
  Critical: 48c, 48 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 54 
Pick Bot ONLY1     
Scheduling SU(54) %260:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  Ready @48c
  *** Max MOps 1 at cycle 48
Cycle: 49 BotQ.A
BotQ.A @49c
  Retired: 49
  Executed: 49c
  Critical: 49c, 49 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
Bottom Pressure:
GPR32=9
  LiveReg: %229
  UpdateRegP: SU(14) %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @49c
  BotQ.A BotLatency SU(14) 17c
  *** Max MOps 1 at cycle 49
Cycle: 50 BotQ.A
BotQ.A @50c
  Retired: 50
  Executed: 50c
  Critical: 50c, 50 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 13 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 50c > CritPath 29
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(9) BOT-PATH                  11 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
Bottom Pressure:
FPR8=1
GPR32=9
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %225
  UpdateRegP: SU(9) STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
              to 
  Ready @50c
  BotQ.A BotLatency SU(9) 18c
  *** Max MOps 1 at cycle 50
Cycle: 51 BotQ.A
BotQ.A @51c
  Retired: 51
  Executed: 51c
  Critical: 51c, 51 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %216
  UpdateRegP: SU(5) %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
              to 
  UpdateRegP: SU(13) %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
              to 
  LiveReg: %228
  UpdateRegP: SU(13) %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
              to GPR32 -1
  Ready @51c
  *** Max MOps 1 at cycle 51
Cycle: 52 BotQ.A
BotQ.A @52c
  Retired: 52
  Executed: 52c
  Critical: 52c, 52 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %227
  UpdateRegP: SU(12) %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
              to GPR32 -1
  Ready @52c
  BotQ.A BotLatency SU(12) 19c
  *** Max MOps 1 at cycle 52
Cycle: 53 BotQ.A
BotQ.A @53c
  Retired: 53
  Executed: 53c
  Critical: 53c, 53 MOps
  ExpectedLatency: 19c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 8 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
Bottom Pressure:
FPR8=1
GPR32=10
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %226
  UpdateRegP: SU(11) %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
              to GPR32 -1
  Ready @53c
  BotQ.A BotLatency SU(11) 20c
  *** Max MOps 1 at cycle 53
Cycle: 54 BotQ.A
BotQ.A @54c
  Retired: 54
  Executed: 54c
  Critical: 54c, 54 MOps
  ExpectedLatency: 20c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %222
  UpdateRegP: SU(8) %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @54c
  BotQ.A BotLatency SU(8) 22c
  *** Max MOps 1 at cycle 54
Cycle: 55 BotQ.A
BotQ.A @55c
  Retired: 55
  Executed: 55c
  Critical: 55c, 55 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 
Queue BotQ.A: 5 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 55c > CritPath 29
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %221
  UpdateRegP: SU(5) %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
              to GPR32 -1
  Ready @55c
  BotQ.A BotLatency SU(5) 23c
  *** Max MOps 1 at cycle 55
Cycle: 56 BotQ.A
BotQ.A @56c
  Retired: 56
  Executed: 56c
  Critical: 56c, 56 MOps
  ExpectedLatency: 23c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 10 0 
Queue BotQ.A: 7 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 56c > CritPath 29
Picking from Bot:
  Cand SU(7) ORDER                              
  Cand SU(4) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(4) %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
Bottom Pressure:
GPR32=11
  LiveReg: %220
  UpdateRegP: SU(4) %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
              to GPR32 -1
  Ready @56c
  BotQ.A BotLatency SU(4) 24c
  *** Max MOps 1 at cycle 56
Cycle: 57 BotQ.A
BotQ.A @57c
  Retired: 57
  Executed: 57c
  Critical: 57c, 57 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 7 3 10 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 57c > CritPath 29
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(7) %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
Bottom Pressure:
GPR32=11
  LiveReg: %223
  UpdateRegP: SU(7) %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
              to GPR32 -1
  Ready @57c
  *** Max MOps 1 at cycle 57
Cycle: 58 BotQ.A
BotQ.A @58c
  Retired: 58
  Executed: 58c
  Critical: 58c, 58 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 6 
Queue BotQ.A: 10 3 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 58c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(3) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
Bottom Pressure:
GPR32=11
  LiveReg: %217
  UpdateRegP: SU(3) %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
              to GPR32 -1
  Ready @58c
  BotQ.A TopLatency SU(3) 4c
  BotQ.A BotLatency SU(3) 25c
  *** Max MOps 1 at cycle 58
Cycle: 59 BotQ.A
BotQ.A @59c
  Retired: 59
  Executed: 59c
  Critical: 59c, 59 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 6 2 
Queue BotQ.A: 10 33 30 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 33 
  BotQ.A RemainingLatency 0 + 59c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(33) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(33) %247:gpr64 = LDRSWui %stack.9.j, 0, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
Bottom Pressure:
GPR32=10
  Ready @59c
  *** Max MOps 1 at cycle 59
Cycle: 60 BotQ.A
BotQ.A @60c
  Retired: 60
  Executed: 60c
  Critical: 60c, 60 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 6 2 
Queue BotQ.A: 10 0 30 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 30 
  BotQ.A RemainingLatency 0 + 60c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
  Cand SU(30) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(30) %244:gpr32 = LDRWui %stack.14.k, 0, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
Bottom Pressure:
GPR32=9
  Ready @60c
  *** Max MOps 1 at cycle 60
Cycle: 61 BotQ.A
BotQ.A @61c
  Retired: 61
  Executed: 61c
  Critical: 61c, 61 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 2 
Queue BotQ.A: 10 0 6 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 10 
  BotQ.A RemainingLatency 0 + 61c > CritPath 29
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %226:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !642 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
Bottom Pressure:
GPR32=8
  Ready @61c
  *** Max MOps 1 at cycle 61
Cycle: 62 BotQ.A
BotQ.A @62c
  Retired: 62
  Executed: 62c
  Critical: 62c, 62 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 6 
  BotQ.A RemainingLatency 0 + 62c > CritPath 29
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(2) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(2) %218:gpr64 = LDRSWui %stack.14.k, 0, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
Bottom Pressure:
GPR32=7
  Ready @62c
  BotQ.A BotLatency SU(2) 29c
  *** Max MOps 1 at cycle 62
Cycle: 63 BotQ.A
BotQ.A @63c
  Retired: 63
  Executed: 63c
  Critical: 63c, 63 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 
  BotQ.A RemainingLatency 0 + 63c > CritPath 29
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %223:gpr64 = LDRSWui %stack.9.j, 0, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
Bottom Pressure:
GPR32=6
  Ready @63c
  *** Max MOps 1 at cycle 63
Cycle: 64 BotQ.A
BotQ.A @64c
  Retired: 64
  Executed: 64c
  Critical: 64c, 64 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 64c > CritPath 29
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %217:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !637 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
Bottom Pressure:
GPR32=5
  Ready @64c
  *** Max MOps 1 at cycle 64
Cycle: 65 BotQ.A
BotQ.A @65c
  Retired: 65
  Executed: 65c
  Critical: 65c, 65 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
Bottom Pressure:
GPR32=4
  Ready @65c
  *** Max MOps 1 at cycle 65
Cycle: 66 BotQ.A
BotQ.A @66c
  Retired: 66
  Executed: 66c
  Critical: 66c, 66 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.13 ***
SU(0):   %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
SU(1):   %217:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !637 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
SU(6):   %223:gpr64 = LDRSWui %stack.9.j, 0, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
SU(2):   %218:gpr64 = LDRSWui %stack.14.k, 0, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
SU(10):   %226:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !642 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
SU(30):   %244:gpr32 = LDRWui %stack.14.k, 0, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
SU(33):   %247:gpr64 = LDRSWui %stack.9.j, 0, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
SU(3):   %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
SU(7):   %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
SU(4):   %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
SU(5):   %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
SU(8):   %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
SU(11):   %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
SU(12):   %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
SU(13):   %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
SU(9):   STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
SU(14):   %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
SU(54):   %260:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
SU(19):   %236:fpr64 = LDRDui %stack.12.x11, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
SU(35):   %249:fpr64 = LDRDui %stack.12.x11, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
SU(15):   STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
SU(55):   %261:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
SU(20):   %237:fpr64 = LDRDui %stack.13.x21, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
SU(23):   %239:fpr64 = LDRDui %stack.12.x11, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
SU(39):   %252:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
SU(24):   %240:fpr64 = LDRDui %stack.13.x21, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
SU(36):   %250:fpr64 = LDRDui %stack.13.x21, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
SU(21):   %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
SU(40):   %253:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
SU(25):   %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
SU(37):   %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
SU(16):   %231:gpr32 = LDRWui %stack.22.i21, 0, debug-location !646 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
SU(41):   %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
SU(56):   %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
SU(44):   %256:fpr64 = LDRDui %stack.11.u1, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
SU(34):   %248:fpr64 = LDRDui %stack.11.u1, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
SU(29):   %243:gpr32 = LDRWui %stack.23.i22, 0, debug-location !652 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
SU(26):   STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
SU(22):   STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
SU(43):   %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
SU(47):   %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
SU(48):   %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
SU(27):   %242:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
SU(17):   %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
SU(63):   %266:gpr32common = LDRWui %stack.9.j, 0, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
SU(18):   %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
SU(28):   STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
SU(31):   %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
SU(64):   %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
SU(32):   %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
SU(42):   STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
SU(38):   STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
SU(46):   STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
SU(45):   STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
SU(52):   %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
SU(58):   %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
SU(59):   %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
SU(60):   STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
SU(49):   STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
SU(61):   %265:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
SU(51):   STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
SU(50):   STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
SU(57):   STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
SU(53):   STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
SU(62):   STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
SU(65):   STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40

********** MI Scheduling **********
Swarztrauber:%bb.14 for.inc110
  From: %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
    To: B %bb.10, debug-location !663; fft3d.c:92:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%214
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %215:gpr32common = nsw ADDWri %214:gpr32common, 1, 0, debug-location !662; fft3d.c:92:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%214
  Successors:
    SU(2): Data Latency=1 Reg=%215
  Single Issue       : false;
SU(2):   STRWui %215:gpr32common, %stack.14.k, 0, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%215
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.10, debug-location !663; fft3d.c:92:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %215:gpr32common, %stack.14.k, 0, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %215:gpr32common = nsw ADDWri %214:gpr32common, 1, 0, debug-location !662; fft3d.c:92:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
SU(1):   %215:gpr32common = nsw ADDWri %214:gpr32common, 1, 0, debug-location !662; fft3d.c:92:39
SU(2):   STRWui %215:gpr32common, %stack.14.k, 0, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39

********** MI Scheduling **********
Swarztrauber:%bb.15 for.inc113
  From: %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
    To: B %bb.5, debug-location !667; fft3d.c:80:9
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%208
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %209:gpr32common = nsw ADDWri %208:gpr32common, 1, 0, debug-location !666; fft3d.c:80:35
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%208
  Successors:
    SU(2): Data Latency=1 Reg=%209
  Single Issue       : false;
SU(2):   STRWui %209:gpr32common, %stack.8.i, 0, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%209
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.5, debug-location !667; fft3d.c:80:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %209:gpr32common, %stack.8.i, 0, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %209:gpr32common = nsw ADDWri %208:gpr32common, 1, 0, debug-location !666; fft3d.c:80:35
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
SU(1):   %209:gpr32common = nsw ADDWri %208:gpr32common, 1, 0, debug-location !666; fft3d.c:80:35
SU(2):   STRWui %209:gpr32common, %stack.8.i, 0, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35

********** MI Scheduling **********
Swarztrauber:%bb.16 for.end115
  From: %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
    To: Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%41
  Single Issue       : false;
SU(1):   %42:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%42
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %41:gpr32, %42:gpr32, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%42
    SU(0): Data Latency=4 Reg=%41
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %41:gpr32, %42:gpr32, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %42:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
SU(1):   %42:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
SU(2):   dead $wzr = SUBSWrr %41:gpr32, %42:gpr32, implicit-def $nzcv, debug-location !674; fft3d.c:102:13

********** MI Scheduling **********
Swarztrauber:%bb.18 for.cond118
  From: %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%152
  Single Issue       : false;
SU(1):   %153:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%153
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %152:gpr32, %153:gpr32, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%153
    SU(0): Data Latency=4 Reg=%152
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %152:gpr32, %153:gpr32, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %153:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
SU(1):   %153:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
SU(2):   dead $wzr = SUBSWrr %152:gpr32, %153:gpr32, implicit-def $nzcv, debug-location !683; fft3d.c:103:13

********** MI Scheduling **********
Swarztrauber:%bb.20 for.cond121
  From: %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
    To: Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%158
  Single Issue       : false;
SU(1):   %159:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%159
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %158:gpr32, %159:gpr32, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%159
    SU(0): Data Latency=4 Reg=%158
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %158:gpr32, %159:gpr32, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %159:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
SU(1):   %159:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
SU(2):   dead $wzr = SUBSWrr %158:gpr32, %159:gpr32, implicit-def $nzcv, debug-location !692; fft3d.c:104:17

********** MI Scheduling **********
Swarztrauber:%bb.21 for.body123
  From: %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
    To: B %bb.20, debug-location !701; fft3d.c:104:17
 RegionInstrs: 12
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: %170 %233 %0 
Live Out: %170 %233 %0 
Live Thru: GPR32=3
  LiveReg: %170
  UpdateRegP: SU(6) %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
              to GPR32 1
  LiveReg: %233
  UpdateRegP: SU(6) %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
              to 
  LiveReg: %0
  UpdateRegP: SU(2) %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
              to 
Top Pressure:
GPR32=3
Bottom Pressure:
GPR32=3
Excess PSets: 
SU(0):   %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(3): Data Latency=4 Reg=%163
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %164:gpr64 = LDRSWui %stack.14.k, 0, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Data Latency=4 Reg=%164
    SU(2): Data Latency=4 Reg=%164
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(1): Data Latency=4 Reg=%164
  Successors:
    SU(3): Data Latency=1 Reg=%165
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(2): Data Latency=1 Reg=%165
    SU(0): Data Latency=4 Reg=%163
  Successors:
    SU(8): Data Latency=1 Reg=%166
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %167:gpr64 = LDRSWui %stack.9.j, 0, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(5): Data Latency=4 Reg=%167
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(4): Data Latency=4 Reg=%167
  Successors:
    SU(8): Data Latency=1 Reg=%168
    SU(7): Data Latency=1 Reg=%168
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(1): Data Latency=4 Reg=%164
  Successors:
    SU(7): Data Latency=1 Reg=%173
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(6): Data Latency=1 Reg=%173
    SU(5): Data Latency=1 Reg=%168
  Successors:
    SU(8): Data Latency=4 Reg=%174
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(8):   STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  # preds left       : 7
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 6
  Predecessors:
    SU(7): Data Latency=4 Reg=%174
    SU(7): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%168
    SU(4): Ord  Latency=0 Memory
    SU(3): Data Latency=1 Reg=%166
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(9):   %175:gpr32common = LDRWui %stack.9.j, 0, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(8): Ord  Latency=1 Memory
  Successors:
    SU(10): Data Latency=4 Reg=%175
    SU(11): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(10):   %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 14
  Height             : 1
  Predecessors:
    SU(9): Data Latency=4 Reg=%175
  Successors:
    SU(11): Data Latency=1 Reg=%176
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%176
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.20, debug-location !701; fft3d.c:104:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 15
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
Bottom Pressure:
GPR32=4
  LiveReg: %176
  UpdateRegP: SU(11) STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
              to 
  Ready @0c
  BotQ.A TopLatency SU(11) 15c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 
Pick Bot ONLY1     
Scheduling SU(10) %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
Bottom Pressure:
GPR32=4
  LiveReg: %175
  UpdateRegP: SU(10) %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) %175:gpr32common = LDRWui %stack.9.j, 0, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
Bottom Pressure:
GPR32=3
  Ready @5c
  BotQ.A BotLatency SU(9) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
Bottom Pressure:
FPR8=1
GPR32=5
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %174
  UpdateRegP: SU(8) STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
              to GPR32 2
  LiveReg: %166
  UpdateRegP: SU(8) STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
              to GPR32 1
  LiveReg: %168
  UpdateRegP: SU(7) %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(8) STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
              to 
  Ready @6c
  BotQ.A BotLatency SU(8) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %163
  UpdateRegP: SU(3) %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
              to 
  LiveReg: %165
  UpdateRegP: SU(3) %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
              to GPR32 -1
  Ready @7c
  BotQ.A BotLatency SU(3) 7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %164
  UpdateRegP: SU(2) %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
              to GPR32 -1
  UpdateRegP: SU(6) %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
              to GPR32 -1
  Ready @8c
  BotQ.A BotLatency SU(2) 8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 10 BotQ.A
Queue BotQ.P: 0 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
Bottom Pressure:
GPR32=7
  LiveReg: %173
  UpdateRegP: SU(7) %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @10c
  BotQ.A BotLatency SU(7) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 7
  Executed: 11c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 5 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(6) 4c
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(6) %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
Bottom Pressure:
GPR32=6
  Ready @11c
  BotQ.A BotLatency SU(6) 11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 8
  Executed: 12c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 
Queue BotQ.A: 0 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 
BotQ.A RemLatency SU(5) 4c
  BotQ.A RemainingLatency 4 + 12c > CritPath 15
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(5) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
Bottom Pressure:
GPR32=6
  LiveReg: %167
  UpdateRegP: SU(5) %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
              to GPR32 -1
  Ready @12c
  BotQ.A TopLatency SU(5) 4c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 9
  Executed: 13c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 1 4 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
Bottom Pressure:
GPR32=5
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 10
  Executed: 14c
  Critical: 10c, 10 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 15 BotQ.A
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %164:gpr64 = LDRSWui %stack.14.k, 0, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
Bottom Pressure:
GPR32=4
  Ready @15c
  BotQ.A BotLatency SU(1) 15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 11
  Executed: 16c
  Critical: 11c, 11 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %167:gpr64 = LDRSWui %stack.9.j, 0, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
Bottom Pressure:
GPR32=3
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 12
  Executed: 17c
  Critical: 12c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.21 ***
SU(4):   %167:gpr64 = LDRSWui %stack.9.j, 0, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
SU(1):   %164:gpr64 = LDRSWui %stack.14.k, 0, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
SU(0):   %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
SU(5):   %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
SU(6):   %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
SU(7):   %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
SU(2):   %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
SU(3):   %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
SU(8):   STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
SU(9):   %175:gpr32common = LDRWui %stack.9.j, 0, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
SU(10):   %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
SU(11):   STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40

********** MI Scheduling **********
Swarztrauber:%bb.22 for.inc135
  From: %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
    To: B %bb.18, debug-location !705; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%161
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %162:gpr32common = nsw ADDWri %161:gpr32common, 1, 0, debug-location !704; fft3d.c:103:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%161
  Successors:
    SU(2): Data Latency=1 Reg=%162
  Single Issue       : false;
SU(2):   STRWui %162:gpr32common, %stack.14.k, 0, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%162
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.18, debug-location !705; fft3d.c:103:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %162:gpr32common, %stack.14.k, 0, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %162:gpr32common = nsw ADDWri %161:gpr32common, 1, 0, debug-location !704; fft3d.c:103:33
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
SU(1):   %162:gpr32common = nsw ADDWri %161:gpr32common, 1, 0, debug-location !704; fft3d.c:103:33
SU(2):   STRWui %162:gpr32common, %stack.14.k, 0, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33

********** MI Scheduling **********
Swarztrauber:%bb.23 if.else138
  From: %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=1
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%44
    SU(1): Data Latency=4 Reg=%44
    SU(3): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%44
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(2):   %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%44
  Successors:
    SU(3): Data Latency=1 Reg=%45
  Pressure Diff      : 
  Single Issue       : false;
SU(3):   STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%45
    SU(0): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %46:gpr32common = LDRWui %stack.16.li, 0, debug-location !714 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(6): Data Latency=4 Reg=%46
    SU(5): Data Latency=4 Reg=%46
    SU(8): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Data Latency=4 Reg=%46
  Successors:
    SU(6): Data Latency=1 Reg=$nzcv
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$nzcv
    SU(4): Data Latency=4 Reg=%46
  Successors:
    SU(7): Data Latency=1 Reg=%48
  Pressure Diff      : 
  Single Issue       : false;
SU(7):   %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=%48
  Successors:
    SU(9): Data Latency=1 Reg=%49
    SU(8): Data Latency=1 Reg=%49
  Pressure Diff      : 
  Single Issue       : false;
SU(8):   STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%49
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(7): Data Latency=1 Reg=%49
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
Critical Path(GS-RR ): 7
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 8 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 4 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) STRWui $wzr, %stack.8.i, 0, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20
Bottom Pressure:

  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 9 8 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(9) 7c
  BotQ.A RemainingLatency 7 + 1c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(9) BOT-PATH                  7 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
Bottom Pressure:
GPR32=1
  LiveReg: %49
  UpdateRegP: SU(8) STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
              to 
  UpdateRegP: SU(9) STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
              to 
  Ready @1c
  BotQ.A TopLatency SU(9) 7c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 8 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(8) 7c
  BotQ.A RemainingLatency 7 + 2c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(8) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
Bottom Pressure:
GPR32=1
  Ready @2c
  BotQ.A TopLatency SU(8) 7c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 7 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(7) 6c
  BotQ.A RemainingLatency 6 + 3c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(7) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(7) %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
Bottom Pressure:
GPR32=1
  LiveReg: %48
  UpdateRegP: SU(7) %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
              to GPR32 -1
  Ready @3c
  BotQ.A BotLatency SU(7) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 6 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(6) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(6) %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
Bottom Pressure:
GPR32=1
  LiveReg: %46
  UpdateRegP: SU(5) dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
              to 
  UpdateRegP: SU(6) %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
              to GPR32 -1
  Ready @4c
  BotQ.A BotLatency SU(6) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 3 5 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
  Cand SU(5) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(5) dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
Bottom Pressure:
GPR32=1
  Ready @5c
  BotQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 3 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 6c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(3) STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
Bottom Pressure:
GPR32=2
  LiveReg: %45
  UpdateRegP: SU(3) STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
              to 
  Ready @6c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 4 
BotQ.A RemLatency SU(1) 4c
  BotQ.A RemainingLatency 4 + 7c > CritPath 7
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
Bottom Pressure:
GPR32=2
  LiveReg: %44
  UpdateRegP: SU(1) STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
              to 
  UpdateRegP: SU(2) %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
              to GPR32 -1
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
Bottom Pressure:
GPR32=2
  Ready @8c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %46:gpr32common = LDRWui %stack.16.li, 0, debug-location !714 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
Bottom Pressure:
GPR32=1
  Ready @9c
  BotQ.A BotLatency SU(4) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 12 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
Bottom Pressure:

  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 11
  Executed: 13c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
SU(4):   %46:gpr32common = LDRWui %stack.16.li, 0, debug-location !714 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
SU(1):   STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
SU(2):   %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
SU(3):   STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
SU(5):   dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
SU(6):   %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
SU(7):   %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
SU(8):   STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
SU(9):   STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
SU(10):   STRWui $wzr, %stack.8.i, 0, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20

********** MI Scheduling **********
Swarztrauber:%bb.24 for.cond141
  From: %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
    To: Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%51
  Single Issue       : false;
SU(1):   %52:gpr32common = LDRWui %stack.16.li, 0, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%52
  Single Issue       : false;
SU(2):   %53:gpr32common = SUBWri %52:gpr32common, 1, 0, debug-location !725; fft3d.c:115:33
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%52
  Successors:
    SU(3): Data Latency=1 Reg=%53
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %51:gpr32, %53:gpr32common, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%53
    SU(0): Data Latency=4 Reg=%51
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %51:gpr32, %53:gpr32common, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %53:gpr32common = SUBWri %52:gpr32common, 1, 0, debug-location !725; fft3d.c:115:33
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %52:gpr32common = LDRWui %stack.16.li, 0, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.24 ***
SU(1):   %52:gpr32common = LDRWui %stack.16.li, 0, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
SU(0):   %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
SU(2):   %53:gpr32common = SUBWri %52:gpr32common, 1, 0, debug-location !725; fft3d.c:115:33
SU(3):   dead $wzr = SUBSWrr %51:gpr32, %53:gpr32common, implicit-def $nzcv, debug-location !727; fft3d.c:115:13

********** MI Scheduling **********
Swarztrauber:%bb.25 for.body144
  From: %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
    To: Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21
 RegionInstrs: 14
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR32=4
Live In: 
Live Out: 
Live Thru: 
Top Pressure:

Bottom Pressure:

Excess PSets: 
SU(0):   %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%55
    SU(2): Data Latency=4 Reg=%55
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %56:gpr32 = LDRWui %stack.18.lk, 0, debug-location !730 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=%56
    SU(2): Data Latency=4 Reg=%56
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%56
    SU(0): Data Latency=4 Reg=%55
  Successors:
    SU(5): Data Latency=1 Reg=%57
    SU(3): Data Latency=1 Reg=%57
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%57
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %58:gpr32 = LDRWui %stack.15.n1, 0, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=4 Reg=%58
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%57
    SU(4): Data Latency=4 Reg=%58
  Successors:
    SU(6): Data Latency=1 Reg=%59
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(5): Data Latency=1 Reg=%59
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(7):   %60:gpr32 = LDRWui %stack.17.lj, 0, debug-location !738 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(8): Data Latency=4 Reg=%60
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(8):   %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(7): Data Latency=4 Reg=%60
    SU(0): Data Latency=4 Reg=%55
  Successors:
    SU(10): Data Latency=1 Reg=%61
    SU(9): Data Latency=1 Reg=%61
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(9):   STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%61
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(8): Data Latency=1 Reg=%61
    SU(1): Data Latency=4 Reg=%56
  Successors:
    SU(11): Data Latency=1 Reg=%62
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(11):   STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%62
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %63:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(13): Data Latency=4 Reg=%63
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(13):   dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(12): Data Latency=4 Reg=%63
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(13): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 11 9 6 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
Picking from Bot:
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(11) STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
Bottom Pressure:
GPR32=1
  LiveReg: %62
  UpdateRegP: SU(11) STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
              to 
  Ready @0c
  BotQ.A TopLatency SU(11) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 6 10 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 1c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(6) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
Bottom Pressure:
GPR32=2
  LiveReg: %59
  UpdateRegP: SU(6) STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
              to 
  Ready @1c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 2c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
Bottom Pressure:
GPR32=3
  LiveReg: %61
  UpdateRegP: SU(9) STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
              to 
  UpdateRegP: SU(10) %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
              to 
  LiveReg: %56
  UpdateRegP: SU(2) %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
              to 
  UpdateRegP: SU(10) %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
              to GPR32 -1
  Ready @2c
  BotQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 9 13 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 3c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(9) STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
Bottom Pressure:
GPR32=3
  Ready @3c
  BotQ.A TopLatency SU(9) 5c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 4c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
Bottom Pressure:
GPR32=4
  LiveReg: %57
  UpdateRegP: SU(3) STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
              to 
  UpdateRegP: SU(5) %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
              to 
  LiveReg: %58
  UpdateRegP: SU(5) %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
              to GPR32 -1
  Ready @4c
  BotQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 3 8 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 5c > CritPath 6
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 13 8 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
BotQ.A RemLatency SU(13) 4c
  BotQ.A RemainingLatency 4 + 6c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(2) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(2) %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
Bottom Pressure:
GPR32=4
  LiveReg: %55
  UpdateRegP: SU(2) %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
              to GPR32 -1
  UpdateRegP: SU(8) %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
              to 
  Ready @6c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 1 
Queue BotQ.A: 13 8 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 7c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(8) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(8) %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
Bottom Pressure:
GPR32=4
  LiveReg: %60
  UpdateRegP: SU(8) %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
              to GPR32 -1
  Ready @7c
  BotQ.A TopLatency SU(8) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 7 
Queue BotQ.A: 13 4 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 
  BotQ.A RemainingLatency 0 + 8c > CritPath 6
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(4) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(4) %58:gpr32 = LDRWui %stack.15.n1, 0, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
Bottom Pressure:
GPR32=3
  Ready @8c
  BotQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 7 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
Bottom Pressure:
GPR32=4
  LiveReg: %63
  UpdateRegP: SU(13) dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
              to 
  Ready @9c
  BotQ.A TopLatency SU(13) 4c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 12 7 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %56:gpr32 = LDRWui %stack.18.lk, 0, debug-location !730 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
Bottom Pressure:
GPR32=3
  Ready @10c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 0 7 
Queue TopQ.P: 
Queue TopQ.A: 0 7 12 
  BotQ.A RemainingLatency 0 + 11c > CritPath 6
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) %60:gpr32 = LDRWui %stack.17.lj, 0, debug-location !738 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
Bottom Pressure:
GPR32=2
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 12 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
Bottom Pressure:
GPR32=1
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) %63:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
Bottom Pressure:

  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.25 ***
SU(12):   %63:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
SU(0):   %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
SU(7):   %60:gpr32 = LDRWui %stack.17.lj, 0, debug-location !738 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
SU(1):   %56:gpr32 = LDRWui %stack.18.lk, 0, debug-location !730 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
SU(13):   dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
SU(4):   %58:gpr32 = LDRWui %stack.15.n1, 0, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
SU(8):   %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
SU(2):   %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
SU(3):   STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
SU(5):   %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
SU(9):   STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
SU(10):   %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
SU(6):   STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
SU(11):   STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21

********** MI Scheduling **********
Swarztrauber:%bb.26 if.then150
  From: %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
    To: B %bb.28, debug-location !754; fft3d.c:123:17
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=%75
  Single Issue       : false;
SU(1):   %76:gpr32 = LDRWui %stack.19.ku, 0, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%76
  Single Issue       : false;
SU(2):   %77:gpr32 = LDRWui %stack.8.i, 0, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%77
  Single Issue       : false;
SU(3):   %78:gpr32 = nsw ADDWrr %76:gpr32, %77:gpr32, debug-location !753; fft3d.c:122:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=%77
    SU(1): Data Latency=4 Reg=%76
  Successors:
    SU(4): Data Latency=1 Reg=%78
  Single Issue       : false;
SU(4):   %270:gpr64sp = ADDXrx %75:gpr64common, %78:gpr32, 52, debug-location !749; fft3d.c:122:26
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%78
    SU(0): Data Latency=4 Reg=%75
  Single Issue       : false;
ExitSU:   B %bb.28, debug-location !754; fft3d.c:123:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %270:gpr64sp = ADDXrx %75:gpr64common, %78:gpr32, 52, debug-location !749; fft3d.c:122:26
  Ready @0c
  BotQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %78:gpr32 = nsw ADDWrr %76:gpr32, %77:gpr32, debug-location !753; fft3d.c:122:38
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  Ready @4c
  BotQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %77:gpr32 = LDRWui %stack.8.i, 0, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  Ready @5c
  BotQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %76:gpr32 = LDRWui %stack.19.ku, 0, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.26 ***
SU(1):   %76:gpr32 = LDRWui %stack.19.ku, 0, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
SU(2):   %77:gpr32 = LDRWui %stack.8.i, 0, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
SU(0):   %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
SU(3):   %78:gpr32 = nsw ADDWrr %76:gpr32, %77:gpr32, debug-location !753; fft3d.c:122:38
SU(4):   %270:gpr64sp = ADDXrx %75:gpr64common, %78:gpr32, 52, debug-location !749; fft3d.c:122:26

********** MI Scheduling **********
Swarztrauber:%bb.27 if.else154
  From: %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
    To: End RegionInstrs: 11
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=1
GPR32=3
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
Live In: 
Live Out: %270 
Live Thru: 
  LiveReg: %270
Top Pressure:

Bottom Pressure:
GPR32=1
Excess PSets: 
SU(0):   %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=%66
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %67:gpr32 = LDRWui %stack.19.ku, 0, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%67
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %68:gpr32 = LDRWui %stack.8.i, 0, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=%68
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(2): Data Latency=4 Reg=%68
    SU(1): Data Latency=4 Reg=%67
  Successors:
    SU(4): Data Latency=1 Reg=%69
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Data Latency=1 Reg=%69
    SU(0): Data Latency=4 Reg=%66
  Successors:
    SU(7): Data Latency=1 Reg=%70
    SU(5): Data Latency=1 Reg=%70
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(5):   %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=%70
  Successors:
    SU(6): Data Latency=4 Reg=%71
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(6):   STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=%71
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(7):   %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Ord  Latency=1 Memory
    SU(4): Data Latency=1 Reg=%70
  Successors:
    SU(8): Data Latency=4 Reg=%72
    SU(9): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(8):   %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Data Latency=4 Reg=%72
  Successors:
    SU(9): Data Latency=1 Reg=%73
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%73
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(10):   %270:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
Critical Path(GS-RR ): 16
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 10 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 10 
Picking from Bot:
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(10) %270:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0
Bottom Pressure:

  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 
Pick Bot ONLY1     
Scheduling SU(9) STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
Bottom Pressure:
FPR8=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %73
  UpdateRegP: SU(9) STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
              to 
  Ready @1c
  BotQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
Bottom Pressure:
FPR8=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %72
  UpdateRegP: SU(8) %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @2c
  BotQ.A BotLatency SU(8) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 6 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 7 
Pick Bot ONLY1     
Scheduling SU(7) %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
Bottom Pressure:
GPR32=1
  LiveReg: %70
  UpdateRegP: SU(5) %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(7) %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @6c
  BotQ.A BotLatency SU(7) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
Bottom Pressure:
FPR8=1
GPR32=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %71
  UpdateRegP: SU(6) STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
              to 
  Ready @7c
  BotQ.A BotLatency SU(6) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 11 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
Bottom Pressure:
GPR32=1
  Ready @11c
  BotQ.A BotLatency SU(5) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 6
  Executed: 12c
  Critical: 6c, 6 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
Bottom Pressure:
GPR32=2
  LiveReg: %66
  UpdateRegP: SU(4) %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
              to 
  LiveReg: %69
  UpdateRegP: SU(4) %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
              to GPR32 -1
  Ready @12c
  BotQ.A BotLatency SU(4) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 7
  Executed: 13c
  Critical: 7c, 7 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
Bottom Pressure:
GPR32=3
  LiveReg: %67
  UpdateRegP: SU(3) %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
              to 
  LiveReg: %68
  UpdateRegP: SU(3) %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
              to GPR32 -1
  Ready @13c
  BotQ.A BotLatency SU(3) 12c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 8
  Executed: 14c
  Critical: 8c, 8 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 16 BotQ.A
Queue BotQ.P: 1 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
Bottom Pressure:
GPR32=2
  Ready @16c
  BotQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 9
  Executed: 17c
  Critical: 9c, 9 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  BotQ.A RemainingLatency 0 + 17c > CritPath 16
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) %68:gpr32 = LDRWui %stack.8.i, 0, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
Bottom Pressure:
GPR32=1
  Ready @17c
  BotQ.A BotLatency SU(2) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 10
  Executed: 18c
  Critical: 10c, 10 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %67:gpr32 = LDRWui %stack.19.ku, 0, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
Bottom Pressure:

  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 11
  Executed: 19c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.27 ***
SU(1):   %67:gpr32 = LDRWui %stack.19.ku, 0, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
SU(2):   %68:gpr32 = LDRWui %stack.8.i, 0, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
SU(0):   %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
SU(3):   %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
SU(4):   %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
SU(5):   %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
SU(6):   STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
SU(7):   %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
SU(8):   %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
SU(9):   STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
SU(10):   %270:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

********** MI Scheduling **********
Swarztrauber:%bb.28 if.end167
  From: %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(1): Data Latency=4 Reg=%80
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   STRQui %80:fpr128, %268:gpr64sp, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=%80
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
Critical Path(GS-RR ): 4
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 1 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRWui $wzr, %stack.14.k, 0, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRQui %80:fpr128, %268:gpr64sp, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0
  Ready @0c
  BotQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
SU(2):   STRWui $wzr, %stack.14.k, 0, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
SU(1):   STRQui %80:fpr128, %268:gpr64sp, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0

********** MI Scheduling **********
Swarztrauber:%bb.29 for.cond168
  From: %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
    To: Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=%82
  Single Issue       : false;
SU(1):   %83:gpr32common = LDRWui %stack.18.lk, 0, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=4 Reg=%83
  Single Issue       : false;
SU(2):   %84:gpr32common = SUBWri %83:gpr32common, 1, 0, debug-location !764; fft3d.c:127:37
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(1): Data Latency=4 Reg=%83
  Successors:
    SU(3): Data Latency=1 Reg=%84
  Single Issue       : false;
SU(3):   dead $wzr = SUBSWrr %82:gpr32, %84:gpr32common, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=%84
    SU(0): Data Latency=4 Reg=%82
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) dead $wzr = SUBSWrr %82:gpr32, %84:gpr32common, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  Ready @1c
  BotQ.A TopLatency SU(3) 5c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %84:gpr32common = SUBWri %83:gpr32common, 1, 0, debug-location !764; fft3d.c:127:37
  Ready @2c
  BotQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %83:gpr32common = LDRWui %stack.18.lk, 0, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  Ready @6c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.29 ***
SU(1):   %83:gpr32common = LDRWui %stack.18.lk, 0, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
SU(0):   %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
SU(2):   %84:gpr32common = SUBWri %83:gpr32common, 1, 0, debug-location !764; fft3d.c:127:37
SU(3):   dead $wzr = SUBSWrr %82:gpr32, %84:gpr32common, implicit-def $nzcv, debug-location !766; fft3d.c:127:17

********** MI Scheduling **********
Swarztrauber:%bb.31 for.cond172
  From: %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
    To: Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%89
  Single Issue       : false;
SU(1):   %90:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=%90
  Single Issue       : false;
SU(2):   dead $wzr = SUBSWrr %89:gpr32, %90:gpr32, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=%90
    SU(0): Data Latency=4 Reg=%89
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) dead $wzr = SUBSWrr %89:gpr32, %90:gpr32, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  Ready @1c
  BotQ.A TopLatency SU(2) 4c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %90:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  Ready @5c
  BotQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 3
  Executed: 7c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
SU(1):   %90:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
SU(2):   dead $wzr = SUBSWrr %89:gpr32, %90:gpr32, implicit-def $nzcv, debug-location !775; fft3d.c:128:21

********** MI Scheduling **********
Swarztrauber:%bb.32 for.body174
  From: %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
    To: B %bb.31, debug-location !800; fft3d.c:128:21
 RegionInstrs: 72
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
Live In: %0 %268 %170 %233 
Live Out: %0 %268 %170 %233 
Live Thru: GPR32=4
  LiveReg: %0
  UpdateRegP: SU(17) %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
              to 
  UpdateRegP: SU(33) %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
              to 
  LiveReg: %268
  UpdateRegP: SU(7) STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  UpdateRegP: SU(12) STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
              to FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  LiveReg: %170
  UpdateRegP: SU(3) %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
              to GPR32 1
  UpdateRegP: SU(10) %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
              to GPR32 1
  LiveReg: %233
  UpdateRegP: SU(3) %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
              to 
  UpdateRegP: SU(10) %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
              to 
Top Pressure:
GPR32=4
Bottom Pressure:
GPR32=4
Excess PSets: 
Cluster ld/st SU(1) - SU(15)
  Copy Succ SU(9)
  Copy Succ SU(2)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(23) - SU(19)
  Copy Succ SU(25)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(24) - SU(20)
  Copy Succ SU(25)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(42) - SU(61)
  Copy Succ SU(43)
  Copy Succ SU(68)
Cluster ld/st SU(38) - SU(57)
  Copy Succ SU(39)
  Copy Succ SU(68)
Cluster ld/st SU(41) - SU(60)
  Copy Succ SU(43)
  Copy Succ SU(68)
Cluster ld/st SU(37) - SU(56)
  Copy Succ SU(39)
  Copy Succ SU(68)
Cluster ld/st SU(46) - SU(55)
  Copy Succ SU(49)
  Copy Succ SU(68)
Cluster ld/st SU(12) - SU(7)
  Copy Succ SU(61)
  Copy Succ SU(57)
  Copy Succ SU(42)
  Copy Succ SU(38)
  Copy Succ SU(24)
  Copy Succ SU(20)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(26) - SU(22)
  Copy Succ SU(27)
  Copy Succ SU(68)
  Copy Succ SU(28)
Cluster ld/st SU(63) - SU(59)
  Copy Succ SU(68)
Cluster ld/st SU(53) - SU(52)
  Copy Succ SU(68)
Cluster ld/st SU(48) - SU(47)
  Copy Succ SU(68)
Cluster ld/st SU(44) - SU(40)
  Copy Succ SU(68)
Cluster ld/st SU(66) - SU(51)
  Copy Succ SU(67)
  Copy Succ SU(68)
SU(0):   %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(2): Data Latency=4 Reg=%94
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   %95:gpr32 = LDRWui %stack.14.k, 0, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  # preds left       : 0
  # succs left       : 4
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(9): Data Latency=4 Reg=%95
    SU(2): Data Latency=4 Reg=%95
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(2):   %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 36
  Predecessors:
    SU(1): Data Latency=4 Reg=%95
    SU(0): Data Latency=4 Reg=%94
    SU(15): Ord  Latency=0 Artificial
  Successors:
    SU(3): Data Latency=1 Reg=%96
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(3):   %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 35
  Predecessors:
    SU(2): Data Latency=1 Reg=%96
  Successors:
    SU(6): Data Latency=1 Reg=%99
  Pressure Diff      : 
  Single Issue       : false;
SU(4):   %100:gpr64 = LDRSWui %stack.9.j, 0, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 39
  Successors:
    SU(5): Data Latency=4 Reg=%100
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 35
  Predecessors:
    SU(4): Data Latency=4 Reg=%100
  Successors:
    SU(28): Data Latency=1 Reg=%101
    SU(11): Data Latency=1 Reg=%101
    SU(6): Data Latency=1 Reg=%101
  Pressure Diff      : 
  Single Issue       : false;
SU(6):   %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 34
  Predecessors:
    SU(3): Data Latency=1 Reg=%99
    SU(5): Data Latency=1 Reg=%101
  Successors:
    SU(7): Data Latency=4 Reg=%102
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(7):   STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
  # preds left       : 1
  # succs left       : 14
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 30
  Predecessors:
    SU(6): Data Latency=4 Reg=%102
    SU(12): Ord  Latency=0 Cluster
  Successors:
    SU(60): Ord  Latency=1 Memory
    SU(56): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Artificial
    SU(57): Ord  Latency=0 Artificial
    SU(42): Ord  Latency=0 Artificial
    SU(38): Ord  Latency=0 Artificial
    SU(24): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(8):   %103:gpr32 = LDRWui %stack.21.i12, 0, debug-location !782 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(9): Data Latency=4 Reg=%103
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 36
  Predecessors:
    SU(8): Data Latency=4 Reg=%103
    SU(1): Data Latency=4 Reg=%95
    SU(15): Ord  Latency=0 Artificial
  Successors:
    SU(10): Data Latency=1 Reg=%104
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 35
  Predecessors:
    SU(9): Data Latency=1 Reg=%104
  Successors:
    SU(11): Data Latency=1 Reg=%105
  Pressure Diff      : 
  Single Issue       : false;
SU(11):   %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 34
  Predecessors:
    SU(10): Data Latency=1 Reg=%105
    SU(5): Data Latency=1 Reg=%101
  Successors:
    SU(12): Data Latency=4 Reg=%106
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    GPR32 2    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(12):   STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
  # preds left       : 1
  # succs left       : 8
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 30
  Predecessors:
    SU(11): Data Latency=4 Reg=%106
  Successors:
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(42): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(13):   %107:gpr64 = LDRXui %stack.7.x, 0, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 24
  Successors:
    SU(18): Data Latency=4 Reg=%107
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(14):   %108:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 26
  Successors:
    SU(16): Data Latency=4 Reg=%108
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   %109:gpr64 = LDRSWui %stack.14.k, 0, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  # preds left       : 0
  # succs left       : 5
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 36
  Predecessors:
    SU(1): Ord  Latency=0 Cluster
  Successors:
    SU(16): Data Latency=4 Reg=%109
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Artificial
    SU(2): Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(16):   %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 22
  Predecessors:
    SU(15): Data Latency=4 Reg=%109
    SU(14): Data Latency=4 Reg=%108
  Successors:
    SU(17): Data Latency=1 Reg=%110
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(17):   %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 21
  Predecessors:
    SU(16): Data Latency=1 Reg=%110
  Successors:
    SU(18): Data Latency=1 Reg=%111
  Pressure Diff      : 
  Single Issue       : false;
SU(18):   %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 20
  Predecessors:
    SU(17): Data Latency=1 Reg=%111
    SU(13): Data Latency=4 Reg=%107
  Successors:
    SU(28): Data Latency=1 Reg=%112
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(19):   %113:fpr64 = LDRDui %stack.12.x11, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(7): Ord  Latency=1 Memory
    SU(23): Ord  Latency=0 Cluster
  Successors:
    SU(21): Data Latency=4 Reg=%113
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(20):   %114:fpr64 = LDRDui %stack.13.x21, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 4
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(12): Ord  Latency=1 Memory
    SU(24): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(21): Data Latency=4 Reg=%114
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(21):   %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 25
  Predecessors:
    SU(20): Data Latency=4 Reg=%114
    SU(19): Data Latency=4 Reg=%113
  Successors:
    SU(22): Data Latency=1 Reg=%115
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(22):   STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 24
  Predecessors:
    SU(21): Data Latency=1 Reg=%115
    SU(26): Ord  Latency=0 Cluster
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(23):   %116:fpr64 = LDRDui %stack.12.x11, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=%116
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(24):   %117:fpr64 = LDRDui %stack.13.x21, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 29
  Predecessors:
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(25): Data Latency=4 Reg=%117
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(25):   %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 25
  Predecessors:
    SU(24): Data Latency=4 Reg=%117
    SU(23): Data Latency=4 Reg=%116
    SU(19): Ord  Latency=0 Artificial
    SU(20): Ord  Latency=0 Artificial
  Successors:
    SU(26): Data Latency=1 Reg=%118
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(26):   STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 3
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 24
  Predecessors:
    SU(25): Data Latency=1 Reg=%118
  Successors:
    SU(27): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(27):   %119:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 23
  Predecessors:
    SU(26): Ord  Latency=1 Memory
    SU(22): Ord  Latency=1 Memory
  Successors:
    SU(28): Data Latency=4 Reg=%119
    SU(68): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(28):   STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  # preds left       : 21
  # succs left       : 29
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 19
  Predecessors:
    SU(27): Data Latency=4 Reg=%119
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(18): Data Latency=1 Reg=%112
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Data Latency=1 Reg=%101
    SU(4): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(69): Ord  Latency=1 Memory
    SU(35): Ord  Latency=1 Memory
    SU(67): Ord  Latency=1 Memory
    SU(61): Ord  Latency=1 Memory
    SU(57): Ord  Latency=1 Memory
    SU(42): Ord  Latency=1 Memory
    SU(38): Ord  Latency=1 Memory
    SU(60): Ord  Latency=1 Memory
    SU(56): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(37): Ord  Latency=1 Memory
    SU(55): Ord  Latency=1 Memory
    SU(46): Ord  Latency=1 Memory
    SU(36): Ord  Latency=1 Memory
    SU(31): Ord  Latency=1 Memory
    SU(30): Ord  Latency=1 Memory
    SU(29): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(29):   %120:gpr64 = LDRXui %stack.7.x, 0, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 11
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(34): Data Latency=4 Reg=%120
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(30):   %121:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(32): Data Latency=4 Reg=%121
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(31):   %122:gpr64 = LDRSWui %stack.14.k, 0, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(32): Data Latency=4 Reg=%122
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(32):   %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 9
  Predecessors:
    SU(31): Data Latency=4 Reg=%122
    SU(30): Data Latency=4 Reg=%121
  Successors:
    SU(33): Data Latency=1 Reg=%123
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(33):   %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 8
  Predecessors:
    SU(32): Data Latency=1 Reg=%123
  Successors:
    SU(34): Data Latency=1 Reg=%124
  Pressure Diff      : 
  Single Issue       : false;
SU(34):   %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 7
  Predecessors:
    SU(33): Data Latency=1 Reg=%124
    SU(29): Data Latency=4 Reg=%120
  Successors:
    SU(68): Data Latency=1 Reg=%125
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(35):   %126:gpr64 = LDRSWui %stack.9.j, 0, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(68): Data Latency=4 Reg=%126
    SU(71): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(36):   %127:fpr64 = LDRDui %stack.11.u1, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(54): Data Latency=4 Reg=%127
    SU(45): Data Latency=4 Reg=%127
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(37):   %128:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(39): Data Latency=4 Reg=%128
    SU(68): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(38):   %129:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(39): Data Latency=4 Reg=%129
    SU(68): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(39):   %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(38): Data Latency=4 Reg=%129
    SU(37): Data Latency=4 Reg=%128
    SU(57): Ord  Latency=0 Artificial
    SU(56): Ord  Latency=0 Artificial
  Successors:
    SU(52): Data Latency=1 Reg=%130
    SU(47): Data Latency=1 Reg=%130
    SU(45): Data Latency=1 Reg=%130
    SU(40): Data Latency=1 Reg=%130
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(40):   STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%130
    SU(28): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(41):   %131:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
  Successors:
    SU(43): Data Latency=4 Reg=%131
    SU(68): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(42):   %132:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(43): Data Latency=4 Reg=%132
    SU(68): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(43):   %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(42): Data Latency=4 Reg=%132
    SU(41): Data Latency=4 Reg=%131
    SU(61): Ord  Latency=0 Artificial
    SU(60): Ord  Latency=0 Artificial
  Successors:
    SU(54): Data Latency=1 Reg=%133
    SU(53): Data Latency=1 Reg=%133
    SU(49): Data Latency=1 Reg=%133
    SU(48): Data Latency=1 Reg=%133
    SU(44): Data Latency=1 Reg=%133
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(44):   STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%133
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(45):   %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(39): Data Latency=1 Reg=%130
    SU(36): Data Latency=4 Reg=%127
  Successors:
    SU(50): Data Latency=1 Reg=%134
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(46):   %135:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(49): Data Latency=4 Reg=%135
    SU(68): Ord  Latency=0 Memory
    SU(55): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(47):   STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%130
    SU(28): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(48):   STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%133
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(49):   %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(43): Data Latency=1 Reg=%133
    SU(46): Data Latency=4 Reg=%135
    SU(55): Ord  Latency=0 Artificial
  Successors:
    SU(50): Data Latency=1 Reg=%136
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(50):   %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 12
  Predecessors:
    SU(49): Data Latency=1 Reg=%136
    SU(45): Data Latency=1 Reg=%134
  Successors:
    SU(51): Data Latency=1 Reg=%137
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(51):   STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 11
  Predecessors:
    SU(50): Data Latency=1 Reg=%137
    SU(28): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Cluster
  Successors:
    SU(67): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(52):   STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(39): Data Latency=1 Reg=%130
    SU(28): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(53):   STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(43): Data Latency=1 Reg=%133
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(54):   %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(43): Data Latency=1 Reg=%133
    SU(36): Data Latency=4 Reg=%127
  Successors:
    SU(65): Data Latency=1 Reg=%138
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(55):   %139:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  # preds left       : 1
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 17
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(46): Ord  Latency=0 Cluster
  Successors:
    SU(64): Data Latency=4 Reg=%139
    SU(68): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(56):   %140:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
    SU(37): Ord  Latency=0 Cluster
  Successors:
    SU(58): Data Latency=4 Reg=%140
    SU(68): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(57):   %141:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(38): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(58): Data Latency=4 Reg=%141
    SU(68): Ord  Latency=0 Memory
    SU(39): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(58):   %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(57): Data Latency=4 Reg=%141
    SU(56): Data Latency=4 Reg=%140
  Successors:
    SU(64): Data Latency=1 Reg=%142
    SU(59): Data Latency=1 Reg=%142
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(59):   STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(58): Data Latency=1 Reg=%142
    SU(28): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Cluster
  Successors:
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(60):   %143:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 14
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
    SU(41): Ord  Latency=0 Cluster
  Successors:
    SU(62): Data Latency=4 Reg=%143
    SU(68): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(61):   %144:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 14
  Predecessors:
    SU(28): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(42): Ord  Latency=0 Cluster
    SU(7): Ord  Latency=0 Artificial
  Successors:
    SU(62): Data Latency=4 Reg=%144
    SU(68): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(62):   %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 7
  Predecessors:
    SU(61): Data Latency=4 Reg=%144
    SU(60): Data Latency=4 Reg=%143
  Successors:
    SU(63): Data Latency=1 Reg=%145
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(63):   STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 6
  Predecessors:
    SU(62): Data Latency=1 Reg=%145
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(68): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(64):   %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(58): Data Latency=1 Reg=%142
    SU(55): Data Latency=4 Reg=%139
  Successors:
    SU(65): Data Latency=1 Reg=%146
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(65):   %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 12
  Predecessors:
    SU(64): Data Latency=1 Reg=%146
    SU(54): Data Latency=1 Reg=%138
  Successors:
    SU(66): Data Latency=1 Reg=%147
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(66):   STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 2
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 11
  Predecessors:
    SU(65): Data Latency=1 Reg=%147
    SU(28): Ord  Latency=0 Memory
  Successors:
    SU(67): Ord  Latency=1 Memory
    SU(68): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Cluster
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(67):   %148:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 10
  Predecessors:
    SU(66): Ord  Latency=1 Memory
    SU(51): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(68): Data Latency=4 Reg=%148
    SU(68): Ord  Latency=0 Memory
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(68):   STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  # preds left       : 48
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 6
  Predecessors:
    SU(67): Data Latency=4 Reg=%148
    SU(67): Ord  Latency=0 Memory
    SU(66): Ord  Latency=0 Memory
    SU(63): Ord  Latency=0 Memory
    SU(61): Ord  Latency=0 Memory
    SU(60): Ord  Latency=0 Memory
    SU(59): Ord  Latency=0 Memory
    SU(57): Ord  Latency=0 Memory
    SU(56): Ord  Latency=0 Memory
    SU(55): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(46): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(37): Ord  Latency=0 Memory
    SU(36): Ord  Latency=0 Memory
    SU(35): Data Latency=4 Reg=%126
    SU(35): Ord  Latency=0 Memory
    SU(34): Data Latency=1 Reg=%125
    SU(31): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(29): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(22): Ord  Latency=0 Memory
    SU(20): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(71): Ord  Latency=0 Memory
    SU(69): Ord  Latency=1 Memory
  Pressure Diff      : FPR8 1    GPR32 2    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(69):   %149:gpr32common = LDRWui %stack.9.j, 0, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 35
  Height             : 5
  Predecessors:
    SU(68): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
  Successors:
    SU(70): Data Latency=4 Reg=%149
    SU(71): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(70):   %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 39
  Height             : 1
  Predecessors:
    SU(69): Data Latency=4 Reg=%149
  Successors:
    SU(71): Data Latency=1 Reg=%150
  Pressure Diff      : 
  Single Issue       : false;
SU(71):   STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 40
  Height             : 0
  Predecessors:
    SU(70): Data Latency=1 Reg=%150
    SU(69): Ord  Latency=0 Memory
    SU(68): Ord  Latency=0 Memory
    SU(35): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(4): Ord  Latency=0 Memory
  Pressure Diff      : GPR32 1
  Single Issue       : false;
ExitSU:   B %bb.31, debug-location !800; fft3d.c:128:21
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 40
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 71 
Pick Bot ONLY1     
Scheduling SU(71) STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
Bottom Pressure:
GPR32=5
  LiveReg: %150
  UpdateRegP: SU(71) STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
              to 
  Ready @0c
  BotQ.A TopLatency SU(71) 40c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 70 
Pick Bot ONLY1     
Scheduling SU(70) %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
Bottom Pressure:
GPR32=5
  LiveReg: %149
  UpdateRegP: SU(70) %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
              to GPR32 -1
  Ready @1c
  BotQ.A BotLatency SU(70) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 69 
Pick Bot ONLY1     
Scheduling SU(69) %149:gpr32common = LDRWui %stack.9.j, 0, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
Bottom Pressure:
GPR32=4
  Ready @5c
  BotQ.A BotLatency SU(69) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 68 
Pick Bot ONLY1     
Scheduling SU(68) STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %148
  UpdateRegP: SU(68) STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to GPR32 2
  LiveReg: %125
  UpdateRegP: SU(68) STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to GPR32 1
  LiveReg: %126
  UpdateRegP: SU(68) STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
              to 
  Ready @6c
  BotQ.A BotLatency SU(68) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 63 59 53 52 48 47 44 40 34 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(63) ORDER                              
  Cand SU(59) WEAK                               
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot WEAK      
Scheduling SU(59) STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %142
  UpdateRegP: SU(59) STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
              to 
  UpdateRegP: SU(64) %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
              to 
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 63 34 53 52 48 47 44 40 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(63) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(63) STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  LiveReg: %145
  UpdateRegP: SU(63) STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
              to 
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 6
  Executed: 9c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 67 35 
Queue BotQ.A: 40 34 53 52 48 47 44 62 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(34) 28c
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(62) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(62) %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %143
  UpdateRegP: SU(62) %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %144
  UpdateRegP: SU(62) %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @9c
  BotQ.A BotLatency SU(62) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 7
  Executed: 10c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 52 48 47 44 67 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(67) 30c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
  Cand SU(67) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(67) %148:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @10c
  BotQ.A BotLatency SU(67) 10c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 8
  Executed: 11c
  Critical: 8c, 8 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 52 48 47 44 35 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(52) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(52) STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %130
  UpdateRegP: SU(40) STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
              to 
  UpdateRegP: SU(45) %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
              to 
  UpdateRegP: SU(47) STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
              to 
  UpdateRegP: SU(52) STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
              to 
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 9
  Executed: 12c
  Critical: 9c, 9 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 53 51 48 47 44 35 66 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(51) 29c
  BotQ.A RemainingLatency 29 + 12c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(34) BOT-PATH                  28 cycles 
  Cand SU(53) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(53) STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=6
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %133
  UpdateRegP: SU(44) STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
              to 
  UpdateRegP: SU(48) STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
              to 
  UpdateRegP: SU(49) %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
              to 
  UpdateRegP: SU(53) STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
              to 
  UpdateRegP: SU(54) %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
              to 
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 10
  Executed: 13c
  Critical: 10c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 40 34 66 51 48 47 44 35 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 13c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(34) BOT-PATH                  28 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(34) %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %120
  UpdateRegP: SU(34) %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
              to 
  LiveReg: %124
  UpdateRegP: SU(34) %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
              to GPR32 -1
  Ready @13c
  BotQ.A TopLatency SU(34) 28c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 11
  Executed: 14c
  Critical: 11c, 11 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 48 47 44 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 14c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(47) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(47) STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 12
  Executed: 15c
  Critical: 12c, 12 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 48 33 44 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 15c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
  Cand SU(48) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(48) STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @15c
  BotQ.A TopLatency SU(48) 27c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 13
  Executed: 16c
  Critical: 13c, 13 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 29 
Queue BotQ.A: 40 35 66 51 44 33 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(29) 22c
  BotQ.A RemainingLatency 29 + 16c > CritPath 40
Picking from Bot:
  Cand SU(40) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(40) STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @16c
  BotQ.A TopLatency SU(40) 27c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 14
  Executed: 17c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 66 51 44 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 17c > CritPath 40
Picking from Bot:
  Cand SU(33) ORDER                              
  Cand SU(44) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(44) STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @17c
  BotQ.A TopLatency SU(44) 27c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 15
  Executed: 18c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 33 35 66 51 29 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 18c > CritPath 40
Picking from Bot:
  Cand SU(33) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(33) %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %123
  UpdateRegP: SU(33) %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
              to GPR32 -1
  Ready @18c
  BotQ.A TopLatency SU(33) 27c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 16
  Executed: 19c
  Critical: 16c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 29 35 66 51 32 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 19c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(32) BOT-PATH                  26 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(32) %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
Bottom Pressure:
FPR8=5
GPR32=8
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %121
  UpdateRegP: SU(32) %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
              to 
  LiveReg: %122
  UpdateRegP: SU(32) %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
              to GPR32 -1
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 17
  Executed: 20c
  Critical: 17c, 17 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 29 35 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 20c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
  Cand SU(35) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(35) %126:gpr64 = LDRSWui %stack.9.j, 0, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
Bottom Pressure:
FPR8=5
GPR32=7
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 18
  Executed: 21c
  Critical: 18c, 18 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 29 51 66 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(51) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 21c > CritPath 40
Picking from Bot:
  Cand SU(29) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(29) %120:gpr64 = LDRXui %stack.7.x, 0, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
Bottom Pressure:
FPR8=5
GPR32=6
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @21c
  BotQ.A BotLatency SU(29) 11c
  *** Max MOps 1 at cycle 21
Cycle: 22 BotQ.A
BotQ.A @22c
  Retired: 19
  Executed: 22c
  Critical: 19c, 19 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 31 30 
Queue BotQ.A: 66 51 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
BotQ.A RemLatency SU(31) 22c
  BotQ.A RemainingLatency 29 + 22c > CritPath 40
Picking from Bot:
  Cand SU(66) ORDER                              
  Cand SU(51) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(51) STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
Bottom Pressure:
FPR8=6
GPR32=6
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  LiveReg: %137
  UpdateRegP: SU(51) STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
              to 
  Ready @22c
  BotQ.A TopLatency SU(51) 29c
  *** Max MOps 1 at cycle 22
Cycle: 23 BotQ.A
BotQ.A @23c
  Retired: 20
  Executed: 23c
  Critical: 20c, 20 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 66 50 31 30 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(66) 29c
  BotQ.A RemainingLatency 29 + 23c > CritPath 40
Picking from Bot:
  Cand SU(66) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(66) STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=6
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  LiveReg: %147
  UpdateRegP: SU(66) STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
              to 
  Ready @23c
  BotQ.A TopLatency SU(66) 29c
  *** Max MOps 1 at cycle 23
Cycle: 24 BotQ.A
BotQ.A @24c
  Retired: 21
  Executed: 24c
  Critical: 21c, 21 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 30 50 31 65 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 24c > CritPath 40
Picking from Bot:
  Cand SU(30) ORDER                              
  Cand SU(31) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(31) %122:gpr64 = LDRSWui %stack.14.k, 0, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
Bottom Pressure:
FPR8=7
GPR32=5
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @24c
  BotQ.A BotLatency SU(31) 13c
  *** Max MOps 1 at cycle 24
Cycle: 25 BotQ.A
BotQ.A @25c
  Retired: 22
  Executed: 25c
  Critical: 22c, 22 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 30 50 65 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 25c > CritPath 40
Picking from Bot:
  Cand SU(30) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(30) %121:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 BotQ.A
BotQ.A @26c
  Retired: 23
  Executed: 26c
  Critical: 23c, 23 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 65 50 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(65) 28c
  BotQ.A RemainingLatency 28 + 26c > CritPath 40
Picking from Bot:
  Cand SU(65) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(65) %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  LiveReg: %138
  UpdateRegP: SU(65) %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %146
  UpdateRegP: SU(65) %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @26c
  BotQ.A TopLatency SU(65) 28c
  *** Max MOps 1 at cycle 26
Cycle: 27 BotQ.A
BotQ.A @27c
  Retired: 24
  Executed: 27c
  Critical: 24c, 24 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 64 54 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 27c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
  Cand SU(64) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(64) %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  LiveReg: %139
  UpdateRegP: SU(64) %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @27c
  *** Max MOps 1 at cycle 27
Cycle: 28 BotQ.A
BotQ.A @28c
  Retired: 25
  Executed: 28c
  Critical: 25c, 25 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 54 58 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 28c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
  Cand SU(54) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(54) %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  LiveReg: %127
  UpdateRegP: SU(45) %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(54) %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @28c
  BotQ.A TopLatency SU(54) 27c
  *** Max MOps 1 at cycle 28
Cycle: 29 BotQ.A
BotQ.A @29c
  Retired: 26
  Executed: 29c
  Critical: 26c, 26 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 50 58 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(50) 28c
  BotQ.A RemainingLatency 28 + 29c > CritPath 40
Picking from Bot:
  Cand SU(50) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(50) %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %134
  UpdateRegP: SU(50) %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %136
  UpdateRegP: SU(50) %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @29c
  BotQ.A TopLatency SU(50) 28c
  *** Max MOps 1 at cycle 29
Cycle: 30 BotQ.A
BotQ.A @30c
  Retired: 27
  Executed: 30c
  Critical: 27c, 27 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 58 49 45 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(49) 27c
  BotQ.A RemainingLatency 27 + 30c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
  Cand SU(49) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(49) %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %135
  UpdateRegP: SU(49) %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @30c
  *** Max MOps 1 at cycle 30
Cycle: 31 BotQ.A
BotQ.A @31c
  Retired: 28
  Executed: 31c
  Critical: 28c, 28 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 
Queue BotQ.A: 58 45 43 55 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(45) 27c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 27 + 31c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
  Cand SU(45) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(45) %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  Ready @31c
  BotQ.A TopLatency SU(45) 27c
  *** Max MOps 1 at cycle 31
Cycle: 32 BotQ.A
BotQ.A @32c
  Retired: 29
  Executed: 32c
  Critical: 29c, 29 MOps
  ExpectedLatency: 13c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 36 
Queue BotQ.A: 58 55 43 39 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(58) 26c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 26 + 32c > CritPath 40
Picking from Bot:
  Cand SU(58) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(58) %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %140
  UpdateRegP: SU(58) %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %141
  UpdateRegP: SU(58) %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @32c
  BotQ.A BotLatency SU(58) 14c
  *** Max MOps 1 at cycle 32
Cycle: 33 BotQ.A
BotQ.A @33c
  Retired: 30
  Executed: 33c
  Critical: 30c, 30 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 46 36 
Queue BotQ.A: 39 55 43 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(46) 22c
  BotQ.A RemainingLatency 26 + 33c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(55) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(55) %139:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  Ready @33c
  BotQ.A BotLatency SU(55) 17c
  *** Max MOps 1 at cycle 33
Cycle: 34 BotQ.A
BotQ.A @34c
  Retired: 31
  Executed: 34c
  Critical: 31c, 31 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 36 
Queue BotQ.A: 39 43 46 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(36) 22c
  BotQ.A RemainingLatency 26 + 34c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(43) ORDER                              
  Cand SU(46) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(46) %135:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @34c
  *** Max MOps 1 at cycle 34
Cycle: 35 BotQ.A
BotQ.A @35c
  Retired: 32
  Executed: 35c
  Critical: 32c, 32 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 39 43 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
  BotQ.A RemainingLatency 26 + 35c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
  Cand SU(43) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(43) %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  LiveReg: %131
  UpdateRegP: SU(43) %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %132
  UpdateRegP: SU(43) %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @35c
  BotQ.A TopLatency SU(43) 26c
  *** Max MOps 1 at cycle 35
Cycle: 36 BotQ.A
BotQ.A @36c
  Retired: 33
  Executed: 36c
  Critical: 33c, 33 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 
Queue BotQ.A: 39 36 61 60 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(39) 26c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 26 + 36c > CritPath 40
Picking from Bot:
  Cand SU(39) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(39) %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
Bottom Pressure:
FPR8=9
GPR32=4
FPR8+ZPR_3b=9
FPR8+ZPR4_with_zsub1_in_ZPR_3b=9
FPR8+ZPR4_with_zsub2_in_ZPR_3b=9
FPR8+ZPR4_with_zsub3_in_ZPR_3b=9
ZPR_4b=9
ZPR=9
  LiveReg: %128
  UpdateRegP: SU(39) %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
              to 
  LiveReg: %129
  UpdateRegP: SU(39) %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @36c
  BotQ.A TopLatency SU(39) 26c
  *** Max MOps 1 at cycle 36
Cycle: 37 BotQ.A
BotQ.A @37c
  Retired: 34
  Executed: 37c
  Critical: 34c, 34 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 38 37 
Queue BotQ.A: 60 36 61 57 56 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(60) 22c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 25 + 37c > CritPath 40
Picking from Bot:
  Cand SU(60) ORDER                              
  Cand SU(61) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(61) %144:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
Bottom Pressure:
FPR8=8
GPR32=4
FPR8+ZPR_3b=8
FPR8+ZPR4_with_zsub1_in_ZPR_3b=8
FPR8+ZPR4_with_zsub2_in_ZPR_3b=8
FPR8+ZPR4_with_zsub3_in_ZPR_3b=8
ZPR_4b=8
ZPR=8
  Ready @37c
  *** Max MOps 1 at cycle 37
Cycle: 38 BotQ.A
BotQ.A @38c
  Retired: 35
  Executed: 38c
  Critical: 35c, 35 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 42 41 38 37 
Queue BotQ.A: 60 36 56 57 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(60) 22c
BotQ.A RemLatency SU(42) 22c
  BotQ.A RemainingLatency 24 + 38c > CritPath 40
Picking from Bot:
  Cand SU(60) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(60) %143:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
Bottom Pressure:
FPR8=7
GPR32=4
FPR8+ZPR_3b=7
FPR8+ZPR4_with_zsub1_in_ZPR_3b=7
FPR8+ZPR4_with_zsub2_in_ZPR_3b=7
FPR8+ZPR4_with_zsub3_in_ZPR_3b=7
ZPR_4b=7
ZPR=7
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 BotQ.A
BotQ.A @39c
  Retired: 36
  Executed: 39c
  Critical: 36c, 36 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 37 38 
Queue BotQ.A: 57 36 56 42 41 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(57) 22c
BotQ.A RemLatency SU(37) 22c
  BotQ.A RemainingLatency 23 + 39c > CritPath 40
Picking from Bot:
  Cand SU(57) ORDER                              
  Cand SU(41) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(41) %131:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
Bottom Pressure:
FPR8=6
GPR32=4
FPR8+ZPR_3b=6
FPR8+ZPR4_with_zsub1_in_ZPR_3b=6
FPR8+ZPR4_with_zsub2_in_ZPR_3b=6
FPR8+ZPR4_with_zsub3_in_ZPR_3b=6
ZPR_4b=6
ZPR=6
  Ready @39c
  BotQ.A BotLatency SU(41) 18c
  *** Max MOps 1 at cycle 39
Cycle: 40 BotQ.A
BotQ.A @40c
  Retired: 37
  Executed: 40c
  Critical: 37c, 37 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 57 36 56 42 37 38 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
BotQ.A RemLatency SU(57) 22c
  BotQ.A RemainingLatency 22 + 40c > CritPath 40
Picking from Bot:
  Cand SU(57) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(57) %141:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=5
GPR32=4
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @40c
  *** Max MOps 1 at cycle 40
Cycle: 41 BotQ.A
BotQ.A @41c
  Retired: 38
  Executed: 41c
  Critical: 38c, 38 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 38 36 56 42 37 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 41c > CritPath 40
Picking from Bot:
  Cand SU(38) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(38) %129:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=4
GPR32=4
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  Ready @41c
  BotQ.A TopLatency SU(38) 22c
  *** Max MOps 1 at cycle 41
Cycle: 42 BotQ.A
BotQ.A @42c
  Retired: 39
  Executed: 42c
  Critical: 39c, 39 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 36 56 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 42c > CritPath 40
Picking from Bot:
  Cand SU(37) ORDER                              
  Cand SU(36) WEAK                               
  Cand SU(56) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(56) %140:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=3
GPR32=4
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @42c
  BotQ.A TopLatency SU(56) 22c
  *** Max MOps 1 at cycle 42
Cycle: 43 BotQ.A
BotQ.A @43c
  Retired: 40
  Executed: 43c
  Critical: 40c, 40 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 37 36 42 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 43c > CritPath 40
Picking from Bot:
  Cand SU(37) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(37) %128:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
Bottom Pressure:
FPR8=2
GPR32=4
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @43c
  BotQ.A TopLatency SU(37) 22c
  *** Max MOps 1 at cycle 43
Cycle: 44 BotQ.A
BotQ.A @44c
  Retired: 41
  Executed: 44c
  Critical: 41c, 41 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 42 36 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 44c > CritPath 40
Picking from Bot:
  Cand SU(42) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(42) %132:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
Bottom Pressure:
FPR8=1
GPR32=4
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  Ready @44c
  BotQ.A TopLatency SU(42) 22c
  *** Max MOps 1 at cycle 44
Cycle: 45 BotQ.A
BotQ.A @45c
  Retired: 42
  Executed: 45c
  Critical: 42c, 42 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 36 
Pick Bot ONLY1     
Scheduling SU(36) %127:fpr64 = LDRDui %stack.11.u1, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
Bottom Pressure:
GPR32=4
  Ready @45c
  BotQ.A TopLatency SU(36) 22c
  *** Max MOps 1 at cycle 45
Cycle: 46 BotQ.A
BotQ.A @46c
  Retired: 43
  Executed: 46c
  Critical: 43c, 43 MOps
  ExpectedLatency: 18c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 28 
Pick Bot ONLY1     
Scheduling SU(28) STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %119
  UpdateRegP: SU(28) STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to GPR32 2
  LiveReg: %112
  UpdateRegP: SU(28) STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to GPR32 1
  LiveReg: %101
  UpdateRegP: SU(6) %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(11) %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
              to FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  UpdateRegP: SU(28) STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
              to 
  Ready @46c
  BotQ.A BotLatency SU(28) 19c
  *** Max MOps 1 at cycle 46
Cycle: 47 BotQ.A
BotQ.A @47c
  Retired: 44
  Executed: 47c
  Critical: 44c, 44 MOps
  ExpectedLatency: 19c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 
Queue BotQ.A: 18 
Pick Bot ONLY1     
Scheduling SU(18) %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %107
  UpdateRegP: SU(18) %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
              to 
  LiveReg: %111
  UpdateRegP: SU(18) %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
              to GPR32 -1
  Ready @47c
  BotQ.A BotLatency SU(18) 20c
  *** Max MOps 1 at cycle 47
Cycle: 48 BotQ.A
BotQ.A @48c
  Retired: 45
  Executed: 48c
  Critical: 45c, 45 MOps
  ExpectedLatency: 20c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 13 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %110
  UpdateRegP: SU(17) %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
              to GPR32 -1
  Ready @48c
  BotQ.A BotLatency SU(17) 21c
  *** Max MOps 1 at cycle 48
Cycle: 49 BotQ.A
BotQ.A @49c
  Retired: 46
  Executed: 49c
  Critical: 46c, 46 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 27 13 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %108
  UpdateRegP: SU(16) %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
              to 
  LiveReg: %109
  UpdateRegP: SU(16) %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
              to GPR32 -1
  Ready @49c
  BotQ.A BotLatency SU(16) 22c
  *** Max MOps 1 at cycle 49
Cycle: 50 BotQ.A
BotQ.A @50c
  Retired: 47
  Executed: 50c
  Critical: 47c, 47 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 13 
Queue BotQ.A: 27 
Pick Bot ONLY1     
Scheduling SU(27) %119:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
Bottom Pressure:
GPR32=8
  Ready @50c
  BotQ.A BotLatency SU(27) 23c
  *** Max MOps 1 at cycle 50
Cycle: 51 BotQ.A
BotQ.A @51c
  Retired: 48
  Executed: 51c
  Critical: 48c, 48 MOps
  ExpectedLatency: 23c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 26 22 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 51c > CritPath 40
Picking from Bot:
  Cand SU(26) ORDER                              
  Cand SU(22) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(22) STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=8
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %115
  UpdateRegP: SU(22) STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
              to 
  Ready @51c
  BotQ.A BotLatency SU(22) 24c
  *** Max MOps 1 at cycle 51
Cycle: 52 BotQ.A
BotQ.A @52c
  Retired: 49
  Executed: 52c
  Critical: 49c, 49 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 14 
Queue BotQ.A: 26 13 21 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 52c > CritPath 40
Picking from Bot:
  Cand SU(26) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(26) STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %118
  UpdateRegP: SU(26) STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
              to 
  Ready @52c
  BotQ.A TopLatency SU(26) 16c
  *** Max MOps 1 at cycle 52
Cycle: 53 BotQ.A
BotQ.A @53c
  Retired: 50
  Executed: 53c
  Critical: 50c, 50 MOps
  ExpectedLatency: 24c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 21 13 25 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 53c > CritPath 40
Picking from Bot:
  Cand SU(21) ORDER                              
  Cand SU(25) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(25) %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
Bottom Pressure:
FPR8=3
GPR32=8
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  LiveReg: %116
  UpdateRegP: SU(25) %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
              to 
  LiveReg: %117
  UpdateRegP: SU(25) %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @53c
  BotQ.A BotLatency SU(25) 25c
  *** Max MOps 1 at cycle 53
Cycle: 54 BotQ.A
BotQ.A @54c
  Retired: 51
  Executed: 54c
  Critical: 51c, 51 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 
Queue BotQ.A: 21 13 14 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 54c > CritPath 40
Picking from Bot:
  Cand SU(21) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(21) %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
Bottom Pressure:
FPR8=4
GPR32=8
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %113
  UpdateRegP: SU(21) %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
              to 
  LiveReg: %114
  UpdateRegP: SU(21) %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @54c
  BotQ.A TopLatency SU(21) 15c
  *** Max MOps 1 at cycle 54
Cycle: 55 BotQ.A
BotQ.A @55c
  Retired: 52
  Executed: 55c
  Critical: 52c, 52 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 20 19 
Queue BotQ.A: 14 13 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 13 14 15 
  BotQ.A RemainingLatency 0 + 55c > CritPath 40
Picking from Bot:
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %108:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
Bottom Pressure:
FPR8=4
GPR32=7
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  Ready @55c
  BotQ.A BotLatency SU(14) 26c
  *** Max MOps 1 at cycle 55
Cycle: 56 BotQ.A
BotQ.A @56c
  Retired: 53
  Executed: 56c
  Critical: 53c, 53 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 24 23 20 19 
Queue BotQ.A: 13 
Pick Bot ONLY1     
Scheduling SU(13) %107:gpr64 = LDRXui %stack.7.x, 0, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
Bottom Pressure:
FPR8=4
GPR32=6
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  Ready @56c
  *** Max MOps 1 at cycle 56
Cycle: 57 BotQ.A
BotQ.A @57c
  Retired: 54
  Executed: 57c
  Critical: 54c, 54 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 19 20 
Queue BotQ.A: 24 23 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 57c > CritPath 40
Picking from Bot:
  Cand SU(24) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(24) %117:fpr64 = LDRDui %stack.13.x21, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
Bottom Pressure:
FPR8=3
GPR32=6
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @57c
  BotQ.A BotLatency SU(24) 29c
  *** Max MOps 1 at cycle 57
Cycle: 58 BotQ.A
BotQ.A @58c
  Retired: 55
  Executed: 58c
  Critical: 55c, 55 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 19 20 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 58c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
  Cand SU(19) WEAK                               
  Cand SU(20) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(20) %114:fpr64 = LDRDui %stack.13.x21, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @58c
  *** Max MOps 1 at cycle 58
Cycle: 59 BotQ.A
BotQ.A @59c
  Retired: 56
  Executed: 59c
  Critical: 56c, 56 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 19 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 59c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
  Cand SU(19) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(19) %113:fpr64 = LDRDui %stack.12.x11, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  Ready @59c
  BotQ.A TopLatency SU(19) 11c
  *** Max MOps 1 at cycle 59
Cycle: 60 BotQ.A
BotQ.A @60c
  Retired: 57
  Executed: 60c
  Critical: 57c, 57 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 23 12 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 60c > CritPath 40
Picking from Bot:
  Cand SU(23) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(23) %116:fpr64 = LDRDui %stack.12.x11, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
Bottom Pressure:
GPR32=6
  Ready @60c
  BotQ.A TopLatency SU(23) 11c
  *** Max MOps 1 at cycle 60
Cycle: 61 BotQ.A
BotQ.A @61c
  Retired: 58
  Executed: 61c
  Critical: 58c, 58 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 12 7 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 61c > CritPath 40
Picking from Bot:
  Cand SU(12) ORDER                              
  Cand SU(7) WEAK                               
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(7) STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
Bottom Pressure:
FPR8=1
GPR32=6
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %102
  UpdateRegP: SU(7) STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
              to 
  Ready @61c
  BotQ.A BotLatency SU(7) 30c
  *** Max MOps 1 at cycle 61
Cycle: 62 BotQ.A
BotQ.A @62c
  Retired: 59
  Executed: 62c
  Critical: 59c, 59 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 6 
Queue BotQ.A: 12 
Pick Bot ONLY1     
Scheduling SU(12) STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %106
  UpdateRegP: SU(12) STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
              to 
  Ready @62c
  BotQ.A TopLatency SU(12) 10c
  *** Max MOps 1 at cycle 62
Cycle: 63 BotQ.A
BotQ.A @63c
  Retired: 60
  Executed: 63c
  Critical: 60c, 60 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 65 BotQ.A
Queue BotQ.P: 11 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
Bottom Pressure:
FPR8=1
GPR32=7
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %99
  UpdateRegP: SU(6) %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @65c
  BotQ.A BotLatency SU(6) 34c
  *** Max MOps 1 at cycle 65
Cycle: 66 BotQ.A
BotQ.A @66c
  Retired: 61
  Executed: 66c
  Critical: 61c, 61 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 11 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 66c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(11) BOT-PATH                  6 cycles 
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(11) %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
Bottom Pressure:
GPR32=8
  LiveReg: %105
  UpdateRegP: SU(11) %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @66c
  *** Max MOps 1 at cycle 66
Cycle: 67 BotQ.A
BotQ.A @67c
  Retired: 62
  Executed: 67c
  Critical: 62c, 62 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 10 5 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 67c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(10) %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
Bottom Pressure:
GPR32=8
  LiveReg: %104
  UpdateRegP: SU(10) %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
              to GPR32 -1
  Ready @67c
  BotQ.A BotLatency SU(10) 35c
  *** Max MOps 1 at cycle 67
Cycle: 68 BotQ.A
BotQ.A @68c
  Retired: 63
  Executed: 68c
  Critical: 63c, 63 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 5 9 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 68c > CritPath 40
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
Bottom Pressure:
GPR32=8
  LiveReg: %96
  UpdateRegP: SU(3) %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
              to GPR32 -1
  Ready @68c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 68
Cycle: 69 BotQ.A
BotQ.A @69c
  Retired: 64
  Executed: 69c
  Critical: 64c, 64 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 9 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 69c > CritPath 40
Picking from Bot:
  Cand SU(9) ORDER                              
  Cand SU(5) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(5) %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
Bottom Pressure:
GPR32=8
  LiveReg: %100
  UpdateRegP: SU(5) %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
              to GPR32 -1
  Ready @69c
  *** Max MOps 1 at cycle 69
Cycle: 70 BotQ.A
BotQ.A @70c
  Retired: 65
  Executed: 70c
  Critical: 65c, 65 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 
Queue BotQ.A: 9 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 8 15 
  BotQ.A RemainingLatency 0 + 70c > CritPath 40
Picking from Bot:
  Cand SU(9) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(9) %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
Bottom Pressure:
GPR32=9
  LiveReg: %103
  UpdateRegP: SU(9) %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
              to 
  LiveReg: %95
  UpdateRegP: SU(2) %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
              to 
  UpdateRegP: SU(9) %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
              to GPR32 -1
  Ready @70c
  BotQ.A TopLatency SU(9) 4c
  BotQ.A BotLatency SU(9) 36c
  *** Max MOps 1 at cycle 70
Cycle: 71 BotQ.A
BotQ.A @71c
  Retired: 66
  Executed: 71c
  Critical: 66c, 66 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 8 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
Bottom Pressure:
GPR32=9
  LiveReg: %94
  UpdateRegP: SU(2) %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
              to GPR32 -1
  Ready @71c
  BotQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 71
Cycle: 72 BotQ.A
BotQ.A @72c
  Retired: 67
  Executed: 72c
  Critical: 67c, 67 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 4 8 1 0 
Queue BotQ.A: 15 
Pick Bot ONLY1     
Scheduling SU(15) %109:gpr64 = LDRSWui %stack.14.k, 0, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
Bottom Pressure:
GPR32=8
  Ready @72c
  *** Max MOps 1 at cycle 72
Cycle: 73 BotQ.A
BotQ.A @73c
  Retired: 68
  Executed: 73c
  Critical: 68c, 68 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 8 1 
Queue BotQ.A: 4 
Pick Bot ONLY1     
Scheduling SU(4) %100:gpr64 = LDRSWui %stack.9.j, 0, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
Bottom Pressure:
GPR32=7
  Ready @73c
  BotQ.A BotLatency SU(4) 39c
  *** Max MOps 1 at cycle 73
Cycle: 74 BotQ.A
BotQ.A @74c
  Retired: 69
  Executed: 74c
  Critical: 69c, 69 MOps
  ExpectedLatency: 39c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 1 
Queue BotQ.A: 8 
Pick Bot ONLY1     
Scheduling SU(8) %103:gpr32 = LDRWui %stack.21.i12, 0, debug-location !782 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
Bottom Pressure:
GPR32=6
  Ready @74c
  BotQ.A BotLatency SU(8) 40c
  *** Max MOps 1 at cycle 74
Cycle: 75 BotQ.A
BotQ.A @75c
  Retired: 70
  Executed: 75c
  Critical: 70c, 70 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 75c > CritPath 40
Picking from Bot:
  Cand SU(0) ORDER                              
  Cand SU(1) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(1) %95:gpr32 = LDRWui %stack.14.k, 0, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
Bottom Pressure:
GPR32=5
  Ready @75c
  *** Max MOps 1 at cycle 75
Cycle: 76 BotQ.A
BotQ.A @76c
  Retired: 71
  Executed: 76c
  Critical: 71c, 71 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
Bottom Pressure:
GPR32=4
  Ready @76c
  *** Max MOps 1 at cycle 76
Cycle: 77 BotQ.A
BotQ.A @77c
  Retired: 72
  Executed: 77c
  Critical: 72c, 72 MOps
  ExpectedLatency: 40c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
SU(1):   %95:gpr32 = LDRWui %stack.14.k, 0, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
SU(8):   %103:gpr32 = LDRWui %stack.21.i12, 0, debug-location !782 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
SU(4):   %100:gpr64 = LDRSWui %stack.9.j, 0, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
SU(15):   %109:gpr64 = LDRSWui %stack.14.k, 0, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
SU(2):   %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
SU(9):   %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
SU(5):   %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
SU(3):   %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
SU(10):   %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
SU(11):   %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
SU(6):   %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
SU(12):   STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
SU(7):   STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
SU(23):   %116:fpr64 = LDRDui %stack.12.x11, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
SU(19):   %113:fpr64 = LDRDui %stack.12.x11, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
SU(20):   %114:fpr64 = LDRDui %stack.13.x21, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
SU(24):   %117:fpr64 = LDRDui %stack.13.x21, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
SU(13):   %107:gpr64 = LDRXui %stack.7.x, 0, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
SU(14):   %108:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
SU(21):   %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
SU(25):   %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
SU(26):   STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
SU(22):   STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
SU(27):   %119:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
SU(16):   %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
SU(17):   %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
SU(18):   %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
SU(28):   STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
SU(36):   %127:fpr64 = LDRDui %stack.11.u1, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
SU(42):   %132:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
SU(37):   %128:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
SU(56):   %140:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
SU(38):   %129:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
SU(57):   %141:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
SU(41):   %131:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
SU(60):   %143:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
SU(61):   %144:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
SU(39):   %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
SU(43):   %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
SU(46):   %135:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
SU(55):   %139:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
SU(58):   %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
SU(45):   %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
SU(49):   %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
SU(50):   %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
SU(54):   %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
SU(64):   %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
SU(65):   %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
SU(30):   %121:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
SU(31):   %122:gpr64 = LDRSWui %stack.14.k, 0, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
SU(66):   STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
SU(51):   STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
SU(29):   %120:gpr64 = LDRXui %stack.7.x, 0, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
SU(35):   %126:gpr64 = LDRSWui %stack.9.j, 0, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
SU(32):   %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
SU(33):   %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
SU(44):   STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
SU(40):   STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
SU(48):   STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
SU(47):   STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
SU(34):   %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
SU(53):   STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
SU(52):   STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
SU(67):   %148:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
SU(62):   %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
SU(63):   STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
SU(59):   STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
SU(68):   STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
SU(69):   %149:gpr32common = LDRWui %stack.9.j, 0, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
SU(70):   %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
SU(71):   STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44

********** MI Scheduling **********
Swarztrauber:%bb.33 for.inc260
  From: %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
    To: B %bb.29, debug-location !804; fft3d.c:127:17
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%92
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %93:gpr32common = nsw ADDWri %92:gpr32common, 1, 0, debug-location !803; fft3d.c:127:43
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%92
  Successors:
    SU(2): Data Latency=1 Reg=%93
  Single Issue       : false;
SU(2):   STRWui %93:gpr32common, %stack.14.k, 0, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%93
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.29, debug-location !804; fft3d.c:127:17
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %93:gpr32common, %stack.14.k, 0, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %93:gpr32common = nsw ADDWri %92:gpr32common, 1, 0, debug-location !803; fft3d.c:127:43
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
SU(1):   %93:gpr32common = nsw ADDWri %92:gpr32common, 1, 0, debug-location !803; fft3d.c:127:43
SU(2):   STRWui %93:gpr32common, %stack.14.k, 0, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43

********** MI Scheduling **********
Swarztrauber:%bb.34 for.inc263
  From: %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
    To: B %bb.24, debug-location !808; fft3d.c:115:13
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%86
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %87:gpr32common = nsw ADDWri %86:gpr32common, 1, 0, debug-location !807; fft3d.c:115:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%86
  Successors:
    SU(2): Data Latency=1 Reg=%87
  Single Issue       : false;
SU(2):   STRWui %87:gpr32common, %stack.8.i, 0, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%87
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.24, debug-location !808; fft3d.c:115:13
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %87:gpr32common, %stack.8.i, 0, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %87:gpr32common = nsw ADDWri %86:gpr32common, 1, 0, debug-location !807; fft3d.c:115:39
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
SU(1):   %87:gpr32common = nsw ADDWri %86:gpr32common, 1, 0, debug-location !807; fft3d.c:115:39
SU(2):   STRWui %87:gpr32common, %stack.8.i, 0, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39

********** MI Scheduling **********
Swarztrauber:%bb.35 for.inc267
  From: %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
    To: B %bb.3, debug-location !812; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%155
    SU(2): Ord  Latency=0 Memory
  Single Issue       : false;
SU(1):   %156:gpr32common = nsw ADDWri %155:gpr32common, 2, 0, debug-location !811; fft3d.c:74:27
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%155
  Successors:
    SU(2): Data Latency=1 Reg=%156
  Single Issue       : false;
SU(2):   STRWui %156:gpr32common, %stack.10.l, 0, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%156
    SU(0): Ord  Latency=0 Memory
  Single Issue       : false;
ExitSU:   B %bb.3, debug-location !812; fft3d.c:74:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %156:gpr32common, %stack.10.l, 0, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %156:gpr32common = nsw ADDWri %155:gpr32common, 2, 0, debug-location !811; fft3d.c:74:27
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
SU(1):   %156:gpr32common = nsw ADDWri %155:gpr32common, 2, 0, debug-location !811; fft3d.c:74:27
SU(2):   STRWui %156:gpr32common, %stack.10.l, 0, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27

********** MI Scheduling **********
Swarztrauber:%bb.36 for.end269
  From: %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
    To: CBZW %28:gpr32, %bb.38, debug-location !817; fft3d.c:138:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%27
  Single Issue       : false;
SU(1):   %28:gpr32 = LDRWui %27:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%27
  Successors:
    ExitSU: Data Latency=4 Reg=%28
  Single Issue       : false;
ExitSU:   CBZW %28:gpr32, %bb.38, debug-location !817; fft3d.c:138:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%28
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %28:gpr32 = LDRWui %27:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  Ready @4c
  BotQ.A TopLatency SU(1) 1c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
SU(1):   %28:gpr32 = LDRWui %27:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9

********** INTERVALS **********
NZCV [728r,736r:14)[792r,800r:13)[944r,952r:12)[1104r,1120r:11)[1392r,1472r:2)[1952r,1968r:1)[2096r,2112r:0)[3592r,3600r:10)[3664r,3672r:4)[3744r,3760r:3)[4224r,4232r:9)[4384r,4400r:8)[4672r,4752r:7)[5232r,5248r:6)[5376r,5392r:5)  0@2096r 1@1952r 2@1392r 3@3744r 4@3664r 5@5376r 6@5232r 7@4672r 8@4384r 9@4224r 10@3592r 11@1104r 12@944r 13@792r 14@728r
W0 [0B,96r:0)[368r,384r:2)[6976r,6992r:1)  0@0B-phi 1@6976r 2@368r
W1 [0B,80r:0)  0@0B-phi
W2 [0B,64r:0)  0@0B-phi
W3 [0B,48r:0)  0@0B-phi
W4 [0B,32r:0)  0@0B-phi
W5 [0B,16r:0)  0@0B-phi
%0 [288r,6848B:0)  0@288r weight:0.000000e+00
%5 [96r,112r:0)  0@96r weight:0.000000e+00
%6 [80r,128r:0)  0@80r weight:0.000000e+00
%7 [64r,144r:0)  0@64r weight:0.000000e+00
%8 [48r,160r:0)  0@48r weight:0.000000e+00
%9 [32r,288r:0)  0@32r weight:0.000000e+00
%10 [16r,296r:0)  0@16r weight:0.000000e+00
%12 [256r,272r:0)  0@256r weight:0.000000e+00
%13 [272r,304r:0)  0@272r weight:0.000000e+00
%15 [496r,736r:0)  0@496r weight:0.000000e+00
%17 [736r,744r:0)  0@736r weight:0.000000e+00
%18 [744r,752r:0)  0@744r weight:0.000000e+00
%19 [612r,696r:0)  0@612r weight:0.000000e+00
%21 [608r,696r:0)  0@608r weight:0.000000e+00
%23 [696r,712r:0)  0@696r weight:0.000000e+00
%24 [776r,792r:0)  0@776r weight:0.000000e+00
%25 [784r,792r:0)  0@784r weight:0.000000e+00
%27 [6864r,6880r:0)  0@6864r weight:0.000000e+00
%28 [6880r,6896r:0)  0@6880r weight:0.000000e+00
%30 [848r,928r:0)  0@848r weight:0.000000e+00
%31 [928r,936r:0)  0@928r weight:0.000000e+00
%32 [912r,952r:0)  0@912r weight:0.000000e+00
%34 [952r,960r:0)  0@952r weight:0.000000e+00
%35 [960r,992r:0)  0@960r weight:0.000000e+00
%37 [1080r,1104r:0)  0@1080r weight:0.000000e+00
%38 [1072r,1088r:0)  0@1072r weight:0.000000e+00
%39 [1088r,1104r:0)  0@1088r weight:0.000000e+00
%41 [3576r,3592r:0)  0@3576r weight:0.000000e+00
%42 [3584r,3592r:0)  0@3584r weight:0.000000e+00
%44 [4128r,4208r:0)  0@4128r weight:0.000000e+00
%45 [4208r,4216r:0)  0@4208r weight:0.000000e+00
%46 [4192r,4232r:0)  0@4192r weight:0.000000e+00
%48 [4232r,4240r:0)  0@4232r weight:0.000000e+00
%49 [4240r,4272r:0)  0@4240r weight:0.000000e+00
%51 [4360r,4384r:0)  0@4360r weight:0.000000e+00
%52 [4352r,4368r:0)  0@4352r weight:0.000000e+00
%53 [4368r,4384r:0)  0@4368r weight:0.000000e+00
%55 [4648r,4696r:0)  0@4648r weight:0.000000e+00
%56 [4664r,4728r:0)  0@4664r weight:0.000000e+00
%57 [4696r,4712r:0)  0@4696r weight:0.000000e+00
%58 [4680r,4712r:0)  0@4680r weight:0.000000e+00
%59 [4712r,4736r:0)  0@4712r weight:0.000000e+00
%60 [4656r,4688r:0)  0@4656r weight:0.000000e+00
%61 [4688r,4728r:0)  0@4688r weight:0.000000e+00
%62 [4728r,4744r:0)  0@4728r weight:0.000000e+00
%63 [4640r,4672r:0)  0@4640r weight:0.000000e+00
%66 [4904r,4928r:0)  0@4904r weight:0.000000e+00
%67 [4880r,4912r:0)  0@4880r weight:0.000000e+00
%68 [4896r,4912r:0)  0@4896r weight:0.000000e+00
%69 [4912r,4928r:0)  0@4912r weight:0.000000e+00
%70 [4928r,4976r:0)  0@4928r weight:0.000000e+00
%71 [4944r,4960r:0)  0@4944r weight:0.000000e+00
%72 [4976r,4992r:0)  0@4976r weight:0.000000e+00
%73 [4992r,5008r:0)  0@4992r weight:0.000000e+00
%75 [4796r,4808r:0)  0@4796r weight:0.000000e+00
%76 [4784r,4800r:0)  0@4784r weight:0.000000e+00
%77 [4792r,4800r:0)  0@4792r weight:0.000000e+00
%78 [4800r,4808r:0)  0@4800r weight:0.000000e+00
%80 [5104r,5120r:0)  0@5104r weight:0.000000e+00
%82 [5208r,5232r:0)  0@5208r weight:0.000000e+00
%83 [5200r,5216r:0)  0@5200r weight:0.000000e+00
%84 [5216r,5232r:0)  0@5216r weight:0.000000e+00
%86 [6768r,6776r:0)  0@6768r weight:0.000000e+00
%87 [6776r,6784r:0)  0@6776r weight:0.000000e+00
%89 [5344r,5376r:0)  0@5344r weight:0.000000e+00
%90 [5360r,5376r:0)  0@5360r weight:0.000000e+00
%92 [6728r,6736r:0)  0@6728r weight:0.000000e+00
%93 [6736r,6744r:0)  0@6736r weight:0.000000e+00
%94 [5440r,5688r:0)  0@5440r weight:0.000000e+00
%95 [5456r,5696r:0)  0@5456r weight:0.000000e+00
%96 [5688r,5712r:0)  0@5688r weight:0.000000e+00
%99 [5712r,5736r:0)  0@5712r weight:0.000000e+00
%100 [5576r,5704r:0)  0@5576r weight:0.000000e+00
%101 [5704r,5928r:0)  0@5704r weight:0.000000e+00
%102 [5736r,5752r:0)  0@5736r weight:0.000000e+00
%103 [5568r,5696r:0)  0@5568r weight:0.000000e+00
%104 [5696r,5720r:0)  0@5696r weight:0.000000e+00
%105 [5720r,5728r:0)  0@5720r weight:0.000000e+00
%106 [5728r,5744r:0)  0@5728r weight:0.000000e+00
%107 [5848r,5920r:0)  0@5848r weight:0.000000e+00
%108 [5856r,5904r:0)  0@5856r weight:0.000000e+00
%109 [5680r,5904r:0)  0@5680r weight:0.000000e+00
%110 [5904r,5912r:0)  0@5904r weight:0.000000e+00
%111 [5912r,5920r:0)  0@5912r weight:0.000000e+00
%112 [5920r,5928r:0)  0@5920r weight:0.000000e+00
%113 [5824r,5864r:0)  0@5824r weight:0.000000e+00
%114 [5832r,5864r:0)  0@5832r weight:0.000000e+00
%115 [5864r,5888r:0)  0@5864r weight:0.000000e+00
%116 [5816r,5872r:0)  0@5816r weight:0.000000e+00
%117 [5840r,5872r:0)  0@5840r weight:0.000000e+00
%118 [5872r,5880r:0)  0@5872r weight:0.000000e+00
%119 [5896r,5928r:0)  0@5896r weight:0.000000e+00
%120 [6560r,6624r:0)  0@6560r weight:0.000000e+00
%121 [6528r,6576r:0)  0@6528r weight:0.000000e+00
%122 [6536r,6576r:0)  0@6536r weight:0.000000e+00
%123 [6576r,6584r:0)  0@6576r weight:0.000000e+00
%124 [6584r,6624r:0)  0@6584r weight:0.000000e+00
%125 [6624r,6680r:0)  0@6624r weight:0.000000e+00
%126 [6568r,6680r:0)  0@6568r weight:0.000000e+00
%127 [6016r,6488r:0)  0@6016r weight:0.000000e+00
%128 [6120r,6424r:0)  0@6120r weight:0.000000e+00
%129 [6344r,6424r:0)  0@6344r weight:0.000000e+00
%130 [6424r,6640r:0)  0@6424r weight:0.000000e+00
%131 [6360r,6432r:0)  0@6360r weight:0.000000e+00
%132 [6112r,6432r:0)  0@6112r weight:0.000000e+00
%133 [6432r,6632r:0)  0@6432r weight:0.000000e+00
%134 [6464r,6480r:0)  0@6464r weight:0.000000e+00
%135 [6440r,6472r:0)  0@6440r weight:0.000000e+00
%136 [6472r,6480r:0)  0@6472r weight:0.000000e+00
%137 [6480r,6552r:0)  0@6480r weight:0.000000e+00
%138 [6488r,6520r:0)  0@6488r weight:0.000000e+00
%139 [6448r,6512r:0)  0@6448r weight:0.000000e+00
%140 [6336r,6456r:0)  0@6336r weight:0.000000e+00
%141 [6352r,6456r:0)  0@6352r weight:0.000000e+00
%142 [6456r,6672r:0)  0@6456r weight:0.000000e+00
%143 [6400r,6656r:0)  0@6400r weight:0.000000e+00
%144 [6416r,6656r:0)  0@6416r weight:0.000000e+00
%145 [6656r,6664r:0)  0@6656r weight:0.000000e+00
%146 [6512r,6520r:0)  0@6512r weight:0.000000e+00
%147 [6520r,6544r:0)  0@6520r weight:0.000000e+00
%148 [6648r,6680r:0)  0@6648r weight:0.000000e+00
%149 [6688r,6696r:0)  0@6688r weight:0.000000e+00
%150 [6696r,6704r:0)  0@6696r weight:0.000000e+00
%152 [3648r,3664r:0)  0@3648r weight:0.000000e+00
%153 [3656r,3664r:0)  0@3656r weight:0.000000e+00
%155 [6808r,6816r:0)  0@6808r weight:0.000000e+00
%156 [6816r,6824r:0)  0@6816r weight:0.000000e+00
%158 [3720r,3744r:0)  0@3720r weight:0.000000e+00
%159 [3728r,3744r:0)  0@3728r weight:0.000000e+00
%161 [4048r,4064r:0)  0@4048r weight:0.000000e+00
%162 [4064r,4080r:0)  0@4064r weight:0.000000e+00
%163 [3880r,3944r:0)  0@3880r weight:0.000000e+00
%164 [3876r,3940r:0)  0@3876r weight:0.000000e+00
%165 [3940r,3944r:0)  0@3940r weight:0.000000e+00
%166 [3944r,3952r:0)  0@3944r weight:0.000000e+00
%167 [3872r,3888r:0)  0@3872r weight:0.000000e+00
%168 [3888r,3952r:0)  0@3888r weight:0.000000e+00
%170 [760r,6848B:0)  0@760r weight:0.000000e+00
%173 [3920r,3936r:0)  0@3920r weight:0.000000e+00
%174 [3936r,3952r:0)  0@3936r weight:0.000000e+00
%175 [3968r,3984r:0)  0@3968r weight:0.000000e+00
%176 [3984r,4000r:0)  0@3984r weight:0.000000e+00
%177 [1368r,1416r:0)  0@1368r weight:0.000000e+00
%178 [1384r,1448r:0)  0@1384r weight:0.000000e+00
%179 [1416r,1432r:0)  0@1416r weight:0.000000e+00
%180 [1400r,1432r:0)  0@1400r weight:0.000000e+00
%181 [1432r,1456r:0)  0@1432r weight:0.000000e+00
%182 [1376r,1408r:0)  0@1376r weight:0.000000e+00
%183 [1408r,1448r:0)  0@1408r weight:0.000000e+00
%184 [1448r,1464r:0)  0@1448r weight:0.000000e+00
%185 [1360r,1392r:0)  0@1360r weight:0.000000e+00
%188 [1624r,1648r:0)  0@1624r weight:0.000000e+00
%189 [1600r,1632r:0)  0@1600r weight:0.000000e+00
%190 [1616r,1632r:0)  0@1616r weight:0.000000e+00
%191 [1632r,1648r:0)  0@1632r weight:0.000000e+00
%192 [1648r,1696r:0)  0@1648r weight:0.000000e+00
%193 [1664r,1680r:0)  0@1664r weight:0.000000e+00
%194 [1696r,1712r:0)  0@1696r weight:0.000000e+00
%195 [1712r,1728r:0)  0@1712r weight:0.000000e+00
%197 [1516r,1528r:0)  0@1516r weight:0.000000e+00
%198 [1504r,1520r:0)  0@1504r weight:0.000000e+00
%199 [1512r,1520r:0)  0@1512r weight:0.000000e+00
%200 [1520r,1528r:0)  0@1520r weight:0.000000e+00
%202 [1824r,1840r:0)  0@1824r weight:0.000000e+00
%204 [1928r,1952r:0)  0@1928r weight:0.000000e+00
%205 [1920r,1936r:0)  0@1920r weight:0.000000e+00
%206 [1936r,1952r:0)  0@1936r weight:0.000000e+00
%208 [3536r,3544r:0)  0@3536r weight:0.000000e+00
%209 [3544r,3552r:0)  0@3544r weight:0.000000e+00
%211 [2064r,2096r:0)  0@2064r weight:0.000000e+00
%212 [2080r,2096r:0)  0@2080r weight:0.000000e+00
%214 [3496r,3504r:0)  0@3496r weight:0.000000e+00
%215 [3504r,3512r:0)  0@3504r weight:0.000000e+00
%216 [2160r,2760r:0)  0@2160r weight:0.000000e+00
%217 [2176r,2708r:0)  0@2176r weight:0.000000e+00
%218 [2280r,3248r:0)  0@2280r weight:0.000000e+00
%220 [2708r,2720r:0)  0@2708r weight:0.000000e+00
%221 [2720r,2728r:0)  0@2720r weight:0.000000e+00
%222 [2728r,2736r:0)  0@2728r weight:0.000000e+00
%223 [2272r,2712r:0)  0@2272r weight:0.000000e+00
%224 [2712r,3320r:0)  0@2712r weight:0.000000e+00
%225 [2736r,2768r:0)  0@2736r weight:0.000000e+00
%226 [2336r,2744r:0)  0@2336r weight:0.000000e+00
%227 [2744r,2752r:0)  0@2744r weight:0.000000e+00
%228 [2752r,2760r:0)  0@2752r weight:0.000000e+00
%229 [2760r,2776r:0)  0@2760r weight:0.000000e+00
%230 [2776r,3064r:0)  0@2776r weight:0.000000e+00
%231 [3152r,3248r:0)  0@3152r weight:0.000000e+00
%232 [3248r,3312r:0)  0@3248r weight:0.000000e+00
%233 [720r,6848B:0)  0@720r weight:0.000000e+00
%235 [3312r,3320r:0)  0@3312r weight:0.000000e+00
%236 [3048r,3120r:0)  0@3048r weight:0.000000e+00
%237 [3080r,3120r:0)  0@3080r weight:0.000000e+00
%238 [3120r,3208r:0)  0@3120r weight:0.000000e+00
%239 [3088r,3136r:0)  0@3088r weight:0.000000e+00
%240 [3104r,3136r:0)  0@3104r weight:0.000000e+00
%241 [3136r,3200r:0)  0@3136r weight:0.000000e+00
%242 [3240r,3320r:0)  0@3240r weight:0.000000e+00
%243 [3192r,3328r:0)  0@3192r weight:0.000000e+00
%244 [2656r,3328r:0)  0@2656r weight:0.000000e+00
%245 [3328r,3344r:0)  0@3328r weight:0.000000e+00
%246 [3344r,3464r:0)  0@3344r weight:0.000000e+00
%247 [2704r,3464r:0)  0@2704r weight:0.000000e+00
%248 [3184r,3384r:0)  0@3184r weight:0.000000e+00
%249 [3056r,3144r:0)  0@3056r weight:0.000000e+00
%250 [3112r,3144r:0)  0@3112r weight:0.000000e+00
%251 [3144r,3456r:0)  0@3144r weight:0.000000e+00
%252 [3096r,3160r:0)  0@3096r weight:0.000000e+00
%253 [3128r,3160r:0)  0@3128r weight:0.000000e+00
%254 [3160r,3432r:0)  0@3160r weight:0.000000e+00
%255 [3216r,3232r:0)  0@3216r weight:0.000000e+00
%256 [3176r,3392r:0)  0@3176r weight:0.000000e+00
%257 [3224r,3232r:0)  0@3224r weight:0.000000e+00
%258 [3232r,3416r:0)  0@3232r weight:0.000000e+00
%259 [3384r,3400r:0)  0@3384r weight:0.000000e+00
%260 [3040r,3168r:0)  0@3040r weight:0.000000e+00
%261 [3072r,3168r:0)  0@3072r weight:0.000000e+00
%262 [3168r,3448r:0)  0@3168r weight:0.000000e+00
%263 [3392r,3400r:0)  0@3392r weight:0.000000e+00
%264 [3400r,3408r:0)  0@3400r weight:0.000000e+00
%265 [3424r,3464r:0)  0@3424r weight:0.000000e+00
%266 [3304r,3336r:0)  0@3304r weight:0.000000e+00
%267 [3336r,3472r:0)  0@3336r weight:0.000000e+00
%268 [704r,6848B:0)  0@704r weight:0.000000e+00
%269 [1528r,1568B:1)[1744r,1792B:0)[1792B,1824r:2)  0@1744r 1@1528r 2@1792B-phi weight:0.000000e+00
%270 [4808r,4848B:1)[5024r,5072B:0)[5072B,5104r:2)  0@5024r 1@4808r 2@5072B-phi weight:0.000000e+00
RegMasks: 384r 6992r
********** MACHINEINSTRS **********
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=4, align=4, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=4, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: dead
  fi#7: size=8, align=8, at location [SP]
  fi#8: size=4, align=4, at location [SP]
  fi#9: size=4, align=4, at location [SP]
  fi#10: size=4, align=4, at location [SP]
  fi#11: size=16, align=16, at location [SP]
  fi#12: size=16, align=16, at location [SP]
  fi#13: size=16, align=16, at location [SP]
  fi#14: size=4, align=4, at location [SP]
  fi#15: size=4, align=4, at location [SP]
  fi#16: size=4, align=4, at location [SP]
  fi#17: size=4, align=4, at location [SP]
  fi#18: size=4, align=4, at location [SP]
  fi#19: size=4, align=4, at location [SP]
  fi#20: size=4, align=4, at location [SP]
  fi#21: size=4, align=4, at location [SP]
  fi#22: size=4, align=4, at location [SP]
  fi#23: size=4, align=4, at location [SP]
  fi#24: size=16, align=8, at location [SP]
  fi#25: size=16, align=8, at location [SP]
  fi#26: size=16, align=8, at location [SP]
  fi#27: size=16, align=8, at location [SP]
  fi#28: size=16, align=8, at location [SP]
  fi#29: size=16, align=8, at location [SP]
  fi#30: size=16, align=8, at location [SP]
  fi#31: size=16, align=8, at location [SP]
  fi#32: size=16, align=8, at location [SP]
  fi#33: size=16, align=8, at location [SP]
  fi#34: size=16, align=8, at location [SP]
  fi#35: size=16, align=8, at location [SP]
  fi#36: size=16, align=8, at location [SP]
  fi#37: size=16, align=8, at location [SP]
Function Live Ins: $w0 in %5, $w1 in %6, $w2 in %7, $w3 in %8, $w4 in %9, $x5 in %10

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $w0, $w1, $w2, $w3, $w4, $x5
16B	  %10:gpr64 = COPY $x5
32B	  %9:gpr32 = COPY $w4
48B	  %8:gpr32 = COPY $w3
64B	  %7:gpr32 = COPY $w2
80B	  %6:gpr32 = COPY $w1
96B	  %5:gpr32 = COPY $w0
112B	  STRWui %5:gpr32, %stack.0.is.addr, 0 :: (store 4 into %ir.is.addr)
128B	  STRWui %6:gpr32, %stack.1.m.addr, 0 :: (store 4 into %ir.m.addr)
144B	  STRWui %7:gpr32, %stack.2.vlen.addr, 0 :: (store 4 into %ir.vlen.addr)
160B	  STRWui %8:gpr32, %stack.3.n.addr, 0 :: (store 4 into %ir.n.addr)
256B	  %12:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
272B	  %13:gpr32 = LDRWui %12:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
276B	  STRWui %9:gpr32, %stack.4.xd1.addr, 0 :: (store 4 into %ir.xd1.addr)
280B	  STRXui %10:gpr64, %stack.5.ox.addr, 0 :: (store 8 into %ir.ox.addr)
288B	  undef %0.sub_32:gpr64 = ORRWrs $wzr, %9:gpr32, 0, debug-location !509; fft3d.c:60:18
296B	  STRXui %10:gpr64, %stack.7.x, 0, debug-location !512 :: (store 8 into %ir.x); fft3d.c:60:15
304B	  CBZW %13:gpr32, %bb.2, debug-location !550; fft3d.c:66:9
312B	  B %bb.1, debug-location !550; fft3d.c:66:9

320B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.2(0x80000000); %bb.2(100.00%)

336B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !551; fft3d.c:67:9
368B	  $w0 = MOVi32imm 4, debug-location !551; fft3d.c:67:9
384B	  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !551; fft3d.c:67:9
400B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !551; fft3d.c:67:9
416B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !551; fft3d.c:67:9
432B	  PCN_STACKMAP 0, 0, 0, %stack.24..compoundliteral, 0, 0, %stack.31..compoundliteral155, 0, 0, %stack.32..compoundliteral190, 0, 0, %stack.33..compoundliteral204, 0, 0, %stack.34..compoundliteral207, 0, 0, %stack.35..compoundliteral219, 0, 0, %stack.36..compoundliteral233, 0, 0, %stack.37..compoundliteral245, 0, 0, %stack.25..compoundliteral43, 0, 0, %stack.26..compoundliteral57, 0, 0, %stack.27..compoundliteral60, 0, 0, %stack.28..compoundliteral72, 0, 0, %stack.29..compoundliteral86, 0, 0, %stack.30..compoundliteral98, 0, 0, %fixed-stack.0, 0, 0, %stack.8.i, 0, 0, %stack.20.i11, 0, 0, %stack.21.i12, 0, 0, %stack.22.i21, 0, 0, %stack.23.i22, 0, 0, %stack.0.is.addr, 0, 0, %stack.9.j, 0, 0, %stack.14.k, 0, 0, %stack.19.ku, 0, 0, %stack.10.l, 0, 0, %stack.16.li, 0, 0, %stack.17.lj, 0, 0, %stack.18.lk, 0, 0, %stack.1.m.addr, 0, 0, %stack.3.n.addr, 0, 0, %stack.15.n1, 0, 0, %stack.11.u1, 0, 0, %stack.2.vlen.addr, 0, 0, %stack.7.x, 0, 0, %stack.12.x11, 0, 0, %stack.13.x21, 0, %0:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !551 :: (load 8 from %stack.24..compoundliteral), (load 8 from %stack.31..compoundliteral155), (load 8 from %stack.32..compoundliteral190), (load 8 from %stack.33..compoundliteral204), (load 8 from %stack.34..compoundliteral207), (load 8 from %stack.35..compoundliteral219), (load 8 from %stack.36..compoundliteral233), (load 8 from %stack.37..compoundliteral245), (load 8 from %stack.25..compoundliteral43), (load 8 from %stack.26..compoundliteral57), (load 8 from %stack.27..compoundliteral60), (load 8 from %stack.28..compoundliteral72), (load 8 from %stack.29..compoundliteral86), (load 8 from %stack.30..compoundliteral98), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.8.i, align 4), (load 8 from %stack.20.i11, align 4), (load 8 from %stack.21.i12, align 4), (load 8 from %stack.22.i21, align 4), (load 8 from %stack.23.i22, align 4), (load 8 from %stack.0.is.addr, align 4), (load 8 from %stack.9.j, align 4), (load 8 from %stack.14.k, align 4), (load 8 from %stack.19.ku, align 4), (load 8 from %stack.10.l, align 4), (load 8 from %stack.16.li, align 4), (load 8 from %stack.17.lj, align 4), (load 8 from %stack.18.lk, align 4), (load 8 from %stack.1.m.addr, align 4), (load 8 from %stack.3.n.addr, align 4), (load 8 from %stack.15.n1, align 4), (load 8 from %stack.11.u1, align 16), (load 8 from %stack.2.vlen.addr, align 4), (load 8 from %stack.7.x), (load 8 from %stack.12.x11, align 16), (load 8 from %stack.13.x21, align 16); fft3d.c:67:9
448B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !551; fft3d.c:67:9

464B	bb.2.if.end:
	; predecessors: %bb.0, %bb.1
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

496B	  %15:gpr32common = LDRWui %stack.3.n.addr, 0, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
608B	  undef %21.sub_32:gpr64 = LDRWui %stack.1.m.addr, 0, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
612B	  %19:gpr32 = MOVi32imm 1
616B	  STRWui %19:gpr32, %stack.17.lj, 0, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
688B	  STRWui %19:gpr32, %stack.10.l, 0, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
696B	  %23:gpr32 = LSLVWr %19:gpr32, %21.sub_32:gpr64, debug-location !557; fft3d.c:73:12
704B	  %268:gpr64sp = ADDXri %stack.13.x21, 0, 0
712B	  STRWui %23:gpr32, %stack.16.li, 0, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
720B	  %233:gpr64 = MOVaddr target-flags(aarch64-page) @scr, target-flags(aarch64-pageoff, aarch64-nc) @scr
728B	  dead $wzr = SUBSWri %15:gpr32common, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
736B	  %17:gpr32 = CSINCWr %15:gpr32common, %15:gpr32common, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
744B	  %18:gpr32 = SBFMWri %17:gpr32, 1, 31, debug-location !553; fft3d.c:71:12
752B	  STRWui %18:gpr32, %stack.15.n1, 0, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
760B	  undef %170.sub_32:gpr64 = MOVi32imm 528

768B	bb.3.for.cond:
	; predecessors: %bb.2, %bb.35
	  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)

776B	  %24:gpr32 = LDRWui %stack.10.l, 0, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
784B	  %25:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
792B	  dead $wzr = SUBSWrr %24:gpr32, %25:gpr32, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
800B	  Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5
816B	  B %bb.4, debug-location !566; fft3d.c:74:5

832B	bb.4.for.body:
	; predecessors: %bb.3
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

848B	  %30:gpr32 = LDRWui %stack.17.lj, 0, debug-location !567 :: (dereferenceable load 4 from %ir.lj); fft3d.c:75:14
912B	  %32:gpr32common = LDRWui %stack.16.li, 0, debug-location !573 :: (dereferenceable load 4 from %ir.li); fft3d.c:77:14
920B	  STRWui %30:gpr32, %stack.18.lk, 0, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
928B	  %31:gpr32 = UBFMWri %30:gpr32, 31, 30, debug-location !571; fft3d.c:76:16
936B	  STRWui %31:gpr32, %stack.17.lj, 0, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
944B	  dead $wzr = SUBSWri %32:gpr32common, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
952B	  %34:gpr32 = CSINCWr %32:gpr32common, %32:gpr32common, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
960B	  %35:gpr32 = SBFMWri %34:gpr32, 1, 31, debug-location !574; fft3d.c:77:17
976B	  STRWui %35:gpr32, %stack.16.li, 0, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
992B	  STRWui %35:gpr32, %stack.19.ku, 0, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
1024B	  STRWui $wzr, %stack.8.i, 0, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16

1040B	bb.5.for.cond2:
	; predecessors: %bb.4, %bb.15
	  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)

1072B	  %38:gpr32common = LDRWui %stack.16.li, 0, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
1080B	  %37:gpr32 = LDRWui %stack.8.i, 0, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
1088B	  %39:gpr32common = SUBWri %38:gpr32common, 1, 0, debug-location !584; fft3d.c:80:29
1104B	  dead $wzr = SUBSWrr %37:gpr32, %39:gpr32common, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
1120B	  Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9
1136B	  B %bb.6, debug-location !586; fft3d.c:80:9

1152B	bb.6.for.body4:
	; predecessors: %bb.5
	  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)

1360B	  %185:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
1368B	  %177:gpr32 = LDRWui %stack.8.i, 0, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
1376B	  %182:gpr32 = LDRWui %stack.17.lj, 0, debug-location !597 :: (dereferenceable load 4 from %ir.lj); fft3d.c:83:23
1384B	  %178:gpr32 = LDRWui %stack.18.lk, 0, debug-location !589 :: (dereferenceable load 4 from %ir.lk); fft3d.c:81:23
1392B	  dead $wzr = SUBSWri %185:gpr32common, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
1400B	  %180:gpr32 = LDRWui %stack.15.n1, 0, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
1408B	  %183:gpr32 = nsw MADDWrrr %177:gpr32, %182:gpr32, $wzr, debug-location !598; fft3d.c:83:21
1416B	  %179:gpr32 = nsw MADDWrrr %177:gpr32, %178:gpr32, $wzr, debug-location !590; fft3d.c:81:21
1424B	  STRWui %179:gpr32, %stack.20.i11, 0, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
1432B	  %181:gpr32 = nsw ADDWrr %179:gpr32, %180:gpr32, debug-location !594; fft3d.c:82:23
1440B	  STRWui %183:gpr32, %stack.22.i21, 0, debug-location !599 :: (store 4 into %ir.i21); fft3d.c:83:17
1448B	  %184:gpr32 = nsw ADDWrr %183:gpr32, %178:gpr32, debug-location !602; fft3d.c:84:23
1456B	  STRWui %181:gpr32, %stack.21.i12, 0, debug-location !595 :: (store 4 into %ir.i12); fft3d.c:82:17
1464B	  STRWui %184:gpr32, %stack.23.i22, 0, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
1472B	  Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17
1480B	  B %bb.7, debug-location !607; fft3d.c:86:17

1488B	bb.7.if.then9:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1504B	  %198:gpr32 = LDRWui %stack.19.ku, 0, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
1512B	  %199:gpr32 = LDRWui %stack.8.i, 0, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
1516B	  %197:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
1520B	  %200:gpr32 = nsw ADDWrr %198:gpr32, %199:gpr32, debug-location !612; fft3d.c:87:34
1528B	  %269:gpr64sp = ADDXrx %197:gpr64common, %200:gpr32, 52, debug-location !608; fft3d.c:87:22
1552B	  B %bb.9, debug-location !613; fft3d.c:88:13

1568B	bb.8.if.else:
	; predecessors: %bb.6
	  successors: %bb.9(0x80000000); %bb.9(100.00%)

1600B	  %189:gpr32 = LDRWui %stack.19.ku, 0, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
1616B	  %190:gpr32 = LDRWui %stack.8.i, 0, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
1624B	  %188:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
1632B	  %191:gpr32 = nsw ADDWrr %189:gpr32, %190:gpr32, debug-location !614; fft3d.c:90:22
1648B	  %192:gpr64sp = ADDXrx %188:gpr64common, %191:gpr32, 52, debug-location !614; fft3d.c:90:22
1664B	  %193:fpr64 = LDRDui %192:gpr64sp, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
1680B	  STRDui %193:fpr64, %stack.24..compoundliteral, 0, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
1696B	  %194:fpr64 = LDRDui %192:gpr64sp, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
1712B	  %195:fpr64 = FNEGDr %194:fpr64, debug-location !614; fft3d.c:90:22
1728B	  STRDui %195:fpr64, %stack.24..compoundliteral, 1, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
1744B	  %269:gpr64sp = ADDXri %stack.24..compoundliteral, 0, 0

1792B	bb.9.if.end20:
	; predecessors: %bb.8, %bb.7
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

1824B	  %202:fpr128 = LDRQui %269:gpr64sp, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
1832B	  STRWui $wzr, %stack.14.k, 0, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
1840B	  STRQui %202:fpr128, %268:gpr64sp, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0

1888B	bb.10.for.cond21:
	; predecessors: %bb.9, %bb.14
	  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)

1920B	  %205:gpr32common = LDRWui %stack.18.lk, 0, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
1928B	  %204:gpr32 = LDRWui %stack.14.k, 0, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
1936B	  %206:gpr32common = SUBWri %205:gpr32common, 1, 0, debug-location !623; fft3d.c:92:33
1952B	  dead $wzr = SUBSWrr %204:gpr32, %206:gpr32common, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
1968B	  Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13
1984B	  B %bb.11, debug-location !625; fft3d.c:92:13

2000B	bb.11.for.body24:
	; predecessors: %bb.10
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2032B	  STRWui $wzr, %stack.9.j, 0, debug-location !626 :: (store 4 into %ir.j); fft3d.c:93:24

2048B	bb.12.for.cond25:
	; predecessors: %bb.11, %bb.13
	  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)

2064B	  %211:gpr32 = LDRWui %stack.9.j, 0, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
2080B	  %212:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
2096B	  dead $wzr = SUBSWrr %211:gpr32, %212:gpr32, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
2112B	  Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17
2128B	  B %bb.13, debug-location !634; fft3d.c:93:17

2144B	bb.13.for.body27:
	; predecessors: %bb.12
	  successors: %bb.12(0x80000000); %bb.12(100.00%)

2160B	  %216:gpr64 = LDRXui %stack.7.x, 0, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
2176B	  %217:gpr64 = LDRSWui %stack.20.i11, 0, debug-location !637 :: (dereferenceable load 4 from %ir.i11); fft3d.c:94:29
2272B	  %223:gpr64 = LDRSWui %stack.9.j, 0, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
2280B	  %218:gpr64 = LDRSWui %stack.14.k, 0, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
2336B	  %226:gpr64 = LDRSWui %stack.21.i12, 0, debug-location !642 :: (dereferenceable load 4 from %ir.i12); fft3d.c:95:29
2656B	  %244:gpr32 = LDRWui %stack.14.k, 0, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
2704B	  %247:gpr64 = LDRSWui %stack.9.j, 0, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
2708B	  %220:gpr64 = nsw ADDXrr %217:gpr64, %218:gpr64, debug-location !639; fft3d.c:94:33
2712B	  %224:gpr64 = UBFMXri %223:gpr64, 60, 59, debug-location !649; fft3d.c:96:21
2720B	  %221:gpr64 = nsw MADDXrrr %220:gpr64, %0:gpr64, $xzr, debug-location !635; fft3d.c:94:27
2728B	  %222:gpr64common = ADDXrs %216:gpr64, %221:gpr64, 4, debug-location !635; fft3d.c:94:27
2736B	  %225:fpr128 = LDRQroX %222:gpr64common, %224:gpr64, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
2744B	  %227:gpr64 = nsw ADDXrr %226:gpr64, %218:gpr64, debug-location !644; fft3d.c:95:33
2752B	  %228:gpr64 = nsw MADDXrrr %227:gpr64, %0:gpr64, $xzr, debug-location !641; fft3d.c:95:27
2760B	  %229:gpr64common = ADDXrs %216:gpr64, %228:gpr64, 4, debug-location !641; fft3d.c:95:27
2768B	  STRQui %225:fpr128, %268:gpr64sp, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
2776B	  %230:fpr128 = LDRQroX %229:gpr64common, %224:gpr64, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
3040B	  %260:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag104); fft3d.c:97:39
3048B	  %236:fpr64 = LDRDui %stack.12.x11, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:96:39
3056B	  %249:fpr64 = LDRDui %stack.12.x11, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16); fft3d.c:97:39
3064B	  STRQui %230:fpr128, %268:gpr64sp, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
3072B	  %261:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
3080B	  %237:fpr64 = LDRDui %stack.13.x21, 0, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16); fft3d.c:96:39
3088B	  %239:fpr64 = LDRDui %stack.12.x11, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
3096B	  %252:fpr64 = LDRDui %stack.12.x11, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
3104B	  %240:fpr64 = LDRDui %stack.13.x21, 1, debug-location !651 :: (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
3112B	  %250:fpr64 = LDRDui %stack.13.x21, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16); fft3d.c:97:39
3120B	  %238:fpr64 = FADDDrr %236:fpr64, %237:fpr64, debug-location !651; fft3d.c:96:39
3128B	  %253:fpr64 = LDRDui %stack.13.x21, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
3136B	  %241:fpr64 = FADDDrr %239:fpr64, %240:fpr64, debug-location !651; fft3d.c:96:39
3144B	  %251:fpr64 = FSUBDrr %249:fpr64, %250:fpr64, debug-location !657; fft3d.c:97:39
3152B	  %231:gpr32 = LDRWui %stack.22.i21, 0, debug-location !646 :: (dereferenceable load 4 from %ir.i21); fft3d.c:96:25
3160B	  %254:fpr64 = FSUBDrr %252:fpr64, %253:fpr64, debug-location !657; fft3d.c:97:39
3168B	  %262:fpr64 = FSUBDrr %260:fpr64, %261:fpr64, debug-location !657; fft3d.c:97:39
3176B	  %256:fpr64 = LDRDui %stack.11.u1, 1, debug-location !657 :: (dereferenceable load 8 from %ir.imag97); fft3d.c:97:39
3184B	  %248:fpr64 = LDRDui %stack.11.u1, 0, debug-location !657 :: (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
3192B	  %243:gpr32 = LDRWui %stack.23.i22, 0, debug-location !652 :: (dereferenceable load 4 from %ir.i22); fft3d.c:97:25
3200B	  STRDui %241:fpr64, %stack.25..compoundliteral43, 1, debug-location !651 :: (store 8 into %ir.imag48); fft3d.c:96:39
3208B	  STRDui %238:fpr64, %stack.25..compoundliteral43, 0, debug-location !651 :: (store 8 into %ir.real448); fft3d.c:96:39
3216B	  %255:fpr64 = FMULDrr %248:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
3224B	  %257:fpr64 = FMULDrr %256:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
3232B	  %258:fpr64 = FSUBDrr %255:fpr64, %257:fpr64, debug-location !657; fft3d.c:97:39
3240B	  %242:fpr128 = LDRQui %stack.25..compoundliteral43, 0, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
3248B	  %232:gpr32 = nsw ADDWrr %231:gpr32, %218.sub_32:gpr64, debug-location !648; fft3d.c:96:29
3304B	  %266:gpr32common = LDRWui %stack.9.j, 0, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
3312B	  %235:gpr64common = SMADDLrrr %232:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !649; fft3d.c:96:21
3320B	  STRQroX %242:fpr128, %235:gpr64common, %224:gpr64, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
3328B	  %245:gpr32 = nsw ADDWrr %243:gpr32, %244:gpr32, debug-location !654; fft3d.c:97:29
3336B	  %267:gpr32common = nsw ADDWri %266:gpr32common, 1, 0, debug-location !658; fft3d.c:93:40
3344B	  %246:gpr64common = SMADDLrrr %245:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !655; fft3d.c:97:21
3352B	  STRDui %254:fpr64, %stack.27..compoundliteral60, 1, debug-location !657 :: (store 8 into %ir.imag65); fft3d.c:97:39
3360B	  STRDui %251:fpr64, %stack.27..compoundliteral60, 0, debug-location !657 :: (store 8 into %ir.real6114); fft3d.c:97:39
3368B	  STRDui %254:fpr64, %stack.28..compoundliteral72, 1, debug-location !657 :: (store 8 into %ir.imag77); fft3d.c:97:39
3376B	  STRDui %251:fpr64, %stack.28..compoundliteral72, 0, debug-location !657 :: (store 8 into %ir.real7318); fft3d.c:97:39
3384B	  %259:fpr64 = FMULDrr %248:fpr64, %254:fpr64, debug-location !657; fft3d.c:97:39
3392B	  %263:fpr64 = FMULDrr %256:fpr64, %251:fpr64, debug-location !657; fft3d.c:97:39
3400B	  %264:fpr64 = FADDDrr %259:fpr64, %263:fpr64, debug-location !657; fft3d.c:97:39
3408B	  STRDui %264:fpr64, %stack.26..compoundliteral57, 1, debug-location !657 :: (store 8 into %ir.imag84); fft3d.c:97:39
3416B	  STRDui %258:fpr64, %stack.26..compoundliteral57, 0, debug-location !657 :: (store 8 into %ir.real5812); fft3d.c:97:39
3424B	  %265:fpr128 = LDRQui %stack.26..compoundliteral57, 0, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
3432B	  STRDui %254:fpr64, %stack.29..compoundliteral86, 1, debug-location !657 :: (store 8 into %ir.imag91); fft3d.c:97:39
3440B	  STRDui %251:fpr64, %stack.29..compoundliteral86, 0, debug-location !657 :: (store 8 into %ir.real8722); fft3d.c:97:39
3448B	  STRDui %262:fpr64, %stack.30..compoundliteral98, 1, debug-location !657 :: (store 8 into %ir.imag103); fft3d.c:97:39
3456B	  STRDui %251:fpr64, %stack.30..compoundliteral98, 0, debug-location !657 :: (store 8 into %ir.real9925); fft3d.c:97:39
3464B	  STRQroX %265:fpr128, %246:gpr64common, %247:gpr64, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
3472B	  STRWui %267:gpr32common, %stack.9.j, 0, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
3480B	  B %bb.12, debug-location !659; fft3d.c:93:17

3488B	bb.14.for.inc110:
	; predecessors: %bb.12
	  successors: %bb.10(0x80000000); %bb.10(100.00%)

3496B	  %214:gpr32common = LDRWui %stack.14.k, 0, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
3504B	  %215:gpr32common = nsw ADDWri %214:gpr32common, 1, 0, debug-location !662; fft3d.c:92:39
3512B	  STRWui %215:gpr32common, %stack.14.k, 0, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
3520B	  B %bb.10, debug-location !663; fft3d.c:92:13

3528B	bb.15.for.inc113:
	; predecessors: %bb.10
	  successors: %bb.5(0x80000000); %bb.5(100.00%)

3536B	  %208:gpr32common = LDRWui %stack.8.i, 0, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
3544B	  %209:gpr32common = nsw ADDWri %208:gpr32common, 1, 0, debug-location !666; fft3d.c:80:35
3552B	  STRWui %209:gpr32common, %stack.8.i, 0, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
3560B	  B %bb.5, debug-location !667; fft3d.c:80:9

3568B	bb.16.for.end115:
	; predecessors: %bb.5
	  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)

3576B	  %41:gpr32 = LDRWui %stack.10.l, 0, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
3584B	  %42:gpr32 = LDRWui %stack.1.m.addr, 0, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
3592B	  dead $wzr = SUBSWrr %41:gpr32, %42:gpr32, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
3600B	  Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13
3608B	  B %bb.17, debug-location !674; fft3d.c:102:13

3616B	bb.17.if.then117:
	; predecessors: %bb.16
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

3632B	  STRWui $wzr, %stack.14.k, 0, debug-location !675 :: (store 4 into %ir.k); fft3d.c:103:20

3640B	bb.18.for.cond118:
	; predecessors: %bb.17, %bb.22
	  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)

3648B	  %152:gpr32 = LDRWui %stack.14.k, 0, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
3656B	  %153:gpr32 = LDRWui %stack.3.n.addr, 0, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
3664B	  dead $wzr = SUBSWrr %152:gpr32, %153:gpr32, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
3672B	  Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13
3680B	  B %bb.19, debug-location !683; fft3d.c:103:13

3688B	bb.19.for.body120:
	; predecessors: %bb.18
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

3704B	  STRWui $wzr, %stack.9.j, 0, debug-location !684 :: (store 4 into %ir.j); fft3d.c:104:24

3712B	bb.20.for.cond121:
	; predecessors: %bb.19, %bb.21
	  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)

3720B	  %158:gpr32 = LDRWui %stack.9.j, 0, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
3728B	  %159:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
3744B	  dead $wzr = SUBSWrr %158:gpr32, %159:gpr32, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
3760B	  Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17
3776B	  B %bb.21, debug-location !692; fft3d.c:104:17

3792B	bb.21.for.body123:
	; predecessors: %bb.20
	  successors: %bb.20(0x80000000); %bb.20(100.00%)

3872B	  %167:gpr64 = LDRSWui %stack.9.j, 0, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
3876B	  %164:gpr64 = LDRSWui %stack.14.k, 0, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
3880B	  %163:gpr64 = LDRXui %stack.7.x, 0, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
3888B	  %168:gpr64 = UBFMXri %167:gpr64, 60, 59, debug-location !693; fft3d.c:105:21
3920B	  %173:gpr64common = MADDXrrr %164:gpr64, %170:gpr64, %233:gpr64, debug-location !698; fft3d.c:105:31
3936B	  %174:fpr128 = LDRQroX %173:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
3940B	  %165:gpr64 = nsw MADDXrrr %164:gpr64, %0:gpr64, $xzr, debug-location !693; fft3d.c:105:21
3944B	  %166:gpr64common = ADDXrs %163:gpr64, %165:gpr64, 4, debug-location !693; fft3d.c:105:21
3952B	  STRQroX %174:fpr128, %166:gpr64common, %168:gpr64, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
3968B	  %175:gpr32common = LDRWui %stack.9.j, 0, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
3984B	  %176:gpr32common = nsw ADDWri %175:gpr32common, 1, 0, debug-location !700; fft3d.c:104:40
4000B	  STRWui %176:gpr32common, %stack.9.j, 0, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
4016B	  B %bb.20, debug-location !701; fft3d.c:104:17

4032B	bb.22.for.inc135:
	; predecessors: %bb.20
	  successors: %bb.18(0x80000000); %bb.18(100.00%)

4048B	  %161:gpr32common = LDRWui %stack.14.k, 0, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
4064B	  %162:gpr32common = nsw ADDWri %161:gpr32common, 1, 0, debug-location !704; fft3d.c:103:33
4080B	  STRWui %162:gpr32common, %stack.14.k, 0, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
4096B	  B %bb.18, debug-location !705; fft3d.c:103:13

4112B	bb.23.if.else138:
	; predecessors: %bb.16
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

4128B	  %44:gpr32 = LDRWui %stack.17.lj, 0, debug-location !708 :: (dereferenceable load 4 from %ir.lj); fft3d.c:110:18
4192B	  %46:gpr32common = LDRWui %stack.16.li, 0, debug-location !714 :: (dereferenceable load 4 from %ir.li); fft3d.c:112:18
4200B	  STRWui %44:gpr32, %stack.18.lk, 0, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
4208B	  %45:gpr32 = UBFMWri %44:gpr32, 31, 30, debug-location !712; fft3d.c:111:20
4216B	  STRWui %45:gpr32, %stack.17.lj, 0, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
4224B	  dead $wzr = SUBSWri %46:gpr32common, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
4232B	  %48:gpr32 = CSINCWr %46:gpr32common, %46:gpr32common, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
4240B	  %49:gpr32 = SBFMWri %48:gpr32, 1, 31, debug-location !715; fft3d.c:112:21
4256B	  STRWui %49:gpr32, %stack.16.li, 0, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
4272B	  STRWui %49:gpr32, %stack.19.ku, 0, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
4304B	  STRWui $wzr, %stack.8.i, 0, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20

4320B	bb.24.for.cond141:
	; predecessors: %bb.23, %bb.34
	  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)

4352B	  %52:gpr32common = LDRWui %stack.16.li, 0, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
4360B	  %51:gpr32 = LDRWui %stack.8.i, 0, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
4368B	  %53:gpr32common = SUBWri %52:gpr32common, 1, 0, debug-location !725; fft3d.c:115:33
4384B	  dead $wzr = SUBSWrr %51:gpr32, %53:gpr32common, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
4400B	  Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13
4416B	  B %bb.25, debug-location !727; fft3d.c:115:13

4432B	bb.25.for.body144:
	; predecessors: %bb.24
	  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)

4640B	  %63:gpr32common = LDRWui %stack.0.is.addr, 0, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
4648B	  %55:gpr32 = LDRWui %stack.8.i, 0, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
4656B	  %60:gpr32 = LDRWui %stack.17.lj, 0, debug-location !738 :: (dereferenceable load 4 from %ir.lj); fft3d.c:118:27
4664B	  %56:gpr32 = LDRWui %stack.18.lk, 0, debug-location !730 :: (dereferenceable load 4 from %ir.lk); fft3d.c:116:27
4672B	  dead $wzr = SUBSWri %63:gpr32common, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
4680B	  %58:gpr32 = LDRWui %stack.15.n1, 0, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
4688B	  %61:gpr32 = nsw MADDWrrr %55:gpr32, %60:gpr32, $wzr, debug-location !739; fft3d.c:118:25
4696B	  %57:gpr32 = nsw MADDWrrr %55:gpr32, %56:gpr32, $wzr, debug-location !731; fft3d.c:116:25
4704B	  STRWui %57:gpr32, %stack.20.i11, 0, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
4712B	  %59:gpr32 = nsw ADDWrr %57:gpr32, %58:gpr32, debug-location !735; fft3d.c:117:27
4720B	  STRWui %61:gpr32, %stack.22.i21, 0, debug-location !740 :: (store 4 into %ir.i21); fft3d.c:118:21
4728B	  %62:gpr32 = nsw ADDWrr %61:gpr32, %56:gpr32, debug-location !743; fft3d.c:119:27
4736B	  STRWui %59:gpr32, %stack.21.i12, 0, debug-location !736 :: (store 4 into %ir.i12); fft3d.c:117:21
4744B	  STRWui %62:gpr32, %stack.23.i22, 0, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
4752B	  Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21
4760B	  B %bb.26, debug-location !748; fft3d.c:121:21

4768B	bb.26.if.then150:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4784B	  %76:gpr32 = LDRWui %stack.19.ku, 0, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
4792B	  %77:gpr32 = LDRWui %stack.8.i, 0, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
4796B	  %75:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
4800B	  %78:gpr32 = nsw ADDWrr %76:gpr32, %77:gpr32, debug-location !753; fft3d.c:122:38
4808B	  %270:gpr64sp = ADDXrx %75:gpr64common, %78:gpr32, 52, debug-location !749; fft3d.c:122:26
4832B	  B %bb.28, debug-location !754; fft3d.c:123:17

4848B	bb.27.if.else154:
	; predecessors: %bb.25
	  successors: %bb.28(0x80000000); %bb.28(100.00%)

4880B	  %67:gpr32 = LDRWui %stack.19.ku, 0, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
4896B	  %68:gpr32 = LDRWui %stack.8.i, 0, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
4904B	  %66:gpr64common = LDRXui %fixed-stack.0, 0, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
4912B	  %69:gpr32 = nsw ADDWrr %67:gpr32, %68:gpr32, debug-location !755; fft3d.c:125:26
4928B	  %70:gpr64sp = ADDXrx %66:gpr64common, %69:gpr32, 52, debug-location !755; fft3d.c:125:26
4944B	  %71:fpr64 = LDRDui %70:gpr64sp, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
4960B	  STRDui %71:fpr64, %stack.31..compoundliteral155, 0, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
4976B	  %72:fpr64 = LDRDui %70:gpr64sp, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
4992B	  %73:fpr64 = FNEGDr %72:fpr64, debug-location !755; fft3d.c:125:26
5008B	  STRDui %73:fpr64, %stack.31..compoundliteral155, 1, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
5024B	  %270:gpr64sp = ADDXri %stack.31..compoundliteral155, 0, 0

5072B	bb.28.if.end167:
	; predecessors: %bb.27, %bb.26
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

5104B	  %80:fpr128 = LDRQui %270:gpr64sp, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
5112B	  STRWui $wzr, %stack.14.k, 0, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
5120B	  STRQui %80:fpr128, %268:gpr64sp, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0

5168B	bb.29.for.cond168:
	; predecessors: %bb.28, %bb.33
	  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)

5200B	  %83:gpr32common = LDRWui %stack.18.lk, 0, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
5208B	  %82:gpr32 = LDRWui %stack.14.k, 0, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
5216B	  %84:gpr32common = SUBWri %83:gpr32common, 1, 0, debug-location !764; fft3d.c:127:37
5232B	  dead $wzr = SUBSWrr %82:gpr32, %84:gpr32common, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
5248B	  Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17
5264B	  B %bb.30, debug-location !766; fft3d.c:127:17

5280B	bb.30.for.body171:
	; predecessors: %bb.29
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

5312B	  STRWui $wzr, %stack.9.j, 0, debug-location !767 :: (store 4 into %ir.j); fft3d.c:128:28

5328B	bb.31.for.cond172:
	; predecessors: %bb.30, %bb.32
	  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)

5344B	  %89:gpr32 = LDRWui %stack.9.j, 0, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
5360B	  %90:gpr32 = LDRWui %stack.2.vlen.addr, 0, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
5376B	  dead $wzr = SUBSWrr %89:gpr32, %90:gpr32, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
5392B	  Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21
5408B	  B %bb.32, debug-location !775; fft3d.c:128:21

5424B	bb.32.for.body174:
	; predecessors: %bb.31
	  successors: %bb.31(0x80000000); %bb.31(100.00%)

5440B	  %94:gpr32 = LDRWui %stack.20.i11, 0, debug-location !776 :: (dereferenceable load 4 from %ir.i11); fft3d.c:129:35
5456B	  %95:gpr32 = LDRWui %stack.14.k, 0, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
5568B	  %103:gpr32 = LDRWui %stack.21.i12, 0, debug-location !782 :: (dereferenceable load 4 from %ir.i12); fft3d.c:130:35
5576B	  %100:gpr64 = LDRSWui %stack.9.j, 0, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
5680B	  %109:gpr64 = LDRSWui %stack.14.k, 0, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
5688B	  %96:gpr32 = nsw ADDWrr %94:gpr32, %95:gpr32, debug-location !779; fft3d.c:129:39
5696B	  %104:gpr32 = nsw ADDWrr %103:gpr32, %95:gpr32, debug-location !784; fft3d.c:130:39
5704B	  %101:gpr64 = UBFMXri %100:gpr64, 60, 59, debug-location !787; fft3d.c:131:25
5712B	  %99:gpr64common = SMADDLrrr %96:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !780; fft3d.c:129:31
5720B	  %105:gpr64common = SMADDLrrr %104:gpr32, %170.sub_32:gpr64, %233:gpr64, debug-location !785; fft3d.c:130:31
5728B	  %106:fpr128 = LDRQroX %105:gpr64common, %101:gpr64, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
5736B	  %102:fpr128 = LDRQroX %99:gpr64common, %101:gpr64, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
5744B	  STRQui %106:fpr128, %268:gpr64sp, 0, debug-location !785 :: (store 16 into %ir.156); fft3d.c:130:31
5752B	  STRQui %102:fpr128, %268:gpr64sp, 1, debug-location !780 :: (store 16 into %ir.151); fft3d.c:129:31
5816B	  %116:fpr64 = LDRDui %stack.12.x11, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag196); fft3d.c:131:41
5824B	  %113:fpr64 = LDRDui %stack.12.x11, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
5832B	  %114:fpr64 = LDRDui %stack.13.x21, 0, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16); fft3d.c:131:41
5840B	  %117:fpr64 = LDRDui %stack.13.x21, 1, debug-location !792 :: (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
5848B	  %107:gpr64 = LDRXui %stack.7.x, 0, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
5856B	  %108:gpr64 = LDRSWui %stack.22.i21, 0, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
5864B	  %115:fpr64 = FADDDrr %113:fpr64, %114:fpr64, debug-location !792; fft3d.c:131:41
5872B	  %118:fpr64 = FADDDrr %116:fpr64, %117:fpr64, debug-location !792; fft3d.c:131:41
5880B	  STRDui %118:fpr64, %stack.32..compoundliteral190, 1, debug-location !792 :: (store 8 into %ir.imag195); fft3d.c:131:41
5888B	  STRDui %115:fpr64, %stack.32..compoundliteral190, 0, debug-location !792 :: (store 8 into %ir.real19137); fft3d.c:131:41
5896B	  %119:fpr128 = LDRQui %stack.32..compoundliteral190, 0, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
5904B	  %110:gpr64 = nsw ADDXrr %108:gpr64, %109:gpr64, debug-location !790; fft3d.c:131:31
5912B	  %111:gpr64 = nsw MADDXrrr %110:gpr64, %0:gpr64, $xzr, debug-location !787; fft3d.c:131:25
5920B	  %112:gpr64common = ADDXrs %107:gpr64, %111:gpr64, 4, debug-location !787; fft3d.c:131:25
5928B	  STRQroX %119:fpr128, %112:gpr64common, %101:gpr64, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
6016B	  %127:fpr64 = LDRDui %stack.11.u1, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16); fft3d.c:132:41
6112B	  %132:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag214); fft3d.c:132:41
6120B	  %128:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
6336B	  %140:fpr64 = LDRDui %stack.12.x11, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16); fft3d.c:132:41
6344B	  %129:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16); fft3d.c:132:41
6352B	  %141:fpr64 = LDRDui %stack.13.x21, 0, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
6360B	  %131:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
6400B	  %143:fpr64 = LDRDui %stack.12.x11, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
6416B	  %144:fpr64 = LDRDui %stack.13.x21, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
6424B	  %130:fpr64 = FSUBDrr %128:fpr64, %129:fpr64, debug-location !798; fft3d.c:132:41
6432B	  %133:fpr64 = FSUBDrr %131:fpr64, %132:fpr64, debug-location !798; fft3d.c:132:41
6440B	  %135:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
6448B	  %139:fpr64 = LDRDui %stack.11.u1, 1, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
6456B	  %142:fpr64 = FSUBDrr %140:fpr64, %141:fpr64, debug-location !798; fft3d.c:132:41
6464B	  %134:fpr64 = FMULDrr %127:fpr64, %130:fpr64, debug-location !798; fft3d.c:132:41
6472B	  %136:fpr64 = FMULDrr %135:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
6480B	  %137:fpr64 = FSUBDrr %134:fpr64, %136:fpr64, debug-location !798; fft3d.c:132:41
6488B	  %138:fpr64 = FMULDrr %127:fpr64, %133:fpr64, debug-location !798; fft3d.c:132:41
6512B	  %146:fpr64 = FMULDrr %139:fpr64, %142:fpr64, debug-location !798; fft3d.c:132:41
6520B	  %147:fpr64 = FADDDrr %138:fpr64, %146:fpr64, debug-location !798; fft3d.c:132:41
6528B	  %121:gpr64 = LDRSWui %stack.23.i22, 0, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
6536B	  %122:gpr64 = LDRSWui %stack.14.k, 0, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
6544B	  STRDui %147:fpr64, %stack.33..compoundliteral204, 1, debug-location !798 :: (store 8 into %ir.imag231); fft3d.c:132:41
6552B	  STRDui %137:fpr64, %stack.33..compoundliteral204, 0, debug-location !798 :: (store 8 into %ir.real20541); fft3d.c:132:41
6560B	  %120:gpr64 = LDRXui %stack.7.x, 0, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
6568B	  %126:gpr64 = LDRSWui %stack.9.j, 0, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
6576B	  %123:gpr64 = nsw ADDXrr %121:gpr64, %122:gpr64, debug-location !796; fft3d.c:132:31
6584B	  %124:gpr64 = nsw MADDXrrr %123:gpr64, %0:gpr64, $xzr, debug-location !793; fft3d.c:132:25
6592B	  STRDui %133:fpr64, %stack.34..compoundliteral207, 1, debug-location !798 :: (store 8 into %ir.imag212); fft3d.c:132:41
6600B	  STRDui %130:fpr64, %stack.34..compoundliteral207, 0, debug-location !798 :: (store 8 into %ir.real20843); fft3d.c:132:41
6608B	  STRDui %133:fpr64, %stack.35..compoundliteral219, 1, debug-location !798 :: (store 8 into %ir.imag224); fft3d.c:132:41
6616B	  STRDui %130:fpr64, %stack.35..compoundliteral219, 0, debug-location !798 :: (store 8 into %ir.real22047); fft3d.c:132:41
6624B	  %125:gpr64common = ADDXrs %120:gpr64, %124:gpr64, 4, debug-location !793; fft3d.c:132:25
6632B	  STRDui %133:fpr64, %stack.36..compoundliteral233, 1, debug-location !798 :: (store 8 into %ir.imag238); fft3d.c:132:41
6640B	  STRDui %130:fpr64, %stack.36..compoundliteral233, 0, debug-location !798 :: (store 8 into %ir.real23451); fft3d.c:132:41
6648B	  %148:fpr128 = LDRQui %stack.33..compoundliteral204, 0, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
6656B	  %145:fpr64 = FSUBDrr %143:fpr64, %144:fpr64, debug-location !798; fft3d.c:132:41
6664B	  STRDui %145:fpr64, %stack.37..compoundliteral245, 1, debug-location !798 :: (store 8 into %ir.imag250); fft3d.c:132:41
6672B	  STRDui %142:fpr64, %stack.37..compoundliteral245, 0, debug-location !798 :: (store 8 into %ir.real24654); fft3d.c:132:41
6680B	  STRQroX %148:fpr128, %125:gpr64common, %126:gpr64, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
6688B	  %149:gpr32common = LDRWui %stack.9.j, 0, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
6696B	  %150:gpr32common = nsw ADDWri %149:gpr32common, 1, 0, debug-location !799; fft3d.c:128:44
6704B	  STRWui %150:gpr32common, %stack.9.j, 0, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
6712B	  B %bb.31, debug-location !800; fft3d.c:128:21

6720B	bb.33.for.inc260:
	; predecessors: %bb.31
	  successors: %bb.29(0x80000000); %bb.29(100.00%)

6728B	  %92:gpr32common = LDRWui %stack.14.k, 0, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
6736B	  %93:gpr32common = nsw ADDWri %92:gpr32common, 1, 0, debug-location !803; fft3d.c:127:43
6744B	  STRWui %93:gpr32common, %stack.14.k, 0, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
6752B	  B %bb.29, debug-location !804; fft3d.c:127:17

6760B	bb.34.for.inc263:
	; predecessors: %bb.29
	  successors: %bb.24(0x80000000); %bb.24(100.00%)

6768B	  %86:gpr32common = LDRWui %stack.8.i, 0, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
6776B	  %87:gpr32common = nsw ADDWri %86:gpr32common, 1, 0, debug-location !807; fft3d.c:115:39
6784B	  STRWui %87:gpr32common, %stack.8.i, 0, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
6792B	  B %bb.24, debug-location !808; fft3d.c:115:13

6800B	bb.35.for.inc267:
	; predecessors: %bb.24, %bb.18
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

6808B	  %155:gpr32common = LDRWui %stack.10.l, 0, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
6816B	  %156:gpr32common = nsw ADDWri %155:gpr32common, 2, 0, debug-location !811; fft3d.c:74:27
6824B	  STRWui %156:gpr32common, %stack.10.l, 0, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
6832B	  B %bb.3, debug-location !812; fft3d.c:74:5

6848B	bb.36.for.end269:
	; predecessors: %bb.3
	  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

6864B	  %27:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
6880B	  %28:gpr32 = LDRWui %27:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
6896B	  CBZW %28:gpr32, %bb.38, debug-location !817; fft3d.c:138:9
6912B	  B %bb.37, debug-location !817; fft3d.c:138:9

6928B	bb.37.if.then271:
	; predecessors: %bb.36
	  successors: %bb.38(0x80000000); %bb.38(100.00%)

6944B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !818; fft3d.c:139:9
6976B	  $w0 = MOVi32imm 4, debug-location !818; fft3d.c:139:9
6992B	  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !818; fft3d.c:139:9
7008B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !818; fft3d.c:139:9
7024B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !818; fft3d.c:139:9
7040B	  PCN_STACKMAP 1, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !818; fft3d.c:139:9
7056B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !818; fft3d.c:139:9

7072B	bb.38.if.end272:
	; predecessors: %bb.36, %bb.37

7088B	  RET_ReallyLR debug-location !819; fft3d.c:140:1

# End machine code for function Swarztrauber.

Before post-MI-sched:
# Machine code for function Swarztrauber: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#-1: size=8, align=16, fixed, at location [SP]
  fi#0: size=4, align=4, at location [SP-36]
  fi#1: size=4, align=4, at location [SP-40]
  fi#2: size=4, align=4, at location [SP-44]
  fi#3: size=4, align=4, at location [SP-48]
  fi#4: size=4, align=4, at location [SP-52]
  fi#5: size=8, align=8, at location [SP-64]
  fi#6: dead
  fi#7: size=8, align=8, at location [SP-72]
  fi#8: size=4, align=4, at location [SP-76]
  fi#9: size=4, align=4, at location [SP-80]
  fi#10: size=4, align=4, at location [SP-84]
  fi#11: size=16, align=16, at location [SP-112]
  fi#12: size=16, align=16, at location [SP-128]
  fi#13: size=16, align=16, at location [SP-144]
  fi#14: size=4, align=4, at location [SP-148]
  fi#15: size=4, align=4, at location [SP-152]
  fi#16: size=4, align=4, at location [SP-156]
  fi#17: size=4, align=4, at location [SP-160]
  fi#18: size=4, align=4, at location [SP-164]
  fi#19: size=4, align=4, at location [SP-168]
  fi#20: size=4, align=4, at location [SP-172]
  fi#21: size=4, align=4, at location [SP-176]
  fi#22: size=4, align=4, at location [SP-180]
  fi#23: size=4, align=4, at location [SP-184]
  fi#24: size=16, align=8, at location [SP-200]
  fi#25: size=16, align=8, at location [SP-216]
  fi#26: size=16, align=8, at location [SP-232]
  fi#27: size=16, align=8, at location [SP-248]
  fi#28: size=16, align=8, at location [SP-264]
  fi#29: size=16, align=8, at location [SP-280]
  fi#30: size=16, align=8, at location [SP-296]
  fi#31: size=16, align=8, at location [SP-312]
  fi#32: size=16, align=8, at location [SP-328]
  fi#33: size=16, align=8, at location [SP-344]
  fi#34: size=16, align=8, at location [SP-360]
  fi#35: size=16, align=8, at location [SP-376]
  fi#36: size=16, align=8, at location [SP-392]
  fi#37: size=16, align=8, at location [SP-408]
  fi#38: size=8, align=8, at location [SP-32]
  fi#39: size=8, align=8, at location [SP-8]
  fi#40: size=8, align=8, at location [SP-16]
  fi#41: size=8, align=8, at location [SP-24]
Function Live Ins: $w0, $w1, $w2, $w3, $w4, $x5

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $w1, $w2, $w3, $w4, $x5, $x19, $lr
  $sp = frame-setup SUBXri $sp, 416, 0
  frame-setup STRXui killed $x19, $sp, 49 :: (store 8 into %stack.41)
  frame-setup STPXi killed $fp, killed $lr, $sp, 50 :: (store 8 into %stack.40), (store 8 into %stack.39)
  $fp = frame-setup ADDXri $sp, 400, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  STPWi renamable $w1, renamable $w0, $fp, -6 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  STPWi renamable $w3, renamable $w2, $fp, -8 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  STURWi renamable $w4, $fp, -36 :: (store 4 into %ir.xd1.addr)
  STPXi renamable $x5, renamable $x5, $fp, -7 :: (store 8 into %ir.ox.addr), (store 8 into %ir.x)
  renamable $w19 = ORRWrs $wzr, killed renamable $w4, 0, implicit-def $x19, debug-location !509; fft3d.c:60:18
  CBZW killed renamable $w8, %bb.2, debug-location !550; fft3d.c:66:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.2(0x80000000); %bb.2(100.00%)
  liveins: $x19
  $w0 = MOVZWi 4, 0, debug-location !551; fft3d.c:67:9
  BL @timer_start, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !551; fft3d.c:67:9
  PCN_STACKMAP 0, 0, 0, $fp, -184, 0, $fp, -296, 0, $fp, -312, 0, $fp, -328, 0, $fp, -344, 0, $fp, -360, 0, $fp, -376, 0, $fp, -392, 0, $fp, -200, 0, $fp, -216, 0, $fp, -232, 0, $fp, -248, 0, $fp, -264, 0, $fp, -280, 0, $fp, 16, 0, $fp, -60, 0, $fp, -156, 0, $fp, -160, 0, $fp, -164, 0, $fp, -168, 0, $fp, -20, 0, $fp, -64, 0, $fp, -132, 0, $fp, -152, 0, $fp, -68, 0, $fp, -140, 0, $fp, -144, 0, $fp, -148, 0, $fp, -24, 0, $fp, -32, 0, $fp, -136, 0, $fp, -96, 0, $fp, -28, 0, $fp, -56, 0, $fp, -112, 0, $fp, -128, renamable $x19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !551 :: (load 8 from %stack.24..compoundliteral), (load 8 from %stack.31..compoundliteral155), (load 8 from %stack.32..compoundliteral190), (load 8 from %stack.33..compoundliteral204), (load 8 from %stack.34..compoundliteral207), (load 8 from %stack.35..compoundliteral219), (load 8 from %stack.36..compoundliteral233), (load 8 from %stack.37..compoundliteral245), (load 8 from %stack.25..compoundliteral43), (load 8 from %stack.26..compoundliteral57), (load 8 from %stack.27..compoundliteral60), (load 8 from %stack.28..compoundliteral72), (load 8 from %stack.29..compoundliteral86), (load 8 from %stack.30..compoundliteral98), (load 8 from %fixed-stack.0, align 16), (load 8 from %stack.8.i, align 4), (load 8 from %stack.20.i11, align 4), (load 8 from %stack.21.i12, align 4), (load 8 from %stack.22.i21, align 4), (load 8 from %stack.23.i22, align 4), (load 8 from %stack.0.is.addr, align 4), (load 8 from %stack.9.j, align 4), (load 8 from %stack.14.k, align 4), (load 8 from %stack.19.ku, align 4), (load 8 from %stack.10.l, align 4), (load 8 from %stack.16.li, align 4), (load 8 from %stack.17.lj, align 4), (load 8 from %stack.18.lk, align 4), (load 8 from %stack.1.m.addr, align 4), (load 8 from %stack.3.n.addr, align 4), (load 8 from %stack.15.n1, align 4), (load 8 from %stack.11.u1, align 16), (load 8 from %stack.2.vlen.addr, align 4), (load 8 from %stack.7.x), (load 8 from %stack.12.x11, align 16), (load 8 from %stack.13.x21, align 16); fft3d.c:67:9

bb.2.if.end:
; predecessors: %bb.0, %bb.1
  successors: %bb.3(0x80000000); %bb.3(100.00%)
  liveins: $x19
  renamable $w17 = LDURWi $fp, -32, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  renamable $w8 = LDURWi $fp, -24, implicit-def $x8, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  $w16 = MOVZWi 1, 0
  STURWi renamable $w16, $fp, -144, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
  STURWi renamable $w16, $fp, -68, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
  renamable $w16 = LSLVWr killed renamable $w16, renamable $w8, implicit killed $x8, debug-location !557; fft3d.c:73:12
  $x8 = SUBXri $fp, 128, 0
  STURWi killed renamable $w16, $fp, -140, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
  $x16 = ADRP target-flags(aarch64-page) @scr
  renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  dead $wzr = SUBSWri renamable $w17, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
  renamable $w17 = CSINCWr killed renamable $w17, renamable $w17, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
  renamable $w17 = SBFMWri killed renamable $w17, 1, 31, debug-location !553; fft3d.c:71:12
  STURWi killed renamable $w17, $fp, -136, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
  $w17 = MOVZWi 528, 0, implicit-def $x17

bb.3.for.cond:
; predecessors: %bb.2, %bb.35
  successors: %bb.4(0x7c000000), %bb.36(0x04000000); %bb.4(96.88%), %bb.36(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -68, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  renamable $w0 = LDURWi $fp, -24, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5

bb.4.for.body:
; predecessors: %bb.3
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !567 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  STURWi renamable $w18, $fp, -148, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
  renamable $w18 = UBFMWri killed renamable $w18, 31, 30, debug-location !571; fft3d.c:76:16
  STURWi killed renamable $w18, $fp, -144, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
  dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
  renamable $w18 = CSINCWr killed renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
  renamable $w18 = SBFMWri killed renamable $w18, 1, 31, debug-location !574; fft3d.c:77:17
  STURWi renamable $w18, $fp, -140, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
  STURWi killed renamable $w18, $fp, -152, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
  STURWi $wzr, $fp, -60, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16

bb.5.for.cond2:
; predecessors: %bb.4, %bb.15
  successors: %bb.6(0x7c000000), %bb.16(0x04000000); %bb.6(96.88%), %bb.16(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -140, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  renamable $w0 = LDURWi $fp, -60, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  renamable $w18 = SUBWri killed renamable $w18, 1, 0, debug-location !584; fft3d.c:80:29
  $wzr = SUBSWrs killed renamable $w0, killed renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9

bb.6.for.body4:
; predecessors: %bb.5
  successors: %bb.7(0x40000000), %bb.8(0x40000000); %bb.7(50.00%), %bb.8(50.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -20, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  renamable $w0 = LDURWi $fp, -60, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !597 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:83:23
  dead $wzr = SUBSWri killed renamable $w18, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
  renamable $w18 = LDURWi $fp, -136, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  renamable $w1 = nsw MADDWrrr renamable $w0, killed renamable $w1, $wzr, debug-location !598; fft3d.c:83:21
  renamable $w0 = nsw MADDWrrr killed renamable $w0, renamable $w2, $wzr, debug-location !590; fft3d.c:81:21
  STURWi renamable $w0, $fp, -156, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
  $w18 = ADDWrs killed renamable $w0, killed renamable $w18, 0, debug-location !594; fft3d.c:82:23
  STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !599 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:83:17
  $w0 = ADDWrs killed renamable $w1, killed renamable $w2, 0, debug-location !602; fft3d.c:84:23
  STURWi killed renamable $w0, $fp, -168, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
  Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17

bb.7.if.then9:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -152, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  renamable $w0 = LDURWi $fp, -60, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  renamable $x1 = LDRXui $fp, 2, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  $w18 = ADDWrs killed renamable $w18, killed renamable $w0, 0, debug-location !612; fft3d.c:87:34
  renamable $x18 = ADDXrx killed renamable $x1, killed renamable $w18, 52, debug-location !608; fft3d.c:87:22
  B %bb.9

bb.8.if.else:
; predecessors: %bb.6
  successors: %bb.9(0x80000000); %bb.9(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -152, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  renamable $w0 = LDURWi $fp, -60, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  renamable $x1 = LDRXui $fp, 2, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  $w18 = ADDWrs killed renamable $w18, killed renamable $w0, 0, debug-location !614; fft3d.c:90:22
  renamable $x18 = ADDXrx killed renamable $x1, killed renamable $w18, 52, debug-location !614; fft3d.c:90:22
  renamable $d0 = LDRDui renamable $x18, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
  STURDi killed renamable $d0, $fp, -184, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
  renamable $d0 = LDRDui killed renamable $x18, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
  renamable $d0 = FNEGDr killed renamable $d0, debug-location !614; fft3d.c:90:22
  STURDi killed renamable $d0, $fp, -176, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
  $x18 = SUBXri $fp, 184, 0

bb.9.if.end20:
; predecessors: %bb.8, %bb.7
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x8, $x16, $x17, $x18, $x19
  renamable $q0 = LDRQui killed renamable $x18, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  STURWi $wzr, $fp, -132, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
  STRQui killed renamable $q0, renamable $x8, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0

bb.10.for.cond21:
; predecessors: %bb.9, %bb.14
  successors: %bb.11(0x7c000000), %bb.15(0x04000000); %bb.11(96.88%), %bb.15(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -148, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  renamable $w0 = LDURWi $fp, -132, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  renamable $w18 = SUBWri killed renamable $w18, 1, 0, debug-location !623; fft3d.c:92:33
  $wzr = SUBSWrs killed renamable $w0, killed renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13

bb.11.for.body24:
; predecessors: %bb.10
  successors: %bb.12(0x80000000); %bb.12(100.00%)
  liveins: $x8, $x16, $x17, $x19
  STURWi $wzr, $fp, -64, debug-location !626 :: (store 4 into %ir.j); fft3d.c:93:24

bb.12.for.cond25:
; predecessors: %bb.11, %bb.13
  successors: %bb.13(0x7c000000), %bb.14(0x04000000); %bb.13(96.88%), %bb.14(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -64, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  renamable $w0 = LDURWi $fp, -28, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17

bb.13.for.body27:
; predecessors: %bb.12
  successors: %bb.12(0x80000000); %bb.12(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $x3 = LDURXi $fp, -56, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  renamable $x5, renamable $x2 = LDPSWi $fp, -40, debug-location !637 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  renamable $x4 = LDURSWi $fp, -64, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  renamable $x18 = LDURSWi $fp, -132, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  renamable $w1 = LDURWi $fp, -132, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  renamable $x0 = LDURSWi $fp, -64, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  $x6 = ADDXrs killed renamable $x2, renamable $x18, 0, debug-location !639; fft3d.c:94:33
  renamable $x2 = UBFMXri killed renamable $x4, 60, 59, debug-location !649; fft3d.c:96:21
  renamable $x4 = nsw MADDXrrr killed renamable $x6, renamable $x19, $xzr, debug-location !635; fft3d.c:94:27
  renamable $x4 = ADDXrs renamable $x3, killed renamable $x4, 4, debug-location !635; fft3d.c:94:27
  renamable $q0 = LDRQroX killed renamable $x4, renamable $x2, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  $x4 = ADDXrs killed renamable $x5, renamable $x18, 0, debug-location !644; fft3d.c:95:33
  renamable $x4 = nsw MADDXrrr killed renamable $x4, renamable $x19, $xzr, debug-location !641; fft3d.c:95:27
  renamable $x3 = ADDXrs killed renamable $x3, killed renamable $x4, 4, debug-location !641; fft3d.c:95:27
  STRQui killed renamable $q0, renamable $x8, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
  renamable $q0 = LDRQroX killed renamable $x3, renamable $x2, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  renamable $d2, renamable $d1 = LDPDi $fp, -14, debug-location !657 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  STRQui killed renamable $q0, renamable $x8, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
  renamable $d0, renamable $d3 = LDPDi $fp, -15, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  renamable $d4, renamable $d7 = LDPDi $fp, -16, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  renamable $d5 = LDURDi $fp, -104, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  renamable $d6 = LDURDi $fp, -104, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  renamable $d2 = FADDDrr killed renamable $d2, killed renamable $d4, debug-location !651; fft3d.c:96:39
  renamable $d8, renamable $d4 = LDPDi $fp, -16, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  renamable $d5 = FADDDrr killed renamable $d5, killed renamable $d7, debug-location !651; fft3d.c:96:39
  renamable $d3 = FSUBDrr killed renamable $d3, killed renamable $d8, debug-location !657; fft3d.c:97:39
  renamable $w4, renamable $w3 = LDPWi $fp, -42, debug-location !646 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  renamable $d4 = FSUBDrr killed renamable $d6, killed renamable $d4, debug-location !657; fft3d.c:97:39
  renamable $d0 = FSUBDrr killed renamable $d1, killed renamable $d0, debug-location !657; fft3d.c:97:39
  renamable $d6, renamable $d1 = LDPDi $fp, -12, debug-location !657 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !651 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !657; fft3d.c:97:39
  renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !657; fft3d.c:97:39
  renamable $d2 = FSUBDrr killed renamable $d2, killed renamable $d5, debug-location !657; fft3d.c:97:39
  renamable $q5 = LDURQi $sp, 200, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  $w18 = ADDWrs killed renamable $w3, renamable $w18, 0, implicit killed $x18, debug-location !648; fft3d.c:96:29
  renamable $w3 = LDURWi $fp, -64, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  renamable $x18 = SMADDLrrr killed renamable $w18, renamable $w17, renamable $x16, debug-location !649; fft3d.c:96:21
  STRQroX killed renamable $q5, killed renamable $x18, killed renamable $x2, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  $w18 = ADDWrs killed renamable $w4, killed renamable $w1, 0, debug-location !654; fft3d.c:97:29
  renamable $w1 = nsw ADDWri killed renamable $w3, 1, 0, debug-location !658; fft3d.c:93:40
  renamable $x18 = SMADDLrrr killed renamable $w18, renamable $w17, renamable $x16, debug-location !655; fft3d.c:97:21
  STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !657 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !657 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  renamable $d5 = FMULDrr killed renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
  renamable $d1 = FMULDrr killed renamable $d1, renamable $d3, debug-location !657; fft3d.c:97:39
  renamable $d1 = FADDDrr killed renamable $d5, killed renamable $d1, debug-location !657; fft3d.c:97:39
  STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !657 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  renamable $q1 = LDURQi $sp, 184, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !657 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !657 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  STRQroX killed renamable $q1, killed renamable $x18, killed renamable $x0, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  STURWi killed renamable $w1, $fp, -64, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
  B %bb.12

bb.14.for.inc110:
; predecessors: %bb.12
  successors: %bb.10(0x80000000); %bb.10(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -132, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !662; fft3d.c:92:39
  STURWi killed renamable $w18, $fp, -132, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  B %bb.10

bb.15.for.inc113:
; predecessors: %bb.10
  successors: %bb.5(0x80000000); %bb.5(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -60, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !666; fft3d.c:80:35
  STURWi killed renamable $w18, $fp, -60, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  B %bb.5

bb.16.for.end115:
; predecessors: %bb.5
  successors: %bb.17(0x40000000), %bb.23(0x40000000); %bb.17(50.00%), %bb.23(50.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -68, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  renamable $w0 = LDURWi $fp, -24, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13

bb.17.if.then117:
; predecessors: %bb.16
  successors: %bb.18(0x80000000); %bb.18(100.00%)
  liveins: $x8, $x16, $x17, $x19
  STURWi $wzr, $fp, -132, debug-location !675 :: (store 4 into %ir.k); fft3d.c:103:20

bb.18.for.cond118:
; predecessors: %bb.17, %bb.22
  successors: %bb.19(0x7c000000), %bb.35(0x04000000); %bb.19(96.88%), %bb.35(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -132, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  renamable $w0 = LDURWi $fp, -32, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13

bb.19.for.body120:
; predecessors: %bb.18
  successors: %bb.20(0x80000000); %bb.20(100.00%)
  liveins: $x8, $x16, $x17, $x19
  STURWi $wzr, $fp, -64, debug-location !684 :: (store 4 into %ir.j); fft3d.c:104:24

bb.20.for.cond121:
; predecessors: %bb.19, %bb.21
  successors: %bb.21(0x7c000000), %bb.22(0x04000000); %bb.21(96.88%), %bb.22(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -64, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  renamable $w0 = LDURWi $fp, -28, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17

bb.21.for.body123:
; predecessors: %bb.20
  successors: %bb.20(0x80000000); %bb.20(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $x18 = LDURSWi $fp, -64, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  renamable $x0 = LDURSWi $fp, -132, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  renamable $x1 = LDURXi $fp, -56, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  renamable $x18 = UBFMXri killed renamable $x18, 60, 59, debug-location !693; fft3d.c:105:21
  renamable $x2 = MADDXrrr renamable $x0, renamable $x17, renamable $x16, debug-location !698; fft3d.c:105:31
  renamable $q0 = LDRQroX killed renamable $x2, renamable $x18, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  renamable $x0 = nsw MADDXrrr killed renamable $x0, renamable $x19, $xzr, debug-location !693; fft3d.c:105:21
  renamable $x0 = ADDXrs killed renamable $x1, killed renamable $x0, 4, debug-location !693; fft3d.c:105:21
  STRQroX killed renamable $q0, killed renamable $x0, killed renamable $x18, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  renamable $w18 = LDURWi $fp, -64, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !700; fft3d.c:104:40
  STURWi killed renamable $w18, $fp, -64, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
  B %bb.20

bb.22.for.inc135:
; predecessors: %bb.20
  successors: %bb.18(0x80000000); %bb.18(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -132, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !704; fft3d.c:103:33
  STURWi killed renamable $w18, $fp, -132, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  B %bb.18

bb.23.if.else138:
; predecessors: %bb.16
  successors: %bb.24(0x80000000); %bb.24(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !708 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  STURWi renamable $w18, $fp, -148, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
  renamable $w18 = UBFMWri killed renamable $w18, 31, 30, debug-location !712; fft3d.c:111:20
  STURWi killed renamable $w18, $fp, -144, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
  dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
  renamable $w18 = CSINCWr killed renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
  renamable $w18 = SBFMWri killed renamable $w18, 1, 31, debug-location !715; fft3d.c:112:21
  STURWi renamable $w18, $fp, -140, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
  STURWi killed renamable $w18, $fp, -152, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
  STURWi $wzr, $fp, -60, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20

bb.24.for.cond141:
; predecessors: %bb.23, %bb.34
  successors: %bb.25(0x7c000000), %bb.35(0x04000000); %bb.25(96.88%), %bb.35(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -140, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  renamable $w0 = LDURWi $fp, -60, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  renamable $w18 = SUBWri killed renamable $w18, 1, 0, debug-location !725; fft3d.c:115:33
  $wzr = SUBSWrs killed renamable $w0, killed renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13

bb.25.for.body144:
; predecessors: %bb.24
  successors: %bb.26(0x40000000), %bb.27(0x40000000); %bb.26(50.00%), %bb.27(50.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -20, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  renamable $w0 = LDURWi $fp, -60, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !738 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:118:27
  dead $wzr = SUBSWri killed renamable $w18, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
  renamable $w18 = LDURWi $fp, -136, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  renamable $w1 = nsw MADDWrrr renamable $w0, killed renamable $w1, $wzr, debug-location !739; fft3d.c:118:25
  renamable $w0 = nsw MADDWrrr killed renamable $w0, renamable $w2, $wzr, debug-location !731; fft3d.c:116:25
  STURWi renamable $w0, $fp, -156, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
  $w18 = ADDWrs killed renamable $w0, killed renamable $w18, 0, debug-location !735; fft3d.c:117:27
  STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !740 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:118:21
  $w0 = ADDWrs killed renamable $w1, killed renamable $w2, 0, debug-location !743; fft3d.c:119:27
  STURWi killed renamable $w0, $fp, -168, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
  Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21

bb.26.if.then150:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -152, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  renamable $w0 = LDURWi $fp, -60, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  renamable $x1 = LDRXui $fp, 2, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  $w18 = ADDWrs killed renamable $w18, killed renamable $w0, 0, debug-location !753; fft3d.c:122:38
  renamable $x18 = ADDXrx killed renamable $x1, killed renamable $w18, 52, debug-location !749; fft3d.c:122:26
  B %bb.28

bb.27.if.else154:
; predecessors: %bb.25
  successors: %bb.28(0x80000000); %bb.28(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -152, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  renamable $w0 = LDURWi $fp, -60, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  renamable $x1 = LDRXui $fp, 2, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  $w18 = ADDWrs killed renamable $w18, killed renamable $w0, 0, debug-location !755; fft3d.c:125:26
  renamable $x18 = ADDXrx killed renamable $x1, killed renamable $w18, 52, debug-location !755; fft3d.c:125:26
  renamable $d0 = LDRDui renamable $x18, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
  STRDui killed renamable $d0, $sp, 13, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
  renamable $d0 = LDRDui killed renamable $x18, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
  renamable $d0 = FNEGDr killed renamable $d0, debug-location !755; fft3d.c:125:26
  STRDui killed renamable $d0, $sp, 14, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
  $x18 = ADDXri $sp, 104, 0

bb.28.if.end167:
; predecessors: %bb.27, %bb.26
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x8, $x16, $x17, $x18, $x19
  renamable $q0 = LDRQui killed renamable $x18, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  STURWi $wzr, $fp, -132, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
  STRQui killed renamable $q0, renamable $x8, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0

bb.29.for.cond168:
; predecessors: %bb.28, %bb.33
  successors: %bb.30(0x7c000000), %bb.34(0x04000000); %bb.30(96.88%), %bb.34(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -148, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  renamable $w0 = LDURWi $fp, -132, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  renamable $w18 = SUBWri killed renamable $w18, 1, 0, debug-location !764; fft3d.c:127:37
  $wzr = SUBSWrs killed renamable $w0, killed renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17

bb.30.for.body171:
; predecessors: %bb.29
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x8, $x16, $x17, $x19
  STURWi $wzr, $fp, -64, debug-location !767 :: (store 4 into %ir.j); fft3d.c:128:28

bb.31.for.cond172:
; predecessors: %bb.30, %bb.32
  successors: %bb.32(0x7c000000), %bb.33(0x04000000); %bb.32(96.88%), %bb.33(3.12%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -64, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  renamable $w0 = LDURWi $fp, -28, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  $wzr = SUBSWrs killed renamable $w18, killed renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21

bb.32.for.body174:
; predecessors: %bb.31
  successors: %bb.31(0x80000000); %bb.31(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w1, renamable $w18 = LDPWi $fp, -40, debug-location !776 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  renamable $w0 = LDURWi $fp, -132, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  renamable $x2 = LDURSWi $fp, -64, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  renamable $x3 = LDURSWi $fp, -132, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  $w18 = ADDWrs killed renamable $w18, renamable $w0, 0, debug-location !779; fft3d.c:129:39
  $w0 = ADDWrs killed renamable $w1, killed renamable $w0, 0, debug-location !784; fft3d.c:130:39
  renamable $x1 = UBFMXri killed renamable $x2, 60, 59, debug-location !787; fft3d.c:131:25
  renamable $x18 = SMADDLrrr killed renamable $w18, renamable $w17, renamable $x16, debug-location !780; fft3d.c:129:31
  renamable $x0 = SMADDLrrr killed renamable $w0, renamable $w17, renamable $x16, debug-location !785; fft3d.c:130:31
  renamable $q0 = LDRQroX killed renamable $x0, renamable $x1, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  renamable $q1 = LDRQroX killed renamable $x18, renamable $x1, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !785 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  renamable $d1, renamable $d0 = LDPDi $fp, -14, debug-location !792 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  renamable $d2, renamable $d3 = LDPDi $fp, -16, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  renamable $x18 = LDURXi $fp, -56, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  renamable $x0 = LDURSWi $fp, -164, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  renamable $d1 = FADDDrr killed renamable $d1, killed renamable $d2, debug-location !792; fft3d.c:131:41
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d3, debug-location !792; fft3d.c:131:41
  STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !792 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  renamable $q0 = LDURQi $sp, 88, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  $x0 = ADDXrs killed renamable $x0, killed renamable $x3, 0, debug-location !790; fft3d.c:131:31
  renamable $x0 = nsw MADDXrrr killed renamable $x0, renamable $x19, $xzr, debug-location !787; fft3d.c:131:25
  renamable $x18 = ADDXrs killed renamable $x18, killed renamable $x0, 4, debug-location !787; fft3d.c:131:25
  STRQroX killed renamable $q0, killed renamable $x18, killed renamable $x1, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  renamable $d6, renamable $d0 = LDPDi $fp, -13, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  renamable $d1, renamable $d2 = LDPDi $fp, -15, debug-location !798 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  renamable $d3, renamable $d7 = LDPDi $fp, -14, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  renamable $d4, renamable $d8 = LDPDi $fp, -16, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  renamable $d5 = LDURDi $fp, -128, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  renamable $d2 = FSUBDrr killed renamable $d2, killed renamable $d4, debug-location !798; fft3d.c:132:41
  renamable $d1 = FSUBDrr killed renamable $d6, killed renamable $d1, debug-location !798; fft3d.c:132:41
  renamable $d4 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  renamable $d6 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  renamable $d3 = FSUBDrr killed renamable $d3, killed renamable $d5, debug-location !798; fft3d.c:132:41
  renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !798; fft3d.c:132:41
  renamable $d4 = FMULDrr killed renamable $d4, renamable $d1, debug-location !798; fft3d.c:132:41
  renamable $d4 = FSUBDrr killed renamable $d5, killed renamable $d4, debug-location !798; fft3d.c:132:41
  renamable $d0 = FMULDrr killed renamable $d0, renamable $d1, debug-location !798; fft3d.c:132:41
  renamable $d5 = FMULDrr killed renamable $d6, renamable $d3, debug-location !798; fft3d.c:132:41
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d5, debug-location !798; fft3d.c:132:41
  renamable $x18 = LDURSWi $fp, -168, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  renamable $x0 = LDURSWi $fp, -132, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !798 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  renamable $x1 = LDURXi $fp, -56, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  renamable $x2 = LDURSWi $fp, -64, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  $x18 = ADDXrs killed renamable $x18, killed renamable $x0, 0, debug-location !796; fft3d.c:132:31
  renamable $x18 = nsw MADDXrrr killed renamable $x18, renamable $x19, $xzr, debug-location !793; fft3d.c:132:25
  STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !798 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !798 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  renamable $x18 = ADDXrs killed renamable $x1, killed renamable $x18, 4, debug-location !793; fft3d.c:132:25
  STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !798 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  renamable $q0 = LDURQi $sp, 72, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  renamable $d1 = FSUBDrr killed renamable $d7, killed renamable $d8, debug-location !798; fft3d.c:132:41
  STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !798 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  STRQroX killed renamable $q0, killed renamable $x18, killed renamable $x2, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  renamable $w18 = LDURWi $fp, -64, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !799; fft3d.c:128:44
  STURWi killed renamable $w18, $fp, -64, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
  B %bb.31

bb.33.for.inc260:
; predecessors: %bb.31
  successors: %bb.29(0x80000000); %bb.29(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -132, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !803; fft3d.c:127:43
  STURWi killed renamable $w18, $fp, -132, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  B %bb.29

bb.34.for.inc263:
; predecessors: %bb.29
  successors: %bb.24(0x80000000); %bb.24(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -60, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  renamable $w18 = nsw ADDWri killed renamable $w18, 1, 0, debug-location !807; fft3d.c:115:39
  STURWi killed renamable $w18, $fp, -60, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  B %bb.24

bb.35.for.inc267:
; predecessors: %bb.24, %bb.18
  successors: %bb.3(0x80000000); %bb.3(100.00%)
  liveins: $x8, $x16, $x17, $x19
  renamable $w18 = LDURWi $fp, -68, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  renamable $w18 = nsw ADDWri killed renamable $w18, 2, 0, debug-location !811; fft3d.c:74:27
  STURWi killed renamable $w18, $fp, -68, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  B %bb.3

bb.36.for.end269:
; predecessors: %bb.3
  successors: %bb.37(0x50000000), %bb.38(0x30000000); %bb.37(62.50%), %bb.38(37.50%)

  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  renamable $w8 = LDRWui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  CBZW killed renamable $w8, %bb.38, debug-location !817; fft3d.c:138:9

bb.37.if.then271:
; predecessors: %bb.36
  successors: %bb.38(0x80000000); %bb.38(100.00%)

  $w0 = MOVZWi 4, 0, debug-location !818; fft3d.c:139:9
  BL @timer_stop, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit-def $sp, debug-location !818; fft3d.c:139:9
  PCN_STACKMAP 1, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !818; fft3d.c:139:9

bb.38.if.end272:
; predecessors: %bb.36, %bb.37

  $fp, $lr = frame-destroy LDPXi $sp, 50, debug-location !819 :: (load 8 from %stack.40), (load 8 from %stack.39); fft3d.c:140:1
  $x19 = frame-destroy LDRXui $sp, 49, debug-location !819 :: (load 8 from %stack.41); fft3d.c:140:1
  $sp = frame-destroy ADDXri $sp, 416, 0, debug-location !819; fft3d.c:140:1
  RET undef $lr, debug-location !819; fft3d.c:140:1

# End machine code for function Swarztrauber.

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: STPWi renamable $w1, renamable $w0, $fp, -6 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
    To: CBZW killed renamable $w8, %bb.2, debug-location !550; fft3d.c:66:9
 RegionInstrs: 7
ScheduleDAGMI::schedule starting
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -6 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -8 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x8
SU(3):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
SU(4):   STURWi renamable $w4, $fp, -36 :: (store 4 into %ir.xd1.addr)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(5):   STPXi renamable $x5, renamable $x5, $fp, -7 :: (store 8 into %ir.ox.addr), (store 8 into %ir.x)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(6):   renamable $w19 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x19, debug-location !509; fft3d.c:60:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.2, debug-location !550; fft3d.c:66:9
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(6): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=4 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 5 6 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
  Ready @0c
  TopQ.A BotLatency SU(2) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 4 5 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
  Cand SU(3) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
  Ready @1c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 6 4 5 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(0) ORDER                              
  Cand SU(6) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) renamable $w19 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x19, debug-location !509; fft3d.c:60:18
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 5 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STPWi renamable $w1, renamable $w0, $fp, -6 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 1 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(4) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STPWi renamable $w3, renamable $w2, $fp, -8 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 5 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) STURWi renamable $w4, $fp, -36 :: (store 4 into %ir.xd1.addr)
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) STPXi renamable $x5, renamable $x5, $fp, -7 :: (store 8 into %ir.ox.addr), (store 8 into %ir.x)
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !548; fft3d.c:66:9
SU(3):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !548 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:66:9
SU(6):   renamable $w19 = ORRWrs $wzr, renamable $w4, 0, implicit-def $x19, debug-location !509; fft3d.c:60:18
SU(0):   STPWi renamable $w1, renamable $w0, $fp, -6 :: (store 4 into %ir.is.addr), (store 4 into %ir.m.addr)
SU(1):   STPWi renamable $w3, renamable $w2, $fp, -8 :: (store 4 into %ir.vlen.addr), (store 4 into %ir.n.addr)
SU(4):   STURWi renamable $w4, $fp, -36 :: (store 4 into %ir.xd1.addr)
SU(5):   STPXi renamable $x5, renamable $x5, $fp, -7 :: (store 8 into %ir.ox.addr), (store 8 into %ir.x)

********** MI Scheduling **********
Swarztrauber:%bb.0 entry
  From: frame-setup STRXui killed $x19, $sp, 49 :: (store 8 into %stack.41)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STRXui $x19, $sp, 49 :: (store 8 into %stack.41)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $fp, $lr, $sp, 50 :: (store 8 into %stack.40), (store 8 into %stack.39)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(2): Anti Latency=0
SU(2):   $fp = frame-setup ADDXri $sp, 400, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STRXui $x19, $sp, 49 :: (store 8 into %stack.41)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) frame-setup STPXi $fp, $lr, $sp, 50 :: (store 8 into %stack.40), (store 8 into %stack.39)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $fp = frame-setup ADDXri $sp, 400, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STRXui $x19, $sp, 49 :: (store 8 into %stack.41)
SU(1):   frame-setup STPXi $fp, $lr, $sp, 50 :: (store 8 into %stack.40), (store 8 into %stack.39)
SU(2):   $fp = frame-setup ADDXri $sp, 400, 0

Fixup kills for %bb.0
Fixup kills for %bb.1
********** MI Scheduling **********
Swarztrauber:%bb.2 if.end
  From: renamable $w17 = LDURWi $fp, -32, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
    To: End RegionInstrs: 15
ScheduleDAGMI::schedule starting
SU(0):   renamable $w17 = LDURWi $fp, -32, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 8
  Successors:
    SU(11): Out  Latency=1
    SU(14): Out  Latency=1
    SU(11): Data Latency=4 Reg=$w17
    SU(10): Data Latency=4 Reg=$w17
SU(1):   renamable $w8 = LDURWi $fp, -24, implicit-def $x8, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w8
    SU(5): Data Latency=0 Reg=$x8
SU(2):   $w16 = MOVZWi 1, 0
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(5): Out  Latency=1
    SU(8): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w16
    SU(4): Data Latency=1 Reg=$w16
    SU(3): Data Latency=1 Reg=$w16
SU(3):   STURWi renamable $w16, $fp, -144, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=$w16
  Successors:
    SU(5): Anti Latency=0
    SU(8): Anti Latency=0
SU(4):   STURWi renamable $w16, $fp, -68, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(2): Data Latency=1 Reg=$w16
  Successors:
    SU(5): Anti Latency=0
    SU(8): Anti Latency=0
SU(5):   renamable $w16 = LSLVWr renamable $w16, renamable $w8, implicit $x8, debug-location !557; fft3d.c:73:12
  # preds left       : 6
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(4): Anti Latency=0
    SU(3): Anti Latency=0
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$w16
    SU(1): Data Latency=4 Reg=$w8
    SU(1): Data Latency=0 Reg=$x8
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w16
    SU(8): Anti Latency=0
    SU(6): Anti Latency=0
SU(6):   $x8 = SUBXri $fp, 128, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(5): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(7):   STURWi renamable $w16, $fp, -140, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(5): Data Latency=1 Reg=$w16
  Successors:
    SU(8): Anti Latency=0
SU(8):   $x16 = ADRP target-flags(aarch64-page) @scr
  # preds left       : 6
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Out  Latency=1
    SU(5): Anti Latency=0
    SU(4): Anti Latency=0
    SU(3): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x16
SU(9):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x16
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(10):   dead $wzr = SUBSWri renamable $w17, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 4
  Predecessors:
    SU(0): Data Latency=4 Reg=$w17
  Successors:
    SU(11): Data Latency=1 Reg=$nzcv
    SU(11): Anti Latency=0
    SU(14): Anti Latency=0
SU(11):   renamable $w17 = CSINCWr renamable $w17, renamable $w17, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 3
  Predecessors:
    SU(10): Data Latency=1 Reg=$nzcv
    SU(10): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w17
  Successors:
    SU(12): Out  Latency=1
    SU(14): Out  Latency=1
    SU(12): Data Latency=1 Reg=$w17
    SU(14): Anti Latency=0
SU(12):   renamable $w17 = SBFMWri renamable $w17, 1, 31, debug-location !553; fft3d.c:71:12
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 2
  Predecessors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$w17
  Successors:
    SU(14): Out  Latency=1
    SU(13): Data Latency=1 Reg=$w17
    SU(14): Anti Latency=0
SU(13):   STURWi renamable $w17, $fp, -136, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(12): Data Latency=1 Reg=$w17
  Successors:
    SU(14): Anti Latency=0
SU(14):   $w17 = MOVZWi 528, 0, implicit-def $x17
  # preds left       : 7
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 1
  Predecessors:
    SU(13): Anti Latency=0
    SU(12): Out  Latency=1
    SU(12): Anti Latency=0
    SU(11): Out  Latency=1
    SU(11): Anti Latency=0
    SU(10): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 8
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 8
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w17 = LDURWi $fp, -32, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
  Ready @0c
  TopQ.A BotLatency SU(0) 8c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 8
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w8 = LDURWi $fp, -24, implicit-def $x8, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w16 = MOVZWi 1, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) STURWi renamable $w16, $fp, -144, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
  Ready @3c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 10 
  TopQ.A RemainingLatency 0 + 4c > CritPath 8
  Cand SU(4) ORDER                              
  Cand SU(10) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) dead $wzr = SUBSWri renamable $w17, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
  Ready @4c
  TopQ.A TopLatency SU(10) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 11 
  TopQ.A RemainingLatency 0 + 5c > CritPath 8
  Cand SU(4) ORDER                              
Pick Top ORDER     
Scheduling SU(4) STURWi renamable $w16, $fp, -68, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 5 
  TopQ.A RemainingLatency 0 + 6c > CritPath 8
  Cand SU(11) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) renamable $w16 = LSLVWr renamable $w16, renamable $w8, implicit $x8, debug-location !557; fft3d.c:73:12
  Ready @6c
  TopQ.A BotLatency SU(5) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 7 6 
  TopQ.A RemainingLatency 0 + 7c > CritPath 8
  Cand SU(11) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(11) renamable $w17 = CSINCWr renamable $w17, renamable $w17, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
  Ready @7c
  TopQ.A TopLatency SU(11) 5c
  TopQ.A BotLatency SU(11) 3c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 7 12 
  TopQ.A RemainingLatency 0 + 8c > CritPath 8
  Cand SU(6) ORDER                              
  Cand SU(7) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) STURWi renamable $w16, $fp, -140, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 12 8 
  TopQ.A RemainingLatency 0 + 9c > CritPath 8
  Cand SU(6) ORDER                              
  Cand SU(12) TOP-PATH                  2 cycles 
  Cand SU(8) ORDER                              
Pick Top ORDER     
Scheduling SU(8) $x16 = ADRP target-flags(aarch64-page) @scr
  Ready @9c
  TopQ.A BotLatency SU(8) 2c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 12 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 8
  Cand SU(6) ORDER                              
  Cand SU(12) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $w17 = SBFMWri renamable $w17, 1, 31, debug-location !553; fft3d.c:71:12
  Ready @10c
  TopQ.A TopLatency SU(12) 6c
  TopQ.A BotLatency SU(12) 2c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 9 13 
  TopQ.A RemainingLatency 0 + 11c > CritPath 8
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) $x8 = SUBXri $fp, 128, 0
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 9 
  TopQ.A RemainingLatency 0 + 12c > CritPath 8
  Cand SU(13) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
  Ready @12c
  TopQ.A BotLatency SU(9) 1c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) STURWi renamable $w17, $fp, -136, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
  Ready @13c
  TopQ.A TopLatency SU(13) 7c
  TopQ.A BotLatency SU(13) 1c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) $w17 = MOVZWi 528, 0, implicit-def $x17
  Ready @14c
  TopQ.A BotLatency SU(14) 1c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $w17 = LDURWi $fp, -32, debug-location !552 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:71:10
SU(1):   renamable $w8 = LDURWi $fp, -24, implicit-def $x8, debug-location !556 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:73:15
SU(2):   $w16 = MOVZWi 1, 0
SU(3):   STURWi renamable $w16, $fp, -144, debug-location !555 :: (store 4 into %ir.lj); fft3d.c:72:8
SU(10):   dead $wzr = SUBSWri renamable $w17, 0, 0, implicit-def $nzcv, debug-location !553; fft3d.c:71:12
SU(4):   STURWi renamable $w16, $fp, -68, debug-location !559 :: (store 4 into %ir.l); fft3d.c:74:12
SU(5):   renamable $w16 = LSLVWr renamable $w16, renamable $w8, implicit $x8, debug-location !557; fft3d.c:73:12
SU(11):   renamable $w17 = CSINCWr renamable $w17, renamable $w17, 10, implicit $nzcv, debug-location !553; fft3d.c:71:12
SU(7):   STURWi renamable $w16, $fp, -140, debug-location !558 :: (store 4 into %ir.li); fft3d.c:73:8
SU(8):   $x16 = ADRP target-flags(aarch64-page) @scr
SU(12):   renamable $w17 = SBFMWri renamable $w17, 1, 31, debug-location !553; fft3d.c:71:12
SU(6):   $x8 = SUBXri $fp, 128, 0
SU(9):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @scr, 0
SU(13):   STURWi renamable $w17, $fp, -136, debug-location !554 :: (store 4 into %ir.n1); fft3d.c:71:8
SU(14):   $w17 = MOVZWi 528, 0, implicit-def $x17

Fixup kills for %bb.2
********** MI Scheduling **********
Swarztrauber:%bb.3 for.cond
  From: renamable $w18 = LDURWi $fp, -68, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
    To: Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -24, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.36, implicit $nzcv, debug-location !566; fft3d.c:74:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -68, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -24, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !566; fft3d.c:74:5
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !562 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:17
SU(1):   renamable $w0 = LDURWi $fp, -24, debug-location !564 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:74:22
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !566; fft3d.c:74:5

Fixup kills for %bb.3
********** MI Scheduling **********
Swarztrauber:%bb.4 for.body
  From: renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !567 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
    To: End RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !567 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
    SU(1): Data Latency=4 Reg=$w18
    SU(5): Data Latency=4 Reg=$w0
    SU(4): Data Latency=4 Reg=$w0
    SU(3): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
SU(1):   STURWi renamable $w18, $fp, -148, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Anti Latency=0
SU(2):   renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !571; fft3d.c:76:16
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(5): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
SU(3):   STURWi renamable $w18, $fp, -144, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(5): Anti Latency=0
SU(4):   dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
SU(5):   renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(4): Data Latency=1 Reg=$nzcv
    SU(3): Anti Latency=0
    SU(2): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w18
SU(6):   renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !574; fft3d.c:77:17
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w18
  Successors:
    SU(8): Data Latency=1 Reg=$w18
    SU(7): Data Latency=1 Reg=$w18
SU(7):   STURWi renamable $w18, $fp, -140, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
SU(8):   STURWi renamable $w18, $fp, -152, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w18
SU(9):   STURWi $wzr, $fp, -60, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 9 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !567 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 4 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURWi $wzr, $fp, -60, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 7
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STURWi renamable $w18, $fp, -148, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 7
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !571; fft3d.c:76:16
  Ready @5c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 6c > CritPath 7
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
  Ready @6c
  TopQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STURWi renamable $w18, $fp, -144, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
  Ready @7c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
  Ready @8c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !574; fft3d.c:77:17
  Ready @9c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  TopQ.A RemainingLatency 0 + 10c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STURWi renamable $w18, $fp, -140, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
  Ready @10c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STURWi renamable $w18, $fp, -152, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !567 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:75:14
SU(9):   STURWi $wzr, $fp, -60, debug-location !578 :: (store 4 into %ir.i); fft3d.c:80:16
SU(1):   STURWi renamable $w18, $fp, -148, debug-location !569 :: (store 4 into %ir.lk); fft3d.c:75:12
SU(2):   renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !571; fft3d.c:76:16
SU(4):   dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !574; fft3d.c:77:17
SU(3):   STURWi renamable $w18, $fp, -144, debug-location !572 :: (store 4 into %ir.lj); fft3d.c:76:12
SU(5):   renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !574; fft3d.c:77:17
SU(6):   renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !574; fft3d.c:77:17
SU(7):   STURWi renamable $w18, $fp, -140, debug-location !575 :: (store 4 into %ir.li); fft3d.c:77:12
SU(8):   STURWi renamable $w18, $fp, -152, debug-location !577 :: (store 4 into %ir.ku); fft3d.c:78:12

Fixup kills for %bb.4
********** MI Scheduling **********
Swarztrauber:%bb.5 for.cond2
  From: renamable $w18 = LDURWi $fp, -140, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
    To: Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -140, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !584; fft3d.c:80:29
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(3): Data Latency=1 Reg=$w18
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.16, implicit $nzcv, debug-location !586; fft3d.c:80:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -140, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !584; fft3d.c:80:29
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !586; fft3d.c:80:9
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.5 ***
SU(0):   renamable $w18 = LDURWi $fp, -140, debug-location !583 :: (dereferenceable load 4 from %ir.li); fft3d.c:80:26
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !581 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:21
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !584; fft3d.c:80:29
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !586; fft3d.c:80:9

Fixup kills for %bb.5
********** MI Scheduling **********
Swarztrauber:%bb.6 for.body4
  From: renamable $w18 = LDURWi $fp, -20, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
    To: Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -20, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w0
    SU(5): Data Latency=4 Reg=$w0
SU(2):   renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !597 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:83:23
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=$w2
    SU(6): Data Latency=4 Reg=$w2
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w1
SU(3):   dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(4): Anti Latency=0
SU(4):   renamable $w18 = LDURWi $fp, -136, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(3): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$w18
SU(5):   renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !598; fft3d.c:83:21
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w1
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    SU(10): Data Latency=1 Reg=$w1
    SU(9): Data Latency=1 Reg=$w1
    SU(6): Anti Latency=0
SU(6):   renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !590; fft3d.c:81:21
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(5): Anti Latency=0
    SU(2): Data Latency=4 Reg=$w2
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    SU(10): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w0
    SU(7): Data Latency=1 Reg=$w0
SU(7):   STURWi renamable $w0, $fp, -156, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w0
  Successors:
    SU(10): Anti Latency=0
SU(8):   $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !594; fft3d.c:82:23
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w0
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w18
  Successors:
    SU(9): Data Latency=1 Reg=$w18
    SU(10): Anti Latency=0
SU(9):   STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !599 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:83:17
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$w18
    SU(5): Data Latency=1 Reg=$w1
SU(10):   $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !602; fft3d.c:84:23
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w1
    SU(2): Data Latency=4 Reg=$w2
  Successors:
    SU(11): Data Latency=1 Reg=$w0
SU(11):   STURWi renamable $w0, $fp, -168, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=$w0
ExitSU:   Bcc 11, %bb.8, implicit $nzcv, debug-location !607; fft3d.c:86:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 9
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 9
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -20, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
  Ready @0c
  TopQ.A BotLatency SU(0) 9c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 9
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !597 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:83:23
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w18 = LDURWi $fp, -136, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
  Ready @5c
  TopQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !598; fft3d.c:83:21
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !590; fft3d.c:81:21
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STURWi renamable $w0, $fp, -156, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !594; fft3d.c:82:23
  Ready @9c
  TopQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 10 
  TopQ.A RemainingLatency 0 + 10c > CritPath 9
  Cand SU(9) ORDER                              
  Cand SU(10) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !602; fft3d.c:84:23
  Ready @10c
  TopQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 9
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !599 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:83:17
  Ready @11c
  TopQ.A TopLatency SU(9) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w0, $fp, -168, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   renamable $w18 = LDURWi $fp, -20, debug-location !604 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:86:17
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !587 :: (dereferenceable load 4 from %ir.i); fft3d.c:81:19
SU(2):   renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !597 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:83:23
SU(3):   dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !607; fft3d.c:86:17
SU(4):   renamable $w18 = LDURWi $fp, -136, debug-location !593 :: (dereferenceable load 4 from %ir.n1); fft3d.c:82:25
SU(5):   renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !598; fft3d.c:83:21
SU(6):   renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !590; fft3d.c:81:21
SU(7):   STURWi renamable $w0, $fp, -156, debug-location !591 :: (store 4 into %ir.i11); fft3d.c:81:17
SU(8):   $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !594; fft3d.c:82:23
SU(10):   $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !602; fft3d.c:84:23
SU(9):   STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !599 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:83:17
SU(11):   STURWi renamable $w0, $fp, -168, debug-location !603 :: (store 4 into %ir.i22); fft3d.c:84:17

Fixup kills for %bb.6
********** MI Scheduling **********
Swarztrauber:%bb.7 if.then9
  From: renamable $w18 = LDURWi $fp, -152, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
    To: B %bb.9
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=$x1
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !612; fft3d.c:87:34
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w18
    SU(4): Anti Latency=0
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !608; fft3d.c:87:22
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x1
    SU(0): Out  Latency=1
ExitSU:   B %bb.9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -152, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x1 = LDRXui $fp, 2, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !612; fft3d.c:87:34
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !608; fft3d.c:87:22
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.7 ***
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !610 :: (dereferenceable load 4 from %ir.ku); fft3d.c:87:31
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !611 :: (dereferenceable load 4 from %ir.i); fft3d.c:87:36
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !608 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:87:22
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !612; fft3d.c:87:34
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !608; fft3d.c:87:22

Fixup kills for %bb.7
********** MI Scheduling **********
Swarztrauber:%bb.8 if.else
  From: renamable $w18 = LDURWi $fp, -152, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
    To: End RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=$x1
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !614; fft3d.c:90:22
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w18
    SU(4): Anti Latency=0
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !614; fft3d.c:90:22
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x1
    SU(0): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x18
    SU(5): Data Latency=1 Reg=$x18
SU(5):   renamable $d0 = LDRDui renamable $x18, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x18
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
SU(6):   STURDi renamable $d0, $fp, -184, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=$d0
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Anti Latency=0
    SU(7): Ord  Latency=1 Memory
SU(7):   renamable $d0 = LDRDui renamable $x18, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Anti Latency=0
    SU(6): Ord  Latency=1 Memory
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x18
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !614; fft3d.c:90:22
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$d0
  Successors:
    SU(9): Data Latency=1 Reg=$d0
SU(9):   STURDi renamable $d0, $fp, -176, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$d0
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(10):   $x18 = SUBXri $fp, 184, 0
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 1
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -152, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x1 = LDRXui $fp, 2, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !614; fft3d.c:90:22
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !614; fft3d.c:90:22
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $d0 = LDRDui renamable $x18, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 11 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STURDi renamable $d0, $fp, -184, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
  Ready @11c
  TopQ.A TopLatency SU(6) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 7
  Executed: 12c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $d0 = LDRDui renamable $x18, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
  Ready @12c
  TopQ.A TopLatency SU(7) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 8
  Executed: 13c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $x18 = SUBXri $fp, 184, 0
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 9
  Executed: 14c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 16 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $d0 = FNEGDr renamable $d0, debug-location !614; fft3d.c:90:22
  Ready @16c
  TopQ.A TopLatency SU(8) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 10
  Executed: 17c
  Critical: 10c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURDi renamable $d0, $fp, -176, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22
  Ready @17c
  TopQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 11
  Executed: 18c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.8 ***
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !614 :: (dereferenceable load 4 from %ir.ku); fft3d.c:90:22
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !614 :: (dereferenceable load 4 from %ir.i); fft3d.c:90:22
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !614 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:90:22
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !614; fft3d.c:90:22
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !614; fft3d.c:90:22
SU(5):   renamable $d0 = LDRDui renamable $x18, 0, debug-location !614 :: (load 8 from %ir.real145); fft3d.c:90:22
SU(6):   STURDi renamable $d0, $fp, -184, debug-location !614 :: (store 8 into %ir.real4); fft3d.c:90:22
SU(7):   renamable $d0 = LDRDui renamable $x18, 1, debug-location !614 :: (load 8 from %ir.imag18); fft3d.c:90:22
SU(10):   $x18 = SUBXri $fp, 184, 0
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !614; fft3d.c:90:22
SU(9):   STURDi renamable $d0, $fp, -176, debug-location !614 :: (store 8 into %ir.imag); fft3d.c:90:22

Fixup kills for %bb.8
********** MI Scheduling **********
Swarztrauber:%bb.9 if.end20
  From: renamable $q0 = LDRQui killed renamable $x18, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $q0 = LDRQui renamable $x18, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(2): Data Latency=4 Reg=$q0
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
SU(1):   STURWi $wzr, $fp, -132, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$q0
    SU(0): Ord  Latency=0 Memory
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $q0 = LDRQui renamable $x18, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi $wzr, $fp, -132, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRQui renamable $q0, renamable $x8, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.9 ***
SU(0):   renamable $q0 = LDRQui renamable $x18, 0, debug-location !616 :: (load 16 from %ir.40, align 8); fft3d.c:0
SU(1):   STURWi $wzr, $fp, -132, debug-location !617 :: (store 4 into %ir.k); fft3d.c:92:20
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !616 :: (store 16 into %ir.39); fft3d.c:0

Fixup kills for %bb.9
********** MI Scheduling **********
Swarztrauber:%bb.10 for.cond21
  From: renamable $w18 = LDURWi $fp, -148, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
    To: Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -148, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !623; fft3d.c:92:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(3): Data Latency=1 Reg=$w18
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.15, implicit $nzcv, debug-location !625; fft3d.c:92:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -148, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -132, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !623; fft3d.c:92:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !625; fft3d.c:92:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.10 ***
SU(0):   renamable $w18 = LDURWi $fp, -148, debug-location !622 :: (dereferenceable load 4 from %ir.lk); fft3d.c:92:30
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !620 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:25
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !623; fft3d.c:92:33
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !625; fft3d.c:92:13

Fixup kills for %bb.10
Fixup kills for %bb.11
********** MI Scheduling **********
Swarztrauber:%bb.12 for.cond25
  From: renamable $w18 = LDURWi $fp, -64, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
    To: Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.14, implicit $nzcv, debug-location !634; fft3d.c:93:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -64, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -28, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !634; fft3d.c:93:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.12 ***
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !630 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:29
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !632 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:93:33
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !634; fft3d.c:93:17

Fixup kills for %bb.12
********** MI Scheduling **********
Swarztrauber:%bb.13 for.body27
  From: renamable $x3 = LDURXi $fp, -56, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
    To: B %bb.12
 RegionInstrs: 53
ScheduleDAGMI::schedule starting
SU(0):   renamable $x3 = LDURXi $fp, -56, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 39
  Successors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=4 Reg=$x3
    SU(9): Data Latency=4 Reg=$x3
SU(1):   renamable $x5, renamable $x2 = LDPSWi $fp, -40, debug-location !637 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 41
  Successors:
    SU(11): Data Latency=4 Reg=$x5
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x2
SU(2):   renamable $x4 = LDURSWi $fp, -64, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 40
  Successors:
    SU(8): Out  Latency=1
    SU(7): Data Latency=4 Reg=$x4
    SU(52): Ord  Latency=0 Memory
SU(3):   renamable $x18 = LDURSWi $fp, -132, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 41
  Successors:
    SU(35): Out  Latency=1
    SU(37): Out  Latency=1
    SU(35): Data Latency=4 Reg=$w18
    SU(35): Data Latency=0 Reg=$x18
    SU(11): Data Latency=4 Reg=$x18
    SU(6): Data Latency=4 Reg=$x18
SU(4):   renamable $w1 = LDURWi $fp, -132, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(40): Out  Latency=1
    SU(39): Data Latency=4 Reg=$w1
SU(5):   renamable $x0 = LDURSWi $fp, -64, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(51): Data Latency=4 Reg=$x0
    SU(52): Ord  Latency=0 Memory
SU(6):   $x6 = ADDXrs renamable $x2, renamable $x18, 0, debug-location !639; fft3d.c:94:33
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 37
  Predecessors:
    SU(3): Data Latency=4 Reg=$x18
    SU(1): Data Latency=4 Reg=$x2
  Successors:
    SU(8): Data Latency=1 Reg=$x6
    SU(7): Anti Latency=0
    SU(35): Anti Latency=0
    SU(37): Anti Latency=0
SU(7):   renamable $x2 = UBFMXri renamable $x4, 60, 59, debug-location !649; fft3d.c:96:21
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 36
  Predecessors:
    SU(6): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x4
    SU(1): Out  Latency=1
  Successors:
    SU(38): Data Latency=1 Reg=$x2
    SU(15): Data Latency=1 Reg=$x2
    SU(10): Data Latency=1 Reg=$x2
    SU(8): Anti Latency=0
SU(8):   renamable $x4 = nsw MADDXrrr renamable $x6, renamable $x19, $xzr, debug-location !635; fft3d.c:94:27
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 36
  Predecessors:
    SU(7): Anti Latency=0
    SU(6): Data Latency=1 Reg=$x6
    SU(2): Out  Latency=1
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x4
SU(9):   renamable $x4 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !635; fft3d.c:94:27
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 35
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x4
    SU(0): Data Latency=4 Reg=$x3
  Successors:
    SU(11): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x4
    SU(13): Anti Latency=0
SU(10):   renamable $q0 = LDRQroX renamable $x4, renamable $x2, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 14
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 34
  Predecessors:
    SU(9): Data Latency=1 Reg=$x4
    SU(7): Data Latency=1 Reg=$x2
  Successors:
    SU(15): Out  Latency=1
    SU(14): Data Latency=4 Reg=$q0
    SU(11): Anti Latency=0
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
SU(11):   $x4 = ADDXrs renamable $x5, renamable $x18, 0, debug-location !644; fft3d.c:95:33
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 32
  Predecessors:
    SU(10): Anti Latency=0
    SU(9): Out  Latency=1
    SU(3): Data Latency=4 Reg=$x18
    SU(1): Data Latency=4 Reg=$x5
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x4
    SU(35): Anti Latency=0
    SU(37): Anti Latency=0
SU(12):   renamable $x4 = nsw MADDXrrr renamable $x4, renamable $x19, $xzr, debug-location !641; fft3d.c:95:27
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 31
  Predecessors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$x4
  Successors:
    SU(26): Out  Latency=1
    SU(13): Data Latency=1 Reg=$x4
SU(13):   renamable $x3 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !641; fft3d.c:95:27
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 30
  Predecessors:
    SU(12): Data Latency=1 Reg=$x4
    SU(9): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x3
  Successors:
    SU(26): Out  Latency=1
    SU(15): Data Latency=1 Reg=$x3
    SU(26): Anti Latency=0
SU(14):   STRQui renamable $q0, renamable $x8, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 30
  Predecessors:
    SU(10): Data Latency=4 Reg=$q0
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(15): Anti Latency=0
    SU(21): Ord  Latency=1 Memory
    SU(20): Ord  Latency=1 Memory
    SU(18): Ord  Latency=1 Memory
    SU(16): Ord  Latency=1 Memory
    SU(15): Ord  Latency=1 Memory
SU(15):   renamable $q0 = LDRQroX renamable $x3, renamable $x2, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  # preds left       : 5
  # succs left       : 13
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 29
  Predecessors:
    SU(14): Anti Latency=0
    SU(14): Ord  Latency=1 Memory
    SU(13): Data Latency=1 Reg=$x3
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x2
  Successors:
    SU(18): Out  Latency=1
    SU(17): Data Latency=4 Reg=$q0
    SU(26): Anti Latency=0
    SU(52): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(38): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(30): Ord  Latency=0 Memory
    SU(17): Ord  Latency=0 Memory
SU(16):   renamable $d2, renamable $d1 = LDPDi $fp, -14, debug-location !657 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 24
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(22): Out  Latency=1
    SU(22): Data Latency=4 Reg=$d2
    SU(29): Out  Latency=1
    SU(48): Out  Latency=1
    SU(28): Data Latency=4 Reg=$d1
SU(17):   STRQui renamable $q0, renamable $x8, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 25
  Predecessors:
    SU(15): Data Latency=4 Reg=$q0
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(18): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Ord  Latency=1 Memory
    SU(18): Ord  Latency=1 Memory
SU(18):   renamable $d0, renamable $d3 = LDPDi $fp, -15, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 20
  Predecessors:
    SU(17): Anti Latency=0
    SU(17): Ord  Latency=1 Memory
    SU(15): Out  Latency=1
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(28): Out  Latency=1
    SU(28): Data Latency=4 Reg=$d0
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d3
SU(19):   renamable $d4, renamable $d7 = LDPDi $fp, -16, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 24
  Predecessors:
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(23): Out  Latency=1
    SU(22): Data Latency=4 Reg=$d4
    SU(24): Data Latency=4 Reg=$d7
SU(20):   renamable $d5 = LDURDi $fp, -104, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 17
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(24): Out  Latency=1
    SU(34): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d5
SU(21):   renamable $d6 = LDURDi $fp, -104, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 20
  Predecessors:
    SU(14): Ord  Latency=1 Memory
  Successors:
    SU(29): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d6
SU(22):   renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !651; fft3d.c:96:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 20
  Predecessors:
    SU(19): Data Latency=4 Reg=$d4
    SU(16): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d2
  Successors:
    SU(31): Out  Latency=1
    SU(30): Data Latency=1 Reg=$d2
    SU(23): Anti Latency=0
SU(23):   renamable $d8, renamable $d4 = LDPDi $fp, -16, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 21
  Height             : 20
  Predecessors:
    SU(22): Anti Latency=0
    SU(19): Out  Latency=1
    SU(17): Ord  Latency=1 Memory
  Successors:
    SU(25): Data Latency=4 Reg=$d8
    SU(27): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d4
SU(24):   renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !651; fft3d.c:96:39
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 13
  Predecessors:
    SU(19): Data Latency=4 Reg=$d7
    SU(20): Data Latency=4 Reg=$d5
    SU(20): Out  Latency=1
  Successors:
    SU(32): Out  Latency=1
    SU(34): Out  Latency=1
    SU(30): Data Latency=1 Reg=$d5
    SU(34): Anti Latency=0
SU(25):   renamable $d3 = FSUBDrr renamable $d3, renamable $d8, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 25
  Height             : 13
  Predecessors:
    SU(23): Data Latency=4 Reg=$d8
    SU(18): Out  Latency=1
    SU(18): Data Latency=4 Reg=$d3
  Successors:
    SU(50): Data Latency=1 Reg=$d3
    SU(49): Data Latency=1 Reg=$d3
    SU(45): Data Latency=1 Reg=$d3
    SU(43): Data Latency=1 Reg=$d3
    SU(42): Data Latency=1 Reg=$d3
    SU(31): Data Latency=1 Reg=$d3
SU(26):   renamable $w4, renamable $w3 = LDPWi $fp, -42, debug-location !646 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 12
  Height             : 13
  Predecessors:
    SU(15): Anti Latency=0
    SU(13): Out  Latency=1
    SU(13): Anti Latency=0
    SU(12): Out  Latency=1
  Successors:
    SU(39): Data Latency=4 Reg=$w4
    SU(36): Out  Latency=1
    SU(35): Data Latency=4 Reg=$w3
SU(27):   renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 1
  Depth              : 25
  Height             : 16
  Predecessors:
    SU(23): Out  Latency=1
    SU(23): Data Latency=4 Reg=$d4
    SU(21): Data Latency=4 Reg=$d6
  Successors:
    SU(49): Data Latency=1 Reg=$d4
    SU(44): Data Latency=1 Reg=$d4
    SU(43): Data Latency=1 Reg=$d4
    SU(42): Data Latency=1 Reg=$d4
    SU(32): Data Latency=1 Reg=$d4
    SU(29): Anti Latency=0
SU(28):   renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 16
  Predecessors:
    SU(18): Out  Latency=1
    SU(18): Data Latency=4 Reg=$d0
    SU(16): Data Latency=4 Reg=$d1
  Successors:
    SU(50): Data Latency=1 Reg=$d0
    SU(29): Anti Latency=0
    SU(48): Anti Latency=0
SU(29):   renamable $d6, renamable $d1 = LDPDi $fp, -12, debug-location !657 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 25
  Height             : 16
  Predecessors:
    SU(28): Anti Latency=0
    SU(27): Anti Latency=0
    SU(21): Out  Latency=1
    SU(16): Out  Latency=1
  Successors:
    SU(44): Data Latency=4 Reg=$d6
    SU(31): Data Latency=4 Reg=$d6
    SU(45): Out  Latency=1
    SU(48): Out  Latency=1
    SU(45): Data Latency=4 Reg=$d1
    SU(32): Data Latency=4 Reg=$d1
SU(30):   STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !651 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 22
  Height             : 12
  Predecessors:
    SU(24): Data Latency=1 Reg=$d5
    SU(22): Data Latency=1 Reg=$d2
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(31): Anti Latency=0
    SU(32): Anti Latency=0
    SU(34): Anti Latency=0
    SU(34): Ord  Latency=1 Memory
SU(31):   renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !657; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 12
  Predecessors:
    SU(25): Data Latency=1 Reg=$d3
    SU(29): Data Latency=4 Reg=$d6
    SU(30): Anti Latency=0
    SU(22): Out  Latency=1
  Successors:
    SU(33): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d2
SU(32):   renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !657; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 12
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(29): Data Latency=4 Reg=$d1
    SU(30): Anti Latency=0
    SU(24): Out  Latency=1
  Successors:
    SU(34): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d5
    SU(45): Anti Latency=0
    SU(48): Anti Latency=0
SU(33):   renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 11
  Predecessors:
    SU(32): Data Latency=1 Reg=$d5
    SU(31): Out  Latency=1
    SU(31): Data Latency=1 Reg=$d2
  Successors:
    SU(47): Data Latency=1 Reg=$d2
    SU(34): Anti Latency=0
SU(34):   renamable $q5 = LDURQi $sp, 200, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  # preds left       : 7
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 30
  Height             : 11
  Predecessors:
    SU(33): Anti Latency=0
    SU(32): Out  Latency=1
    SU(30): Anti Latency=0
    SU(30): Ord  Latency=1 Memory
    SU(24): Out  Latency=1
    SU(24): Anti Latency=0
    SU(20): Out  Latency=1
  Successors:
    SU(44): Out  Latency=1
    SU(38): Data Latency=4 Reg=$q5
SU(35):   $w18 = ADDWrs renamable $w3, renamable $w18, 0, implicit $x18, debug-location !648; fft3d.c:96:29
  # preds left       : 6
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 9
  Predecessors:
    SU(26): Data Latency=4 Reg=$w3
    SU(11): Anti Latency=0
    SU(6): Anti Latency=0
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
    SU(3): Data Latency=0 Reg=$x18
  Successors:
    SU(37): Out  Latency=1
    SU(37): Data Latency=1 Reg=$w18
    SU(36): Anti Latency=0
    SU(37): Anti Latency=0
SU(36):   renamable $w3 = LDURWi $fp, -64, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 16
  Height             : 5
  Predecessors:
    SU(35): Anti Latency=0
    SU(26): Out  Latency=1
  Successors:
    SU(40): Data Latency=4 Reg=$w3
    SU(52): Ord  Latency=0 Memory
SU(37):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !649; fft3d.c:96:21
  # preds left       : 6
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 17
  Height             : 8
  Predecessors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=1 Reg=$w18
    SU(35): Anti Latency=0
    SU(11): Anti Latency=0
    SU(6): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(39): Out  Latency=1
    SU(41): Out  Latency=1
    SU(38): Data Latency=1 Reg=$x18
SU(38):   STRQroX renamable $q5, renamable $x18, renamable $x2, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  # preds left       : 5
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 7
  Predecessors:
    SU(34): Data Latency=4 Reg=$q5
    SU(37): Data Latency=1 Reg=$x18
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(7): Data Latency=1 Reg=$x2
  Successors:
    SU(44): Anti Latency=0
    SU(39): Anti Latency=0
    SU(41): Anti Latency=0
    SU(51): Ord  Latency=0 Memory
SU(39):   $w18 = ADDWrs renamable $w4, renamable $w1, 0, debug-location !654; fft3d.c:97:29
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 2
  Predecessors:
    SU(38): Anti Latency=0
    SU(37): Out  Latency=1
    SU(26): Data Latency=4 Reg=$w4
    SU(4): Data Latency=4 Reg=$w1
  Successors:
    SU(41): Out  Latency=1
    SU(41): Data Latency=1 Reg=$w18
    SU(40): Anti Latency=0
SU(40):   renamable $w1 = nsw ADDWri renamable $w3, 1, 0, debug-location !658; fft3d.c:93:40
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 1
  Predecessors:
    SU(39): Anti Latency=0
    SU(36): Data Latency=4 Reg=$w3
    SU(4): Out  Latency=1
  Successors:
    SU(52): Data Latency=1 Reg=$w1
SU(41):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !655; fft3d.c:97:21
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 1
  Predecessors:
    SU(39): Out  Latency=1
    SU(39): Data Latency=1 Reg=$w18
    SU(38): Anti Latency=0
    SU(37): Out  Latency=1
  Successors:
    SU(51): Data Latency=1 Reg=$x18
SU(42):   STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !657 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(43):   STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !657 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(44):   renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 34
  Height             : 7
  Predecessors:
    SU(38): Anti Latency=0
    SU(34): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d6
    SU(27): Data Latency=1 Reg=$d4
  Successors:
    SU(46): Data Latency=1 Reg=$d5
SU(45):   renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !657; fft3d.c:97:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 29
  Height             : 7
  Predecessors:
    SU(32): Anti Latency=0
    SU(29): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d1
    SU(25): Data Latency=1 Reg=$d3
  Successors:
    SU(46): Out  Latency=1
    SU(48): Out  Latency=1
    SU(46): Data Latency=1 Reg=$d1
    SU(48): Anti Latency=0
SU(46):   renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !657; fft3d.c:97:39
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 6
  Predecessors:
    SU(44): Data Latency=1 Reg=$d5
    SU(45): Data Latency=1 Reg=$d1
    SU(45): Out  Latency=1
  Successors:
    SU(48): Out  Latency=1
    SU(47): Data Latency=1 Reg=$d1
    SU(48): Anti Latency=0
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !657 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 36
  Height             : 5
  Predecessors:
    SU(46): Data Latency=1 Reg=$d1
    SU(33): Data Latency=1 Reg=$d2
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
  Successors:
    SU(48): Anti Latency=0
    SU(48): Ord  Latency=1 Memory
SU(48):   renamable $q1 = LDURQi $sp, 184, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  # preds left       : 10
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 37
  Height             : 4
  Predecessors:
    SU(47): Anti Latency=0
    SU(47): Ord  Latency=1 Memory
    SU(46): Out  Latency=1
    SU(46): Anti Latency=0
    SU(45): Out  Latency=1
    SU(45): Anti Latency=0
    SU(32): Anti Latency=0
    SU(29): Out  Latency=1
    SU(28): Anti Latency=0
    SU(16): Out  Latency=1
  Successors:
    SU(51): Data Latency=4 Reg=$q1
SU(49):   STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !657 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(27): Data Latency=1 Reg=$d4
    SU(25): Data Latency=1 Reg=$d3
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(50):   STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !657 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 0
  Predecessors:
    SU(25): Data Latency=1 Reg=$d3
    SU(28): Data Latency=1 Reg=$d0
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
SU(51):   STRQroX renamable $q1, renamable $x18, renamable $x0, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 41
  Height             : 0
  Predecessors:
    SU(48): Data Latency=4 Reg=$q1
    SU(41): Data Latency=1 Reg=$x18
    SU(38): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(5): Data Latency=4 Reg=$x0
SU(52):   STURWi renamable $w1, $fp, -64, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 35
  Height             : 0
  Predecessors:
    SU(40): Data Latency=1 Reg=$w1
    SU(36): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.12
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 41
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 5 
  TopQ.A RemainingLatency 0 + 0c > CritPath 41
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  41 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x5, renamable $x2 = LDPSWi $fp, -40, debug-location !637 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
  Ready @0c
  TopQ.A BotLatency SU(1) 41c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 5 2 3 4 
  TopQ.A RemainingLatency 0 + 1c > CritPath 41
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  40 cycles 
  Cand SU(3) TOP-PATH                  41 cycles 
Pick Top TOP-PATH  
Scheduling SU(3) renamable $x18 = LDURSWi $fp, -132, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
  Ready @1c
  TopQ.A BotLatency SU(3) 41c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 0 5 2 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 41
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  40 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x4 = LDURSWi $fp, -64, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 0 5 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 41
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x3 = LDURXi $fp, -56, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 4 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 41
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w1 = LDURWi $fp, -132, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(6) TOP-PATH                  37 cycles 
Pick Top TOP-PATH  
Scheduling SU(6) $x6 = ADDXrs renamable $x2, renamable $x18, 0, debug-location !639; fft3d.c:94:33
  Ready @5c
  TopQ.A TopLatency SU(6) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 7 
  TopQ.A RemainingLatency 0 + 6c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(7) TOP-PATH                  36 cycles 
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x2 = UBFMXri renamable $x4, 60, 59, debug-location !649; fft3d.c:96:21
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(8) TOP-PATH                  36 cycles 
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x4 = nsw MADDXrrr renamable $x6, renamable $x19, $xzr, debug-location !635; fft3d.c:94:27
  Ready @7c
  TopQ.A TopLatency SU(8) 5c
  TopQ.A BotLatency SU(8) 36c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 9 
  TopQ.A RemainingLatency 0 + 8c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(9) TOP-PATH                  35 cycles 
Pick Top TOP-PATH  
Scheduling SU(9) renamable $x4 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !635; fft3d.c:94:27
  Ready @8c
  TopQ.A TopLatency SU(9) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(10) TOP-PATH                  34 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) renamable $q0 = LDRQroX renamable $x4, renamable $x2, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
  Ready @9c
  TopQ.A TopLatency SU(10) 7c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 11 
  TopQ.A RemainingLatency 0 + 10c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(11) TOP-PATH                  32 cycles 
Pick Top TOP-PATH  
Scheduling SU(11) $x4 = ADDXrs renamable $x5, renamable $x18, 0, debug-location !644; fft3d.c:95:33
  Ready @10c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 12 
  TopQ.A RemainingLatency 0 + 11c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(12) TOP-PATH                  31 cycles 
Pick Top TOP-PATH  
Scheduling SU(12) renamable $x4 = nsw MADDXrrr renamable $x4, renamable $x19, $xzr, debug-location !641; fft3d.c:95:27
  Ready @11c
  TopQ.A TopLatency SU(12) 8c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 14 
Queue TopQ.A: 5 13 
  TopQ.A RemainingLatency 0 + 12c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(13) TOP-PATH                  30 cycles 
Pick Top TOP-PATH  
Scheduling SU(13) renamable $x3 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !641; fft3d.c:95:27
  Ready @12c
  TopQ.A TopLatency SU(13) 9c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 14 
  TopQ.A RemainingLatency 0 + 13c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(14) TOP-PATH                  30 cycles 
Pick Top TOP-PATH  
Scheduling SU(14) STRQui renamable $q0, renamable $x8, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
  Ready @13c
  TopQ.A TopLatency SU(14) 11c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 21 20 16 15 
  TopQ.A RemainingLatency 0 + 14c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
  Cand SU(16) TOP-PATH                  24 cycles 
  Cand SU(15) TOP-PATH                  29 cycles 
Pick Top TOP-PATH  
Scheduling SU(15) renamable $q0 = LDRQroX renamable $x3, renamable $x2, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
  Ready @14c
  TopQ.A TopLatency SU(15) 12c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 21 20 16 26 
  TopQ.A RemainingLatency 0 + 15c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
  Cand SU(16) TOP-PATH                  24 cycles 
Pick Top TOP-PATH  
Scheduling SU(16) renamable $d2, renamable $d1 = LDPDi $fp, -14, debug-location !657 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 21 20 26 
  TopQ.A RemainingLatency 0 + 16c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(21) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(21) renamable $d6 = LDURDi $fp, -104, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
  Ready @16c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 17 
Queue TopQ.A: 5 26 20 
  TopQ.A RemainingLatency 0 + 17c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(20) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(20) renamable $d5 = LDURDi $fp, -104, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 26 17 
  TopQ.A RemainingLatency 0 + 18c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(17) TOP-PATH                  25 cycles 
Pick Top TOP-PATH  
Scheduling SU(17) STRQui renamable $q0, renamable $x8, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
  Ready @18c
  TopQ.A TopLatency SU(17) 16c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 26 19 18 
  TopQ.A RemainingLatency 0 + 19c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(19) TOP-PATH                  24 cycles 
Pick Top TOP-PATH  
Scheduling SU(19) renamable $d4, renamable $d7 = LDPDi $fp, -16, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
  Ready @19c
  TopQ.A TopLatency SU(19) 17c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 
Queue TopQ.A: 5 26 18 
  TopQ.A RemainingLatency 0 + 20c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
  Cand SU(18) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(18) renamable $d0, renamable $d3 = LDPDi $fp, -15, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 28 
Queue TopQ.A: 5 26 
  TopQ.A RemainingLatency 0 + 21c > CritPath 41
  Cand SU(5) ORDER                              
  Cand SU(26) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(26) renamable $w4, renamable $w3 = LDPWi $fp, -42, debug-location !646 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 22 24 28 35 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $x0 = LDURSWi $fp, -64, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
  Ready @22c
  *** Max MOps 1 at cycle 22
Cycle: 23 TopQ.A
TopQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 28 
Queue TopQ.A: 22 24 
  TopQ.A RemainingLatency 0 + 23c > CritPath 41
  Cand SU(22) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(22) renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !651; fft3d.c:96:39
  Ready @23c
  TopQ.A TopLatency SU(22) 21c
  *** Max MOps 1 at cycle 23
Cycle: 24 TopQ.A
TopQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 24 23 28 
  TopQ.A RemainingLatency 0 + 24c > CritPath 41
  Cand SU(24) ORDER                              
  Cand SU(23) TOP-PATH                  20 cycles 
Pick Top TOP-PATH  
Scheduling SU(23) renamable $d8, renamable $d4 = LDPDi $fp, -16, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
  Ready @24c
  TopQ.A BotLatency SU(23) 20c
  *** Max MOps 1 at cycle 24
Cycle: 25 TopQ.A
TopQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 24 28 35 
  TopQ.A RemainingLatency 0 + 25c > CritPath 41
  Cand SU(24) ORDER                              
  Cand SU(28) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(28) renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !657; fft3d.c:97:39
  Ready @25c
  *** Max MOps 1 at cycle 25
Cycle: 26 TopQ.A
TopQ.A @26c
  Retired: 26
  Executed: 26c
  Critical: 26c, 26 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 24 35 
  TopQ.A RemainingLatency 0 + 26c > CritPath 41
  Cand SU(24) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(24) renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !651; fft3d.c:96:39
  Ready @26c
  *** Max MOps 1 at cycle 26
Cycle: 27 TopQ.A
TopQ.A @27c
  Retired: 27
  Executed: 27c
  Critical: 27c, 27 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 27 25 
Queue TopQ.A: 35 30 
  TopQ.A RemainingLatency 0 + 27c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(30) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(30) STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !651 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
  Ready @27c
  TopQ.A TopLatency SU(30) 22c
  *** Max MOps 1 at cycle 27
Cycle: 28 TopQ.A
TopQ.A @28c
  Retired: 28
  Executed: 28c
  Critical: 28c, 28 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 35 27 25 
  TopQ.A RemainingLatency 0 + 28c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(27) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(27) renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
  Ready @28c
  TopQ.A TopLatency SU(27) 25c
  *** Max MOps 1 at cycle 28
Cycle: 29 TopQ.A
TopQ.A @29c
  Retired: 29
  Executed: 29c
  Critical: 29c, 29 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 35 25 29 
  TopQ.A RemainingLatency 0 + 29c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(25) TOP-PATH                  13 cycles 
  Cand SU(29) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(29) renamable $d6, renamable $d1 = LDPDi $fp, -12, debug-location !657 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
  Ready @29c
  TopQ.A BotLatency SU(29) 16c
  *** Max MOps 1 at cycle 29
Cycle: 30 TopQ.A
TopQ.A @30c
  Retired: 30
  Executed: 30c
  Critical: 30c, 30 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 
Queue TopQ.A: 35 25 
  TopQ.A RemainingLatency 0 + 30c > CritPath 41
  Cand SU(35) ORDER                              
  Cand SU(25) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(25) renamable $d3 = FSUBDrr renamable $d3, renamable $d8, debug-location !657; fft3d.c:97:39
  Ready @30c
  *** Max MOps 1 at cycle 30
Cycle: 31 TopQ.A
TopQ.A @31c
  Retired: 31
  Executed: 31c
  Critical: 31c, 31 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 31 
Queue TopQ.A: 35 50 49 43 42 
  TopQ.A RemainingLatency 0 + 31c > CritPath 41
  Cand SU(35) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(35) $w18 = ADDWrs renamable $w3, renamable $w18, 0, implicit $x18, debug-location !648; fft3d.c:96:29
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 TopQ.A
TopQ.A @32c
  Retired: 32
  Executed: 32c
  Critical: 32c, 32 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 32 31 
Queue TopQ.A: 42 50 49 43 36 37 
  TopQ.A RemainingLatency 0 + 32c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(37) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(37) renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !649; fft3d.c:96:21
  Ready @32c
  *** Max MOps 1 at cycle 32
Cycle: 33 TopQ.A
TopQ.A @33c
  Retired: 33
  Executed: 33c
  Critical: 33c, 33 MOps
  ExpectedLatency: 25c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 32 31 
  TopQ.A RemainingLatency 0 + 33c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(32) TOP-PATH                  12 cycles 
  Cand SU(31) ORDER                              
Pick Top ORDER     
Scheduling SU(31) renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !657; fft3d.c:97:39
  Ready @33c
  TopQ.A TopLatency SU(31) 29c
  *** Max MOps 1 at cycle 33
Cycle: 34 TopQ.A
TopQ.A @34c
  Retired: 34
  Executed: 34c
  Critical: 34c, 34 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 32 
  TopQ.A RemainingLatency 0 + 34c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(32) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(32) renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !657; fft3d.c:97:39
  Ready @34c
  TopQ.A BotLatency SU(32) 12c
  *** Max MOps 1 at cycle 34
Cycle: 35 TopQ.A
TopQ.A @35c
  Retired: 35
  Executed: 35c
  Critical: 35c, 35 MOps
  ExpectedLatency: 29c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 33 45 
  TopQ.A RemainingLatency 0 + 35c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(33) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(33) renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !657; fft3d.c:97:39
  Ready @35c
  TopQ.A TopLatency SU(33) 30c
  *** Max MOps 1 at cycle 35
Cycle: 36 TopQ.A
TopQ.A @36c
  Retired: 36
  Executed: 36c
  Critical: 36c, 36 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 42 50 49 43 36 45 34 
  TopQ.A RemainingLatency 0 + 36c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(45) TOP-PATH                  7 cycles 
  Cand SU(34) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(34) renamable $q5 = LDURQi $sp, 200, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
  Ready @36c
  TopQ.A BotLatency SU(34) 11c
  *** Max MOps 1 at cycle 36
Cycle: 37 TopQ.A
TopQ.A @37c
  Retired: 37
  Executed: 37c
  Critical: 37c, 37 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 36 45 
  TopQ.A RemainingLatency 0 + 37c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
  Cand SU(45) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(45) renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !657; fft3d.c:97:39
  Ready @37c
  *** Max MOps 1 at cycle 37
Cycle: 38 TopQ.A
TopQ.A @38c
  Retired: 38
  Executed: 38c
  Critical: 38c, 38 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 36 
  TopQ.A RemainingLatency 0 + 38c > CritPath 41
  Cand SU(42) ORDER                              
  Cand SU(36) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(36) renamable $w3 = LDURWi $fp, -64, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 TopQ.A
TopQ.A @39c
  Retired: 39
  Executed: 39c
  Critical: 39c, 39 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 42 50 49 43 
  TopQ.A RemainingLatency 0 + 39c > CritPath 41
  Cand SU(42) ORDER                              
Pick Top ORDER     
Scheduling SU(42) STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !657 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
  Ready @39c
  *** Max MOps 1 at cycle 39
Cycle: 40 TopQ.A
TopQ.A @40c
  Retired: 40
  Executed: 40c
  Critical: 40c, 40 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 38 
  TopQ.A RemainingLatency 0 + 40c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(38) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(38) STRQroX renamable $q5, renamable $x18, renamable $x2, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
  Ready @40c
  TopQ.A TopLatency SU(38) 34c
  *** Max MOps 1 at cycle 40
Cycle: 41 TopQ.A
TopQ.A @41c
  Retired: 41
  Executed: 41c
  Critical: 41c, 41 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 44 39 
  TopQ.A RemainingLatency 0 + 41c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(44) TOP-PATH                  7 cycles 
Pick Top TOP-PATH  
Scheduling SU(44) renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
  Ready @41c
  TopQ.A BotLatency SU(44) 7c
  *** Max MOps 1 at cycle 41
Cycle: 42 TopQ.A
TopQ.A @42c
  Retired: 42
  Executed: 42c
  Critical: 42c, 42 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 46 
  TopQ.A RemainingLatency 0 + 42c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(46) TOP-PATH                  6 cycles 
Pick Top TOP-PATH  
Scheduling SU(46) renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !657; fft3d.c:97:39
  Ready @42c
  TopQ.A TopLatency SU(46) 35c
  *** Max MOps 1 at cycle 42
Cycle: 43 TopQ.A
TopQ.A @43c
  Retired: 43
  Executed: 43c
  Critical: 43c, 43 MOps
  ExpectedLatency: 35c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 47 
  TopQ.A RemainingLatency 0 + 43c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(47) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(47) STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !657 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
  Ready @43c
  TopQ.A TopLatency SU(47) 36c
  *** Max MOps 1 at cycle 43
Cycle: 44 TopQ.A
TopQ.A @44c
  Retired: 44
  Executed: 44c
  Critical: 44c, 44 MOps
  ExpectedLatency: 36c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 48 
  TopQ.A RemainingLatency 0 + 44c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
  Cand SU(48) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(48) renamable $q1 = LDURQi $sp, 184, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
  Ready @44c
  TopQ.A TopLatency SU(48) 37c
  *** Max MOps 1 at cycle 44
Cycle: 45 TopQ.A
TopQ.A @45c
  Retired: 45
  Executed: 45c
  Critical: 45c, 45 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 39 
  TopQ.A RemainingLatency 0 + 45c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(39) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(39) $w18 = ADDWrs renamable $w4, renamable $w1, 0, debug-location !654; fft3d.c:97:29
  Ready @45c
  *** Max MOps 1 at cycle 45
Cycle: 46 TopQ.A
TopQ.A @46c
  Retired: 46
  Executed: 46c
  Critical: 46c, 46 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 41 40 
  TopQ.A RemainingLatency 0 + 46c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(41) TOP-PATH                  1 cycles 
  Cand SU(40) ORDER                              
Pick Top ORDER     
Scheduling SU(40) renamable $w1 = nsw ADDWri renamable $w3, 1, 0, debug-location !658; fft3d.c:93:40
  Ready @46c
  *** Max MOps 1 at cycle 46
Cycle: 47 TopQ.A
TopQ.A @47c
  Retired: 47
  Executed: 47c
  Critical: 47c, 47 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 41 52 
  TopQ.A RemainingLatency 0 + 47c > CritPath 41
  Cand SU(43) ORDER                              
  Cand SU(41) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(41) renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !655; fft3d.c:97:21
  Ready @47c
  *** Max MOps 1 at cycle 47
Cycle: 48 TopQ.A
TopQ.A @48c
  Retired: 48
  Executed: 48c
  Critical: 48c, 48 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 43 50 49 52 51 
  TopQ.A RemainingLatency 0 + 48c > CritPath 41
  Cand SU(43) ORDER                              
Pick Top ORDER     
Scheduling SU(43) STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !657 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
  Ready @48c
  *** Max MOps 1 at cycle 48
Cycle: 49 TopQ.A
TopQ.A @49c
  Retired: 49
  Executed: 49c
  Critical: 49c, 49 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 50 49 52 
  TopQ.A RemainingLatency 0 + 49c > CritPath 41
  Cand SU(51) ORDER                              
  Cand SU(50) ORDER                              
  Cand SU(49) ORDER                              
Pick Top ORDER     
Scheduling SU(49) STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !657 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
  Ready @49c
  *** Max MOps 1 at cycle 49
Cycle: 50 TopQ.A
TopQ.A @50c
  Retired: 50
  Executed: 50c
  Critical: 50c, 50 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 50 52 
  TopQ.A RemainingLatency 0 + 50c > CritPath 41
  Cand SU(51) ORDER                              
  Cand SU(50) ORDER                              
Pick Top ORDER     
Scheduling SU(50) STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !657 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
  Ready @50c
  *** Max MOps 1 at cycle 50
Cycle: 51 TopQ.A
TopQ.A @51c
  Retired: 51
  Executed: 51c
  Critical: 51c, 51 MOps
  ExpectedLatency: 37c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 51 52 
  TopQ.A RemainingLatency 0 + 51c > CritPath 41
  Cand SU(51) ORDER                              
Pick Top ORDER     
Scheduling SU(51) STRQroX renamable $q1, renamable $x18, renamable $x0, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
  Ready @51c
  TopQ.A TopLatency SU(51) 41c
  *** Max MOps 1 at cycle 51
Cycle: 52 TopQ.A
TopQ.A @52c
  Retired: 52
  Executed: 52c
  Critical: 52c, 52 MOps
  ExpectedLatency: 41c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 52 
Pick Top ONLY1     
Scheduling SU(52) STURWi renamable $w1, $fp, -64, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40
  Ready @52c
  *** Max MOps 1 at cycle 52
Cycle: 53 TopQ.A
TopQ.A @53c
  Retired: 53
  Executed: 53c
  Critical: 53c, 53 MOps
  ExpectedLatency: 41c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.13 ***
SU(1):   renamable $x5, renamable $x2 = LDPSWi $fp, -40, debug-location !637 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:94:29
SU(3):   renamable $x18 = LDURSWi $fp, -132, debug-location !638 :: (dereferenceable load 4 from %ir.k); fft3d.c:94:35
SU(2):   renamable $x4 = LDURSWi $fp, -64, debug-location !640 :: (dereferenceable load 4 from %ir.j); fft3d.c:94:38
SU(0):   renamable $x3 = LDURXi $fp, -56, debug-location !635 :: (dereferenceable load 8 from %ir.x); fft3d.c:94:27
SU(4):   renamable $w1 = LDURWi $fp, -132, debug-location !653 :: (dereferenceable load 4 from %ir.k); fft3d.c:97:31
SU(6):   $x6 = ADDXrs renamable $x2, renamable $x18, 0, debug-location !639; fft3d.c:94:33
SU(7):   renamable $x2 = UBFMXri renamable $x4, 60, 59, debug-location !649; fft3d.c:96:21
SU(8):   renamable $x4 = nsw MADDXrrr renamable $x6, renamable $x19, $xzr, debug-location !635; fft3d.c:94:27
SU(9):   renamable $x4 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !635; fft3d.c:94:27
SU(10):   renamable $q0 = LDRQroX renamable $x4, renamable $x2, 0, 0, debug-location !635 :: (load 16 from %ir.51, align 8); fft3d.c:94:27
SU(11):   $x4 = ADDXrs renamable $x5, renamable $x18, 0, debug-location !644; fft3d.c:95:33
SU(12):   renamable $x4 = nsw MADDXrrr renamable $x4, renamable $x19, $xzr, debug-location !641; fft3d.c:95:27
SU(13):   renamable $x3 = ADDXrs renamable $x3, renamable $x4, 4, debug-location !641; fft3d.c:95:27
SU(14):   STRQui renamable $q0, renamable $x8, 1, debug-location !635 :: (store 16 into %ir.50); fft3d.c:94:27
SU(15):   renamable $q0 = LDRQroX renamable $x3, renamable $x2, 0, 0, debug-location !641 :: (load 16 from %ir.58, align 8); fft3d.c:95:27
SU(16):   renamable $d2, renamable $d1 = LDPDi $fp, -14, debug-location !657 :: (dereferenceable load 8 from %ir.imag104), (dereferenceable load 8 from %ir.real459, align 16); fft3d.c:97:39
SU(21):   renamable $d6 = LDURDi $fp, -104, debug-location !657 :: (dereferenceable load 8 from %ir.imag92); fft3d.c:97:39
SU(20):   renamable $d5 = LDURDi $fp, -104, debug-location !651 :: (dereferenceable load 8 from %ir.imag49); fft3d.c:96:39
SU(17):   STRQui renamable $q0, renamable $x8, 0, debug-location !641 :: (store 16 into %ir.57); fft3d.c:95:27
SU(19):   renamable $d4, renamable $d7 = LDPDi $fp, -16, debug-location !651 :: (dereferenceable load 8 from %ir.real4610, align 16), (dereferenceable load 8 from %ir.imag50); fft3d.c:96:39
SU(18):   renamable $d0, renamable $d3 = LDPDi $fp, -15, debug-location !657 :: (dereferenceable load 8 from %ir.real10026, align 16), (dereferenceable load 8 from %ir.imag105); fft3d.c:97:39
SU(26):   renamable $w4, renamable $w3 = LDPWi $fp, -42, debug-location !646 :: (dereferenceable load 4 from %ir.i21), (dereferenceable load 4 from %ir.i22); fft3d.c:96:25
SU(5):   renamable $x0 = LDURSWi $fp, -64, debug-location !656 :: (dereferenceable load 4 from %ir.j); fft3d.c:97:34
SU(22):   renamable $d2 = FADDDrr renamable $d2, renamable $d4, debug-location !651; fft3d.c:96:39
SU(23):   renamable $d8, renamable $d4 = LDPDi $fp, -16, debug-location !657 :: (dereferenceable load 8 from %ir.real10127, align 16), (dereferenceable load 8 from %ir.imag67); fft3d.c:97:39
SU(28):   renamable $d0 = FSUBDrr renamable $d1, renamable $d0, debug-location !657; fft3d.c:97:39
SU(24):   renamable $d5 = FADDDrr renamable $d5, renamable $d7, debug-location !651; fft3d.c:96:39
SU(30):   STPDi renamable $d2, renamable $d5, $sp, 25, debug-location !651 :: (store 8 into %ir.imag48), (store 8 into %ir.real448); fft3d.c:96:39
SU(27):   renamable $d4 = FSUBDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
SU(29):   renamable $d6, renamable $d1 = LDPDi $fp, -12, debug-location !657 :: (dereferenceable load 8 from %ir.imag97), (dereferenceable load 8 from %ir.real8521, align 16); fft3d.c:97:39
SU(25):   renamable $d3 = FSUBDrr renamable $d3, renamable $d8, debug-location !657; fft3d.c:97:39
SU(35):   $w18 = ADDWrs renamable $w3, renamable $w18, 0, implicit $x18, debug-location !648; fft3d.c:96:29
SU(37):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !649; fft3d.c:96:21
SU(31):   renamable $d2 = FMULDrr renamable $d6, renamable $d3, debug-location !657; fft3d.c:97:39
SU(32):   renamable $d5 = FMULDrr renamable $d1, renamable $d4, debug-location !657; fft3d.c:97:39
SU(33):   renamable $d2 = FSUBDrr renamable $d2, renamable $d5, debug-location !657; fft3d.c:97:39
SU(34):   renamable $q5 = LDURQi $sp, 200, debug-location !651 :: (dereferenceable load 16 from %ir.67, align 8); fft3d.c:96:39
SU(45):   renamable $d1 = FMULDrr renamable $d1, renamable $d3, debug-location !657; fft3d.c:97:39
SU(36):   renamable $w3 = LDURWi $fp, -64, debug-location !658 :: (dereferenceable load 4 from %ir.j); fft3d.c:93:40
SU(42):   STPDi renamable $d3, renamable $d4, $sp, 21, debug-location !657 :: (store 8 into %ir.imag65), (store 8 into %ir.real6114); fft3d.c:97:39
SU(38):   STRQroX renamable $q5, renamable $x18, renamable $x2, 0, 0, debug-location !651 :: (store 16 into %ir.66, align 8); fft3d.c:96:39
SU(44):   renamable $d5 = FMULDrr renamable $d6, renamable $d4, debug-location !657; fft3d.c:97:39
SU(46):   renamable $d1 = FADDDrr renamable $d5, renamable $d1, debug-location !657; fft3d.c:97:39
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 23, debug-location !657 :: (store 8 into %ir.imag84), (store 8 into %ir.real5812); fft3d.c:97:39
SU(48):   renamable $q1 = LDURQi $sp, 184, debug-location !657 :: (dereferenceable load 16 from %ir.96, align 8); fft3d.c:97:39
SU(39):   $w18 = ADDWrs renamable $w4, renamable $w1, 0, debug-location !654; fft3d.c:97:29
SU(40):   renamable $w1 = nsw ADDWri renamable $w3, 1, 0, debug-location !658; fft3d.c:93:40
SU(41):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !655; fft3d.c:97:21
SU(43):   STPDi renamable $d3, renamable $d4, $sp, 19, debug-location !657 :: (store 8 into %ir.imag77), (store 8 into %ir.real7318); fft3d.c:97:39
SU(49):   STPDi renamable $d3, renamable $d4, $sp, 17, debug-location !657 :: (store 8 into %ir.imag91), (store 8 into %ir.real8722); fft3d.c:97:39
SU(50):   STPDi renamable $d3, renamable $d0, $sp, 15, debug-location !657 :: (store 8 into %ir.imag103), (store 8 into %ir.real9925); fft3d.c:97:39
SU(51):   STRQroX renamable $q1, renamable $x18, renamable $x0, 0, 1, debug-location !657 :: (store 16 into %ir.95, align 8); fft3d.c:97:39
SU(52):   STURWi renamable $w1, $fp, -64, debug-location !658 :: (store 4 into %ir.j); fft3d.c:93:40

Fixup kills for %bb.13
********** MI Scheduling **********
Swarztrauber:%bb.14 for.inc110
  From: renamable $w18 = LDURWi $fp, -132, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
    To: B %bb.10
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !662; fft3d.c:92:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.10
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -132, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !662; fft3d.c:92:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -132, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.14 ***
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !662 :: (dereferenceable load 4 from %ir.k); fft3d.c:92:39
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !662; fft3d.c:92:39
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !662 :: (store 4 into %ir.k); fft3d.c:92:39

Fixup kills for %bb.14
********** MI Scheduling **********
Swarztrauber:%bb.15 for.inc113
  From: renamable $w18 = LDURWi $fp, -60, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
    To: B %bb.5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -60, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !666; fft3d.c:80:35
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -60, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -60, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !666; fft3d.c:80:35
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -60, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.15 ***
SU(0):   renamable $w18 = LDURWi $fp, -60, debug-location !666 :: (dereferenceable load 4 from %ir.i); fft3d.c:80:35
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !666; fft3d.c:80:35
SU(2):   STURWi renamable $w18, $fp, -60, debug-location !666 :: (store 4 into %ir.i); fft3d.c:80:35

Fixup kills for %bb.15
********** MI Scheduling **********
Swarztrauber:%bb.16 for.end115
  From: renamable $w18 = LDURWi $fp, -68, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
    To: Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -24, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 1, %bb.23, implicit $nzcv, debug-location !674; fft3d.c:102:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -68, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -24, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !674; fft3d.c:102:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.16 ***
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !670 :: (dereferenceable load 4 from %ir.l); fft3d.c:102:13
SU(1):   renamable $w0 = LDURWi $fp, -24, debug-location !672 :: (dereferenceable load 4 from %ir.m.addr); fft3d.c:102:18
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !674; fft3d.c:102:13

Fixup kills for %bb.16
Fixup kills for %bb.17
********** MI Scheduling **********
Swarztrauber:%bb.18 for.cond118
  From: renamable $w18 = LDURWi $fp, -132, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
    To: Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -32, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.35, implicit $nzcv, debug-location !683; fft3d.c:103:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -132, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -32, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !683; fft3d.c:103:13
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.18 ***
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !679 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:25
SU(1):   renamable $w0 = LDURWi $fp, -32, debug-location !681 :: (dereferenceable load 4 from %ir.n.addr); fft3d.c:103:29
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !683; fft3d.c:103:13

Fixup kills for %bb.18
Fixup kills for %bb.19
********** MI Scheduling **********
Swarztrauber:%bb.20 for.cond121
  From: renamable $w18 = LDURWi $fp, -64, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
    To: Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.22, implicit $nzcv, debug-location !692; fft3d.c:104:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -64, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -28, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !692; fft3d.c:104:17
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.20 ***
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !688 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:29
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !690 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:104:33
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !692; fft3d.c:104:17

Fixup kills for %bb.20
********** MI Scheduling **********
Swarztrauber:%bb.21 for.body123
  From: renamable $x18 = LDURSWi $fp, -64, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
    To: B %bb.20
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $x18 = LDURSWi $fp, -64, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$x18
    SU(11): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
SU(1):   renamable $x0 = LDURSWi $fp, -132, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x0
    SU(4): Data Latency=4 Reg=$x0
    SU(8): Ord  Latency=0 Memory
SU(2):   renamable $x1 = LDURXi $fp, -56, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 11
  Successors:
    SU(7): Data Latency=4 Reg=$x1
    SU(8): Ord  Latency=0 Memory
SU(3):   renamable $x18 = UBFMXri renamable $x18, 60, 59, debug-location !693; fft3d.c:105:21
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$x18
  Successors:
    SU(9): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x18
    SU(5): Data Latency=1 Reg=$x18
SU(4):   renamable $x2 = MADDXrrr renamable $x0, renamable $x17, renamable $x16, debug-location !698; fft3d.c:105:31
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 11
  Predecessors:
    SU(1): Data Latency=4 Reg=$x0
  Successors:
    SU(5): Data Latency=1 Reg=$x2
    SU(6): Anti Latency=0
SU(5):   renamable $q0 = LDRQroX renamable $x2, renamable $x18, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x2
    SU(3): Data Latency=1 Reg=$x18
  Successors:
    SU(8): Data Latency=4 Reg=$q0
    SU(9): Anti Latency=0
    SU(8): Ord  Latency=0 Memory
SU(6):   renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !693; fft3d.c:105:21
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$x0
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x0
SU(7):   renamable $x0 = ADDXrs renamable $x1, renamable $x0, 4, debug-location !693; fft3d.c:105:21
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 7
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x0
    SU(2): Data Latency=4 Reg=$x1
  Successors:
    SU(8): Data Latency=1 Reg=$x0
SU(8):   STRQroX renamable $q0, renamable $x0, renamable $x18, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  # preds left       : 7
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 6
  Predecessors:
    SU(7): Data Latency=1 Reg=$x0
    SU(5): Data Latency=4 Reg=$q0
    SU(5): Ord  Latency=0 Memory
    SU(3): Data Latency=1 Reg=$x18
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(9): Anti Latency=0
    SU(11): Ord  Latency=0 Memory
    SU(9): Ord  Latency=1 Memory
SU(9):   renamable $w18 = LDURWi $fp, -64, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 10
  Height             : 5
  Predecessors:
    SU(8): Anti Latency=0
    SU(8): Ord  Latency=1 Memory
    SU(5): Anti Latency=0
    SU(3): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=4 Reg=$w18
    SU(11): Ord  Latency=0 Memory
SU(10):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !700; fft3d.c:104:40
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 14
  Height             : 1
  Predecessors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=4 Reg=$w18
  Successors:
    SU(11): Data Latency=1 Reg=$w18
SU(11):   STURWi renamable $w18, $fp, -64, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=$w18
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 15
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 15
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x18 = LDURSWi $fp, -64, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
  Ready @0c
  TopQ.A BotLatency SU(0) 15c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 15
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  15 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $x0 = LDURSWi $fp, -132, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
  Ready @1c
  TopQ.A BotLatency SU(1) 15c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x1 = LDURXi $fp, -56, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x18 = UBFMXri renamable $x18, 60, 59, debug-location !693; fft3d.c:105:21
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x2 = MADDXrrr renamable $x0, renamable $x17, renamable $x16, debug-location !698; fft3d.c:105:31
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 6c > CritPath 15
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) renamable $q0 = LDRQroX renamable $x2, renamable $x18, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
  Ready @6c
  TopQ.A TopLatency SU(5) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !693; fft3d.c:105:21
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $x0 = ADDXrs renamable $x1, renamable $x0, 4, debug-location !693; fft3d.c:105:21
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 10 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STRQroX renamable $q0, renamable $x0, renamable $x18, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
  Ready @10c
  TopQ.A TopLatency SU(8) 9c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) renamable $w18 = LDURWi $fp, -64, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
  Ready @11c
  TopQ.A TopLatency SU(9) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 15 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !700; fft3d.c:104:40
  Ready @15c
  TopQ.A TopLatency SU(10) 14c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 11
  Executed: 16c
  Critical: 11c, 11 MOps
  ExpectedLatency: 14c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w18, $fp, -64, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40
  Ready @16c
  TopQ.A TopLatency SU(11) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 12
  Executed: 17c
  Critical: 12c, 12 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.21 ***
SU(0):   renamable $x18 = LDURSWi $fp, -64, debug-location !696 :: (dereferenceable load 4 from %ir.j); fft3d.c:105:26
SU(1):   renamable $x0 = LDURSWi $fp, -132, debug-location !695 :: (dereferenceable load 4 from %ir.k); fft3d.c:105:23
SU(2):   renamable $x1 = LDURXi $fp, -56, debug-location !693 :: (dereferenceable load 8 from %ir.x); fft3d.c:105:21
SU(3):   renamable $x18 = UBFMXri renamable $x18, 60, 59, debug-location !693; fft3d.c:105:21
SU(4):   renamable $x2 = MADDXrrr renamable $x0, renamable $x17, renamable $x16, debug-location !698; fft3d.c:105:31
SU(5):   renamable $q0 = LDRQroX renamable $x2, renamable $x18, 0, 0, debug-location !698 :: (load 16 from %ir.113, align 8); fft3d.c:105:31
SU(6):   renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !693; fft3d.c:105:21
SU(7):   renamable $x0 = ADDXrs renamable $x1, renamable $x0, 4, debug-location !693; fft3d.c:105:21
SU(8):   STRQroX renamable $q0, renamable $x0, renamable $x18, 0, 0, debug-location !698 :: (store 16 into %ir.112, align 8); fft3d.c:105:31
SU(9):   renamable $w18 = LDURWi $fp, -64, debug-location !700 :: (dereferenceable load 4 from %ir.j); fft3d.c:104:40
SU(10):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !700; fft3d.c:104:40
SU(11):   STURWi renamable $w18, $fp, -64, debug-location !700 :: (store 4 into %ir.j); fft3d.c:104:40

Fixup kills for %bb.21
********** MI Scheduling **********
Swarztrauber:%bb.22 for.inc135
  From: renamable $w18 = LDURWi $fp, -132, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
    To: B %bb.18
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !704; fft3d.c:103:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.18
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -132, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !704; fft3d.c:103:33
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -132, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.22 ***
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !704 :: (dereferenceable load 4 from %ir.k); fft3d.c:103:33
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !704; fft3d.c:103:33
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !704 :: (store 4 into %ir.k); fft3d.c:103:33

Fixup kills for %bb.22
********** MI Scheduling **********
Swarztrauber:%bb.23 if.else138
  From: renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !708 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
    To: End RegionInstrs: 10
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !708 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 7
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
    SU(1): Data Latency=4 Reg=$w18
    SU(5): Data Latency=4 Reg=$w0
    SU(4): Data Latency=4 Reg=$w0
    SU(3): Ord  Latency=0 Memory
    SU(7): Ord  Latency=0 Memory
SU(1):   STURWi renamable $w18, $fp, -148, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Anti Latency=0
SU(2):   renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !712; fft3d.c:111:20
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(5): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
SU(3):   STURWi renamable $w18, $fp, -144, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(5): Anti Latency=0
SU(4):   dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 3
  Predecessors:
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(5): Data Latency=1 Reg=$nzcv
SU(5):   renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 2
  Predecessors:
    SU(4): Data Latency=1 Reg=$nzcv
    SU(3): Anti Latency=0
    SU(2): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w0
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$w18
SU(6):   renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !715; fft3d.c:112:21
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 1
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w18
  Successors:
    SU(8): Data Latency=1 Reg=$w18
    SU(7): Data Latency=1 Reg=$w18
SU(7):   STURWi renamable $w18, $fp, -140, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
SU(8):   STURWi renamable $w18, $fp, -152, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=$w18
SU(9):   STURWi $wzr, $fp, -60, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 7
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 9 
  TopQ.A RemainingLatency 0 + 0c > CritPath 7
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !708 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
  Ready @0c
  TopQ.A BotLatency SU(0) 7c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 1 4 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STURWi $wzr, $fp, -60, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 4 
  TopQ.A RemainingLatency 0 + 4c > CritPath 7
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STURWi renamable $w18, $fp, -148, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 
  TopQ.A RemainingLatency 0 + 5c > CritPath 7
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !712; fft3d.c:111:20
  Ready @5c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 6c > CritPath 7
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
  Ready @6c
  TopQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STURWi renamable $w18, $fp, -144, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
  Ready @7c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
  Ready @8c
  TopQ.A BotLatency SU(5) 2c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !715; fft3d.c:112:21
  Ready @9c
  TopQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 7 
  TopQ.A RemainingLatency 0 + 10c > CritPath 7
  Cand SU(8) ORDER                              
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) STURWi renamable $w18, $fp, -140, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
  Ready @10c
  TopQ.A TopLatency SU(7) 7c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 9
  Executed: 11c
  Critical: 9c, 9 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) STURWi renamable $w18, $fp, -152, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 10
  Executed: 12c
  Critical: 10c, 10 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.23 ***
SU(0):   renamable $w18, renamable $w0 = LDPWi $fp, -36, debug-location !708 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.li); fft3d.c:110:18
SU(9):   STURWi $wzr, $fp, -60, debug-location !719 :: (store 4 into %ir.i); fft3d.c:115:20
SU(1):   STURWi renamable $w18, $fp, -148, debug-location !710 :: (store 4 into %ir.lk); fft3d.c:110:16
SU(2):   renamable $w18 = UBFMWri renamable $w18, 31, 30, debug-location !712; fft3d.c:111:20
SU(4):   dead $wzr = SUBSWri renamable $w0, 0, 0, implicit-def $nzcv, debug-location !715; fft3d.c:112:21
SU(3):   STURWi renamable $w18, $fp, -144, debug-location !713 :: (store 4 into %ir.lj); fft3d.c:111:16
SU(5):   renamable $w18 = CSINCWr renamable $w0, renamable $w0, 10, implicit $nzcv, debug-location !715; fft3d.c:112:21
SU(6):   renamable $w18 = SBFMWri renamable $w18, 1, 31, debug-location !715; fft3d.c:112:21
SU(7):   STURWi renamable $w18, $fp, -140, debug-location !716 :: (store 4 into %ir.li); fft3d.c:112:16
SU(8):   STURWi renamable $w18, $fp, -152, debug-location !718 :: (store 4 into %ir.ku); fft3d.c:113:16

Fixup kills for %bb.23
********** MI Scheduling **********
Swarztrauber:%bb.24 for.cond141
  From: renamable $w18 = LDURWi $fp, -140, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
    To: Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -140, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !725; fft3d.c:115:33
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(3): Data Latency=1 Reg=$w18
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.35, implicit $nzcv, debug-location !727; fft3d.c:115:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -140, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !725; fft3d.c:115:33
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !727; fft3d.c:115:13
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.24 ***
SU(0):   renamable $w18 = LDURWi $fp, -140, debug-location !724 :: (dereferenceable load 4 from %ir.li); fft3d.c:115:30
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !722 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:25
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !725; fft3d.c:115:33
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !727; fft3d.c:115:13

Fixup kills for %bb.24
********** MI Scheduling **********
Swarztrauber:%bb.25 for.body144
  From: renamable $w18 = LDURWi $fp, -20, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
    To: Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21
 RegionInstrs: 12
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -20, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 9
  Successors:
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=4 Reg=$w0
    SU(5): Data Latency=4 Reg=$w0
SU(2):   renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !738 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:118:27
  # preds left       : 0
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(10): Data Latency=4 Reg=$w2
    SU(6): Data Latency=4 Reg=$w2
    SU(5): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w1
SU(3):   dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
    SU(4): Anti Latency=0
SU(4):   renamable $w18 = LDURWi $fp, -136, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 4
  Height             : 5
  Predecessors:
    SU(3): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$w18
SU(5):   renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !739; fft3d.c:118:25
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w1
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    SU(10): Data Latency=1 Reg=$w1
    SU(9): Data Latency=1 Reg=$w1
    SU(6): Anti Latency=0
SU(6):   renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !731; fft3d.c:116:25
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(5): Anti Latency=0
    SU(2): Data Latency=4 Reg=$w2
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    SU(10): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w0
    SU(7): Data Latency=1 Reg=$w0
SU(7):   STURWi renamable $w0, $fp, -156, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w0
  Successors:
    SU(10): Anti Latency=0
SU(8):   $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !735; fft3d.c:117:27
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(6): Data Latency=1 Reg=$w0
    SU(4): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w18
  Successors:
    SU(9): Data Latency=1 Reg=$w18
    SU(10): Anti Latency=0
SU(9):   STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !740 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:118:21
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$w18
    SU(5): Data Latency=1 Reg=$w1
SU(10):   $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !743; fft3d.c:119:27
  # preds left       : 5
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 1
  Predecessors:
    SU(8): Anti Latency=0
    SU(7): Anti Latency=0
    SU(6): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w1
    SU(2): Data Latency=4 Reg=$w2
  Successors:
    SU(11): Data Latency=1 Reg=$w0
SU(11):   STURWi renamable $w0, $fp, -168, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=$w0
ExitSU:   Bcc 11, %bb.27, implicit $nzcv, debug-location !748; fft3d.c:121:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 9
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 9
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -20, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
  Ready @0c
  TopQ.A BotLatency SU(0) 9c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 9
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !738 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:118:27
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 5 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $w18 = LDURWi $fp, -136, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
  Ready @5c
  TopQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !739; fft3d.c:118:25
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !731; fft3d.c:116:25
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) STURWi renamable $w0, $fp, -156, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !735; fft3d.c:117:27
  Ready @9c
  TopQ.A TopLatency SU(8) 8c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 10 
  TopQ.A RemainingLatency 0 + 10c > CritPath 9
  Cand SU(9) ORDER                              
  Cand SU(10) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(10) $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !743; fft3d.c:119:27
  Ready @10c
  TopQ.A BotLatency SU(10) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 9
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !740 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:118:21
  Ready @11c
  TopQ.A TopLatency SU(9) 9c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STURWi renamable $w0, $fp, -168, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.25 ***
SU(0):   renamable $w18 = LDURWi $fp, -20, debug-location !745 :: (dereferenceable load 4 from %ir.is.addr); fft3d.c:121:21
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !728 :: (dereferenceable load 4 from %ir.i); fft3d.c:116:23
SU(2):   renamable $w2, renamable $w1 = LDPWi $fp, -37, debug-location !738 :: (dereferenceable load 4 from %ir.lj), (dereferenceable load 4 from %ir.lk); fft3d.c:118:27
SU(3):   dead $wzr = SUBSWri renamable $w18, 1, 0, implicit-def $nzcv, debug-location !748; fft3d.c:121:21
SU(4):   renamable $w18 = LDURWi $fp, -136, debug-location !734 :: (dereferenceable load 4 from %ir.n1); fft3d.c:117:29
SU(5):   renamable $w1 = nsw MADDWrrr renamable $w0, renamable $w1, $wzr, debug-location !739; fft3d.c:118:25
SU(6):   renamable $w0 = nsw MADDWrrr renamable $w0, renamable $w2, $wzr, debug-location !731; fft3d.c:116:25
SU(7):   STURWi renamable $w0, $fp, -156, debug-location !732 :: (store 4 into %ir.i11); fft3d.c:116:21
SU(8):   $w18 = ADDWrs renamable $w0, renamable $w18, 0, debug-location !735; fft3d.c:117:27
SU(10):   $w0 = ADDWrs renamable $w1, renamable $w2, 0, debug-location !743; fft3d.c:119:27
SU(9):   STPWi renamable $w1, renamable $w18, $fp, -41, debug-location !740 :: (store 4 into %ir.i21), (store 4 into %ir.i12); fft3d.c:118:21
SU(11):   STURWi renamable $w0, $fp, -168, debug-location !744 :: (store 4 into %ir.i22); fft3d.c:119:21

Fixup kills for %bb.25
********** MI Scheduling **********
Swarztrauber:%bb.26 if.then150
  From: renamable $w18 = LDURWi $fp, -152, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
    To: B %bb.28
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(4): Data Latency=4 Reg=$x1
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !753; fft3d.c:122:38
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w18
    SU(4): Anti Latency=0
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !749; fft3d.c:122:26
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x1
    SU(0): Out  Latency=1
ExitSU:   B %bb.28
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -152, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x1 = LDRXui $fp, 2, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !753; fft3d.c:122:38
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !749; fft3d.c:122:26
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.26 ***
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !751 :: (dereferenceable load 4 from %ir.ku); fft3d.c:122:35
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !752 :: (dereferenceable load 4 from %ir.i); fft3d.c:122:40
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !749 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:122:26
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !753; fft3d.c:122:38
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !749; fft3d.c:122:26

Fixup kills for %bb.26
********** MI Scheduling **********
Swarztrauber:%bb.27 if.else154
  From: renamable $w18 = LDURWi $fp, -152, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
    To: End RegionInstrs: 11
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Out  Latency=1
    SU(4): Out  Latency=1
    SU(3): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 16
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 15
  Successors:
    SU(4): Data Latency=4 Reg=$x1
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !755; fft3d.c:125:26
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 12
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w18
    SU(4): Anti Latency=0
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !755; fft3d.c:125:26
  # preds left       : 5
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 11
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$w18
    SU(3): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x1
    SU(0): Out  Latency=1
  Successors:
    SU(10): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x18
    SU(5): Data Latency=1 Reg=$x18
SU(5):   renamable $d0 = LDRDui renamable $x18, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 10
  Predecessors:
    SU(4): Data Latency=1 Reg=$x18
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
SU(6):   STRDui renamable $d0, $sp, 13, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 6
  Predecessors:
    SU(5): Data Latency=4 Reg=$d0
    SU(5): Ord  Latency=0 Memory
  Successors:
    SU(7): Anti Latency=0
    SU(7): Ord  Latency=1 Memory
SU(7):   renamable $d0 = LDRDui renamable $x18, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 5
  Predecessors:
    SU(6): Anti Latency=0
    SU(6): Ord  Latency=1 Memory
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x18
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$d0
    SU(10): Anti Latency=0
    SU(9): Ord  Latency=0 Memory
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !755; fft3d.c:125:26
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 1
  Predecessors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=4 Reg=$d0
  Successors:
    SU(9): Data Latency=1 Reg=$d0
SU(9):   STRDui renamable $d0, $sp, 14, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=$d0
    SU(7): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(10):   $x18 = ADDXri $sp, 104, 0
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 1
  Predecessors:
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 16
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 16
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -152, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
  Ready @0c
  TopQ.A BotLatency SU(0) 16c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 16
  Cand SU(2) ORDER                              
  Cand SU(1) TOP-PATH                  16 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w0 = LDURWi $fp, -60, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
  Ready @1c
  TopQ.A BotLatency SU(1) 16c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x1 = LDRXui $fp, 2, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !755; fft3d.c:125:26
  Ready @5c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !755; fft3d.c:125:26
  Ready @6c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $d0 = LDRDui renamable $x18, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 11 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STRDui renamable $d0, $sp, 13, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
  Ready @11c
  TopQ.A TopLatency SU(6) 10c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 7
  Executed: 12c
  Critical: 7c, 7 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) renamable $d0 = LDRDui renamable $x18, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
  Ready @12c
  TopQ.A TopLatency SU(7) 11c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 8
  Executed: 13c
  Critical: 8c, 8 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) $x18 = ADDXri $sp, 104, 0
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 9
  Executed: 14c
  Critical: 9c, 9 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 16 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 8 
Pick Top ONLY1     
Scheduling SU(8) renamable $d0 = FNEGDr renamable $d0, debug-location !755; fft3d.c:125:26
  Ready @16c
  TopQ.A TopLatency SU(8) 15c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 10
  Executed: 17c
  Critical: 10c, 10 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 9 
Pick Top ONLY1     
Scheduling SU(9) STRDui renamable $d0, $sp, 14, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26
  Ready @17c
  TopQ.A TopLatency SU(9) 16c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 11
  Executed: 18c
  Critical: 11c, 11 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.27 ***
SU(0):   renamable $w18 = LDURWi $fp, -152, debug-location !755 :: (dereferenceable load 4 from %ir.ku); fft3d.c:125:26
SU(1):   renamable $w0 = LDURWi $fp, -60, debug-location !755 :: (dereferenceable load 4 from %ir.i); fft3d.c:125:26
SU(2):   renamable $x1 = LDRXui $fp, 2, debug-location !755 :: (dereferenceable load 8 from %ir.exponent.addr, align 16); fft3d.c:125:26
SU(3):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !755; fft3d.c:125:26
SU(4):   renamable $x18 = ADDXrx renamable $x1, renamable $w18, 52, debug-location !755; fft3d.c:125:26
SU(5):   renamable $d0 = LDRDui renamable $x18, 0, debug-location !755 :: (load 8 from %ir.real16032); fft3d.c:125:26
SU(6):   STRDui renamable $d0, $sp, 13, debug-location !755 :: (store 8 into %ir.real15630); fft3d.c:125:26
SU(7):   renamable $d0 = LDRDui renamable $x18, 1, debug-location !755 :: (load 8 from %ir.imag165); fft3d.c:125:26
SU(10):   $x18 = ADDXri $sp, 104, 0
SU(8):   renamable $d0 = FNEGDr renamable $d0, debug-location !755; fft3d.c:125:26
SU(9):   STRDui renamable $d0, $sp, 14, debug-location !755 :: (store 8 into %ir.imag161); fft3d.c:125:26

Fixup kills for %bb.27
********** MI Scheduling **********
Swarztrauber:%bb.28 if.end167
  From: renamable $q0 = LDRQui killed renamable $x18, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
    To: End RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $q0 = LDRQui renamable $x18, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(2): Data Latency=4 Reg=$q0
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
SU(1):   STURWi $wzr, $fp, -132, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Ord  Latency=0 Memory
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(0): Data Latency=4 Reg=$q0
    SU(0): Ord  Latency=0 Memory
Critical Path: (PGS-RR) 4
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $q0 = LDRQui renamable $x18, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
  Ready @0c
  TopQ.A BotLatency SU(0) 4c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi $wzr, $fp, -132, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRQui renamable $q0, renamable $x8, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.28 ***
SU(0):   renamable $q0 = LDRQui renamable $x18, 0, debug-location !757 :: (load 16 from %ir.143, align 8); fft3d.c:0
SU(1):   STURWi $wzr, $fp, -132, debug-location !758 :: (store 4 into %ir.k); fft3d.c:127:24
SU(2):   STRQui renamable $q0, renamable $x8, 2, debug-location !757 :: (store 16 into %ir.142); fft3d.c:0

Fixup kills for %bb.28
********** MI Scheduling **********
Swarztrauber:%bb.29 for.cond168
  From: renamable $w18 = LDURWi $fp, -148, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
    To: Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -148, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w0
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !764; fft3d.c:127:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 2
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(3): Data Latency=1 Reg=$w18
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=1 Reg=$w18
    SU(1): Data Latency=4 Reg=$w0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 12, %bb.34, implicit $nzcv, debug-location !766; fft3d.c:127:17
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 6
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 6
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w18 = LDURWi $fp, -148, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 2 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -132, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !764; fft3d.c:127:37
  Ready @4c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !766; fft3d.c:127:17
  Ready @5c
  TopQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.29 ***
SU(0):   renamable $w18 = LDURWi $fp, -148, debug-location !763 :: (dereferenceable load 4 from %ir.lk); fft3d.c:127:34
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !761 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:29
SU(2):   renamable $w18 = SUBWri renamable $w18, 1, 0, debug-location !764; fft3d.c:127:37
SU(3):   $wzr = SUBSWrs renamable $w0, renamable $w18, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !766; fft3d.c:127:17

Fixup kills for %bb.29
Fixup kills for %bb.30
********** MI Scheduling **********
Swarztrauber:%bb.31 for.cond172
  From: renamable $w18 = LDURWi $fp, -64, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
    To: Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w18
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(2): Data Latency=4 Reg=$w0
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 10, %bb.33, implicit $nzcv, debug-location !775; fft3d.c:128:21
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -64, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w0 = LDURWi $fp, -28, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !775; fft3d.c:128:21
  Ready @5c
  TopQ.A TopLatency SU(2) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.31 ***
SU(0):   renamable $w18 = LDURWi $fp, -64, debug-location !771 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:33
SU(1):   renamable $w0 = LDURWi $fp, -28, debug-location !773 :: (dereferenceable load 4 from %ir.vlen.addr); fft3d.c:128:37
SU(2):   $wzr = SUBSWrs renamable $w18, renamable $w0, 0, implicit-def $nzcv, implicit-def $nzcv, debug-location !775; fft3d.c:128:21

Fixup kills for %bb.31
********** MI Scheduling **********
Swarztrauber:%bb.32 for.body174
  From: renamable $w1, renamable $w18 = LDPWi $fp, -40, debug-location !776 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
    To: B %bb.31
 RegionInstrs: 58
ScheduleDAGMI::schedule starting
SU(0):   renamable $w1, renamable $w18 = LDPWi $fp, -40, debug-location !776 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  # preds left       : 0
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 44
  Successors:
    SU(6): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w1
    SU(4): Out  Latency=1
    SU(7): Out  Latency=1
    SU(4): Data Latency=4 Reg=$w18
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 44
  Successors:
    SU(5): Out  Latency=1
    SU(8): Out  Latency=1
    SU(5): Data Latency=4 Reg=$w0
    SU(4): Data Latency=4 Reg=$w0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(2):   renamable $x2 = LDURSWi $fp, -64, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 43
  Successors:
    SU(44): Out  Latency=1
    SU(6): Data Latency=4 Reg=$x2
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(3):   renamable $x3 = LDURSWi $fp, -132, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 30
  Successors:
    SU(20): Data Latency=4 Reg=$x3
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(4):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !779; fft3d.c:129:39
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 40
  Predecessors:
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$w18
    SU(7): Anti Latency=0
    SU(5): Anti Latency=0
    SU(8): Anti Latency=0
SU(5):   $w0 = ADDWrs renamable $w1, renamable $w0, 0, debug-location !784; fft3d.c:130:39
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 40
  Predecessors:
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w0
    SU(0): Data Latency=4 Reg=$w1
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$w0
    SU(6): Anti Latency=0
    SU(8): Anti Latency=0
SU(6):   renamable $x1 = UBFMXri renamable $x2, 60, 59, debug-location !787; fft3d.c:131:25
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 39
  Predecessors:
    SU(5): Anti Latency=0
    SU(2): Data Latency=4 Reg=$x2
    SU(0): Out  Latency=1
  Successors:
    SU(43): Out  Latency=1
    SU(23): Data Latency=1 Reg=$x1
    SU(10): Data Latency=1 Reg=$x1
    SU(9): Data Latency=1 Reg=$x1
    SU(44): Anti Latency=0
SU(7):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !780; fft3d.c:129:31
  # preds left       : 4
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 39
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$w18
    SU(4): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(14): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x18
SU(8):   renamable $x0 = SMADDLrrr renamable $w0, renamable $w17, renamable $x16, debug-location !785; fft3d.c:130:31
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 39
  Predecessors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$w0
    SU(5): Anti Latency=0
    SU(4): Anti Latency=0
    SU(1): Out  Latency=1
  Successors:
    SU(15): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x0
SU(9):   renamable $q0 = LDRQroX renamable $x0, renamable $x1, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 38
  Predecessors:
    SU(8): Data Latency=1 Reg=$x0
    SU(6): Data Latency=1 Reg=$x1
  Successors:
    SU(12): Out  Latency=1
    SU(19): Out  Latency=1
    SU(11): Data Latency=4 Reg=$q0
    SU(15): Anti Latency=0
    SU(43): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(10):   renamable $q1 = LDRQroX renamable $x18, renamable $x1, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  # preds left       : 2
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 38
  Predecessors:
    SU(7): Data Latency=1 Reg=$x18
    SU(6): Data Latency=1 Reg=$x1
  Successors:
    SU(12): Out  Latency=1
    SU(11): Data Latency=4 Reg=$q1
    SU(14): Anti Latency=0
    SU(43): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(11):   STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !785 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  # preds left       : 2
  # succs left       : 12
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 34
  Predecessors:
    SU(10): Data Latency=4 Reg=$q1
    SU(9): Data Latency=4 Reg=$q0
  Successors:
    SU(12): Anti Latency=0
    SU(19): Anti Latency=0
    SU(12): Anti Latency=0
    SU(28): Ord  Latency=1 Memory
    SU(27): Ord  Latency=1 Memory
    SU(25): Ord  Latency=1 Memory
    SU(13): Ord  Latency=1 Memory
    SU(26): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(12): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(12):   renamable $d1, renamable $d0 = LDPDi $fp, -14, debug-location !792 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  # preds left       : 5
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 33
  Predecessors:
    SU(11): Anti Latency=0
    SU(11): Anti Latency=0
    SU(11): Ord  Latency=1 Memory
    SU(10): Out  Latency=1
    SU(9): Out  Latency=1
  Successors:
    SU(16): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d1
    SU(17): Out  Latency=1
    SU(19): Out  Latency=1
    SU(17): Data Latency=4 Reg=$d0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(13):   renamable $d2, renamable $d3 = LDPDi $fp, -16, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  # preds left       : 1
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 4
  Depth              : 11
  Height             : 33
  Predecessors:
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(25): Out  Latency=1
    SU(16): Data Latency=4 Reg=$d2
    SU(26): Out  Latency=1
    SU(17): Data Latency=4 Reg=$d3
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(14):   renamable $x18 = LDURXi $fp, -56, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 28
  Predecessors:
    SU(10): Anti Latency=0
    SU(7): Out  Latency=1
  Successors:
    SU(22): Out  Latency=1
    SU(22): Data Latency=4 Reg=$x18
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(15):   renamable $x0 = LDURSWi $fp, -164, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 30
  Predecessors:
    SU(9): Anti Latency=0
    SU(8): Out  Latency=1
  Successors:
    SU(20): Out  Latency=1
    SU(20): Data Latency=4 Reg=$x0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(16):   renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !792; fft3d.c:131:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 29
  Predecessors:
    SU(13): Data Latency=4 Reg=$d2
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$d1
  Successors:
    SU(25): Out  Latency=1
    SU(18): Data Latency=1 Reg=$d1
    SU(25): Anti Latency=0
SU(17):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !792; fft3d.c:131:41
  # preds left       : 3
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 15
  Height             : 29
  Predecessors:
    SU(13): Data Latency=4 Reg=$d3
    SU(12): Out  Latency=1
    SU(12): Data Latency=4 Reg=$d0
  Successors:
    SU(19): Out  Latency=1
    SU(18): Data Latency=1 Reg=$d0
    SU(19): Anti Latency=0
    SU(26): Anti Latency=0
SU(18):   STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !792 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  # preds left       : 2
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 16
  Height             : 28
  Predecessors:
    SU(17): Data Latency=1 Reg=$d0
    SU(16): Data Latency=1 Reg=$d1
  Successors:
    SU(25): Anti Latency=0
    SU(19): Anti Latency=0
    SU(19): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(19):   renamable $q0 = LDURQi $sp, 88, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  # preds left       : 7
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 17
  Height             : 27
  Predecessors:
    SU(18): Anti Latency=0
    SU(18): Ord  Latency=1 Memory
    SU(17): Out  Latency=1
    SU(17): Anti Latency=0
    SU(12): Out  Latency=1
    SU(11): Anti Latency=0
    SU(9): Out  Latency=1
  Successors:
    SU(24): Out  Latency=1
    SU(51): Out  Latency=1
    SU(23): Data Latency=4 Reg=$q0
    SU(54): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
SU(20):   $x0 = ADDXrs renamable $x0, renamable $x3, 0, debug-location !790; fft3d.c:131:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 26
  Predecessors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=4 Reg=$x0
    SU(3): Data Latency=4 Reg=$x3
  Successors:
    SU(21): Out  Latency=1
    SU(21): Data Latency=1 Reg=$x0
SU(21):   renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !787; fft3d.c:131:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 25
  Predecessors:
    SU(20): Out  Latency=1
    SU(20): Data Latency=1 Reg=$x0
  Successors:
    SU(41): Out  Latency=1
    SU(22): Data Latency=1 Reg=$x0
SU(22):   renamable $x18 = ADDXrs renamable $x18, renamable $x0, 4, debug-location !787; fft3d.c:131:25
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 24
  Predecessors:
    SU(21): Data Latency=1 Reg=$x0
    SU(14): Out  Latency=1
    SU(14): Data Latency=4 Reg=$x18
  Successors:
    SU(40): Out  Latency=1
    SU(23): Data Latency=1 Reg=$x18
    SU(41): Anti Latency=0
SU(23):   STRQroX renamable $q0, renamable $x18, renamable $x1, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  # preds left       : 16
  # succs left       : 24
  # rdefs left       : 0
  Latency            : 1
  Depth              : 21
  Height             : 23
  Predecessors:
    SU(19): Data Latency=4 Reg=$q0
    SU(22): Data Latency=1 Reg=$x18
    SU(19): Ord  Latency=0 Memory
    SU(18): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(6): Data Latency=1 Reg=$x1
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(24): Anti Latency=0
    SU(51): Anti Latency=0
    SU(40): Anti Latency=0
    SU(43): Anti Latency=0
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(53): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(55): Ord  Latency=1 Memory
    SU(44): Ord  Latency=1 Memory
    SU(51): Ord  Latency=1 Memory
    SU(43): Ord  Latency=1 Memory
    SU(41): Ord  Latency=1 Memory
    SU(40): Ord  Latency=1 Memory
    SU(32): Ord  Latency=1 Memory
    SU(31): Ord  Latency=1 Memory
    SU(24): Ord  Latency=1 Memory
    SU(28): Ord  Latency=1 Memory
    SU(27): Ord  Latency=1 Memory
    SU(25): Ord  Latency=1 Memory
    SU(26): Ord  Latency=1 Memory
SU(24):   renamable $d6, renamable $d0 = LDPDi $fp, -13, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 21
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(32): Out  Latency=1
    SU(30): Data Latency=4 Reg=$d6
    SU(37): Out  Latency=1
    SU(51): Out  Latency=1
    SU(37): Data Latency=4 Reg=$d0
    SU(34): Data Latency=4 Reg=$d0
    SU(54): Ord  Latency=0 Memory
SU(25):   renamable $d1, renamable $d2 = LDPDi $fp, -15, debug-location !798 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  # preds left       : 6
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 22
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(18): Anti Latency=0
    SU(16): Out  Latency=1
    SU(16): Anti Latency=0
    SU(13): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(30): Out  Latency=1
    SU(30): Data Latency=4 Reg=$d1
    SU(29): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d2
    SU(54): Ord  Latency=0 Memory
SU(26):   renamable $d3, renamable $d7 = LDPDi $fp, -14, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(17): Anti Latency=0
    SU(13): Out  Latency=1
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(33): Out  Latency=1
    SU(33): Data Latency=4 Reg=$d3
    SU(52): Data Latency=4 Reg=$d7
    SU(54): Ord  Latency=0 Memory
SU(27):   renamable $d4, renamable $d8 = LDPDi $fp, -16, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 22
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(31): Out  Latency=1
    SU(29): Data Latency=4 Reg=$d4
    SU(52): Data Latency=4 Reg=$d8
    SU(54): Ord  Latency=0 Memory
SU(28):   renamable $d5 = LDURDi $fp, -128, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 18
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(11): Ord  Latency=1 Memory
  Successors:
    SU(34): Out  Latency=1
    SU(33): Data Latency=4 Reg=$d5
    SU(54): Ord  Latency=0 Memory
SU(29):   renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(27): Data Latency=4 Reg=$d4
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d2
  Successors:
    SU(50): Data Latency=1 Reg=$d2
    SU(48): Data Latency=1 Reg=$d2
    SU(47): Data Latency=1 Reg=$d2
    SU(34): Data Latency=1 Reg=$d2
    SU(31): Anti Latency=0
SU(30):   renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 7
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 17
  Predecessors:
    SU(25): Out  Latency=1
    SU(25): Data Latency=4 Reg=$d1
    SU(24): Data Latency=4 Reg=$d6
  Successors:
    SU(52): Out  Latency=1
    SU(50): Data Latency=1 Reg=$d1
    SU(48): Data Latency=1 Reg=$d1
    SU(47): Data Latency=1 Reg=$d1
    SU(37): Data Latency=1 Reg=$d1
    SU(35): Data Latency=1 Reg=$d1
    SU(32): Anti Latency=0
SU(31):   renamable $d4 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 18
  Predecessors:
    SU(29): Anti Latency=0
    SU(27): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=4 Reg=$d4
    SU(54): Ord  Latency=0 Memory
SU(32):   renamable $d6 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 26
  Height             : 17
  Predecessors:
    SU(30): Anti Latency=0
    SU(24): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(38): Data Latency=4 Reg=$d6
    SU(54): Ord  Latency=0 Memory
SU(33):   renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 14
  Predecessors:
    SU(28): Data Latency=4 Reg=$d5
    SU(26): Out  Latency=1
    SU(26): Data Latency=4 Reg=$d3
  Successors:
    SU(53): Data Latency=1 Reg=$d3
    SU(38): Data Latency=1 Reg=$d3
    SU(34): Anti Latency=0
SU(34):   renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !798; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 14
  Predecessors:
    SU(33): Anti Latency=0
    SU(29): Data Latency=1 Reg=$d2
    SU(28): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d0
  Successors:
    SU(38): Out  Latency=1
    SU(36): Data Latency=1 Reg=$d5
    SU(37): Anti Latency=0
    SU(51): Anti Latency=0
SU(35):   renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 14
  Predecessors:
    SU(31): Out  Latency=1
    SU(31): Data Latency=4 Reg=$d4
    SU(30): Data Latency=1 Reg=$d1
  Successors:
    SU(36): Out  Latency=1
    SU(36): Data Latency=1 Reg=$d4
    SU(52): Anti Latency=0
SU(36):   renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 13
  Predecessors:
    SU(35): Out  Latency=1
    SU(35): Data Latency=1 Reg=$d4
    SU(34): Data Latency=1 Reg=$d5
  Successors:
    SU(42): Data Latency=1 Reg=$d4
    SU(38): Anti Latency=0
SU(37):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !798; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 13
  Predecessors:
    SU(34): Anti Latency=0
    SU(30): Data Latency=1 Reg=$d1
    SU(24): Out  Latency=1
    SU(24): Data Latency=4 Reg=$d0
  Successors:
    SU(39): Out  Latency=1
    SU(51): Out  Latency=1
    SU(39): Data Latency=1 Reg=$d0
    SU(51): Anti Latency=0
    SU(52): Anti Latency=0
SU(38):   renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !798; fft3d.c:132:41
  # preds left       : 4
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 13
  Predecessors:
    SU(36): Anti Latency=0
    SU(34): Out  Latency=1
    SU(33): Data Latency=1 Reg=$d3
    SU(32): Data Latency=4 Reg=$d6
  Successors:
    SU(39): Data Latency=1 Reg=$d5
SU(39):   renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !798; fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 32
  Height             : 12
  Predecessors:
    SU(38): Data Latency=1 Reg=$d5
    SU(37): Out  Latency=1
    SU(37): Data Latency=1 Reg=$d0
  Successors:
    SU(51): Out  Latency=1
    SU(42): Data Latency=1 Reg=$d0
    SU(51): Anti Latency=0
SU(40):   renamable $x18 = LDURSWi $fp, -168, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(22): Out  Latency=1
  Successors:
    SU(45): Out  Latency=1
    SU(45): Data Latency=4 Reg=$x18
    SU(54): Ord  Latency=0 Memory
SU(41):   renamable $x0 = LDURSWi $fp, -132, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 13
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(22): Anti Latency=0
    SU(21): Out  Latency=1
  Successors:
    SU(45): Data Latency=4 Reg=$x0
    SU(54): Ord  Latency=0 Memory
SU(42):   STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !798 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 33
  Height             : 11
  Predecessors:
    SU(39): Data Latency=1 Reg=$d0
    SU(36): Data Latency=1 Reg=$d4
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(51): Anti Latency=0
    SU(51): Ord  Latency=1 Memory
    SU(54): Ord  Latency=0 Memory
SU(43):   renamable $x1 = LDURXi $fp, -56, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  # preds left       : 5
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 11
  Predecessors:
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(10): Anti Latency=0
    SU(9): Anti Latency=0
    SU(6): Out  Latency=1
  Successors:
    SU(49): Data Latency=4 Reg=$x1
    SU(54): Ord  Latency=0 Memory
SU(44):   renamable $x2 = LDURSWi $fp, -64, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 22
  Height             : 10
  Predecessors:
    SU(23): Ord  Latency=1 Memory
    SU(6): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(54): Data Latency=4 Reg=$x2
    SU(57): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
SU(45):   $x18 = ADDXrs renamable $x18, renamable $x0, 0, debug-location !796; fft3d.c:132:31
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 26
  Height             : 9
  Predecessors:
    SU(41): Data Latency=4 Reg=$x0
    SU(40): Out  Latency=1
    SU(40): Data Latency=4 Reg=$x18
  Successors:
    SU(46): Out  Latency=1
    SU(46): Data Latency=1 Reg=$x18
SU(46):   renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !793; fft3d.c:132:25
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 8
  Predecessors:
    SU(45): Out  Latency=1
    SU(45): Data Latency=1 Reg=$x18
  Successors:
    SU(49): Out  Latency=1
    SU(49): Data Latency=1 Reg=$x18
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !798 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(48):   STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !798 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(49):   renamable $x18 = ADDXrs renamable $x1, renamable $x18, 4, debug-location !793; fft3d.c:132:25
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 28
  Height             : 7
  Predecessors:
    SU(46): Out  Latency=1
    SU(46): Data Latency=1 Reg=$x18
    SU(43): Data Latency=4 Reg=$x1
  Successors:
    SU(55): Out  Latency=1
    SU(54): Data Latency=1 Reg=$x18
SU(50):   STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !798 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 27
  Height             : 7
  Predecessors:
    SU(30): Data Latency=1 Reg=$d1
    SU(29): Data Latency=1 Reg=$d2
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(52): Anti Latency=0
    SU(54): Ord  Latency=0 Memory
SU(51):   renamable $q0 = LDURQi $sp, 72, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  # preds left       : 11
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 34
  Height             : 10
  Predecessors:
    SU(42): Anti Latency=0
    SU(42): Ord  Latency=1 Memory
    SU(39): Out  Latency=1
    SU(39): Anti Latency=0
    SU(37): Out  Latency=1
    SU(37): Anti Latency=0
    SU(34): Anti Latency=0
    SU(24): Out  Latency=1
    SU(23): Anti Latency=0
    SU(23): Ord  Latency=1 Memory
    SU(19): Out  Latency=1
  Successors:
    SU(54): Data Latency=4 Reg=$q0
    SU(54): Ord  Latency=0 Memory
SU(52):   renamable $d1 = FSUBDrr renamable $d7, renamable $d8, debug-location !798; fft3d.c:132:41
  # preds left       : 8
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 30
  Height             : 7
  Predecessors:
    SU(50): Anti Latency=0
    SU(48): Anti Latency=0
    SU(47): Anti Latency=0
    SU(37): Anti Latency=0
    SU(35): Anti Latency=0
    SU(30): Out  Latency=1
    SU(27): Data Latency=4 Reg=$d8
    SU(26): Data Latency=4 Reg=$d7
  Successors:
    SU(53): Data Latency=1 Reg=$d1
SU(53):   STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !798 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 31
  Height             : 6
  Predecessors:
    SU(52): Data Latency=1 Reg=$d1
    SU(33): Data Latency=1 Reg=$d3
    SU(23): Ord  Latency=0 Memory
  Successors:
    SU(54): Ord  Latency=0 Memory
SU(54):   STRQroX renamable $q0, renamable $x18, renamable $x2, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  # preds left       : 34
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 38
  Height             : 6
  Predecessors:
    SU(51): Data Latency=4 Reg=$q0
    SU(53): Ord  Latency=0 Memory
    SU(51): Ord  Latency=0 Memory
    SU(50): Ord  Latency=0 Memory
    SU(49): Data Latency=1 Reg=$x18
    SU(48): Ord  Latency=0 Memory
    SU(47): Ord  Latency=0 Memory
    SU(44): Data Latency=4 Reg=$x2
    SU(44): Ord  Latency=0 Memory
    SU(43): Ord  Latency=0 Memory
    SU(42): Ord  Latency=0 Memory
    SU(41): Ord  Latency=0 Memory
    SU(40): Ord  Latency=0 Memory
    SU(32): Ord  Latency=0 Memory
    SU(31): Ord  Latency=0 Memory
    SU(28): Ord  Latency=0 Memory
    SU(27): Ord  Latency=0 Memory
    SU(26): Ord  Latency=0 Memory
    SU(25): Ord  Latency=0 Memory
    SU(24): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(19): Ord  Latency=0 Memory
    SU(18): Ord  Latency=0 Memory
    SU(15): Ord  Latency=0 Memory
    SU(14): Ord  Latency=0 Memory
    SU(13): Ord  Latency=0 Memory
    SU(12): Ord  Latency=0 Memory
    SU(11): Ord  Latency=0 Memory
    SU(10): Ord  Latency=0 Memory
    SU(9): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Ord  Latency=0 Memory
    SU(0): Ord  Latency=0 Memory
  Successors:
    SU(55): Anti Latency=0
    SU(57): Ord  Latency=0 Memory
    SU(55): Ord  Latency=1 Memory
SU(55):   renamable $w18 = LDURWi $fp, -64, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  # preds left       : 4
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 39
  Height             : 5
  Predecessors:
    SU(54): Anti Latency=0
    SU(54): Ord  Latency=1 Memory
    SU(49): Out  Latency=1
    SU(23): Ord  Latency=1 Memory
  Successors:
    SU(56): Out  Latency=1
    SU(56): Data Latency=4 Reg=$w18
    SU(57): Ord  Latency=0 Memory
SU(56):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !799; fft3d.c:128:44
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 43
  Height             : 1
  Predecessors:
    SU(55): Out  Latency=1
    SU(55): Data Latency=4 Reg=$w18
  Successors:
    SU(57): Data Latency=1 Reg=$w18
SU(57):   STURWi renamable $w18, $fp, -64, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
  # preds left       : 6
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 44
  Height             : 0
  Predecessors:
    SU(56): Data Latency=1 Reg=$w18
    SU(55): Ord  Latency=0 Memory
    SU(54): Ord  Latency=0 Memory
    SU(44): Ord  Latency=0 Memory
    SU(23): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
ExitSU:   B %bb.31
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 44
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 44
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w1, renamable $w18 = LDPWi $fp, -40, debug-location !776 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
  Ready @0c
  TopQ.A BotLatency SU(0) 44c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 44
  Cand SU(3) ORDER                              
  Cand SU(1) TOP-PATH                  44 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w0 = LDURWi $fp, -132, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
  Ready @1c
  TopQ.A BotLatency SU(1) 44c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 44
  Cand SU(3) ORDER                              
  Cand SU(2) TOP-PATH                  43 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $x2 = LDURSWi $fp, -64, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $x3 = LDURSWi $fp, -132, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !779; fft3d.c:129:39
  Ready @5c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 5 
  TopQ.A RemainingLatency 0 + 6c > CritPath 44
  Cand SU(7) ORDER                              
  Cand SU(5) TOP-PATH                  40 cycles 
Pick Top TOP-PATH  
Scheduling SU(5) $w0 = ADDWrs renamable $w1, renamable $w0, 0, debug-location !784; fft3d.c:130:39
  Ready @6c
  TopQ.A BotLatency SU(5) 40c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 6
  Executed: 7c
  Critical: 6c, 6 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 6 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 44
  Cand SU(7) ORDER                              
  Cand SU(6) ORDER                              
Pick Top ORDER     
Scheduling SU(6) renamable $x1 = UBFMXri renamable $x2, 60, 59, debug-location !787; fft3d.c:131:25
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 7
  Executed: 8c
  Critical: 7c, 7 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 8 
  TopQ.A RemainingLatency 0 + 8c > CritPath 44
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !780; fft3d.c:129:31
  Ready @8c
  TopQ.A TopLatency SU(7) 5c
  TopQ.A BotLatency SU(7) 39c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 8
  Executed: 9c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 9c > CritPath 44
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) renamable $x0 = SMADDLrrr renamable $w0, renamable $w17, renamable $x16, debug-location !785; fft3d.c:130:31
  Ready @9c
  TopQ.A BotLatency SU(8) 39c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 9
  Executed: 10c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 10c > CritPath 44
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $q0 = LDRQroX renamable $x0, renamable $x1, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
  Ready @10c
  TopQ.A TopLatency SU(9) 6c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 10
  Executed: 11c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 15 
  TopQ.A RemainingLatency 0 + 11c > CritPath 44
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) renamable $q1 = LDRQroX renamable $x18, renamable $x1, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
  Ready @11c
  TopQ.A BotLatency SU(10) 38c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 11
  Executed: 12c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 
Queue TopQ.A: 15 14 
  TopQ.A RemainingLatency 0 + 12c > CritPath 44
  Cand SU(15) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(15) renamable $x0 = LDURSWi $fp, -164, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
  Ready @12c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 12
  Executed: 13c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 11 20 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $x18 = LDURXi $fp, -56, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
  Ready @13c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 13
  Executed: 14c
  Critical: 13c, 13 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 15 TopQ.A
Queue TopQ.P: 20 
Queue TopQ.A: 11 
Pick Top ONLY1     
Scheduling SU(11) STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !785 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
  Ready @15c
  TopQ.A TopLatency SU(11) 10c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 14
  Executed: 16c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 12 20 
  TopQ.A RemainingLatency 0 + 16c > CritPath 44
  Cand SU(13) ORDER                              
  Cand SU(12) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(12) renamable $d1, renamable $d0 = LDPDi $fp, -14, debug-location !792 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
  Ready @16c
  TopQ.A TopLatency SU(12) 11c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 15
  Executed: 17c
  Critical: 15c, 15 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 20 
  TopQ.A RemainingLatency 0 + 17c > CritPath 44
  Cand SU(13) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(13) renamable $d2, renamable $d3 = LDPDi $fp, -16, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
  Ready @17c
  TopQ.A BotLatency SU(13) 33c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 16
  Executed: 18c
  Critical: 16c, 16 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 20 
Pick Top ONLY1     
Scheduling SU(20) $x0 = ADDXrs renamable $x0, renamable $x3, 0, debug-location !790; fft3d.c:131:31
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 17
  Executed: 19c
  Critical: 17c, 17 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 21 
Pick Top ONLY1     
Scheduling SU(21) renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !787; fft3d.c:131:25
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 18
  Executed: 20c
  Critical: 18c, 18 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 16 17 
Queue TopQ.A: 22 
Pick Top ONLY1     
Scheduling SU(22) renamable $x18 = ADDXrs renamable $x18, renamable $x0, 4, debug-location !787; fft3d.c:131:25
  Ready @20c
  TopQ.A TopLatency SU(22) 12c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 19
  Executed: 21c
  Critical: 19c, 19 MOps
  ExpectedLatency: 12c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 17 
  TopQ.A RemainingLatency 0 + 21c > CritPath 44
  Cand SU(16) ORDER                              
Pick Top ORDER     
Scheduling SU(16) renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !792; fft3d.c:131:41
  Ready @21c
  TopQ.A TopLatency SU(16) 15c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 20
  Executed: 22c
  Critical: 20c, 20 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 17 
Pick Top ONLY1     
Scheduling SU(17) renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !792; fft3d.c:131:41
  Ready @22c
  TopQ.A BotLatency SU(17) 29c
  *** Max MOps 1 at cycle 22
Cycle: 23 TopQ.A
TopQ.A @23c
  Retired: 21
  Executed: 23c
  Critical: 21c, 21 MOps
  ExpectedLatency: 15c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 18 
Pick Top ONLY1     
Scheduling SU(18) STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !792 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
  Ready @23c
  TopQ.A TopLatency SU(18) 16c
  *** Max MOps 1 at cycle 23
Cycle: 24 TopQ.A
TopQ.A @24c
  Retired: 22
  Executed: 24c
  Critical: 22c, 22 MOps
  ExpectedLatency: 16c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 19 
Pick Top ONLY1     
Scheduling SU(19) renamable $q0 = LDURQi $sp, 88, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
  Ready @24c
  TopQ.A TopLatency SU(19) 17c
  *** Max MOps 1 at cycle 24
Cycle: 25 TopQ.A
TopQ.A @25c
  Retired: 23
  Executed: 25c
  Critical: 23c, 23 MOps
  ExpectedLatency: 17c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 28 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 23 
Pick Top ONLY1     
Scheduling SU(23) STRQroX renamable $q0, renamable $x18, renamable $x1, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
  Ready @28c
  TopQ.A TopLatency SU(23) 21c
  *** Max MOps 1 at cycle 28
Cycle: 29 TopQ.A
TopQ.A @29c
  Retired: 24
  Executed: 29c
  Critical: 24c, 24 MOps
  ExpectedLatency: 21c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 24 28 27 25 26 
  TopQ.A RemainingLatency 0 + 29c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
  Cand SU(27) TOP-PATH                  22 cycles 
  Cand SU(25) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(25) renamable $d1, renamable $d2 = LDPDi $fp, -15, debug-location !798 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
  Ready @29c
  TopQ.A TopLatency SU(25) 22c
  *** Max MOps 1 at cycle 29
Cycle: 30 TopQ.A
TopQ.A @30c
  Retired: 25
  Executed: 30c
  Critical: 25c, 25 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 24 28 27 26 
  TopQ.A RemainingLatency 0 + 30c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
  Cand SU(27) TOP-PATH                  22 cycles 
Pick Top TOP-PATH  
Scheduling SU(27) renamable $d4, renamable $d8 = LDPDi $fp, -16, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
  Ready @30c
  TopQ.A BotLatency SU(27) 22c
  *** Max MOps 1 at cycle 30
Cycle: 31 TopQ.A
TopQ.A @31c
  Retired: 26
  Executed: 31c
  Critical: 26c, 26 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 
Queue TopQ.A: 44 43 41 40 24 28 26 
  TopQ.A RemainingLatency 0 + 31c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(24) TOP-PATH                  21 cycles 
Pick Top TOP-PATH  
Scheduling SU(24) renamable $d6, renamable $d0 = LDPDi $fp, -13, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
  Ready @31c
  *** Max MOps 1 at cycle 31
Cycle: 32 TopQ.A
TopQ.A @32c
  Retired: 27
  Executed: 32c
  Critical: 27c, 27 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 30 
Queue TopQ.A: 44 43 41 40 26 28 
  TopQ.A RemainingLatency 0 + 32c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(26) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(26) renamable $d3, renamable $d7 = LDPDi $fp, -14, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
  Ready @32c
  *** Max MOps 1 at cycle 32
Cycle: 33 TopQ.A
TopQ.A @33c
  Retired: 28
  Executed: 33c
  Critical: 28c, 28 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 29 30 
Queue TopQ.A: 44 43 41 40 28 
  TopQ.A RemainingLatency 0 + 33c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(28) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(28) renamable $d5 = LDURDi $fp, -128, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
  Ready @33c
  *** Max MOps 1 at cycle 33
Cycle: 34 TopQ.A
TopQ.A @34c
  Retired: 29
  Executed: 34c
  Critical: 29c, 29 MOps
  ExpectedLatency: 22c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 30 
Queue TopQ.A: 44 43 41 40 29 
  TopQ.A RemainingLatency 0 + 34c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(29) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(29) renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !798; fft3d.c:132:41
  Ready @34c
  TopQ.A TopLatency SU(29) 26c
  *** Max MOps 1 at cycle 34
Cycle: 35 TopQ.A
TopQ.A @35c
  Retired: 30
  Executed: 35c
  Critical: 30c, 30 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 
Queue TopQ.A: 44 43 41 40 31 30 
  TopQ.A RemainingLatency 0 + 35c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(31) TOP-PATH                  18 cycles 
Pick Top TOP-PATH  
Scheduling SU(31) renamable $d4 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
  Ready @35c
  TopQ.A BotLatency SU(31) 18c
  *** Max MOps 1 at cycle 35
Cycle: 36 TopQ.A
TopQ.A @36c
  Retired: 31
  Executed: 36c
  Critical: 31c, 31 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 33 
Queue TopQ.A: 44 43 41 40 30 
  TopQ.A RemainingLatency 0 + 36c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(30) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(30) renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !798; fft3d.c:132:41
  Ready @36c
  *** Max MOps 1 at cycle 36
Cycle: 37 TopQ.A
TopQ.A @37c
  Retired: 32
  Executed: 37c
  Critical: 32c, 32 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 44 43 41 40 50 48 47 32 33 
  TopQ.A RemainingLatency 0 + 37c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(32) TOP-PATH                  17 cycles 
Pick Top TOP-PATH  
Scheduling SU(32) renamable $d6 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
  Ready @37c
  TopQ.A BotLatency SU(32) 17c
  *** Max MOps 1 at cycle 37
Cycle: 38 TopQ.A
TopQ.A @38c
  Retired: 33
  Executed: 38c
  Critical: 33c, 33 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 35 
Queue TopQ.A: 44 43 41 40 50 48 47 33 
  TopQ.A RemainingLatency 0 + 38c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(33) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(33) renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !798; fft3d.c:132:41
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 TopQ.A
TopQ.A @39c
  Retired: 34
  Executed: 39c
  Critical: 34c, 34 MOps
  ExpectedLatency: 26c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 34 35 
  TopQ.A RemainingLatency 0 + 39c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(34) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(34) renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !798; fft3d.c:132:41
  Ready @39c
  TopQ.A TopLatency SU(34) 27c
  *** Max MOps 1 at cycle 39
Cycle: 40 TopQ.A
TopQ.A @40c
  Retired: 35
  Executed: 40c
  Critical: 35c, 35 MOps
  ExpectedLatency: 27c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 35 37 
  TopQ.A RemainingLatency 0 + 40c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(35) TOP-PATH                  14 cycles 
Pick Top TOP-PATH  
Scheduling SU(35) renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !798; fft3d.c:132:41
  Ready @40c
  TopQ.A TopLatency SU(35) 30c
  *** Max MOps 1 at cycle 40
Cycle: 41 TopQ.A
TopQ.A @41c
  Retired: 36
  Executed: 41c
  Critical: 36c, 36 MOps
  ExpectedLatency: 30c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 37 36 
  TopQ.A RemainingLatency 0 + 41c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(37) ORDER                              
  Cand SU(36) ORDER                              
Pick Top ORDER     
Scheduling SU(36) renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !798; fft3d.c:132:41
  Ready @41c
  TopQ.A TopLatency SU(36) 31c
  *** Max MOps 1 at cycle 41
Cycle: 42 TopQ.A
TopQ.A @42c
  Retired: 37
  Executed: 42c
  Critical: 37c, 37 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 37 38 
  TopQ.A RemainingLatency 0 + 42c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(37) ORDER                              
Pick Top ORDER     
Scheduling SU(37) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !798; fft3d.c:132:41
  Ready @42c
  TopQ.A BotLatency SU(37) 13c
  *** Max MOps 1 at cycle 42
Cycle: 43 TopQ.A
TopQ.A @43c
  Retired: 38
  Executed: 43c
  Critical: 38c, 38 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 38 
  TopQ.A RemainingLatency 0 + 43c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
  Cand SU(38) ORDER                              
Pick Top ORDER     
Scheduling SU(38) renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !798; fft3d.c:132:41
  Ready @43c
  TopQ.A BotLatency SU(38) 13c
  *** Max MOps 1 at cycle 43
Cycle: 44 TopQ.A
TopQ.A @44c
  Retired: 39
  Executed: 44c
  Critical: 39c, 39 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 40 50 48 47 39 
  TopQ.A RemainingLatency 0 + 44c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
  Cand SU(40) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(40) renamable $x18 = LDURSWi $fp, -168, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
  Ready @44c
  TopQ.A BotLatency SU(40) 13c
  *** Max MOps 1 at cycle 44
Cycle: 45 TopQ.A
TopQ.A @45c
  Retired: 40
  Executed: 45c
  Critical: 40c, 40 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 43 41 39 50 48 47 
  TopQ.A RemainingLatency 0 + 45c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(41) TOP-PATH                  13 cycles 
Pick Top TOP-PATH  
Scheduling SU(41) renamable $x0 = LDURSWi $fp, -132, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
  Ready @45c
  TopQ.A BotLatency SU(41) 13c
  *** Max MOps 1 at cycle 45
Cycle: 46 TopQ.A
TopQ.A @46c
  Retired: 41
  Executed: 46c
  Critical: 41c, 41 MOps
  ExpectedLatency: 31c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 39 50 48 
  TopQ.A RemainingLatency 0 + 46c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(39) TOP-PATH                  12 cycles 
Pick Top TOP-PATH  
Scheduling SU(39) renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !798; fft3d.c:132:41
  Ready @46c
  TopQ.A TopLatency SU(39) 32c
  *** Max MOps 1 at cycle 46
Cycle: 47 TopQ.A
TopQ.A @47c
  Retired: 42
  Executed: 47c
  Critical: 42c, 42 MOps
  ExpectedLatency: 32c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 48 50 42 
  TopQ.A RemainingLatency 0 + 47c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
  Cand SU(42) ORDER                              
Pick Top ORDER     
Scheduling SU(42) STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !798 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
  Ready @47c
  TopQ.A TopLatency SU(42) 33c
  *** Max MOps 1 at cycle 47
Cycle: 48 TopQ.A
TopQ.A @48c
  Retired: 43
  Executed: 48c
  Critical: 43c, 43 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 45 
Queue TopQ.A: 44 43 47 48 50 51 
  TopQ.A RemainingLatency 0 + 48c > CritPath 44
  Cand SU(44) ORDER                              
  Cand SU(43) TOP-PATH                  11 cycles 
Pick Top TOP-PATH  
Scheduling SU(43) renamable $x1 = LDURXi $fp, -56, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
  Ready @48c
  TopQ.A BotLatency SU(43) 11c
  *** Max MOps 1 at cycle 48
Cycle: 49 TopQ.A
TopQ.A @49c
  Retired: 44
  Executed: 49c
  Critical: 44c, 44 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 44 51 47 48 50 45 
  TopQ.A RemainingLatency 0 + 49c > CritPath 44
  Cand SU(44) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(44) renamable $x2 = LDURSWi $fp, -64, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
  Ready @49c
  *** Max MOps 1 at cycle 49
Cycle: 50 TopQ.A
TopQ.A @50c
  Retired: 45
  Executed: 50c
  Critical: 45c, 45 MOps
  ExpectedLatency: 33c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 45 51 47 48 50 
  TopQ.A RemainingLatency 0 + 50c > CritPath 44
  Cand SU(45) ORDER                              
  Cand SU(51) TOP-PATH                  10 cycles 
Pick Top TOP-PATH  
Scheduling SU(51) renamable $q0 = LDURQi $sp, 72, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
  Ready @50c
  TopQ.A TopLatency SU(51) 34c
  TopQ.A BotLatency SU(51) 10c
  *** Max MOps 1 at cycle 50
Cycle: 51 TopQ.A
TopQ.A @51c
  Retired: 46
  Executed: 51c
  Critical: 46c, 46 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 45 50 47 48 
  TopQ.A RemainingLatency 0 + 51c > CritPath 44
  Cand SU(45) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(45) $x18 = ADDXrs renamable $x18, renamable $x0, 0, debug-location !796; fft3d.c:132:31
  Ready @51c
  *** Max MOps 1 at cycle 51
Cycle: 52 TopQ.A
TopQ.A @52c
  Retired: 47
  Executed: 52c
  Critical: 47c, 47 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 47 46 
  TopQ.A RemainingLatency 0 + 52c > CritPath 44
  Cand SU(48) ORDER                              
  Cand SU(47) ORDER                              
  Cand SU(46) TOP-PATH                  8 cycles 
Pick Top TOP-PATH  
Scheduling SU(46) renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !793; fft3d.c:132:25
  Ready @52c
  *** Max MOps 1 at cycle 52
Cycle: 53 TopQ.A
TopQ.A @53c
  Retired: 48
  Executed: 53c
  Critical: 48c, 48 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 47 49 
  TopQ.A RemainingLatency 0 + 53c > CritPath 44
  Cand SU(48) ORDER                              
  Cand SU(47) ORDER                              
Pick Top ORDER     
Scheduling SU(47) STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !798 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
  Ready @53c
  *** Max MOps 1 at cycle 53
Cycle: 54 TopQ.A
TopQ.A @54c
  Retired: 49
  Executed: 54c
  Critical: 49c, 49 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 48 50 49 
  TopQ.A RemainingLatency 0 + 54c > CritPath 44
  Cand SU(48) ORDER                              
Pick Top ORDER     
Scheduling SU(48) STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !798 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
  Ready @54c
  TopQ.A BotLatency SU(48) 7c
  *** Max MOps 1 at cycle 54
Cycle: 55 TopQ.A
TopQ.A @55c
  Retired: 50
  Executed: 55c
  Critical: 50c, 50 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 49 50 
  TopQ.A RemainingLatency 0 + 55c > CritPath 44
  Cand SU(49) ORDER                              
Pick Top ORDER     
Scheduling SU(49) renamable $x18 = ADDXrs renamable $x1, renamable $x18, 4, debug-location !793; fft3d.c:132:25
  Ready @55c
  TopQ.A BotLatency SU(49) 7c
  *** Max MOps 1 at cycle 55
Cycle: 56 TopQ.A
TopQ.A @56c
  Retired: 51
  Executed: 56c
  Critical: 51c, 51 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 50 
Pick Top ONLY1     
Scheduling SU(50) STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !798 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
  Ready @56c
  TopQ.A BotLatency SU(50) 7c
  *** Max MOps 1 at cycle 56
Cycle: 57 TopQ.A
TopQ.A @57c
  Retired: 52
  Executed: 57c
  Critical: 52c, 52 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 52 
Pick Top ONLY1     
Scheduling SU(52) renamable $d1 = FSUBDrr renamable $d7, renamable $d8, debug-location !798; fft3d.c:132:41
  Ready @57c
  TopQ.A BotLatency SU(52) 7c
  *** Max MOps 1 at cycle 57
Cycle: 58 TopQ.A
TopQ.A @58c
  Retired: 53
  Executed: 58c
  Critical: 53c, 53 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 53 
Pick Top ONLY1     
Scheduling SU(53) STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !798 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
  Ready @58c
  *** Max MOps 1 at cycle 58
Cycle: 59 TopQ.A
TopQ.A @59c
  Retired: 54
  Executed: 59c
  Critical: 54c, 54 MOps
  ExpectedLatency: 34c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 54 
Pick Top ONLY1     
Scheduling SU(54) STRQroX renamable $q0, renamable $x18, renamable $x2, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
  Ready @59c
  TopQ.A TopLatency SU(54) 38c
  TopQ.A BotLatency SU(54) 6c
  *** Max MOps 1 at cycle 59
Cycle: 60 TopQ.A
TopQ.A @60c
  Retired: 55
  Executed: 60c
  Critical: 55c, 55 MOps
  ExpectedLatency: 38c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 55 
Pick Top ONLY1     
Scheduling SU(55) renamable $w18 = LDURWi $fp, -64, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
  Ready @60c
  TopQ.A TopLatency SU(55) 39c
  *** Max MOps 1 at cycle 60
Cycle: 61 TopQ.A
TopQ.A @61c
  Retired: 56
  Executed: 61c
  Critical: 56c, 56 MOps
  ExpectedLatency: 39c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 64 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 56 
Pick Top ONLY1     
Scheduling SU(56) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !799; fft3d.c:128:44
  Ready @64c
  TopQ.A TopLatency SU(56) 43c
  *** Max MOps 1 at cycle 64
Cycle: 65 TopQ.A
TopQ.A @65c
  Retired: 57
  Executed: 65c
  Critical: 57c, 57 MOps
  ExpectedLatency: 43c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 57 
Pick Top ONLY1     
Scheduling SU(57) STURWi renamable $w18, $fp, -64, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44
  Ready @65c
  TopQ.A TopLatency SU(57) 44c
  *** Max MOps 1 at cycle 65
Cycle: 66 TopQ.A
TopQ.A @66c
  Retired: 58
  Executed: 66c
  Critical: 58c, 58 MOps
  ExpectedLatency: 44c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.32 ***
SU(0):   renamable $w1, renamable $w18 = LDPWi $fp, -40, debug-location !776 :: (dereferenceable load 4 from %ir.i11), (dereferenceable load 4 from %ir.i12); fft3d.c:129:35
SU(1):   renamable $w0 = LDURWi $fp, -132, debug-location !778 :: (dereferenceable load 4 from %ir.k); fft3d.c:129:41
SU(2):   renamable $x2 = LDURSWi $fp, -64, debug-location !781 :: (dereferenceable load 4 from %ir.j); fft3d.c:129:44
SU(3):   renamable $x3 = LDURSWi $fp, -132, debug-location !789 :: (dereferenceable load 4 from %ir.k); fft3d.c:131:33
SU(4):   $w18 = ADDWrs renamable $w18, renamable $w0, 0, debug-location !779; fft3d.c:129:39
SU(5):   $w0 = ADDWrs renamable $w1, renamable $w0, 0, debug-location !784; fft3d.c:130:39
SU(6):   renamable $x1 = UBFMXri renamable $x2, 60, 59, debug-location !787; fft3d.c:131:25
SU(7):   renamable $x18 = SMADDLrrr renamable $w18, renamable $w17, renamable $x16, debug-location !780; fft3d.c:129:31
SU(8):   renamable $x0 = SMADDLrrr renamable $w0, renamable $w17, renamable $x16, debug-location !785; fft3d.c:130:31
SU(9):   renamable $q0 = LDRQroX renamable $x0, renamable $x1, 0, 0, debug-location !785 :: (load 16 from %ir.157, align 8); fft3d.c:130:31
SU(10):   renamable $q1 = LDRQroX renamable $x18, renamable $x1, 0, 0, debug-location !780 :: (load 16 from %ir.152, align 8); fft3d.c:129:31
SU(15):   renamable $x0 = LDURSWi $fp, -164, debug-location !788 :: (dereferenceable load 4 from %ir.i21); fft3d.c:131:27
SU(14):   renamable $x18 = LDURXi $fp, -56, debug-location !787 :: (dereferenceable load 8 from %ir.x); fft3d.c:131:25
SU(11):   STPQi renamable $q0, renamable $q1, renamable $x8, 0, debug-location !785 :: (store 16 into %ir.156), (store 16 into %ir.151); fft3d.c:130:31
SU(12):   renamable $d1, renamable $d0 = LDPDi $fp, -14, debug-location !792 :: (dereferenceable load 8 from %ir.imag196), (dereferenceable load 8 from %ir.real19238, align 16); fft3d.c:131:41
SU(13):   renamable $d2, renamable $d3 = LDPDi $fp, -16, debug-location !792 :: (dereferenceable load 8 from %ir.real19339, align 16), (dereferenceable load 8 from %ir.imag197); fft3d.c:131:41
SU(20):   $x0 = ADDXrs renamable $x0, renamable $x3, 0, debug-location !790; fft3d.c:131:31
SU(21):   renamable $x0 = nsw MADDXrrr renamable $x0, renamable $x19, $xzr, debug-location !787; fft3d.c:131:25
SU(22):   renamable $x18 = ADDXrs renamable $x18, renamable $x0, 4, debug-location !787; fft3d.c:131:25
SU(16):   renamable $d1 = FADDDrr renamable $d1, renamable $d2, debug-location !792; fft3d.c:131:41
SU(17):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !792; fft3d.c:131:41
SU(18):   STPDi renamable $d1, renamable $d0, $sp, 11, debug-location !792 :: (store 8 into %ir.imag195), (store 8 into %ir.real19137); fft3d.c:131:41
SU(19):   renamable $q0 = LDURQi $sp, 88, debug-location !792 :: (dereferenceable load 16 from %ir.168, align 8); fft3d.c:131:41
SU(23):   STRQroX renamable $q0, renamable $x18, renamable $x1, 0, 0, debug-location !792 :: (store 16 into %ir.167, align 8); fft3d.c:131:41
SU(25):   renamable $d1, renamable $d2 = LDPDi $fp, -15, debug-location !798 :: (dereferenceable load 8 from %ir.imag214), (dereferenceable load 8 from %ir.real23552, align 16); fft3d.c:132:41
SU(27):   renamable $d4, renamable $d8 = LDPDi $fp, -16, debug-location !798 :: (dereferenceable load 8 from %ir.real23653, align 16), (dereferenceable load 8 from %ir.imag252); fft3d.c:132:41
SU(24):   renamable $d6, renamable $d0 = LDPDi $fp, -13, debug-location !798 :: (dereferenceable load 8 from %ir.real23250, align 16), (dereferenceable load 8 from %ir.imag239); fft3d.c:132:41
SU(26):   renamable $d3, renamable $d7 = LDPDi $fp, -14, debug-location !798 :: (dereferenceable load 8 from %ir.real24755, align 16), (dereferenceable load 8 from %ir.imag251); fft3d.c:132:41
SU(28):   renamable $d5 = LDURDi $fp, -128, debug-location !798 :: (dereferenceable load 8 from %ir.real24856, align 16); fft3d.c:132:41
SU(29):   renamable $d2 = FSUBDrr renamable $d2, renamable $d4, debug-location !798; fft3d.c:132:41
SU(31):   renamable $d4 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag218); fft3d.c:132:41
SU(30):   renamable $d1 = FSUBDrr renamable $d6, renamable $d1, debug-location !798; fft3d.c:132:41
SU(32):   renamable $d6 = LDURDi $fp, -88, debug-location !798 :: (dereferenceable load 8 from %ir.imag244); fft3d.c:132:41
SU(33):   renamable $d3 = FSUBDrr renamable $d3, renamable $d5, debug-location !798; fft3d.c:132:41
SU(34):   renamable $d5 = FMULDrr renamable $d0, renamable $d2, debug-location !798; fft3d.c:132:41
SU(35):   renamable $d4 = FMULDrr renamable $d4, renamable $d1, debug-location !798; fft3d.c:132:41
SU(36):   renamable $d4 = FSUBDrr renamable $d5, renamable $d4, debug-location !798; fft3d.c:132:41
SU(37):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !798; fft3d.c:132:41
SU(38):   renamable $d5 = FMULDrr renamable $d6, renamable $d3, debug-location !798; fft3d.c:132:41
SU(40):   renamable $x18 = LDURSWi $fp, -168, debug-location !794 :: (dereferenceable load 4 from %ir.i22); fft3d.c:132:27
SU(41):   renamable $x0 = LDURSWi $fp, -132, debug-location !795 :: (dereferenceable load 4 from %ir.k); fft3d.c:132:33
SU(39):   renamable $d0 = FADDDrr renamable $d0, renamable $d5, debug-location !798; fft3d.c:132:41
SU(42):   STPDi renamable $d4, renamable $d0, $sp, 9, debug-location !798 :: (store 8 into %ir.imag231), (store 8 into %ir.real20541); fft3d.c:132:41
SU(43):   renamable $x1 = LDURXi $fp, -56, debug-location !793 :: (dereferenceable load 8 from %ir.x); fft3d.c:132:25
SU(44):   renamable $x2 = LDURSWi $fp, -64, debug-location !797 :: (dereferenceable load 4 from %ir.j); fft3d.c:132:36
SU(51):   renamable $q0 = LDURQi $sp, 72, debug-location !798 :: (dereferenceable load 16 from %ir.199, align 8); fft3d.c:132:41
SU(45):   $x18 = ADDXrs renamable $x18, renamable $x0, 0, debug-location !796; fft3d.c:132:31
SU(46):   renamable $x18 = nsw MADDXrrr renamable $x18, renamable $x19, $xzr, debug-location !793; fft3d.c:132:25
SU(47):   STPDi renamable $d2, renamable $d1, $sp, 7, debug-location !798 :: (store 8 into %ir.imag212), (store 8 into %ir.real20843); fft3d.c:132:41
SU(48):   STPDi renamable $d2, renamable $d1, $sp, 5, debug-location !798 :: (store 8 into %ir.imag224), (store 8 into %ir.real22047); fft3d.c:132:41
SU(49):   renamable $x18 = ADDXrs renamable $x1, renamable $x18, 4, debug-location !793; fft3d.c:132:25
SU(50):   STPDi renamable $d2, renamable $d1, $sp, 3, debug-location !798 :: (store 8 into %ir.imag238), (store 8 into %ir.real23451); fft3d.c:132:41
SU(52):   renamable $d1 = FSUBDrr renamable $d7, renamable $d8, debug-location !798; fft3d.c:132:41
SU(53):   STPDi renamable $d3, renamable $d1, $sp, 1, debug-location !798 :: (store 8 into %ir.imag250), (store 8 into %ir.real24654); fft3d.c:132:41
SU(54):   STRQroX renamable $q0, renamable $x18, renamable $x2, 0, 1, debug-location !798 :: (store 16 into %ir.198, align 8); fft3d.c:132:41
SU(55):   renamable $w18 = LDURWi $fp, -64, debug-location !799 :: (dereferenceable load 4 from %ir.j); fft3d.c:128:44
SU(56):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !799; fft3d.c:128:44
SU(57):   STURWi renamable $w18, $fp, -64, debug-location !799 :: (store 4 into %ir.j); fft3d.c:128:44

Fixup kills for %bb.32
********** MI Scheduling **********
Swarztrauber:%bb.33 for.inc260
  From: renamable $w18 = LDURWi $fp, -132, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
    To: B %bb.29
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !803; fft3d.c:127:43
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.29
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -132, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !803; fft3d.c:127:43
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -132, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.33 ***
SU(0):   renamable $w18 = LDURWi $fp, -132, debug-location !803 :: (dereferenceable load 4 from %ir.k); fft3d.c:127:43
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !803; fft3d.c:127:43
SU(2):   STURWi renamable $w18, $fp, -132, debug-location !803 :: (store 4 into %ir.k); fft3d.c:127:43

Fixup kills for %bb.33
********** MI Scheduling **********
Swarztrauber:%bb.34 for.inc263
  From: renamable $w18 = LDURWi $fp, -60, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
    To: B %bb.24
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -60, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !807; fft3d.c:115:39
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -60, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.24
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -60, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !807; fft3d.c:115:39
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -60, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.34 ***
SU(0):   renamable $w18 = LDURWi $fp, -60, debug-location !807 :: (dereferenceable load 4 from %ir.i); fft3d.c:115:39
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 1, 0, debug-location !807; fft3d.c:115:39
SU(2):   STURWi renamable $w18, $fp, -60, debug-location !807 :: (store 4 into %ir.i); fft3d.c:115:39

Fixup kills for %bb.34
********** MI Scheduling **********
Swarztrauber:%bb.35 for.inc267
  From: renamable $w18 = LDURWi $fp, -68, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
    To: B %bb.3
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=4 Reg=$w18
    SU(2): Ord  Latency=0 Memory
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 2, 0, debug-location !811; fft3d.c:74:27
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=4 Reg=$w18
  Successors:
    SU(2): Data Latency=1 Reg=$w18
SU(2):   STURWi renamable $w18, $fp, -68, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=$w18
    SU(0): Ord  Latency=0 Memory
ExitSU:   B %bb.3
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $w18 = LDURWi $fp, -68, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w18 = nsw ADDWri renamable $w18, 2, 0, debug-location !811; fft3d.c:74:27
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STURWi renamable $w18, $fp, -68, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.35 ***
SU(0):   renamable $w18 = LDURWi $fp, -68, debug-location !811 :: (dereferenceable load 4 from %ir.l); fft3d.c:74:27
SU(1):   renamable $w18 = nsw ADDWri renamable $w18, 2, 0, debug-location !811; fft3d.c:74:27
SU(2):   STURWi renamable $w18, $fp, -68, debug-location !811 :: (store 4 into %ir.l); fft3d.c:74:27

Fixup kills for %bb.35
********** MI Scheduling **********
Swarztrauber:%bb.36 for.end269
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
    To: CBZW killed renamable $w8, %bb.38, debug-location !817; fft3d.c:138:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   CBZW killed renamable $w8, %bb.38, debug-location !817; fft3d.c:138:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.36 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !815; fft3d.c:138:9
SU(1):   renamable $w8 = LDRWui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !815 :: (dereferenceable load 4 from @timers_enabled); fft3d.c:138:9

Fixup kills for %bb.36
Fixup kills for %bb.37
********** MI Scheduling **********
Swarztrauber:%bb.38 if.end272
  From: $fp, $lr = frame-destroy LDPXi $sp, 50, debug-location !819 :: (load 8 from %stack.40), (load 8 from %stack.39); fft3d.c:140:1
    To: $sp = frame-destroy ADDXri $sp, 416, 0, debug-location !819; fft3d.c:140:1
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 50, debug-location !819 :: (load 8 from %stack.40), (load 8 from %stack.39); fft3d.c:140:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(1):   $x19 = frame-destroy LDRXui $sp, 49, debug-location !819 :: (load 8 from %stack.41); fft3d.c:140:1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 416, 0, debug-location !819; fft3d.c:140:1
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $fp, $lr = frame-destroy LDPXi $sp, 50, debug-location !819 :: (load 8 from %stack.40), (load 8 from %stack.39); fft3d.c:140:1
  Ready @0c
  TopQ.A BotLatency SU(0) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $x19 = frame-destroy LDRXui $sp, 49, debug-location !819 :: (load 8 from %stack.41); fft3d.c:140:1
  Ready @1c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.38 ***
SU(0):   $fp, $lr = frame-destroy LDPXi $sp, 50, debug-location !819 :: (load 8 from %stack.40), (load 8 from %stack.39); fft3d.c:140:1
SU(1):   $x19 = frame-destroy LDRXui $sp, 49, debug-location !819 :: (load 8 from %stack.41); fft3d.c:140:1

Fixup kills for %bb.38


Before MISched:
# Machine code for function main: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=8, align=8, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=1, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=8, align=8, at location [SP]
Constant Pool:
  cp#0: 0x4180000000000000, align=8
  cp#1: 7.196410e+00, align=8
  cp#2: 1.481570e+01, align=8
  cp#3: 7.211130e+00, align=8
  cp#4: 5.235180e+00, align=8
  cp#5: 0x4040C6F7A0B5ED8D, align=8
Function Live Ins: $w0 in %0, $x1 in %1

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $x1
  %1:gpr64 = COPY $x1
  %0:gpr32 = COPY $w0
  STRWui $wzr, %stack.0.retval, 0 :: (store 4 into %ir.retval)
  STRWui %0:gpr32, %stack.1.argc.addr, 0 :: (store 4 into %ir.argc.addr)
  STRXui %1:gpr64, %stack.2.argv.addr, 0 :: (store 8 into %ir.argv.addr)
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !48; mainft.c:62:15
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  $x1 = MOVaddr target-flags(aarch64-page) @mainft__str_1_r_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !48; mainft.c:62:15
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !50; mainft.c:62:13
  PCN_STACKMAP 0, 0, 0, %stack.4.Class, 0, 0, %stack.8.fp, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !50 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.8.fp), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:62:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !50; mainft.c:62:13
  %5:gpr64 = COPY killed $x8, debug-location !48; mainft.c:62:15
  STRXui %5:gpr64, %stack.8.fp, 0, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  CBZX %5:gpr64, %bb.2, debug-location !52; mainft.c:62:9
  B %bb.1, debug-location !52; mainft.c:62:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  %9:gpr32 = MOVi32imm 1
  STRWui %9:gpr32, %8:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  %10:gpr64 = LDRXui %stack.8.fp, 0, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !56; mainft.c:64:9
  $x0 = COPY %10:gpr64, debug-location !56; mainft.c:64:9
  BL @fclose, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !56; mainft.c:64:9
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !56; mainft.c:64:9
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !57; mainft.c:65:5
  PCN_STACKMAP 1, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %10:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !57 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:65:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !57; mainft.c:65:5
  B %bb.3, debug-location !57; mainft.c:65:5

bb.2.if.else:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  STRWui $wzr, %6:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

bb.3.if.end:
; predecessors: %bb.2, %bb.1
  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

  %12:gpr32 = MOVi32imm 20
  STRWui %12:gpr32, %stack.3.niter, 0, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !61; mainft.c:72:5
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_2____NAS_Par, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !61; mainft.c:72:5
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !61; mainft.c:72:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !62; mainft.c:73:5
  PCN_STACKMAP 2, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !62 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:73:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !62; mainft.c:73:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !62; mainft.c:73:5
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  $w1 = MOVi32imm 512, debug-location !62; mainft.c:73:5
  $w2 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  $w3 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !62; mainft.c:73:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !63; mainft.c:74:49
  PCN_STACKMAP 3, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !63 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:74:49
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !63; mainft.c:74:49
  %19:gpr32 = LDRWui %stack.3.niter, 0, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !64; mainft.c:74:5
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  $w1 = COPY %19:gpr32, debug-location !64; mainft.c:74:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !64; mainft.c:74:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !65; mainft.c:75:5
  PCN_STACKMAP 4, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %19:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !65 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:75:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !65; mainft.c:75:5
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !65; mainft.c:75:5
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_5___, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, debug-location !65; mainft.c:75:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !65; mainft.c:75:5
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !65; mainft.c:75:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !66; mainft.c:77:13
  PCN_STACKMAP 5, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !66 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:13
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !66; mainft.c:77:13
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !66; mainft.c:77:13
  BL @getclass, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $w8, debug-location !66; mainft.c:77:13
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !66; mainft.c:77:13
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !67; mainft.c:77:11
  PCN_STACKMAP 6, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !67 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:11
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !67; mainft.c:77:11
  %24:gpr32 = COPY killed $w8, debug-location !66; mainft.c:77:13
  STRBBui %24:gpr32, %stack.4.Class, 0, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  %25:gpr32 = LDRWui %stack.3.niter, 0, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !69; mainft.c:79:5
  $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5
  $x1 = ADDXri %stack.5.total_time, 0, 0, debug-location !69; mainft.c:79:5
  $x2 = ADDXri %stack.7.verified, 0, 0, debug-location !69; mainft.c:79:5
  BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit killed $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !69; mainft.c:79:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !70; mainft.c:81:9
  PCN_STACKMAP 7, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %25:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !70 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:81:9
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !70; mainft.c:81:9
  %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  FCMPDri %28:fpr64, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  Bcc 0, %bb.5, implicit killed $nzcv, debug-location !73; mainft.c:81:9
  B %bb.4, debug-location !73; mainft.c:81:9

bb.4.if.then8:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !74; mainft.c:83:39
  %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
  %31:fpr64 = LDRDui %30:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  $d0 = COPY %31:fpr64, debug-location !74; mainft.c:83:39
  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit killed $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !74; mainft.c:83:39
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !76; mainft.c:83:37
  PCN_STACKMAP 8, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !76 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:83:37
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !76; mainft.c:83:37
  %32:fpr64 = COPY killed $d0, debug-location !74; mainft.c:83:39
  %33:gpr64temp = ADRP target-flags(aarch64-page) %const.1
  %34:fpr64 = LDRDui %33:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  %35:fpr64 = FMULDrr %32:fpr64, %34:fpr64, debug-location !76; mainft.c:83:37
  %36:gpr64temp = ADRP target-flags(aarch64-page) %const.2
  %37:fpr64 = LDRDui %36:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  %38:fpr64 = FADDDrr %35:fpr64, %37:fpr64, debug-location !77; mainft.c:83:27
  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !78; mainft.c:84:40
  $d0 = COPY %31:fpr64, debug-location !78; mainft.c:84:40
  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit killed $d0, implicit-def $sp, implicit-def $d0, debug-location !78; mainft.c:84:40
  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !78; mainft.c:84:40
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !79; mainft.c:84:38
  PCN_STACKMAP 9, 0, 0, %stack.4.Class, 0, %38:fpr64, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !79 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:84:38
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !79; mainft.c:84:38
  %39:fpr64 = COPY killed $d0, debug-location !78; mainft.c:84:40
  %40:gpr64temp = ADRP target-flags(aarch64-page) %const.3
  %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
  %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
  %43:gpr64temp = ADRP target-flags(aarch64-page) %const.4
  %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
  %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
  undef %47.ssub:fpr64 = LDRSui %stack.3.niter, 0, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
  %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
  %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
  %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
  %54:gpr64temp = ADRP target-flags(aarch64-page) %const.5
  %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
  %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
  %57:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
  %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
  STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  B %bb.6, debug-location !88; mainft.c:86:5

bb.5.if.else16:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  STRXui $xzr, %stack.6.mflops, 0, debug-location !89 :: (store 8 into %ir.mflops); mainft.c:88:16

bb.6.if.end17:
; predecessors: %bb.5, %bb.4

  %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  %60:gpr32 = LDRWui %stack.3.niter, 0, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  %61:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  %62:fpr64 = LDRDui %stack.6.mflops, 0, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  %63:gpr32 = LDRWui %stack.7.verified, 0, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  ADJCALLSTACKDOWN 88, 0, implicit-def dead $sp, implicit $sp, debug-location !96; mainft.c:91:5
  %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
  STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
  %66:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_15__O3__mcmod, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
  STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
  %67:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_14__g__Wall__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
  STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
  %68:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_13__I___commo, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
  STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
  %69:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_12__lm_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
  STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
  %70:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_11___CC__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
  STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
  %71:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_10_gcc_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
  STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
  %72:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_9_03_Nov_201, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
  STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
  %73:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_8_3_3_1_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
  STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  %74:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_7___________, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, debug-location !96; mainft.c:91:5
  STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_6_FT_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
  $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
  $w2 = MOVi32imm 512, debug-location !96; mainft.c:91:5
  $w3 = MOVi32imm 256, debug-location !96; mainft.c:91:5
  $w4 = MOVi32imm 256, debug-location !96; mainft.c:91:5
  $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
  $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
  $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5
  BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit killed $w4, implicit killed $w5, implicit killed $d0, implicit killed $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
  ADJCALLSTACKUP 88, 0, implicit-def $sp, implicit $sp, debug-location !96; mainft.c:91:5
  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !97; mainft.c:95:5
  PCN_STACKMAP 10, 0, %59:gpr32, %60:gpr32, %61:fpr64, %62:fpr64, %63:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !97; mainft.c:95:5
  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !97; mainft.c:95:5
  $w8 = COPY $wzr, debug-location !98; mainft.c:98:5
  RET_ReallyLR implicit killed $w8, debug-location !98; mainft.c:98:5

# End machine code for function main.

********** MI Scheduling **********
main:%bb.0 entry
  From: %5:gpr64 = COPY killed $x8, debug-location !48; mainft.c:62:15
    To: CBZX %5:gpr64, %bb.2, debug-location !52; mainft.c:62:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
Disabled scoreboard hazard recognizer
Disabled scoreboard hazard recognizer
SU(0):   %5:gpr64 = COPY killed $x8, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Data Latency=0 Reg=%5
    SU(1): Data Latency=0 Reg=%5
  Single Issue       : false;
SU(1):   STRXui %5:gpr64, %stack.8.fp, 0, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%5
  Single Issue       : false;
ExitSU:   CBZX %5:gpr64, %bb.2, debug-location !52; mainft.c:62:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%5
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRXui %5:gpr64, %stack.8.fp, 0, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %5:gpr64 = COPY killed $x8, debug-location !48; mainft.c:62:15
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %5:gpr64 = COPY killed $x8, debug-location !48; mainft.c:62:15
SU(1):   STRXui %5:gpr64, %stack.8.fp, 0, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13

********** MI Scheduling **********
main:%bb.0 entry
  From: $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
    To: BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $x1 = MOVaddr target-flags(aarch64-page) @mainft__str_1_r_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) $x1 = MOVaddr target-flags(aarch64-page) @mainft__str_1_r_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
SU(1):   $x1 = MOVaddr target-flags(aarch64-page) @mainft__str_1_r_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, debug-location !48; mainft.c:62:15

********** MI Scheduling **********
main:%bb.0 entry
  From: %1:gpr64 = COPY $x1
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !48; mainft.c:62:15
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %1:gpr64 = COPY $x1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(4): Data Latency=0 Reg=%1
  Single Issue       : false;
SU(1):   %0:gpr32 = COPY $w0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(3): Data Latency=0 Reg=%0
  Single Issue       : false;
SU(2):   STRWui $wzr, %stack.0.retval, 0 :: (store 4 into %ir.retval)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Single Issue       : false;
SU(3):   STRWui %0:gpr32, %stack.1.argc.addr, 0 :: (store 4 into %ir.argc.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%0
  Single Issue       : false;
SU(4):   STRXui %1:gpr64, %stack.2.argv.addr, 0 :: (store 8 into %ir.argv.addr)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%1
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !48; mainft.c:62:15
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 0
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %1:gpr64 = COPY $x1
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 2 1 4 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) PHYS-REG                           
  Cand SU(1) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(1) %0:gpr32 = COPY $w0
  Ready @0c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 3 2 
Queue TopQ.P: 
Queue TopQ.A: 2 4 3 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) STRXui %1:gpr64, %stack.2.argv.addr, 0 :: (store 8 into %ir.argv.addr)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 3 
Queue TopQ.P: 
Queue TopQ.A: 2 3 
  BotQ.A RemainingLatency 0 + 1c > CritPath 0
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(2) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) STRWui %0:gpr32, %stack.1.argc.addr, 0 :: (store 4 into %ir.argc.addr)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui $wzr, %stack.0.retval, 0 :: (store 4 into %ir.retval)
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   %1:gpr64 = COPY $x1
SU(1):   %0:gpr32 = COPY $w0
SU(2):   STRWui $wzr, %stack.0.retval, 0 :: (store 4 into %ir.retval)
SU(3):   STRWui %0:gpr32, %stack.1.argc.addr, 0 :: (store 4 into %ir.argc.addr)
SU(4):   STRXui %1:gpr64, %stack.2.argv.addr, 0 :: (store 8 into %ir.argv.addr)

********** MI Scheduling **********
main:%bb.1 if.then
  From: %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !56; mainft.c:64:9
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%8
  Single Issue       : false;
SU(1):   %9:gpr32 = MOVi32imm 1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=1 Reg=%9
  Single Issue       : false;
SU(2):   STRWui %9:gpr32, %8:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=1 Reg=%9
    SU(0): Data Latency=1 Reg=%8
  Single Issue       : false;
SU(3):   %10:gpr64 = LDRXui %stack.8.fp, 0, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !56; mainft.c:64:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) STRWui %9:gpr32, %8:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  Ready @0c
  BotQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 3 
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(1) %9:gpr32 = MOVi32imm 1
  Ready @1c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 3 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %10:gpr64 = LDRXui %stack.8.fp, 0, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  Ready @3c
  BotQ.A BotLatency SU(3) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.1 ***
SU(3):   %10:gpr64 = LDRXui %stack.8.fp, 0, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
SU(0):   %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
SU(1):   %9:gpr32 = MOVi32imm 1
SU(2):   STRWui %9:gpr32, %8:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24

********** MI Scheduling **********
main:%bb.2 if.else
  From: %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
    To: End RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%6
  Single Issue       : false;
SU(1):   STRWui $wzr, %6:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%6
  Single Issue       : false;
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui $wzr, %6:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
SU(1):   STRWui $wzr, %6:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

********** MI Scheduling **********
main:%bb.3 if.end
  From: %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
    To: Bcc 0, %bb.5, implicit killed $nzcv, debug-location !73; mainft.c:81:9
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=%28
  Single Issue       : false;
SU(1):   FCMPDri %28:fpr64, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=%28
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   Bcc 0, %bb.5, implicit killed $nzcv, debug-location !73; mainft.c:81:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) FCMPDri %28:fpr64, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  Ready @1c
  BotQ.A TopLatency SU(1) 4c
  BotQ.A BotLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 5 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
SU(1):   FCMPDri %28:fpr64, implicit-def $nzcv, debug-location !73; mainft.c:81:9

********** MI Scheduling **********
main:%bb.3 if.end
  From: $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5
    To: BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit killed $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
SU(1):   $x1 = ADDXri %stack.5.total_time, 0, 0, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $x2 = ADDXri %stack.7.verified, 0, 0, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit killed $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 1 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 1 
Queue TopQ.P: 
Queue TopQ.A: 2 1 
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(2) $x2 = ADDXri %stack.7.verified, 0, 0, debug-location !69; mainft.c:79:5
  Ready @1c
  BotQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $x1 = ADDXri %stack.5.total_time, 0, 0, debug-location !69; mainft.c:79:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(1):   $x1 = ADDXri %stack.5.total_time, 0, 0, debug-location !69; mainft.c:79:5
SU(2):   $x2 = ADDXri %stack.7.verified, 0, 0, debug-location !69; mainft.c:79:5
SU(0):   $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: %24:gpr32 = COPY killed $w8, debug-location !66; mainft.c:77:13
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !69; mainft.c:79:5
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %24:gpr32 = COPY killed $w8, debug-location !66; mainft.c:77:13
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Data Latency=0 Reg=%24
  Single Issue       : false;
SU(1):   STRBBui %24:gpr32, %stack.4.Class, 0, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%24
  Single Issue       : false;
SU(2):   %25:gpr32 = LDRWui %stack.3.niter, 0, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !69; mainft.c:79:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRBBui %24:gpr32, %stack.4.Class, 0, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %24:gpr32 = COPY killed $w8, debug-location !66; mainft.c:77:13
  Ready @1c
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 2 BotQ.A
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %25:gpr32 = LDRWui %stack.3.niter, 0, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  Ready @3c
  BotQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 2
  Executed: 4c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(2):   %25:gpr32 = LDRWui %stack.3.niter, 0, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
SU(0):   %24:gpr32 = COPY $w8, debug-location !66; mainft.c:77:13
SU(1):   STRBBui %24:gpr32, %stack.4.Class, 0, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11

********** MI Scheduling **********
main:%bb.3 if.end
  From: $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $w1 = COPY %19:gpr32, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=0 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 0 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) $w1 = COPY %19:gpr32, debug-location !64; mainft.c:74:5
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
SU(1):   $w1 = COPY %19:gpr32, debug-location !64; mainft.c:74:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
 RegionInstrs: 4
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(1):   $w1 = MOVi32imm 512, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(2):   $w2 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
SU(3):   $w3 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Single Issue       : false;
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
    SU(0): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(3) $w3 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 1
  Executed: 2c
  Critical: 1c, 1 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(2) $w2 = MOVi32imm 256, debug-location !62; mainft.c:73:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 2
  Executed: 3c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(1) $w1 = MOVi32imm 512, debug-location !62; mainft.c:73:5
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 3
  Executed: 4c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
SU(1):   $w1 = MOVi32imm 512, debug-location !62; mainft.c:73:5
SU(2):   $w2 = MOVi32imm 256, debug-location !62; mainft.c:73:5
SU(3):   $w3 = MOVi32imm 256, debug-location !62; mainft.c:73:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: %12:gpr32 = MOVi32imm 20
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !61; mainft.c:72:5
 RegionInstrs: 2
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %12:gpr32 = MOVi32imm 20
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%12
  Single Issue       : false;
SU(1):   STRWui %12:gpr32, %stack.3.niter, 0, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%12
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !61; mainft.c:72:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) STRWui %12:gpr32, %stack.3.niter, 0, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  Ready @0c
  BotQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %12:gpr32 = MOVi32imm 20
  Ready @1c
  BotQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   %12:gpr32 = MOVi32imm 20
SU(1):   STRWui %12:gpr32, %stack.3.niter, 0, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %39:fpr64 = COPY killed $d0, debug-location !78; mainft.c:84:40
    To: B %bb.6, debug-location !88; mainft.c:86:5
 RegionInstrs: 18
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: GPR64temp=1
FPR8=3
GPR32=1
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
Live In: %38 B0 
Live Out: 
Live Thru: 
Top Pressure:
FPR8=2
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
Bottom Pressure:

Excess PSets: 
SU(0):   %39:fpr64 = COPY killed $d0, debug-location !78; mainft.c:84:40
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 6
  Successors:
    SU(3): Data Latency=0 Reg=%39
  Pressure Diff      : ZPR_3b 1
  Single Issue       : false;
SU(1):   %40:gpr64temp = ADRP target-flags(aarch64-page) %const.3
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 11
  Successors:
    SU(2): Data Latency=1 Reg=%40
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(2):   %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(1): Data Latency=1 Reg=%40
  Successors:
    SU(3): Data Latency=4 Reg=%41
  Pressure Diff      : GPR64temp 1    FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(3):   %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(2): Data Latency=4 Reg=%41
    SU(0): Data Latency=0 Reg=%39
  Successors:
    SU(6): Data Latency=1 Reg=%42
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(4):   %43:gpr64temp = ADRP target-flags(aarch64-page) %const.4
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 10
  Successors:
    SU(5): Data Latency=1 Reg=%43
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(5):   %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 9
  Predecessors:
    SU(4): Data Latency=1 Reg=%43
  Successors:
    SU(6): Data Latency=4 Reg=%44
  Pressure Diff      : GPR64temp 1    FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(6):   %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(3): Data Latency=1 Reg=%42
    SU(5): Data Latency=4 Reg=%44
  Successors:
    SU(10): Data Latency=1 Reg=%45
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(7):   undef %47.ssub:fpr64 = LDRSui %stack.3.niter, 0, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(8): Data Latency=4 Reg=%47
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(8):   %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(7): Data Latency=4 Reg=%47
  Successors:
    SU(9): Data Latency=1 Reg=%49
  Pressure Diff      : 
  Single Issue       : false;
SU(9):   %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(8): Data Latency=1 Reg=%49
  Successors:
    SU(10): Data Latency=1 Reg=%51
  Pressure Diff      : 
  Single Issue       : false;
SU(10):   %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(6): Data Latency=1 Reg=%45
    SU(9): Data Latency=1 Reg=%51
  Successors:
    SU(11): Data Latency=1 Reg=%52
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(11):   %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 3
  Predecessors:
    SU(10): Data Latency=1 Reg=%52
  Successors:
    SU(14): Data Latency=1 Reg=%53
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(12):   %54:gpr64temp = ADRP target-flags(aarch64-page) %const.5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 7
  Successors:
    SU(13): Data Latency=1 Reg=%54
  Pressure Diff      : GPR64temp -1    GPR32 -1
  Single Issue       : false;
SU(13):   %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 6
  Predecessors:
    SU(12): Data Latency=1 Reg=%54
  Successors:
    SU(14): Data Latency=4 Reg=%55
  Pressure Diff      : GPR64temp 1    FPR8 -1    GPR32 1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(14):   %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
    SU(11): Data Latency=1 Reg=%53
    SU(13): Data Latency=4 Reg=%55
  Successors:
    SU(16): Data Latency=1 Reg=%56
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(15):   %57:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(16): Data Latency=4 Reg=%57
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(16):   %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(14): Data Latency=1 Reg=%56
    SU(15): Data Latency=4 Reg=%57
  Successors:
    SU(17): Data Latency=1 Reg=%58
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
SU(17):   STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%58
  Pressure Diff      : FPR8 1    FPR8+ZPR_3b 1    FPR8+ZPR4_with_zsub1_in_ZPR_3b 1    FPR8+ZPR4_with_zsub2_in_ZPR_3b 1    FPR8+ZPR4_with_zsub3_in_ZPR_3b 1    ZPR_4b 1    ZPR 1
  Single Issue       : false;
ExitSU:   B %bb.6, debug-location !88; mainft.c:86:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 11
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 17 
Pick Bot ONLY1     
Scheduling SU(17) STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
Bottom Pressure:
FPR8=1
FPR8+ZPR_3b=1
FPR8+ZPR4_with_zsub1_in_ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=1
FPR8+ZPR4_with_zsub3_in_ZPR_3b=1
ZPR_4b=1
ZPR=1
  LiveReg: %58
  UpdateRegP: SU(17) STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
              to 
  Ready @0c
  BotQ.A TopLatency SU(17) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 16 
Pick Bot ONLY1     
Scheduling SU(16) %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
Bottom Pressure:
FPR8=2
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %56
  UpdateRegP: SU(16) %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
              to 
  LiveReg: %57
  UpdateRegP: SU(16) %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @1c
  BotQ.A BotLatency SU(16) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 
Queue BotQ.A: 14 
Pick Bot ONLY1     
Scheduling SU(14) %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
Bottom Pressure:
FPR8=3
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  LiveReg: %53
  UpdateRegP: SU(14) %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
              to 
  LiveReg: %55
  UpdateRegP: SU(14) %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @2c
  BotQ.A BotLatency SU(14) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 13 
Queue BotQ.A: 11 
Pick Bot ONLY1     
Scheduling SU(11) %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
Bottom Pressure:
FPR8=4
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %38
  UpdateRegP: SU(11) %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
              to 
  LiveReg: %52
  UpdateRegP: SU(11) %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @3c
  BotQ.A BotLatency SU(11) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 15 13 
Queue BotQ.A: 10 
Pick Bot ONLY1     
Scheduling SU(10) %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
Bottom Pressure:
FPR8=5
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %45
  UpdateRegP: SU(10) %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
              to 
  LiveReg: %51
  UpdateRegP: SU(10) %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @4c
  BotQ.A BotLatency SU(10) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 6 9 15 
Queue TopQ.P: 
Queue TopQ.A: 0 1 4 7 12 15 
BotQ.A RemLatency SU(6) 6c
BotQ.A RemLatency SU(13) 1c
Picking from Bot:
  Cand SU(6) ORDER                              
  Cand SU(9) REG-MAX                            
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
  Cand SU(0) PHYS-REG                           
Pick Top PHYS-REG  
Scheduling SU(0) %39:fpr64 = COPY killed $d0, debug-location !78; mainft.c:84:40
Top Pressure:
FPR8=3
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @0c
  TopQ.A BotLatency SU(0) 6c
TopQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 13 
Queue BotQ.A: 6 9 15 
Queue TopQ.P: 
Queue TopQ.A: 15 1 4 7 12 
BotQ.A RemLatency SU(6) 6c
BotQ.A RemLatency SU(13) 1c
Picking from Bot:
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(15) ORDER                              
  Cand SU(1) REG-MAX                            
Pick Bot ORDER     
Scheduling SU(15) %57:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
Bottom Pressure:
FPR8=4
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  Ready @5c
  BotQ.A BotLatency SU(15) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 9 13 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(6) 6c
  BotQ.A RemainingLatency 6 + 6c > CritPath 11
Picking from Bot:
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(6) %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
Bottom Pressure:
FPR8=5
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %42
  UpdateRegP: SU(6) %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
              to 
  LiveReg: %44
  UpdateRegP: SU(6) %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @6c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 13 9 3 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(9) 5c
BotQ.A RemLatency SU(5) 1c
  BotQ.A RemainingLatency 5 + 7c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(9) BOT-PATH                  5 cycles 
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(9) %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
Bottom Pressure:
FPR8=5
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %49
  UpdateRegP: SU(9) %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 13 3 8 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(3) 5c
BotQ.A RemLatency SU(5) 1c
  BotQ.A RemainingLatency 5 + 8c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
  Cand SU(8) BOT-PATH                  4 cycles 
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(8) %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
Bottom Pressure:
FPR8=5
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %47
  UpdateRegP: SU(8) %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @8c
  BotQ.A BotLatency SU(8) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 7 
Queue BotQ.A: 13 3 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(3) 5c
BotQ.A RemLatency SU(5) 1c
  BotQ.A RemainingLatency 5 + 9c > CritPath 11
Picking from Bot:
  Cand SU(13) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(13) %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
Bottom Pressure:
GPR64temp=1
FPR8=4
GPR32=1
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %54
  UpdateRegP: SU(13) %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 
Queue BotQ.A: 3 12 5 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(3) 5c
  BotQ.A RemainingLatency 5 + 10c > CritPath 11
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(3) %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
Bottom Pressure:
GPR64temp=1
FPR8=5
GPR32=1
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  LiveReg: %39
  UpdateRegP: SU(3) %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
              to 
  LiveReg: %41
  UpdateRegP: SU(3) %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @10c
  BotQ.A TopLatency SU(3) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 7 2 
Queue BotQ.A: 5 12 
Queue TopQ.P: 
Queue TopQ.A: 12 1 4 7 
BotQ.A RemLatency SU(5) 1c
BotQ.A RemLatency SU(2) 1c
  BotQ.A RemainingLatency 4 + 11c > CritPath 11
Picking from Bot:
  Cand SU(5) ORDER                              
  Cand SU(12) REG-MAX                            
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(12) %54:gpr64temp = ADRP target-flags(aarch64-page) %const.5
Bottom Pressure:
FPR8=5
FPR8+ZPR_3b=5
FPR8+ZPR4_with_zsub1_in_ZPR_3b=5
FPR8+ZPR4_with_zsub2_in_ZPR_3b=5
FPR8+ZPR4_with_zsub3_in_ZPR_3b=5
ZPR_4b=5
ZPR=5
  Ready @11c
  BotQ.A BotLatency SU(12) 7c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 5 7 
Queue TopQ.P: 
Queue TopQ.A: 7 1 4 
  BotQ.A RemainingLatency 0 + 12c > CritPath 11
Picking from Bot:
  Cand SU(5) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(5) %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
Bottom Pressure:
GPR64temp=1
FPR8=4
GPR32=1
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
  LiveReg: %43
  UpdateRegP: SU(5) %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @12c
  BotQ.A BotLatency SU(5) 9c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 2 
Queue BotQ.A: 7 4 
Queue TopQ.P: 
Queue TopQ.A: 7 1 4 
  BotQ.A RemainingLatency 0 + 13c > CritPath 11
Picking from Bot:
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot ORDER     
Scheduling SU(7) undef %47.ssub:fpr64 = LDRSui %stack.3.niter, 0, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
Bottom Pressure:
GPR64temp=1
FPR8=3
GPR32=1
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @13c
  BotQ.A BotLatency SU(7) 10c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 2 
Queue TopQ.P: 
Queue TopQ.A: 4 1 
  BotQ.A RemainingLatency 0 + 14c > CritPath 11
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(1) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(4) %43:gpr64temp = ADRP target-flags(aarch64-page) %const.4
Bottom Pressure:
FPR8=3
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
Bottom Pressure:
GPR64temp=1
FPR8=2
GPR32=1
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %40
  UpdateRegP: SU(2) %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Ready @15c
  BotQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %40:gpr64temp = ADRP target-flags(aarch64-page) %const.3
Bottom Pressure:
FPR8=2
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @16c
  BotQ.A BotLatency SU(1) 11c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %39:fpr64 = COPY killed $d0, debug-location !78; mainft.c:84:40
SU(1):   %40:gpr64temp = ADRP target-flags(aarch64-page) %const.3
SU(2):   %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
SU(4):   %43:gpr64temp = ADRP target-flags(aarch64-page) %const.4
SU(7):   undef %47.ssub:fpr64 = LDRSui %stack.3.niter, 0, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
SU(5):   %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
SU(12):   %54:gpr64temp = ADRP target-flags(aarch64-page) %const.5
SU(3):   %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
SU(13):   %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
SU(8):   %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
SU(9):   %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
SU(6):   %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
SU(15):   %57:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
SU(10):   %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
SU(11):   %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
SU(14):   %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
SU(16):   %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
SU(17):   STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %32:fpr64 = COPY killed $d0, debug-location !74; mainft.c:83:39
    To: ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !78; mainft.c:84:40
 RegionInstrs: 7
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %32:fpr64 = COPY killed $d0, debug-location !74; mainft.c:83:39
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=0 Reg=%32
  Single Issue       : false;
SU(1):   %33:gpr64temp = ADRP target-flags(aarch64-page) %const.1
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 6
  Successors:
    SU(2): Data Latency=1 Reg=%33
  Single Issue       : false;
SU(2):   %34:fpr64 = LDRDui %33:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 5
  Predecessors:
    SU(1): Data Latency=1 Reg=%33
  Successors:
    SU(3): Data Latency=4 Reg=%34
  Single Issue       : false;
SU(3):   %35:fpr64 = FMULDrr %32:fpr64, %34:fpr64, debug-location !76; mainft.c:83:37
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 1
  Predecessors:
    SU(2): Data Latency=4 Reg=%34
    SU(0): Data Latency=0 Reg=%32
  Successors:
    SU(6): Data Latency=1 Reg=%35
  Single Issue       : false;
SU(4):   %36:gpr64temp = ADRP target-flags(aarch64-page) %const.2
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(5): Data Latency=1 Reg=%36
  Single Issue       : false;
SU(5):   %37:fpr64 = LDRDui %36:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(4): Data Latency=1 Reg=%36
  Successors:
    SU(6): Data Latency=4 Reg=%37
  Single Issue       : false;
SU(6):   %38:fpr64 = FADDDrr %35:fpr64, %37:fpr64, debug-location !77; mainft.c:83:27
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 0
  Predecessors:
    SU(3): Data Latency=1 Reg=%35
    SU(5): Data Latency=4 Reg=%37
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !78; mainft.c:84:40
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path(GS-RR ): 6
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 6 
Pick Bot ONLY1     
Scheduling SU(6) %38:fpr64 = FADDDrr %35:fpr64, %37:fpr64, debug-location !77; mainft.c:83:27
  Ready @0c
  BotQ.A TopLatency SU(6) 6c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 
Queue BotQ.A: 3 
Pick Bot ONLY1     
Scheduling SU(3) %35:fpr64 = FMULDrr %32:fpr64, %34:fpr64, debug-location !76; mainft.c:83:37
  Ready @1c
  BotQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 5 2 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %32:fpr64 = COPY killed $d0, debug-location !74; mainft.c:83:39
  Ready @2c
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 2 
Queue BotQ.A: 5 
Pick Bot ONLY1     
Scheduling SU(5) %37:fpr64 = LDRDui %36:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  Ready @4c
  BotQ.A BotLatency SU(5) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 3
  Executed: 5c
  Critical: 3c, 3 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 4 2 
Queue TopQ.P: 
Queue TopQ.A: 4 1 
BotQ.A RemLatency SU(2) 1c
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(4) ORDER                              
  Cand SU(1) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %36:gpr64temp = ADRP target-flags(aarch64-page) %const.2
  Ready @5c
  BotQ.A BotLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 4
  Executed: 6c
  Critical: 4c, 4 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) %34:fpr64 = LDRDui %33:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  Ready @6c
  BotQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 5
  Executed: 7c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %33:gpr64temp = ADRP target-flags(aarch64-page) %const.1
  Ready @7c
  BotQ.A BotLatency SU(1) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(1):   %33:gpr64temp = ADRP target-flags(aarch64-page) %const.1
SU(2):   %34:fpr64 = LDRDui %33:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
SU(4):   %36:gpr64temp = ADRP target-flags(aarch64-page) %const.2
SU(5):   %37:fpr64 = LDRDui %36:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
SU(0):   %32:fpr64 = COPY $d0, debug-location !74; mainft.c:83:39
SU(3):   %35:fpr64 = FMULDrr %32:fpr64, %34:fpr64, debug-location !76; mainft.c:83:37
SU(6):   %38:fpr64 = FADDDrr %35:fpr64, %37:fpr64, debug-location !77; mainft.c:83:27

********** MI Scheduling **********
main:%bb.4 if.then8
  From: %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
    To: BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
 RegionInstrs: 3
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=%30
  Single Issue       : false;
SU(1):   %31:fpr64 = LDRDui %30:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=%30
  Successors:
    SU(2): Data Latency=4 Reg=%31
  Single Issue       : false;
SU(2):   $d0 = COPY %31:fpr64, debug-location !74; mainft.c:83:39
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=%31
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Single Issue       : false;
ExitSU:   BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=0 Artificial
Critical Path(GS-RR ): 5
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 
Pick Bot ONLY1     
Scheduling SU(2) $d0 = COPY %31:fpr64, debug-location !74; mainft.c:83:39
  Ready @0c
  BotQ.A TopLatency SU(2) 5c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Cycle: 1 BotQ.A
Cycle: 4 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 1 
Pick Bot ONLY1     
Scheduling SU(1) %31:fpr64 = LDRDui %30:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  Ready @4c
  BotQ.A BotLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 1
  Executed: 5c
  Critical: 1c, 1 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
  Ready @5c
  BotQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 2
  Executed: 6c
  Critical: 2c, 2 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
SU(1):   %31:fpr64 = LDRDui %30:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
SU(2):   $d0 = COPY %31:fpr64, debug-location !74; mainft.c:83:39

********** MI Scheduling **********
main:%bb.6 if.end17
  From: %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
    To: BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit killed $w4, implicit killed $w5, implicit $d0, implicit killed $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
 RegionInstrs: 29
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=1 OnlyTopDown=0 OnlyBottomUp=0
Max Pressure: FPR8=4
GPR32=9
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
Live In: %62 %61 %60 %59 %63 
Live Out: %62 %61 %60 %59 %63 
Live Thru: FPR8=2
GPR32=3
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %62
  UpdateRegP: SU(28) $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  LiveReg: %61
  UpdateRegP: SU(27) $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
              to FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  LiveReg: %60
  UpdateRegP: SU(26) $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
              to GPR32 -1
  LiveReg: %59
  UpdateRegP: SU(22) $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
              to GPR32 -1
  LiveReg: %63
  UpdateRegP: SU(18) STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
              to 
Top Pressure:
FPR8=2
GPR32=3
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
Bottom Pressure:
FPR8=4
GPR32=9
FPR8+ZPR_3b=4
FPR8+ZPR4_with_zsub1_in_ZPR_3b=4
ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=4
FPR8+ZPR4_with_zsub3_in_ZPR_3b=4
ZPR_4b=4
ZPR=4
Excess PSets: 
Cluster ld/st SU(17) - SU(15)
Cluster ld/st SU(13) - SU(11)
Cluster ld/st SU(9) - SU(7)
Cluster ld/st SU(5) - SU(3)
SU(0):   %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=%64
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(1):   STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=%64
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(2):   %66:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_15__O3__mcmod, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=%66
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(3):   STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=%66
    SU(5): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(4):   %67:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_14__g__Wall__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(5): Data Latency=1 Reg=%67
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(5):   STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(4): Data Latency=1 Reg=%67
  Successors:
    SU(3): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(6):   %68:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_13__I___commo, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=1 Reg=%68
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(7):   STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%68
    SU(9): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(8):   %69:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_12__lm_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(9): Data Latency=1 Reg=%69
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(9):   STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(8): Data Latency=1 Reg=%69
  Successors:
    SU(7): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(10):   %70:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_11___CC__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(11): Data Latency=1 Reg=%70
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(11):   STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=1 Reg=%70
    SU(13): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(12):   %71:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_10_gcc_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(13): Data Latency=1 Reg=%71
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(13):   STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=%71
  Successors:
    SU(11): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(14):   %72:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_9_03_Nov_201, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(15): Data Latency=1 Reg=%72
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(15):   STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak preds left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(14): Data Latency=1 Reg=%72
    SU(17): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(16):   %73:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_8_3_3_1_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(17): Data Latency=1 Reg=%73
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(17):   STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # weak succs left  : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(16): Data Latency=1 Reg=%73
  Successors:
    SU(15): Ord  Latency=0 Cluster
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(18):   STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Pressure Diff      : 
  Single Issue       : false;
SU(19):   %74:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_7___________, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(20): Data Latency=1 Reg=%74
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(20):   STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(19): Data Latency=1 Reg=%74
  Pressure Diff      : GPR32 1
  Single Issue       : false;
SU(21):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_6_FT_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(22):   $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(23):   $w2 = MOVi32imm 512, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(24):   $w3 = MOVi32imm 256, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(25):   $w4 = MOVi32imm 256, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(26):   $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : GPR32 -1
  Single Issue       : false;
SU(27):   $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
SU(28):   $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
  Successors:
    ExitSU: Ord  Latency=0 Artificial
  Pressure Diff      : FPR8 -1    FPR8+ZPR_3b -1    FPR8+ZPR4_with_zsub1_in_ZPR_3b -1    ZPR_3b -1    FPR8+ZPR4_with_zsub2_in_ZPR_3b -1    FPR8+ZPR4_with_zsub3_in_ZPR_3b -1    ZPR_4b -1    ZPR -1
  Single Issue       : false;
ExitSU:   BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit killed $w4, implicit killed $w5, implicit $d0, implicit killed $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
  # preds left       : 8
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(28): Ord  Latency=0 Artificial
    SU(27): Ord  Latency=0 Artificial
    SU(26): Ord  Latency=0 Artificial
    SU(25): Ord  Latency=1 Artificial
    SU(24): Ord  Latency=1 Artificial
    SU(23): Ord  Latency=1 Artificial
    SU(22): Ord  Latency=0 Artificial
    SU(21): Ord  Latency=1 Artificial
Critical Path(GS-RR ): 1
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 25 24 23 21 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 28 27 26 22 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 22 23 24 25 26 27 28 
Picking from Bot:
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(28) PHYS-REG                           
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot PHYS-REG  
Scheduling SU(28) $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=3
GPR32=9
FPR8+ZPR_3b=3
FPR8+ZPR4_with_zsub1_in_ZPR_3b=3
ZPR_3b=1
FPR8+ZPR4_with_zsub2_in_ZPR_3b=3
FPR8+ZPR4_with_zsub3_in_ZPR_3b=3
ZPR_4b=3
ZPR=3
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 25 24 23 21 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 22 27 26 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 22 23 24 25 26 27 
Picking from Bot:
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(22) PHYS-REG                           
  Cand SU(27) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(27) $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=9
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 25 24 23 21 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 22 26 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 22 23 24 25 26 
Picking from Bot:
  Cand SU(20) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(22) PHYS-REG                           
  Cand SU(26) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(26) $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 25 24 23 21 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 22 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 22 23 24 25 
Picking from Bot:
  Cand SU(20) ORDER                              
  Cand SU(22) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(22) $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @0c
BotQ.A @0c
  Retired: 0
  Executed: 0c
  Critical: 0c, 0 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 25 24 23 21 
Queue BotQ.A: 20 18 17 15 13 11 9 7 5 3 1 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 25 23 24 
Picking from Bot:
  Cand SU(20) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(20) STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %74
  UpdateRegP: SU(20) STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
              to 
  Ready @0c
  BotQ.A TopLatency SU(20) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 BotQ.A
BotQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 19 25 21 23 24 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 25 23 24 
BotQ.A RemLatency SU(1) 1c
  BotQ.A RemainingLatency 1 + 1c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(25) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(25) $w4 = MOVi32imm 256, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @1c
  BotQ.A BotLatency SU(25) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 BotQ.A
BotQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 19 24 21 23 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 24 23 
  BotQ.A RemainingLatency 0 + 2c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(24) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(24) $w3 = MOVi32imm 256, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 BotQ.A
BotQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 19 23 21 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 23 
  BotQ.A RemainingLatency 0 + 3c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(15) ORDER                              
  Cand SU(23) PHYS-REG                           
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot PHYS-REG  
Scheduling SU(23) $w2 = MOVi32imm 512, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=5
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 15 13 11 9 7 5 3 19 21 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 
  BotQ.A RemainingLatency 0 + 4c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(15) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(15) STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %72
  UpdateRegP: SU(15) STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
              to 
  Ready @4c
  BotQ.A TopLatency SU(15) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 17 21 13 11 9 7 5 3 19 14 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 
  BotQ.A RemainingLatency 0 + 5c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(17) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(17) STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %73
  UpdateRegP: SU(17) STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
              to 
  Ready @5c
  BotQ.A TopLatency SU(17) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 21 13 11 9 7 5 3 19 16 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 
  BotQ.A RemainingLatency 0 + 6c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(11) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(11) STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %70
  UpdateRegP: SU(11) STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
              to 
  Ready @6c
  BotQ.A TopLatency SU(11) 1c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 21 13 16 9 7 5 3 19 10 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 
  BotQ.A RemainingLatency 0 + 7c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(13) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(13) STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=9
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %71
  UpdateRegP: SU(13) STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
              to 
  Ready @7c
  BotQ.A TopLatency SU(13) 1c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 21 10 16 9 7 5 3 19 12 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 21 
  BotQ.A RemainingLatency 0 + 8c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(21) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(21) $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_6_FT_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @8c
  *** Max MOps 1 at cycle 8
Cycle: 9 BotQ.A
BotQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 9 7 5 3 19 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 
  BotQ.A RemainingLatency 0 + 9c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(7) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(7) STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=9
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %68
  UpdateRegP: SU(7) STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
              to 
  Ready @9c
  BotQ.A TopLatency SU(7) 1c
  *** Max MOps 1 at cycle 9
Cycle: 10 BotQ.A
BotQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 9 19 5 3 6 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 
  BotQ.A RemainingLatency 0 + 10c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(9) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(9) STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=10
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %69
  UpdateRegP: SU(9) STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
              to 
  Ready @10c
  BotQ.A TopLatency SU(9) 1c
  *** Max MOps 1 at cycle 10
Cycle: 11 BotQ.A
BotQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 6 19 5 3 8 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 19 
  BotQ.A RemainingLatency 0 + 11c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(19) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot WEAK      
Scheduling SU(19) %74:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_7___________, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=9
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @11c
  *** Max MOps 1 at cycle 11
Cycle: 12 BotQ.A
BotQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 6 8 5 3 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 
  BotQ.A RemainingLatency 0 + 12c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=10
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %66
  UpdateRegP: SU(3) STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
              to 
  Ready @12c
  BotQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 12
Cycle: 13 BotQ.A
BotQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 6 8 5 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 
  BotQ.A RemainingLatency 0 + 13c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(18) REG-MAX                            
  Cand SU(5) CLUSTER                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot CLUSTER   
Scheduling SU(5) STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=11
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %67
  UpdateRegP: SU(5) STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
              to 
  Ready @13c
  BotQ.A TopLatency SU(5) 1c
  *** Max MOps 1 at cycle 13
Cycle: 14 BotQ.A
BotQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 18 14 12 10 16 6 8 2 4 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 18 
  BotQ.A RemainingLatency 0 + 14c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(18) REG-MAX                            
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot REG-MAX   
Scheduling SU(18) STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=11
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 BotQ.A
BotQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 4 14 12 10 16 6 8 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 16 
  BotQ.A RemainingLatency 0 + 15c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
  Cand SU(4) REG-MAX                            
  Cand SU(14) ORDER                              
  Cand SU(16) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(16) %73:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_8_3_3_1_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=10
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @15c
  *** Max MOps 1 at cycle 15
Cycle: 16 BotQ.A
BotQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 4 14 12 10 2 6 8 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 
  BotQ.A RemainingLatency 0 + 16c > CritPath 1
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot BOT-PATH  
Scheduling SU(1) STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=11
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  LiveReg: %64
  UpdateRegP: SU(1) STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
              to 
  Ready @16c
  BotQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 16
Cycle: 17 BotQ.A
BotQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 4 14 12 10 2 6 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 14 
  BotQ.A RemainingLatency 0 + 17c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(14) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(14) %72:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_9_03_Nov_201, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=10
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @17c
  *** Max MOps 1 at cycle 17
Cycle: 18 BotQ.A
BotQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 4 0 12 10 2 6 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 12 
  BotQ.A RemainingLatency 0 + 18c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(12) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(12) %71:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_10_gcc_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=9
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @18c
  *** Max MOps 1 at cycle 18
Cycle: 19 BotQ.A
BotQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 4 0 6 10 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 10 
  BotQ.A RemainingLatency 0 + 19c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
  Cand SU(10) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(10) %70:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_11___CC__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=8
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @19c
  *** Max MOps 1 at cycle 19
Cycle: 20 BotQ.A
BotQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 8 4 0 6 2 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 8 
  BotQ.A RemainingLatency 0 + 20c > CritPath 1
Picking from Bot:
  Cand SU(8) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(8) %69:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_12__lm_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=7
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @20c
  *** Max MOps 1 at cycle 20
Cycle: 21 BotQ.A
BotQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 4 0 6 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 6 
  BotQ.A RemainingLatency 0 + 21c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
  Cand SU(6) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(6) %68:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_13__I___commo, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=6
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @21c
  *** Max MOps 1 at cycle 21
Cycle: 22 BotQ.A
BotQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 4 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 4 
  BotQ.A RemainingLatency 0 + 22c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(4) %67:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_14__g__Wall__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=5
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @22c
  *** Max MOps 1 at cycle 22
Cycle: 23 BotQ.A
BotQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  BotQ.A RemainingLatency 0 + 23c > CritPath 1
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %66:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_15__O3__mcmod, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=4
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @23c
  *** Max MOps 1 at cycle 23
Cycle: 24 BotQ.A
BotQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
Bottom Pressure:
FPR8=2
GPR32=3
FPR8+ZPR_3b=2
FPR8+ZPR4_with_zsub1_in_ZPR_3b=2
FPR8+ZPR4_with_zsub2_in_ZPR_3b=2
FPR8+ZPR4_with_zsub3_in_ZPR_3b=2
ZPR_4b=2
ZPR=2
  Ready @24c
  *** Max MOps 1 at cycle 24
Cycle: 25 BotQ.A
BotQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
SU(2):   %66:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_15__O3__mcmod, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
SU(4):   %67:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_14__g__Wall__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
SU(6):   %68:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_13__I___commo, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
SU(8):   %69:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_12__lm_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
SU(10):   %70:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_11___CC__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
SU(12):   %71:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_10_gcc_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
SU(14):   %72:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_9_03_Nov_201, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
SU(1):   STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
SU(16):   %73:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_8_3_3_1_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
SU(18):   STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
SU(5):   STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
SU(3):   STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
SU(19):   %74:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_7___________, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, debug-location !96; mainft.c:91:5
SU(9):   STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
SU(7):   STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
SU(21):   $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_6_FT_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
SU(13):   STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
SU(11):   STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
SU(17):   STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
SU(15):   STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
SU(23):   $w2 = MOVi32imm 512, debug-location !96; mainft.c:91:5
SU(24):   $w3 = MOVi32imm 256, debug-location !96; mainft.c:91:5
SU(25):   $w4 = MOVi32imm 256, debug-location !96; mainft.c:91:5
SU(20):   STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
SU(22):   $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
SU(26):   $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
SU(27):   $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
SU(28):   $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5

********** MI Scheduling **********
main:%bb.6 if.end17
  From: %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
    To: ADJCALLSTACKDOWN 88, 0, implicit-def dead $sp, implicit $sp, debug-location !96; mainft.c:91:5
 RegionInstrs: 5
ScheduleDAGMILive::schedule starting
GenericScheduler RegionPolicy:  ShouldTrackPressure=0 OnlyTopDown=0 OnlyBottomUp=0
SU(0):   %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(1):   %60:gpr32 = LDRWui %stack.3.niter, 0, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(2):   %61:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(3):   %62:fpr64 = LDRDui %stack.6.mflops, 0, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
SU(4):   %63:gpr32 = LDRWui %stack.7.verified, 0, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
  Single Issue       : false;
ExitSU:   ADJCALLSTACKDOWN 88, 0, implicit-def dead $sp, implicit $sp, debug-location !96; mainft.c:91:5
  # preds left       : 5
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=3 Artificial
    SU(3): Ord  Latency=3 Artificial
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
    SU(0): Ord  Latency=3 Artificial
Critical Path(GS-RR ): 3
** ScheduleDAGMILive::schedule picking next node
Cycle: 3 BotQ.A
Queue BotQ.P: 
Queue BotQ.A: 4 0 1 2 3 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 4 
Picking from Bot:
  Cand SU(4) ORDER                              
Picking from Top:
  Cand SU(0) ORDER                              
Pick Bot ORDER     
Scheduling SU(4) %63:gpr32 = LDRWui %stack.7.verified, 0, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  Ready @3c
  BotQ.A BotLatency SU(4) 3c
  *** Max MOps 1 at cycle 3
Cycle: 4 BotQ.A
BotQ.A @4c
  Retired: 1
  Executed: 4c
  Critical: 1c, 1 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 3 0 1 2 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  BotQ.A RemainingLatency 0 + 4c > CritPath 3
Picking from Bot:
  Cand SU(3) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(3) %62:fpr64 = LDRDui %stack.6.mflops, 0, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
  Ready @4c
  *** Max MOps 1 at cycle 4
Cycle: 5 BotQ.A
BotQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 2 0 1 
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  BotQ.A RemainingLatency 0 + 5c > CritPath 3
Picking from Bot:
  Cand SU(2) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(2) %61:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 BotQ.A
BotQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 1 0 
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  BotQ.A RemainingLatency 0 + 6c > CritPath 3
Picking from Bot:
  Cand SU(1) ORDER                              
Picking from Top:
  Cand SU(0) NOCAND                             
Pick Bot ORDER     
Scheduling SU(1) %60:gpr32 = LDRWui %stack.3.niter, 0, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  Ready @6c
  *** Max MOps 1 at cycle 6
Cycle: 7 BotQ.A
BotQ.A @7c
  Retired: 4
  Executed: 7c
  Critical: 4c, 4 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
Queue BotQ.P: 
Queue BotQ.A: 0 
Pick Bot ONLY1     
Scheduling SU(0) %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 BotQ.A
BotQ.A @8c
  Retired: 5
  Executed: 8c
  Critical: 5c, 5 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMILive::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
SU(1):   %60:gpr32 = LDRWui %stack.3.niter, 0, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
SU(2):   %61:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
SU(3):   %62:fpr64 = LDRDui %stack.6.mflops, 0, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
SU(4):   %63:gpr32 = LDRWui %stack.7.verified, 0, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47

********** INTERVALS **********
WSP [112r,112d:54)[192r,192d:53)[208r,208d:52)[224r,224d:51)[256r,256d:50)[432r,432d:49)[448r,448d:48)[464r,464d:47)[480r,480d:46)[512r,512d:45)[656r,656d:44)[704r,704d:43)[720r,720d:42)[736r,736d:41)[768r,768d:40)[784r,784d:39)[912r,912d:38)[928r,928d:37)[944r,944d:36)[976r,976d:35)[1008r,1008d:34)[1072r,1072d:33)[1088r,1088d:32)[1104r,1104d:31)[1136r,1136d:30)[1152r,1152d:29)[1200r,1200d:28)[1216r,1216d:27)[1232r,1232d:26)[1264r,1264d:25)[1280r,1280d:24)[1296r,1296d:23)[1312r,1312d:22)[1328r,1328d:21)[1360r,1360d:20)[1424r,1424d:19)[1520r,1520d:18)[1536r,1536d:17)[1552r,1552d:16)[1584r,1584d:15)[1680r,1680d:14)[1744r,1744d:13)[1760r,1760d:12)[1776r,1776d:11)[1808r,1808d:10)[1936r,1936d:9)[1968r,1968d:8)[1984r,1984d:7)[2000r,2000d:6)[2032r,2032d:5)[2528r,2528d:4)[3072r,3072d:3)[3088r,3088d:2)[3104r,3104d:1)[3136r,3136d:0)  0@3136r 1@3104r 2@3088r 3@3072r 4@2528r 5@2032r 6@2000r 7@1984r 8@1968r 9@1936r 10@1808r 11@1776r 12@1760r 13@1744r 14@1680r 15@1584r 16@1552r 17@1536r 18@1520r 19@1424r 20@1360r 21@1328r 22@1312r 23@1296r 24@1280r 25@1264r 26@1232r 27@1216r 28@1200r 29@1152r 30@1136r 31@1104r 32@1088r 33@1072r 34@1008r 35@976r 36@944r 37@928r 38@912r 39@784r 40@768r 41@736r 42@720r 43@704r 44@656r 45@512r 46@480r 47@464r 48@448r 49@432r 50@256r 51@224r 52@208r 53@192r 54@112r
B0 [1728r,1744r:4)[1744r,1908r:3)[1952r,1968r:2)[1968r,2048r:1)[3040r,3072r:0)  0@3040r 1@1968r 2@1952r 3@1744r 4@1728r
W0 [0B,32r:0)[160r,192r:8)[440r,448r:7)[688r,704r:6)[848r,912r:5)[1040r,1072r:4)[1184r,1200r:3)[1512r,1520r:1)[2944r,3072r:2)  0@0B-phi 1@1512r 2@2944r 3@1184r 4@1040r 5@848r 6@688r 7@440r 8@160r
W1 [0B,16r:0)[176r,192r:5)[864r,912r:3)[1056r,1072r:2)[1488r,1520r:4)[3016r,3072r:1)  0@0B-phi 1@3016r 2@1056r 3@864r 4@1488r 5@176r
W8 [192r,272r:7)[448r,448d:6)[704r,704d:5)[912r,912d:4)[1072r,1072d:3)[1200r,1200d:2)[1296r,1412r:1)[3168r,3184r:0)  0@3168r 1@1296r 2@1200r 3@1072r 4@912r 5@704r 6@448r 7@192r
%0 [32r,80r:0)  0@32r weight:0.000000e+00
%1 [16r,96r:0)  0@16r weight:0.000000e+00
%5 [272r,304r:0)  0@272r weight:0.000000e+00
%6 [560r,592r:0)  0@560r weight:0.000000e+00
%8 [408r,424r:0)  0@408r weight:0.000000e+00
%9 [416r,424r:0)  0@416r weight:0.000000e+00
%10 [400r,496r:0)  0@400r weight:0.000000e+00
%12 [624r,640r:0)  0@624r weight:0.000000e+00
%19 [992r,1120r:0)  0@992r weight:0.000000e+00
%24 [1412r,1416r:0)  0@1412r weight:0.000000e+00
%25 [1408r,1568r:0)  0@1408r weight:0.000000e+00
%28 [1600r,1616r:0)  0@1600r weight:0.000000e+00
%30 [1696r,1712r:0)  0@1696r weight:0.000000e+00
%31 [1712r,1952r:0)  0@1712r weight:0.000000e+00
%32 [1908r,1912r:0)  0@1908r weight:0.000000e+00
%33 [1840r,1856r:0)  0@1840r weight:0.000000e+00
%34 [1856r,1912r:0)  0@1856r weight:0.000000e+00
%35 [1912r,1920r:0)  0@1912r weight:0.000000e+00
%36 [1888r,1904r:0)  0@1888r weight:0.000000e+00
%37 [1904r,1920r:0)  0@1904r weight:0.000000e+00
%38 [1920r,2344r:0)  0@1920r weight:0.000000e+00
%39 [2048r,2280r:0)  0@2048r weight:0.000000e+00
%40 [2064r,2080r:0)  0@2064r weight:0.000000e+00
%41 [2080r,2280r:0)  0@2080r weight:0.000000e+00
%42 [2280r,2312r:0)  0@2280r weight:0.000000e+00
%43 [2112r,2168r:0)  0@2112r weight:0.000000e+00
%44 [2168r,2312r:0)  0@2168r weight:0.000000e+00
%45 [2312r,2336r:0)  0@2312r weight:0.000000e+00
%47 [2160r,2296r:0)  0@2160r weight:0.000000e+00
%49 [2296r,2304r:0)  0@2296r weight:0.000000e+00
%51 [2304r,2336r:0)  0@2304r weight:0.000000e+00
%52 [2336r,2344r:0)  0@2336r weight:0.000000e+00
%53 [2344r,2352r:0)  0@2344r weight:0.000000e+00
%54 [2272r,2288r:0)  0@2272r weight:0.000000e+00
%55 [2288r,2352r:0)  0@2288r weight:0.000000e+00
%56 [2352r,2360r:0)  0@2352r weight:0.000000e+00
%57 [2328r,2360r:0)  0@2328r weight:0.000000e+00
%58 [2360r,2368r:0)  0@2360r weight:0.000000e+00
%59 [2448r,3120r:0)  0@2448r weight:0.000000e+00
%60 [2464r,3120r:0)  0@2464r weight:0.000000e+00
%61 [2480r,3120r:0)  0@2480r weight:0.000000e+00
%62 [2496r,3120r:0)  0@2496r weight:0.000000e+00
%63 [2512r,3120r:0)  0@2512r weight:0.000000e+00
%64 [2544r,2792r:0)  0@2544r weight:0.000000e+00
%66 [2592r,2856r:0)  0@2592r weight:0.000000e+00
%67 [2624r,2852r:0)  0@2624r weight:0.000000e+00
%68 [2656r,2872r:0)  0@2656r weight:0.000000e+00
%69 [2688r,2868r:0)  0@2688r weight:0.000000e+00
%70 [2720r,2952r:0)  0@2720r weight:0.000000e+00
%71 [2752r,2948r:0)  0@2752r weight:0.000000e+00
%72 [2784r,2968r:0)  0@2784r weight:0.000000e+00
%73 [2816r,2960r:0)  0@2816r weight:0.000000e+00
%74 [2864r,3012r:0)  0@2864r weight:0.000000e+00
RegMasks: 192r 448r 704r 912r 1072r 1200r 1296r 1520r 1744r 1968r 3072r
********** MACHINEINSTRS **********
# Machine code for function main: NoPHIs, TracksLiveness
Frame Objects:
  fi#0: size=4, align=4, at location [SP]
  fi#1: size=4, align=4, at location [SP]
  fi#2: size=8, align=8, at location [SP]
  fi#3: size=4, align=4, at location [SP]
  fi#4: size=1, align=4, at location [SP]
  fi#5: size=8, align=8, at location [SP]
  fi#6: size=8, align=8, at location [SP]
  fi#7: size=4, align=4, at location [SP]
  fi#8: size=8, align=8, at location [SP]
Constant Pool:
  cp#0: 0x4180000000000000, align=8
  cp#1: 7.196410e+00, align=8
  cp#2: 1.481570e+01, align=8
  cp#3: 7.211130e+00, align=8
  cp#4: 5.235180e+00, align=8
  cp#5: 0x4040C6F7A0B5ED8D, align=8
Function Live Ins: $w0 in %0, $x1 in %1

0B	bb.0.entry:
	  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
	  liveins: $w0, $x1
16B	  %1:gpr64 = COPY $x1
32B	  %0:gpr32 = COPY $w0
64B	  STRWui $wzr, %stack.0.retval, 0 :: (store 4 into %ir.retval)
80B	  STRWui %0:gpr32, %stack.1.argc.addr, 0 :: (store 4 into %ir.argc.addr)
96B	  STRXui %1:gpr64, %stack.2.argv.addr, 0 :: (store 8 into %ir.argv.addr)
112B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !48; mainft.c:62:15
160B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_timer_flag, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
176B	  $x1 = MOVaddr target-flags(aarch64-page) @mainft__str_1_r_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
192B	  BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
208B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !48; mainft.c:62:15
224B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !50; mainft.c:62:13
240B	  PCN_STACKMAP 0, 0, 0, %stack.4.Class, 0, 0, %stack.8.fp, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !50 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.8.fp), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:62:13
256B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !50; mainft.c:62:13
272B	  %5:gpr64 = COPY $x8, debug-location !48; mainft.c:62:15
288B	  STRXui %5:gpr64, %stack.8.fp, 0, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
304B	  CBZX %5:gpr64, %bb.2, debug-location !52; mainft.c:62:9
320B	  B %bb.1, debug-location !52; mainft.c:62:9

336B	bb.1.if.then:
	; predecessors: %bb.0
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

400B	  %10:gpr64 = LDRXui %stack.8.fp, 0, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
408B	  %8:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
416B	  %9:gpr32 = MOVi32imm 1
424B	  STRWui %9:gpr32, %8:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
432B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !56; mainft.c:64:9
440B	  $x0 = COPY %10:gpr64, debug-location !56; mainft.c:64:9
448B	  BL @fclose, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !56; mainft.c:64:9
464B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !56; mainft.c:64:9
480B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !57; mainft.c:65:5
496B	  PCN_STACKMAP 1, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %10:gpr64, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !57 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:65:5
512B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !57; mainft.c:65:5
528B	  B %bb.3, debug-location !57; mainft.c:65:5

544B	bb.2.if.else:
	; predecessors: %bb.0
	  successors: %bb.3(0x80000000); %bb.3(100.00%)

560B	  %6:gpr64temp = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
592B	  STRWui $wzr, %6:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

608B	bb.3.if.end:
	; predecessors: %bb.2, %bb.1
	  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

624B	  %12:gpr32 = MOVi32imm 20
640B	  STRWui %12:gpr32, %stack.3.niter, 0, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
656B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !61; mainft.c:72:5
688B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_2____NAS_Par, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
704B	  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !61; mainft.c:72:5
720B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !61; mainft.c:72:5
736B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !62; mainft.c:73:5
752B	  PCN_STACKMAP 2, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !62 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:73:5
768B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !62; mainft.c:73:5
784B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !62; mainft.c:73:5
848B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_3__Size_____, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
864B	  $w1 = MOVi32imm 512, debug-location !62; mainft.c:73:5
880B	  $w2 = MOVi32imm 256, debug-location !62; mainft.c:73:5
896B	  $w3 = MOVi32imm 256, debug-location !62; mainft.c:73:5
912B	  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
928B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !62; mainft.c:73:5
944B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !63; mainft.c:74:49
960B	  PCN_STACKMAP 3, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !63 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:74:49
976B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !63; mainft.c:74:49
992B	  %19:gpr32 = LDRWui %stack.3.niter, 0, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
1008B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !64; mainft.c:74:5
1040B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_4__Iteration, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
1056B	  $w1 = COPY %19:gpr32, debug-location !64; mainft.c:74:5
1072B	  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
1088B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !64; mainft.c:74:5
1104B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !65; mainft.c:75:5
1120B	  PCN_STACKMAP 4, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %19:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !65 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:75:5
1136B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !65; mainft.c:75:5
1152B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !65; mainft.c:75:5
1184B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_5___, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, debug-location !65; mainft.c:75:5
1200B	  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !65; mainft.c:75:5
1216B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !65; mainft.c:75:5
1232B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !66; mainft.c:77:13
1248B	  PCN_STACKMAP 5, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !66 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:13
1264B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !66; mainft.c:77:13
1280B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !66; mainft.c:77:13
1296B	  BL @getclass, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $w8, debug-location !66; mainft.c:77:13
1312B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !66; mainft.c:77:13
1328B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !67; mainft.c:77:11
1344B	  PCN_STACKMAP 6, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !67 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:11
1360B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !67; mainft.c:77:11
1408B	  %25:gpr32 = LDRWui %stack.3.niter, 0, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
1412B	  %24:gpr32 = COPY $w8, debug-location !66; mainft.c:77:13
1416B	  STRBBui %24:gpr32, %stack.4.Class, 0, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
1424B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !69; mainft.c:79:5
1488B	  $x1 = ADDXri %stack.5.total_time, 0, 0, debug-location !69; mainft.c:79:5
1504B	  $x2 = ADDXri %stack.7.verified, 0, 0, debug-location !69; mainft.c:79:5
1512B	  $w0 = COPY %25:gpr32, debug-location !69; mainft.c:79:5
1520B	  BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit killed $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
1536B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !69; mainft.c:79:5
1552B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !70; mainft.c:81:9
1568B	  PCN_STACKMAP 7, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, %25:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !70 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:81:9
1584B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !70; mainft.c:81:9
1600B	  %28:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
1616B	  FCMPDri %28:fpr64, implicit-def $nzcv, debug-location !73; mainft.c:81:9
1632B	  Bcc 0, %bb.5, implicit killed $nzcv, debug-location !73; mainft.c:81:9
1648B	  B %bb.4, debug-location !73; mainft.c:81:9

1664B	bb.4.if.then8:
	; predecessors: %bb.3
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

1680B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !74; mainft.c:83:39
1696B	  %30:gpr64temp = ADRP target-flags(aarch64-page) %const.0
1712B	  %31:fpr64 = LDRDui %30:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
1728B	  $d0 = COPY %31:fpr64, debug-location !74; mainft.c:83:39
1744B	  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
1760B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !74; mainft.c:83:39
1776B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !76; mainft.c:83:37
1792B	  PCN_STACKMAP 8, 0, 0, %stack.4.Class, 0, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !76 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:83:37
1808B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !76; mainft.c:83:37
1840B	  %33:gpr64temp = ADRP target-flags(aarch64-page) %const.1
1856B	  %34:fpr64 = LDRDui %33:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
1888B	  %36:gpr64temp = ADRP target-flags(aarch64-page) %const.2
1904B	  %37:fpr64 = LDRDui %36:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
1908B	  %32:fpr64 = COPY $d0, debug-location !74; mainft.c:83:39
1912B	  %35:fpr64 = FMULDrr %32:fpr64, %34:fpr64, debug-location !76; mainft.c:83:37
1920B	  %38:fpr64 = FADDDrr %35:fpr64, %37:fpr64, debug-location !77; mainft.c:83:27
1936B	  ADJCALLSTACKDOWN 0, 0, implicit-def dead $sp, implicit $sp, debug-location !78; mainft.c:84:40
1952B	  $d0 = COPY %31:fpr64, debug-location !78; mainft.c:84:40
1968B	  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !78; mainft.c:84:40
1984B	  ADJCALLSTACKUP 0, 0, implicit-def $sp, implicit $sp, debug-location !78; mainft.c:84:40
2000B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !79; mainft.c:84:38
2016B	  PCN_STACKMAP 9, 0, 0, %stack.4.Class, 0, %38:fpr64, 0, %stack.6.mflops, 0, 0, %stack.3.niter, 0, 0, %stack.5.total_time, 0, 0, %stack.7.verified, 0, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !79 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:84:38
2032B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !79; mainft.c:84:38
2048B	  %39:fpr64 = COPY $d0, debug-location !78; mainft.c:84:40
2064B	  %40:gpr64temp = ADRP target-flags(aarch64-page) %const.3
2080B	  %41:fpr64 = LDRDui %40:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
2112B	  %43:gpr64temp = ADRP target-flags(aarch64-page) %const.4
2160B	  undef %47.ssub:fpr64 = LDRSui %stack.3.niter, 0, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
2168B	  %44:fpr64 = LDRDui %43:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
2272B	  %54:gpr64temp = ADRP target-flags(aarch64-page) %const.5
2280B	  %42:fpr64 = FMULDrr %39:fpr64, %41:fpr64, debug-location !79; mainft.c:84:38
2288B	  %55:fpr64 = LDRDui %54:gpr64temp, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
2296B	  %49:fpr128 = SSHLLv2i32_shift %47:fpr64, 0, debug-location !81; mainft.c:84:63
2304B	  %51:fpr64 = SCVTFv1i64 %49.dsub:fpr128, debug-location !81; mainft.c:84:63
2312B	  %45:fpr64 = FADDDrr %42:fpr64, %44:fpr64, debug-location !80; mainft.c:84:28
2328B	  %57:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
2336B	  %52:fpr64 = FMULDrr %45:fpr64, %51:fpr64, debug-location !82; mainft.c:84:61
2344B	  %53:fpr64 = FADDDrr %38:fpr64, %52:fpr64, debug-location !83; mainft.c:83:59
2352B	  %56:fpr64 = FMULDrr %53:fpr64, %55:fpr64, debug-location !84; mainft.c:82:42
2360B	  %58:fpr64 = FDIVDrr %56:fpr64, %57:fpr64, debug-location !86; mainft.c:84:70
2368B	  STRDui %58:fpr64, %stack.6.mflops, 0, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
2376B	  B %bb.6, debug-location !88; mainft.c:86:5

2384B	bb.5.if.else16:
	; predecessors: %bb.3
	  successors: %bb.6(0x80000000); %bb.6(100.00%)

2416B	  STRXui $xzr, %stack.6.mflops, 0, debug-location !89 :: (store 8 into %ir.mflops); mainft.c:88:16

2432B	bb.6.if.end17:
	; predecessors: %bb.5, %bb.4

2448B	  %59:gpr32 = LDRSBWui %stack.4.Class, 0, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
2464B	  %60:gpr32 = LDRWui %stack.3.niter, 0, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
2480B	  %61:fpr64 = LDRDui %stack.5.total_time, 0, debug-location !93 :: (dereferenceable load 8 from %ir.total_time); mainft.c:91:51
2496B	  %62:fpr64 = LDRDui %stack.6.mflops, 0, debug-location !94 :: (dereferenceable load 8 from %ir.mflops); mainft.c:91:63
2512B	  %63:gpr32 = LDRWui %stack.7.verified, 0, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
2528B	  ADJCALLSTACKDOWN 88, 0, implicit-def dead $sp, implicit $sp, debug-location !96; mainft.c:91:5
2544B	  %64:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_16_randdp_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
2592B	  %66:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_15__O3__mcmod, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
2624B	  %67:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_14__g__Wall__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
2656B	  %68:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_13__I___commo, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
2688B	  %69:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_12__lm_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
2720B	  %70:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_11___CC__, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
2752B	  %71:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_10_gcc_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
2784B	  %72:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_9_03_Nov_201, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
2792B	  STRXui %64:gpr64, $sp, 10, debug-location !96 :: (store 8 into stack + 80); mainft.c:91:5
2816B	  %73:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_8_3_3_1_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
2848B	  STRWui %63:gpr32, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
2852B	  STRXui %67:gpr64, $sp, 8, debug-location !96 :: (store 8 into stack + 64); mainft.c:91:5
2856B	  STRXui %66:gpr64, $sp, 9, debug-location !96 :: (store 8 into stack + 72); mainft.c:91:5
2864B	  %74:gpr64 = MOVaddr target-flags(aarch64-page) @mainft__str_7___________, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, debug-location !96; mainft.c:91:5
2868B	  STRXui %69:gpr64, $sp, 6, debug-location !96 :: (store 8 into stack + 48); mainft.c:91:5
2872B	  STRXui %68:gpr64, $sp, 7, debug-location !96 :: (store 8 into stack + 56); mainft.c:91:5
2944B	  $x0 = MOVaddr target-flags(aarch64-page) @mainft__str_6_FT_, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
2948B	  STRXui %71:gpr64, $sp, 4, debug-location !96 :: (store 8 into stack + 32); mainft.c:91:5
2952B	  STRXui %70:gpr64, $sp, 5, debug-location !96 :: (store 8 into stack + 40); mainft.c:91:5
2960B	  STRXui %73:gpr64, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
2968B	  STRXui %72:gpr64, $sp, 3, debug-location !96 :: (store 8 into stack + 24); mainft.c:91:5
2984B	  $w2 = MOVi32imm 512, debug-location !96; mainft.c:91:5
2992B	  $w3 = MOVi32imm 256, debug-location !96; mainft.c:91:5
3008B	  $w4 = MOVi32imm 256, debug-location !96; mainft.c:91:5
3012B	  STRXui %74:gpr64, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
3016B	  $w1 = COPY %59:gpr32, debug-location !96; mainft.c:91:5
3024B	  $w5 = COPY %60:gpr32, debug-location !96; mainft.c:91:5
3040B	  $d0 = COPY %61:fpr64, debug-location !96; mainft.c:91:5
3056B	  $d1 = COPY %62:fpr64, debug-location !96; mainft.c:91:5
3072B	  BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit killed $w2, implicit killed $w3, implicit killed $w4, implicit killed $w5, implicit $d0, implicit killed $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
3088B	  ADJCALLSTACKUP 88, 0, implicit-def $sp, implicit $sp, debug-location !96; mainft.c:91:5
3104B	  ADJCALLSTACKDOWN 0, 0, implicit-def $sp, implicit $sp, debug-location !97; mainft.c:95:5
3120B	  PCN_STACKMAP 10, 0, %59:gpr32, %60:gpr32, %61:fpr64, %62:fpr64, %63:gpr32, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !97; mainft.c:95:5
3136B	  ADJCALLSTACKUP 0, 0, implicit-def dead $sp, implicit $sp, debug-location !97; mainft.c:95:5
3168B	  $w8 = COPY $wzr, debug-location !98; mainft.c:98:5
3184B	  RET_ReallyLR implicit $w8, debug-location !98; mainft.c:98:5

# End machine code for function main.

Before post-MI-sched:
# Machine code for function main: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#0: size=4, align=4, at location [SP-44]
  fi#1: size=4, align=4, at location [SP-48]
  fi#2: size=8, align=8, at location [SP-56]
  fi#3: size=4, align=4, at location [SP-60]
  fi#4: size=1, align=4, at location [SP-64]
  fi#5: size=8, align=8, at location [SP-72]
  fi#6: size=8, align=8, at location [SP-80]
  fi#7: size=4, align=4, at location [SP-84]
  fi#8: size=8, align=8, at location [SP-96]
  fi#9: size=8, align=8, at location [SP-104]
  fi#10: size=8, align=8, at location [SP-112]
  fi#11: size=8, align=8, at location [SP-120]
  fi#12: dead
  fi#13: dead
  fi#14: size=8, align=8, at location [SP-40]
  fi#15: size=8, align=8, at location [SP-8]
  fi#16: size=8, align=8, at location [SP-16]
  fi#17: size=8, align=8, at location [SP-24]
  fi#18: size=8, align=8, at location [SP-32]
Constant Pool:
  cp#0: 0x4180000000000000, align=8
  cp#1: 7.196410e+00, align=8
  cp#2: 1.481570e+01, align=8
  cp#3: 7.211130e+00, align=8
  cp#4: 5.235180e+00, align=8
  cp#5: 0x4040C6F7A0B5ED8D, align=8
Function Live Ins: $w0, $x1

bb.0.entry:
  successors: %bb.1(0x50000000), %bb.2(0x30000000); %bb.1(62.50%), %bb.2(37.50%)
  liveins: $w0, $x1, $x19, $x20, $lr
  $sp = frame-setup SUBXri $sp, 208, 0
  frame-setup STPXi killed $x20, killed $x19, $sp, 22 :: (store 8 into %stack.18), (store 8 into %stack.17)
  frame-setup STPXi killed $fp, killed $lr, $sp, 24 :: (store 8 into %stack.16), (store 8 into %stack.15)
  $fp = frame-setup ADDXri $sp, 192, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8
  frame-setup CFI_INSTRUCTION offset $w29, -16
  frame-setup CFI_INSTRUCTION offset $w19, -24
  frame-setup CFI_INSTRUCTION offset $w20, -32
  STPWi renamable $w0, $wzr, $fp, -8 :: (store 4 into %ir.retval), (store 4 into %ir.argc.addr)
  STURXi killed renamable $x1, $fp, -40 :: (store 8 into %ir.argv.addr)
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, 0, debug-location !48; mainft.c:62:15
  $x1 = ADRP target-flags(aarch64-page) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, 0, debug-location !48; mainft.c:62:15
  BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
  PCN_STACKMAP 0, 0, 0, $fp, -48, 0, $fp, -80, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !50 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.8.fp), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:62:13
  STURXi renamable $x8, $fp, -80, debug-location !50 :: (store 8 into %ir.fp); mainft.c:62:13
  CBZX killed renamable $x8, %bb.2, debug-location !52; mainft.c:62:9

bb.1.if.then:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  renamable $x19 = LDURXi $fp, -80, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  $w16 = MOVZWi 1, 0
  STRWui killed renamable $w16, killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  $x0 = ORRXrs $xzr, $x19, 0, debug-location !56; mainft.c:64:9
  BL @fclose, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !56; mainft.c:64:9
  PCN_STACKMAP 1, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, killed renamable $x19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !57 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:65:5
  B %bb.3

bb.2.if.else:
; predecessors: %bb.0
  successors: %bb.3(0x80000000); %bb.3(100.00%)

  renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  STRWui $wzr, killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

bb.3.if.end:
; predecessors: %bb.2, %bb.1
  successors: %bb.4(0x50000000), %bb.5(0x30000000); %bb.4(62.50%), %bb.5(37.50%)

  $w8 = MOVZWi 20, 0
  STURWi killed renamable $w8, $fp, -44, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, 0, debug-location !61; mainft.c:72:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !61; mainft.c:72:5
  PCN_STACKMAP 2, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !62 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:73:5
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, 0, debug-location !62; mainft.c:73:5
  $w1 = MOVZWi 512, 0, debug-location !62; mainft.c:73:5
  $w2 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  $w3 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
  PCN_STACKMAP 3, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !63 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:74:49
  renamable $w19 = LDURWi $fp, -44, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, 0, debug-location !64; mainft.c:74:5
  $w1 = ORRWrs $wzr, $w19, 0, debug-location !64; mainft.c:74:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
  PCN_STACKMAP 4, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, killed renamable $w19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !65 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:75:5
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_5___, debug-location !65; mainft.c:75:5
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, 0, debug-location !65; mainft.c:75:5
  BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !65; mainft.c:75:5
  PCN_STACKMAP 5, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !66 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:13
  BL @getclass, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit-def $sp, implicit-def $w8, debug-location !66; mainft.c:77:13
  PCN_STACKMAP 6, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !67 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:77:11
  renamable $w19 = LDURWi $fp, -44, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  STURBBi killed renamable $w8, $fp, -48, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  $x1 = SUBXri $fp, 56, 0, debug-location !69; mainft.c:79:5
  $x2 = SUBXri $fp, 68, 0, debug-location !69; mainft.c:79:5
  $w0 = ORRWrs $wzr, $w19, 0, debug-location !69; mainft.c:79:5
  BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
  PCN_STACKMAP 7, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, killed renamable $w19, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !70 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:81:9
  renamable $d0 = LDURDi $fp, -56, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  FCMPDri killed renamable $d0, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  Bcc 0, %bb.5, implicit $nzcv, debug-location !73; mainft.c:81:9

bb.4.if.then8:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  renamable $x8 = ADRP target-flags(aarch64-page) %const.0
  renamable $d0 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  STRDui renamable $d0, $sp, 12 :: (store 8 into %stack.10)
  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
  PCN_STACKMAP 8, 0, 0, $fp, -48, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !76 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:83:37
  renamable $x8 = ADRP target-flags(aarch64-page) %const.1
  renamable $d1 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  renamable $x8 = ADRP target-flags(aarch64-page) %const.2
  renamable $d2 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  renamable $d0 = FMULDrr killed renamable $d0, killed renamable $d1, debug-location !76; mainft.c:83:37
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d2, debug-location !77; mainft.c:83:27
  STURDi killed renamable $d0, $fp, -88 :: (store 8 into %stack.9)
  $d0 = LDRDui $sp, 12 :: (load 8 from %stack.10)
  BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !78; mainft.c:84:40
  renamable $d4 = LDURDi $fp, -88 :: (load 8 from %stack.9)
  PCN_STACKMAP 9, 0, 0, $fp, -48, 1, 8, $fp, -88, 0, $fp, -64, 0, $fp, -44, 0, $fp, -56, 0, $fp, -68, implicit-def dead early-clobber $lr, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !79 :: (load 8 from %stack.4.Class, align 4), (load 8 from %stack.6.mflops), (load 8 from %stack.3.niter, align 4), (load 8 from %stack.5.total_time), (load 8 from %stack.7.verified, align 4); mainft.c:84:38
  renamable $x8 = ADRP target-flags(aarch64-page) %const.3
  renamable $d1 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
  renamable $x8 = ADRP target-flags(aarch64-page) %const.4
  renamable $s2 = LDURSi $fp, -44, implicit-def $d2, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  renamable $d3 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
  renamable $x8 = ADRP target-flags(aarch64-page) %const.5
  renamable $d0 = FMULDrr killed renamable $d0, killed renamable $d1, debug-location !79; mainft.c:84:38
  renamable $d1 = LDRDui killed renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
  renamable $q2 = SSHLLv2i32_shift killed renamable $d2, 0, debug-location !81; mainft.c:84:63
  renamable $d2 = SCVTFv1i64 renamable $d2, implicit killed $q2, debug-location !81; mainft.c:84:63
  renamable $d0 = FADDDrr killed renamable $d0, killed renamable $d3, debug-location !80; mainft.c:84:28
  renamable $d3 = LDURDi $fp, -56, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
  renamable $d0 = FMULDrr killed renamable $d0, killed renamable $d2, debug-location !82; mainft.c:84:61
  renamable $d0 = FADDDrr killed renamable $d4, killed renamable $d0, debug-location !83; mainft.c:83:59
  renamable $d0 = FMULDrr killed renamable $d0, killed renamable $d1, debug-location !84; mainft.c:82:42
  renamable $d0 = FDIVDrr killed renamable $d0, killed renamable $d3, debug-location !86; mainft.c:84:70
  STURDi killed renamable $d0, $fp, -64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  B %bb.6

bb.5.if.else16:
; predecessors: %bb.3
  successors: %bb.6(0x80000000); %bb.6(100.00%)

  STURXi $xzr, $fp, -64, debug-location !89 :: (store 8 into %ir.mflops); mainft.c:88:16

bb.6.if.end17:
; predecessors: %bb.5, %bb.4

  renamable $w20 = LDURSBWi $fp, -48, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  renamable $w19 = LDURWi $fp, -44, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  renamable $d1, renamable $d0 = LDPDi $fp, -8, debug-location !93 :: (dereferenceable load 8 from %ir.total_time), (dereferenceable load 8 from %ir.mflops); mainft.c:91:51
  STPDi renamable $d1, renamable $d0, $sp, 11 :: (store 8 into %stack.10), (store 8 into %stack.11)
  renamable $w6 = LDURWi $fp, -68, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  STURWi renamable $w6, $fp, -88 :: (store 4 into %stack.9)
  $x8 = ADRP target-flags(aarch64-page) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
  renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, 0, debug-location !96; mainft.c:91:5
  $x16 = ADRP target-flags(aarch64-page) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
  renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, 0, debug-location !96; mainft.c:91:5
  $x17 = ADRP target-flags(aarch64-page) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
  renamable $x17 = ADDXri $x17, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, 0, debug-location !96; mainft.c:91:5
  $x18 = ADRP target-flags(aarch64-page) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
  renamable $x18 = ADDXri $x18, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, 0, debug-location !96; mainft.c:91:5
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
  renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, 0, debug-location !96; mainft.c:91:5
  $x4 = ADRP target-flags(aarch64-page) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
  renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, 0, debug-location !96; mainft.c:91:5
  $x2 = ADRP target-flags(aarch64-page) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
  renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, 0, debug-location !96; mainft.c:91:5
  $x3 = ADRP target-flags(aarch64-page) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
  renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, 0, debug-location !96; mainft.c:91:5
  STPXi renamable $x16, renamable $x8, $sp, 9, debug-location !96 :: (store 8 into stack + 80), (store 8 into stack + 72); mainft.c:91:5
  $x8 = ADRP target-flags(aarch64-page) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
  renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, 0, debug-location !96; mainft.c:91:5
  STRWui killed renamable $w6, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  STPXi renamable $x18, renamable $x17, $sp, 7, debug-location !96 :: (store 8 into stack + 64), (store 8 into stack + 56); mainft.c:91:5
  $x16 = ADRP target-flags(aarch64-page) @mainft__str_7___________, debug-location !96; mainft.c:91:5
  renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, 0, debug-location !96; mainft.c:91:5
  STPXi renamable $x4, renamable $x0, $sp, 5, debug-location !96 :: (store 8 into stack + 48), (store 8 into stack + 40); mainft.c:91:5
  $x0 = ADRP target-flags(aarch64-page) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
  $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, 0, debug-location !96; mainft.c:91:5
  STPXi renamable $x3, renamable $x2, $sp, 3, debug-location !96 :: (store 8 into stack + 32), (store 8 into stack + 24); mainft.c:91:5
  STRXui killed renamable $x8, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  $w2 = MOVZWi 512, 0, debug-location !96; mainft.c:91:5
  $w3 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  $w4 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  STRXui killed renamable $x16, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  $w1 = ORRWrs $wzr, $w20, 0, debug-location !96; mainft.c:91:5
  $w5 = ORRWrs $wzr, $w19, 0, debug-location !96; mainft.c:91:5
  BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $w5, implicit $d0, implicit $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
  PCN_STACKMAP 10, 0, killed renamable $w20, killed renamable $w19, 1, 8, $fp, -96, 1, 8, $fp, -104, 1, 4, $fp, -88, implicit-def dead early-clobber $x16, implicit-def dead early-clobber $x17, implicit-def dead early-clobber $lr, debug-location !97 :: (load 4 from %stack.9), (load 8 from %stack.10), (load 8 from %stack.11); mainft.c:95:5
  $w8 = ORRWrs $wzr, $wzr, 0, debug-location !98; mainft.c:98:5
  $fp, $lr = frame-destroy LDPXi $sp, 24, debug-location !98 :: (load 8 from %stack.16), (load 8 from %stack.15); mainft.c:98:5
  $x20, $x19 = frame-destroy LDPXi $sp, 22, debug-location !98 :: (load 8 from %stack.18), (load 8 from %stack.17); mainft.c:98:5
  $sp = frame-destroy ADDXri $sp, 208, 0, debug-location !98; mainft.c:98:5
  RET undef $lr, implicit $w8, debug-location !98; mainft.c:98:5

# End machine code for function main.

********** MI Scheduling **********
main:%bb.0 entry
  From: STPWi renamable $w0, $wzr, $fp, -8 :: (store 4 into %ir.retval), (store 4 into %ir.argc.addr)
    To: BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
 RegionInstrs: 6
ScheduleDAGMI::schedule starting
SU(0):   STPWi renamable $w0, $wzr, $fp, -8 :: (store 4 into %ir.retval), (store 4 into %ir.argc.addr)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(2): Anti Latency=0
SU(1):   STURXi renamable $x1, $fp, -40 :: (store 8 into %ir.argv.addr)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(4): Anti Latency=0
SU(2):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Anti Latency=0
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x0
SU(3):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, 0, debug-location !48; mainft.c:62:15
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $x1 = ADRP target-flags(aarch64-page) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(1): Anti Latency=0
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$x1
SU(5):   $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, 0, debug-location !48; mainft.c:62:15
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @fopen, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $x1, implicit-def $sp, implicit-def $x8, debug-location !48; mainft.c:62:15
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(5): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) STPWi renamable $w0, $wzr, $fp, -8 :: (store 4 into %ir.retval), (store 4 into %ir.argc.addr)
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) STURXi renamable $x1, $fp, -40 :: (store 8 into %ir.argv.addr)
  Ready @1c
  TopQ.A BotLatency SU(1) 2c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 4 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $x0 = ADRP target-flags(aarch64-page) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
  Ready @2c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) $x1 = ADRP target-flags(aarch64-page) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
  Ready @3c
  TopQ.A BotLatency SU(4) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 5 
  TopQ.A RemainingLatency 0 + 4c > CritPath 2
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, 0, debug-location !48; mainft.c:62:15
  Ready @4c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, 0, debug-location !48; mainft.c:62:15
  Ready @5c
  TopQ.A BotLatency SU(5) 1c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   STPWi renamable $w0, $wzr, $fp, -8 :: (store 4 into %ir.retval), (store 4 into %ir.argc.addr)
SU(1):   STURXi renamable $x1, $fp, -40 :: (store 8 into %ir.argv.addr)
SU(2):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_timer_flag, debug-location !48; mainft.c:62:15
SU(4):   $x1 = ADRP target-flags(aarch64-page) @mainft__str_1_r_, debug-location !48; mainft.c:62:15
SU(3):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_timer_flag, 0, debug-location !48; mainft.c:62:15
SU(5):   $x1 = ADDXri $x1, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_1_r_, 0, debug-location !48; mainft.c:62:15

********** MI Scheduling **********
main:%bb.0 entry
  From: frame-setup STPXi killed $x20, killed $x19, $sp, 22 :: (store 8 into %stack.18), (store 8 into %stack.17)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STPXi $x20, $x19, $sp, 22 :: (store 8 into %stack.18), (store 8 into %stack.17)
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   frame-setup STPXi $fp, $lr, $sp, 24 :: (store 8 into %stack.16), (store 8 into %stack.15)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(2): Anti Latency=0
SU(2):   $fp = frame-setup ADDXri $sp, 192, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 0
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) frame-setup STPXi $x20, $x19, $sp, 22 :: (store 8 into %stack.18), (store 8 into %stack.17)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) frame-setup STPXi $fp, $lr, $sp, 24 :: (store 8 into %stack.16), (store 8 into %stack.15)
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $fp = frame-setup ADDXri $sp, 192, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STPXi $x20, $x19, $sp, 22 :: (store 8 into %stack.18), (store 8 into %stack.17)
SU(1):   frame-setup STPXi $fp, $lr, $sp, 24 :: (store 8 into %stack.16), (store 8 into %stack.15)
SU(2):   $fp = frame-setup ADDXri $sp, 192, 0

Fixup kills for %bb.0
********** MI Scheduling **********
main:%bb.1 if.then
  From: renamable $x19 = LDURXi $fp, -80, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
    To: BL @fclose, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !56; mainft.c:64:9
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $x19 = LDURXi $fp, -80, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(4): Data Latency=4 Reg=$x19
SU(1):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=$x8
SU(2):   $w16 = MOVZWi 1, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(3): Data Latency=1 Reg=$w16
SU(3):   STRWui renamable $w16, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(2): Data Latency=1 Reg=$w16
    SU(1): Data Latency=1 Reg=$x8
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !56; mainft.c:64:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$x19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @fclose, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !56; mainft.c:64:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x19 = LDURXi $fp, -80, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $w16 = MOVZWi 1, 0
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) STRWui renamable $w16, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
  Ready @3c
  TopQ.A TopLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $x0 = ORRXrs $xzr, $x19, 0, debug-location !56; mainft.c:64:9
  Ready @4c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.1 ***
SU(0):   renamable $x19 = LDURXi $fp, -80, debug-location !55 :: (dereferenceable load 8 from %ir.fp); mainft.c:64:16
SU(1):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !53; mainft.c:63:24
SU(2):   $w16 = MOVZWi 1, 0
SU(3):   STRWui renamable $w16, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !53 :: (store 4 into @timers_enabled); mainft.c:63:24
SU(4):   $x0 = ORRXrs $xzr, $x19, 0, debug-location !56; mainft.c:64:9

Fixup kills for %bb.1
********** MI Scheduling **********
main:%bb.2 if.else
  From: renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
    To: End RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=$x8
SU(1):   STRWui $wzr, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=$x8
Critical Path: (PGS-RR) 1
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
  Ready @0c
  TopQ.A BotLatency SU(0) 1c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STRWui $wzr, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.2 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) @timers_enabled, debug-location !58; mainft.c:67:24
SU(1):   STRWui $wzr, renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) @timers_enabled, debug-location !58 :: (store 4 into @timers_enabled); mainft.c:67:24

Fixup kills for %bb.2
********** MI Scheduling **********
main:%bb.3 if.end
  From: renamable $d0 = LDURDi $fp, -56, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
    To: Bcc 0, %bb.5, implicit $nzcv, debug-location !73; mainft.c:81:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   renamable $d0 = LDURDi $fp, -56, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=4 Reg=$d0
SU(1):   FCMPDri renamable $d0, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$d0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   Bcc 0, %bb.5, implicit $nzcv, debug-location !73; mainft.c:81:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $d0 = LDURDi $fp, -56, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) FCMPDri renamable $d0, implicit-def $nzcv, debug-location !73; mainft.c:81:9
  Ready @4c
  TopQ.A TopLatency SU(1) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 2
  Executed: 5c
  Critical: 2c, 2 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $d0 = LDURDi $fp, -56, debug-location !70 :: (dereferenceable load 8 from %ir.total_time); mainft.c:81:9
SU(1):   FCMPDri renamable $d0, implicit-def $nzcv, debug-location !73; mainft.c:81:9

********** MI Scheduling **********
main:%bb.3 if.end
  From: renamable $w19 = LDURWi $fp, -44, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
    To: BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   renamable $w19 = LDURWi $fp, -44, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(4): Data Latency=4 Reg=$w19
SU(1):   STURBBi renamable $w8, $fp, -48, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(2):   $x1 = SUBXri $fp, 56, 0, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $x2 = SUBXri $fp, 68, 0, debug-location !69; mainft.c:79:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w0 = ORRWrs $wzr, $w19, 0, debug-location !69; mainft.c:79:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @appft, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $w0, implicit $x1, implicit $x2, implicit-def $sp, debug-location !69; mainft.c:79:5
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w19 = LDURWi $fp, -44, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 1 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $x1 = SUBXri $fp, 56, 0, debug-location !69; mainft.c:79:5
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 1 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x2 = SUBXri $fp, 68, 0, debug-location !69; mainft.c:79:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURBBi renamable $w8, $fp, -48, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w0 = ORRWrs $wzr, $w19, 0, debug-location !69; mainft.c:79:5
  Ready @4c
  TopQ.A TopLatency SU(4) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $w19 = LDURWi $fp, -44, debug-location !68 :: (dereferenceable load 4 from %ir.niter); mainft.c:79:11
SU(2):   $x1 = SUBXri $fp, 56, 0, debug-location !69; mainft.c:79:5
SU(3):   $x2 = SUBXri $fp, 68, 0, debug-location !69; mainft.c:79:5
SU(1):   STURBBi renamable $w8, $fp, -48, debug-location !67 :: (store 1 into %ir.Class, align 4); mainft.c:77:11
SU(4):   $w0 = ORRWrs $wzr, $w19, 0, debug-location !69; mainft.c:79:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $x0 = ADRP target-flags(aarch64-page) @mainft__str_5___, debug-location !65; mainft.c:75:5
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !65; mainft.c:75:5
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_5___, debug-location !65; mainft.c:75:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x0
SU(1):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, 0, debug-location !65; mainft.c:75:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !65; mainft.c:75:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) $x0 = ADRP target-flags(aarch64-page) @mainft__str_5___, debug-location !65; mainft.c:75:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, 0, debug-location !65; mainft.c:75:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_5___, debug-location !65; mainft.c:75:5
SU(1):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_5___, 0, debug-location !65; mainft.c:75:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: renamable $w19 = LDURWi $fp, -44, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   renamable $w19 = LDURWi $fp, -44, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(3): Data Latency=4 Reg=$w19
SU(1):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x0
SU(2):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, 0, debug-location !64; mainft.c:74:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $w1 = ORRWrs $wzr, $w19, 0, debug-location !64; mainft.c:74:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit-def $sp, implicit-def dead $w8, debug-location !64; mainft.c:74:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w19 = LDURWi $fp, -44, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $x0 = ADRP target-flags(aarch64-page) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 3 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, 0, debug-location !64; mainft.c:74:5
  Ready @2c
  TopQ.A TopLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 4 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) $w1 = ORRWrs $wzr, $w19, 0, debug-location !64; mainft.c:74:5
  Ready @4c
  TopQ.A TopLatency SU(3) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 4
  Executed: 5c
  Critical: 4c, 4 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   renamable $w19 = LDURWi $fp, -44, debug-location !63 :: (dereferenceable load 4 from %ir.niter); mainft.c:74:49
SU(1):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_4__Iteration, debug-location !64; mainft.c:74:5
SU(2):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_4__Iteration, 0, debug-location !64; mainft.c:74:5
SU(3):   $w1 = ORRWrs $wzr, $w19, 0, debug-location !64; mainft.c:74:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $x0 = ADRP target-flags(aarch64-page) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
 RegionInstrs: 5
ScheduleDAGMI::schedule starting
SU(0):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(1): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x0
SU(1):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, 0, debug-location !62; mainft.c:73:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(0): Out  Latency=1
    SU(0): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(2):   $w1 = MOVZWi 512, 0, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(3):   $w2 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(4):   $w3 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit-def $sp, implicit-def dead $w8, debug-location !62; mainft.c:73:5
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(4): Ord  Latency=1 Artificial
    SU(3): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=1 Artificial
    SU(1): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 3 4 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) $x0 = ADRP target-flags(aarch64-page) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
  Ready @0c
  TopQ.A BotLatency SU(0) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, 0, debug-location !62; mainft.c:73:5
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 2 3 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) $w1 = MOVZWi 512, 0, debug-location !62; mainft.c:73:5
  Ready @2c
  TopQ.A BotLatency SU(2) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 3 
  TopQ.A RemainingLatency 0 + 3c > CritPath 2
  Cand SU(4) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) $w2 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  Ready @3c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) $w3 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
  Ready @4c
  TopQ.A BotLatency SU(4) 1c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(0):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_3__Size_____, debug-location !62; mainft.c:73:5
SU(1):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_3__Size_____, 0, debug-location !62; mainft.c:73:5
SU(2):   $w1 = MOVZWi 512, 0, debug-location !62; mainft.c:73:5
SU(3):   $w2 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5
SU(4):   $w3 = MOVZWi 256, 0, debug-location !62; mainft.c:73:5

********** MI Scheduling **********
main:%bb.3 if.end
  From: $w8 = MOVZWi 20, 0
    To: BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !61; mainft.c:72:5
 RegionInstrs: 4
ScheduleDAGMI::schedule starting
SU(0):   $w8 = MOVZWi 20, 0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Successors:
    SU(1): Data Latency=1 Reg=$w8
SU(1):   STURWi renamable $w8, $fp, -44, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=1 Reg=$w8
SU(2):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=1 Reg=$x0
SU(3):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, 0, debug-location !61; mainft.c:72:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(2): Out  Latency=1
    SU(2): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @printf, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit-def $sp, implicit-def dead $w8, debug-location !61; mainft.c:72:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=1 Artificial
Critical Path: (PGS-RR) 2
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 2
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x0 = ADRP target-flags(aarch64-page) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
  Ready @0c
  TopQ.A BotLatency SU(2) 2c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 
  TopQ.A RemainingLatency 0 + 1c > CritPath 2
  Cand SU(0) ORDER                              
Pick Top ORDER     
Scheduling SU(0) $w8 = MOVZWi 20, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 
  TopQ.A RemainingLatency 0 + 2c > CritPath 2
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, 0, debug-location !61; mainft.c:72:5
  Ready @2c
  TopQ.A TopLatency SU(3) 1c
  TopQ.A BotLatency SU(3) 1c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) STURWi renamable $w8, $fp, -44, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11
  Ready @3c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.3 ***
SU(2):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_2____NAS_Par, debug-location !61; mainft.c:72:5
SU(0):   $w8 = MOVZWi 20, 0
SU(3):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_2____NAS_Par, 0, debug-location !61; mainft.c:72:5
SU(1):   STURWi renamable $w8, $fp, -44, debug-location !60 :: (store 4 into %ir.niter); mainft.c:70:11

Fixup kills for %bb.3
********** MI Scheduling **********
main:%bb.4 if.then8
  From: renamable $x8 = ADRP target-flags(aarch64-page) %const.3
    To: B %bb.6
 RegionInstrs: 17
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.3
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 11
  Successors:
    SU(2): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=4 Reg=$d1
    SU(2): Anti Latency=0
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) %const.4
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(5): Out  Latency=1
    SU(4): Data Latency=1 Reg=$x8
SU(3):   renamable $s2 = LDURSi $fp, -44, implicit-def $d2, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 10
  Successors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=4 Reg=$d2
SU(4):   renamable $d3 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 2
  Height             : 9
  Predecessors:
    SU(2): Data Latency=1 Reg=$x8
  Successors:
    SU(11): Out  Latency=1
    SU(10): Data Latency=4 Reg=$d3
    SU(5): Anti Latency=0
SU(5):   renamable $x8 = ADRP target-flags(aarch64-page) %const.5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 7
  Predecessors:
    SU(4): Anti Latency=0
    SU(2): Out  Latency=1
  Successors:
    SU(7): Data Latency=1 Reg=$x8
SU(6):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !79; mainft.c:84:38
  # preds left       : 1
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(1): Data Latency=4 Reg=$d1
  Successors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$d0
    SU(7): Anti Latency=0
SU(7):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(6): Anti Latency=0
    SU(5): Data Latency=1 Reg=$x8
    SU(1): Out  Latency=1
  Successors:
    SU(14): Data Latency=4 Reg=$d1
SU(8):   renamable $q2 = SSHLLv2i32_shift renamable $d2, 0, debug-location !81; mainft.c:84:63
  # preds left       : 2
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 6
  Predecessors:
    SU(3): Out  Latency=1
    SU(3): Data Latency=4 Reg=$d2
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$d2
    SU(9): Data Latency=0 Reg=$q2
SU(9):   renamable $d2 = SCVTFv1i64 renamable $d2, implicit $q2, debug-location !81; mainft.c:84:63
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 5
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$d2
    SU(8): Data Latency=0 Reg=$q2
  Successors:
    SU(12): Data Latency=1 Reg=$d2
SU(10):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !80; mainft.c:84:28
  # preds left       : 3
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$d0
    SU(4): Data Latency=4 Reg=$d3
  Successors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$d0
    SU(11): Anti Latency=0
SU(11):   renamable $d3 = LDURDi $fp, -56, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(10): Anti Latency=0
    SU(4): Out  Latency=1
  Successors:
    SU(15): Data Latency=4 Reg=$d3
SU(12):   renamable $d0 = FMULDrr renamable $d0, renamable $d2, debug-location !82; mainft.c:84:61
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$d0
    SU(9): Data Latency=1 Reg=$d2
  Successors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=1 Reg=$d0
SU(13):   renamable $d0 = FADDDrr renamable $d4, renamable $d0, debug-location !83; mainft.c:83:59
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 3
  Predecessors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$d0
  Successors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=1 Reg=$d0
SU(14):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !84; mainft.c:82:42
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 9
  Height             : 2
  Predecessors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=1 Reg=$d0
    SU(7): Data Latency=4 Reg=$d1
  Successors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=1 Reg=$d0
SU(15):   renamable $d0 = FDIVDrr renamable $d0, renamable $d3, debug-location !86; mainft.c:84:70
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 1
  Predecessors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=1 Reg=$d0
    SU(11): Data Latency=4 Reg=$d3
  Successors:
    SU(16): Data Latency=1 Reg=$d0
SU(16):   STURDi renamable $d0, $fp, -64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(15): Data Latency=1 Reg=$d0
ExitSU:   B %bb.6
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 11
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 3 
  TopQ.A RemainingLatency 0 + 0c > CritPath 11
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) %const.3
  Ready @0c
  TopQ.A BotLatency SU(0) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 3 1 
  TopQ.A RemainingLatency 0 + 1c > CritPath 11
  Cand SU(3) ORDER                              
  Cand SU(1) ORDER                              
Pick Top ORDER     
Scheduling SU(1) renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 3 2 
  TopQ.A RemainingLatency 0 + 2c > CritPath 11
  Cand SU(3) ORDER                              
  Cand SU(2) ORDER                              
Pick Top ORDER     
Scheduling SU(2) renamable $x8 = ADRP target-flags(aarch64-page) %const.4
  Ready @2c
  TopQ.A BotLatency SU(2) 10c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 
Queue TopQ.A: 3 4 
  TopQ.A RemainingLatency 0 + 3c > CritPath 11
  Cand SU(3) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(3) renamable $s2 = LDURSi $fp, -44, implicit-def $d2, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
  Ready @3c
  TopQ.A BotLatency SU(3) 10c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 6 8 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $d3 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
  Ready @4c
  TopQ.A TopLatency SU(4) 2c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 5 6 
  TopQ.A RemainingLatency 0 + 5c > CritPath 11
  Cand SU(5) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(5) renamable $x8 = ADRP target-flags(aarch64-page) %const.5
  Ready @5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 8 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !79; mainft.c:84:38
  Ready @6c
  TopQ.A TopLatency SU(6) 5c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 10 
Queue TopQ.A: 7 8 
  TopQ.A RemainingLatency 0 + 7c > CritPath 11
  Cand SU(7) ORDER                              
Pick Top ORDER     
Scheduling SU(7) renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
  Ready @7c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 8 10 
  TopQ.A RemainingLatency 0 + 8c > CritPath 11
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) renamable $q2 = SSHLLv2i32_shift renamable $d2, 0, debug-location !81; mainft.c:84:63
  Ready @8c
  TopQ.A BotLatency SU(8) 6c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 9 
  TopQ.A RemainingLatency 0 + 9c > CritPath 11
  Cand SU(10) ORDER                              
  Cand SU(9) ORDER                              
Pick Top ORDER     
Scheduling SU(9) renamable $d2 = SCVTFv1i64 renamable $d2, implicit $q2, debug-location !81; mainft.c:84:63
  Ready @9c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 10 
Pick Top ONLY1     
Scheduling SU(10) renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !80; mainft.c:84:28
  Ready @10c
  TopQ.A TopLatency SU(10) 6c
  TopQ.A BotLatency SU(10) 5c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 11 
  TopQ.A RemainingLatency 0 + 11c > CritPath 11
  Cand SU(12) ORDER                              
  Cand SU(11) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(11) renamable $d3 = LDURDi $fp, -56, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
  Ready @11c
  TopQ.A BotLatency SU(11) 5c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 12 
Pick Top ONLY1     
Scheduling SU(12) renamable $d0 = FMULDrr renamable $d0, renamable $d2, debug-location !82; mainft.c:84:61
  Ready @12c
  TopQ.A TopLatency SU(12) 7c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 
Pick Top ONLY1     
Scheduling SU(13) renamable $d0 = FADDDrr renamable $d4, renamable $d0, debug-location !83; mainft.c:83:59
  Ready @13c
  TopQ.A TopLatency SU(13) 8c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 8c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 14 
Pick Top ONLY1     
Scheduling SU(14) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !84; mainft.c:82:42
  Ready @14c
  TopQ.A TopLatency SU(14) 9c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 9c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 15 
Pick Top ONLY1     
Scheduling SU(15) renamable $d0 = FDIVDrr renamable $d0, renamable $d3, debug-location !86; mainft.c:84:70
  Ready @15c
  TopQ.A TopLatency SU(15) 10c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 10c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 16 
Pick Top ONLY1     
Scheduling SU(16) STURDi renamable $d0, $fp, -64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16
  Ready @16c
  TopQ.A TopLatency SU(16) 11c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 11c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.3
SU(1):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.3 :: (load 8 from constant-pool)
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) %const.4
SU(3):   renamable $s2 = LDURSi $fp, -44, implicit-def $d2, debug-location !81 :: (dereferenceable load 4 from %ir.niter); mainft.c:84:63
SU(4):   renamable $d3 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.4 :: (load 8 from constant-pool)
SU(5):   renamable $x8 = ADRP target-flags(aarch64-page) %const.5
SU(6):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !79; mainft.c:84:38
SU(7):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.5 :: (load 8 from constant-pool)
SU(8):   renamable $q2 = SSHLLv2i32_shift renamable $d2, 0, debug-location !81; mainft.c:84:63
SU(9):   renamable $d2 = SCVTFv1i64 renamable $d2, implicit $q2, debug-location !81; mainft.c:84:63
SU(10):   renamable $d0 = FADDDrr renamable $d0, renamable $d3, debug-location !80; mainft.c:84:28
SU(11):   renamable $d3 = LDURDi $fp, -56, debug-location !85 :: (dereferenceable load 8 from %ir.total_time); mainft.c:85:18
SU(12):   renamable $d0 = FMULDrr renamable $d0, renamable $d2, debug-location !82; mainft.c:84:61
SU(13):   renamable $d0 = FADDDrr renamable $d4, renamable $d0, debug-location !83; mainft.c:83:59
SU(14):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !84; mainft.c:82:42
SU(15):   renamable $d0 = FDIVDrr renamable $d0, renamable $d3, debug-location !86; mainft.c:84:70
SU(16):   STURDi renamable $d0, $fp, -64, debug-location !87 :: (store 8 into %ir.mflops); mainft.c:82:16

********** MI Scheduling **********
main:%bb.4 if.then8
  From: renamable $x8 = ADRP target-flags(aarch64-page) %const.1
    To: BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !78; mainft.c:84:40
 RegionInstrs: 8
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.1
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 11
  Successors:
    SU(2): Out  Latency=1
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    SU(4): Data Latency=4 Reg=$d1
    SU(2): Anti Latency=0
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) %const.2
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(1): Anti Latency=0
    SU(0): Out  Latency=1
  Successors:
    SU(3): Data Latency=1 Reg=$x8
SU(3):   renamable $d2 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 2
  Height             : 9
  Predecessors:
    SU(2): Data Latency=1 Reg=$x8
  Successors:
    SU(5): Data Latency=4 Reg=$d2
SU(4):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !76; mainft.c:83:37
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 6
  Predecessors:
    SU(1): Data Latency=4 Reg=$d1
  Successors:
    SU(5): Out  Latency=1
    SU(5): Data Latency=1 Reg=$d0
SU(5):   renamable $d0 = FADDDrr renamable $d0, renamable $d2, debug-location !77; mainft.c:83:27
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 5
  Predecessors:
    SU(4): Out  Latency=1
    SU(4): Data Latency=1 Reg=$d0
    SU(3): Data Latency=4 Reg=$d2
  Successors:
    SU(7): Out  Latency=1
    SU(6): Data Latency=1 Reg=$d0
SU(6):   STURDi renamable $d0, $fp, -88 :: (store 8 into %stack.9)
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(5): Data Latency=1 Reg=$d0
  Successors:
    SU(7): Anti Latency=0
SU(7):   $d0 = LDRDui $sp, 12 :: (load 8 from %stack.10)
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 7
  Height             : 4
  Predecessors:
    SU(6): Anti Latency=0
    SU(5): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=4 Artificial
ExitSU:   BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !78; mainft.c:84:40
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 11
  Height             : 0
  Predecessors:
    SU(7): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 11
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) %const.1
  Ready @0c
  TopQ.A BotLatency SU(0) 11c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) renamable $x8 = ADRP target-flags(aarch64-page) %const.2
  Ready @2c
  TopQ.A BotLatency SU(2) 10c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 4 
Queue TopQ.A: 3 
Pick Top ONLY1     
Scheduling SU(3) renamable $d2 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
  Ready @3c
  TopQ.A TopLatency SU(3) 2c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 4 
Pick Top ONLY1     
Scheduling SU(4) renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !76; mainft.c:83:37
  Ready @5c
  TopQ.A TopLatency SU(4) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 5
  Executed: 6c
  Critical: 5c, 5 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 7 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 5 
Pick Top ONLY1     
Scheduling SU(5) renamable $d0 = FADDDrr renamable $d0, renamable $d2, debug-location !77; mainft.c:83:27
  Ready @7c
  TopQ.A TopLatency SU(5) 6c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 6
  Executed: 8c
  Critical: 6c, 6 MOps
  ExpectedLatency: 6c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 6 
Pick Top ONLY1     
Scheduling SU(6) STURDi renamable $d0, $fp, -88 :: (store 8 into %stack.9)
  Ready @8c
  TopQ.A TopLatency SU(6) 7c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 7
  Executed: 9c
  Critical: 7c, 7 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 7 
Pick Top ONLY1     
Scheduling SU(7) $d0 = LDRDui $sp, 12 :: (load 8 from %stack.10)
  Ready @9c
  TopQ.A BotLatency SU(7) 4c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 8
  Executed: 10c
  Critical: 8c, 8 MOps
  ExpectedLatency: 7c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.1
SU(1):   renamable $d1 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.1 :: (load 8 from constant-pool)
SU(2):   renamable $x8 = ADRP target-flags(aarch64-page) %const.2
SU(3):   renamable $d2 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.2 :: (load 8 from constant-pool)
SU(4):   renamable $d0 = FMULDrr renamable $d0, renamable $d1, debug-location !76; mainft.c:83:37
SU(5):   renamable $d0 = FADDDrr renamable $d0, renamable $d2, debug-location !77; mainft.c:83:27
SU(6):   STURDi renamable $d0, $fp, -88 :: (store 8 into %stack.9)
SU(7):   $d0 = LDRDui $sp, 12 :: (load 8 from %stack.10)

********** MI Scheduling **********
main:%bb.4 if.then8
  From: renamable $x8 = ADRP target-flags(aarch64-page) %const.0
    To: BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.0
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 5
  Successors:
    SU(1): Data Latency=1 Reg=$x8
SU(1):   renamable $d0 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=1 Reg=$x8
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(2): Data Latency=4 Reg=$d0
SU(2):   STRDui renamable $d0, $sp, 12 :: (store 8 into %stack.10)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Data Latency=4 Reg=$d0
ExitSU:   BL @log, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $d0, implicit-def $sp, implicit-def $d0, debug-location !74; mainft.c:83:39
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) renamable $x8 = ADRP target-flags(aarch64-page) %const.0
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) renamable $d0 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
  Ready @1c
  TopQ.A TopLatency SU(1) 1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Cycle: 5 TopQ.A
Queue TopQ.P: 
Queue TopQ.A: 2 
Pick Top ONLY1     
Scheduling SU(2) STRDui renamable $d0, $sp, 12 :: (store 8 into %stack.10)
  Ready @5c
  TopQ.A TopLatency SU(2) 5c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 3
  Executed: 6c
  Critical: 3c, 3 MOps
  ExpectedLatency: 5c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.4 ***
SU(0):   renamable $x8 = ADRP target-flags(aarch64-page) %const.0
SU(1):   renamable $d0 = LDRDui renamable $x8, target-flags(aarch64-pageoff, aarch64-nc) %const.0 :: (load 8 from constant-pool)
SU(2):   STRDui renamable $d0, $sp, 12 :: (store 8 into %stack.10)

Fixup kills for %bb.4
Fixup kills for %bb.5
********** MI Scheduling **********
main:%bb.6 if.end17
  From: $w8 = ORRWrs $wzr, $wzr, 0, debug-location !98; mainft.c:98:5
    To: $sp = frame-destroy ADDXri $sp, 208, 0, debug-location !98; mainft.c:98:5
 RegionInstrs: 3
ScheduleDAGMI::schedule starting
SU(0):   $w8 = ORRWrs $wzr, $wzr, 0, debug-location !98; mainft.c:98:5
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   $fp, $lr = frame-destroy LDPXi $sp, 24, debug-location !98 :: (load 8 from %stack.16), (load 8 from %stack.15); mainft.c:98:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
SU(2):   $x20, $x19 = frame-destroy LDPXi $sp, 22, debug-location !98 :: (load 8 from %stack.18), (load 8 from %stack.17); mainft.c:98:5
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 208, 0, debug-location !98; mainft.c:98:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(2): Ord  Latency=3 Artificial
    SU(1): Ord  Latency=3 Artificial
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $fp, $lr = frame-destroy LDPXi $sp, 24, debug-location !98 :: (load 8 from %stack.16), (load 8 from %stack.15); mainft.c:98:5
  Ready @0c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 2 
  TopQ.A RemainingLatency 0 + 1c > CritPath 3
  Cand SU(0) ORDER                              
  Cand SU(2) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) $x20, $x19 = frame-destroy LDPXi $sp, 22, debug-location !98 :: (load 8 from %stack.18), (load 8 from %stack.17); mainft.c:98:5
  Ready @1c
  TopQ.A BotLatency SU(2) 3c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) $w8 = ORRWrs $wzr, $wzr, 0, debug-location !98; mainft.c:98:5
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.6 ***
SU(1):   $fp, $lr = frame-destroy LDPXi $sp, 24, debug-location !98 :: (load 8 from %stack.16), (load 8 from %stack.15); mainft.c:98:5
SU(2):   $x20, $x19 = frame-destroy LDPXi $sp, 22, debug-location !98 :: (load 8 from %stack.18), (load 8 from %stack.17); mainft.c:98:5
SU(0):   $w8 = ORRWrs $wzr, $wzr, 0, debug-location !98; mainft.c:98:5

********** MI Scheduling **********
main:%bb.6 if.end17
  From: renamable $w20 = LDURSBWi $fp, -48, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
    To: BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $w5, implicit $d0, implicit $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
 RegionInstrs: 40
ScheduleDAGMI::schedule starting
SU(0):   renamable $w20 = LDURSBWi $fp, -48, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(38): Data Latency=4 Reg=$w20
SU(1):   renamable $w19 = LDURWi $fp, -44, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 5
  Successors:
    SU(39): Data Latency=4 Reg=$w19
SU(2):   renamable $d1, renamable $d0 = LDPDi $fp, -8, debug-location !93 :: (dereferenceable load 8 from %ir.total_time), (dereferenceable load 8 from %ir.mflops); mainft.c:91:51
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    ExitSU: Ord  Latency=4 Artificial
    SU(3): Data Latency=4 Reg=$d1
    SU(3): Data Latency=4 Reg=$d0
SU(3):   STPDi renamable $d1, renamable $d0, $sp, 11 :: (store 8 into %stack.10), (store 8 into %stack.11)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(2): Data Latency=4 Reg=$d1
    SU(2): Data Latency=4 Reg=$d0
SU(4):   renamable $w6 = LDURWi $fp, -68, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 4
  Successors:
    SU(25): Data Latency=4 Reg=$w6
    SU(5): Data Latency=4 Reg=$w6
SU(5):   STURWi renamable $w6, $fp, -88 :: (store 4 into %stack.9)
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(4): Data Latency=4 Reg=$w6
SU(6):   $x8 = ADRP target-flags(aarch64-page) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(7): Out  Latency=1
    SU(7): Data Latency=1 Reg=$x8
SU(7):   renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(6): Out  Latency=1
    SU(6): Data Latency=1 Reg=$x8
  Successors:
    SU(23): Out  Latency=1
    SU(22): Data Latency=1 Reg=$x8
SU(8):   $x16 = ADRP target-flags(aarch64-page) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(9): Out  Latency=1
    SU(9): Data Latency=1 Reg=$x16
SU(9):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(8): Out  Latency=1
    SU(8): Data Latency=1 Reg=$x16
  Successors:
    SU(27): Out  Latency=1
    SU(22): Data Latency=1 Reg=$x16
SU(10):   $x17 = ADRP target-flags(aarch64-page) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(11): Out  Latency=1
    SU(11): Data Latency=1 Reg=$x17
SU(11):   renamable $x17 = ADDXri $x17, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(10): Out  Latency=1
    SU(10): Data Latency=1 Reg=$x17
  Successors:
    SU(26): Data Latency=1 Reg=$x17
SU(12):   $x18 = ADRP target-flags(aarch64-page) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(13): Out  Latency=1
    SU(13): Data Latency=1 Reg=$x18
SU(13):   renamable $x18 = ADDXri $x18, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 1
  Predecessors:
    SU(12): Out  Latency=1
    SU(12): Data Latency=1 Reg=$x18
  Successors:
    SU(26): Data Latency=1 Reg=$x18
SU(14):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(15): Out  Latency=1
    SU(15): Data Latency=1 Reg=$x0
SU(15):   renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(14): Out  Latency=1
    SU(14): Data Latency=1 Reg=$x0
  Successors:
    SU(30): Out  Latency=1
    SU(29): Data Latency=1 Reg=$x0
SU(16):   $x4 = ADRP target-flags(aarch64-page) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(17): Out  Latency=1
    SU(17): Data Latency=1 Reg=$x4
SU(17):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(16): Out  Latency=1
    SU(16): Data Latency=1 Reg=$x4
  Successors:
    SU(36): Out  Latency=1
    SU(29): Data Latency=1 Reg=$x4
SU(18):   $x2 = ADRP target-flags(aarch64-page) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(19): Out  Latency=1
    SU(19): Data Latency=1 Reg=$x2
SU(19):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(18): Out  Latency=1
    SU(18): Data Latency=1 Reg=$x2
  Successors:
    SU(34): Out  Latency=1
    SU(32): Data Latency=1 Reg=$x2
SU(20):   $x3 = ADRP target-flags(aarch64-page) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 3
  Successors:
    SU(21): Out  Latency=1
    SU(21): Data Latency=1 Reg=$x3
SU(21):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(20): Out  Latency=1
    SU(20): Data Latency=1 Reg=$x3
  Successors:
    SU(35): Out  Latency=1
    SU(32): Data Latency=1 Reg=$x3
SU(22):   STPXi renamable $x16, renamable $x8, $sp, 9, debug-location !96 :: (store 8 into stack + 80), (store 8 into stack + 72); mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(9): Data Latency=1 Reg=$x16
    SU(7): Data Latency=1 Reg=$x8
  Successors:
    SU(27): Anti Latency=0
    SU(23): Anti Latency=0
SU(23):   $x8 = ADRP target-flags(aarch64-page) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(22): Anti Latency=0
    SU(7): Out  Latency=1
  Successors:
    SU(24): Out  Latency=1
    SU(24): Data Latency=1 Reg=$x8
SU(24):   renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
    SU(23): Out  Latency=1
    SU(23): Data Latency=1 Reg=$x8
  Successors:
    SU(33): Data Latency=1 Reg=$x8
SU(25):   STRWui renamable $w6, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(4): Data Latency=4 Reg=$w6
SU(26):   STPXi renamable $x18, renamable $x17, $sp, 7, debug-location !96 :: (store 8 into stack + 64), (store 8 into stack + 56); mainft.c:91:5
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(13): Data Latency=1 Reg=$x18
    SU(11): Data Latency=1 Reg=$x17
SU(27):   $x16 = ADRP target-flags(aarch64-page) @mainft__str_7___________, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(22): Anti Latency=0
    SU(9): Out  Latency=1
  Successors:
    SU(28): Out  Latency=1
    SU(28): Data Latency=1 Reg=$x16
SU(28):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
    SU(27): Out  Latency=1
    SU(27): Data Latency=1 Reg=$x16
  Successors:
    SU(37): Data Latency=1 Reg=$x16
SU(29):   STPXi renamable $x4, renamable $x0, $sp, 5, debug-location !96 :: (store 8 into stack + 48), (store 8 into stack + 40); mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(17): Data Latency=1 Reg=$x4
    SU(15): Data Latency=1 Reg=$x0
  Successors:
    SU(36): Anti Latency=0
    SU(30): Anti Latency=0
SU(30):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(29): Anti Latency=0
    SU(15): Out  Latency=1
  Successors:
    SU(31): Out  Latency=1
    SU(31): Data Latency=1 Reg=$x0
SU(31):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
    SU(30): Out  Latency=1
    SU(30): Data Latency=1 Reg=$x0
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(32):   STPXi renamable $x3, renamable $x2, $sp, 3, debug-location !96 :: (store 8 into stack + 32), (store 8 into stack + 24); mainft.c:91:5
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(21): Data Latency=1 Reg=$x3
    SU(19): Data Latency=1 Reg=$x2
  Successors:
    SU(35): Anti Latency=0
    SU(34): Anti Latency=0
SU(33):   STRXui renamable $x8, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(24): Data Latency=1 Reg=$x8
SU(34):   $w2 = MOVZWi 512, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(32): Anti Latency=0
    SU(19): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(35):   $w3 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(32): Anti Latency=0
    SU(21): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(36):   $w4 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 1
  Predecessors:
    SU(29): Anti Latency=0
    SU(17): Out  Latency=1
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(37):   STRXui renamable $x16, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(28): Data Latency=1 Reg=$x16
SU(38):   $w1 = ORRWrs $wzr, $w20, 0, debug-location !96; mainft.c:91:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(0): Data Latency=4 Reg=$w20
  Successors:
    ExitSU: Ord  Latency=1 Artificial
SU(39):   $w5 = ORRWrs $wzr, $w19, 0, debug-location !96; mainft.c:91:5
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(1): Data Latency=4 Reg=$w19
  Successors:
    ExitSU: Ord  Latency=1 Artificial
ExitSU:   BL @print_results, <regmask $fp $lr $w19 $w20 $w29 $w30 $x19 $x20 $w19_w20 $w29_w30 $fp_lr $x19_x20>, implicit-def dead $lr, implicit $sp, implicit $x0, implicit $w1, implicit $w2, implicit $w3, implicit $w4, implicit $w5, implicit $d0, implicit $d1, implicit-def $sp, debug-location !96; mainft.c:91:5
  # preds left       : 7
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(39): Ord  Latency=1 Artificial
    SU(38): Ord  Latency=1 Artificial
    SU(36): Ord  Latency=1 Artificial
    SU(35): Ord  Latency=1 Artificial
    SU(34): Ord  Latency=1 Artificial
    SU(31): Ord  Latency=1 Artificial
    SU(2): Ord  Latency=4 Artificial
Critical Path: (PGS-RR) 5
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 2 4 6 8 10 12 14 16 18 20 
  TopQ.A RemainingLatency 0 + 0c > CritPath 5
  Cand SU(0) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(0) renamable $w20 = LDURSBWi $fp, -48, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
  Ready @0c
  TopQ.A BotLatency SU(0) 5c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 
Queue TopQ.A: 20 1 2 4 6 8 10 12 14 16 18 
  TopQ.A RemainingLatency 0 + 1c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(1) TOP-PATH                  5 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) renamable $w19 = LDURWi $fp, -44, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
  Ready @1c
  TopQ.A BotLatency SU(1) 5c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 39 
Queue TopQ.A: 20 18 2 4 6 8 10 12 14 16 
  TopQ.A RemainingLatency 0 + 2c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(2) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(2) renamable $d1, renamable $d0 = LDPDi $fp, -8, debug-location !93 :: (dereferenceable load 8 from %ir.total_time), (dereferenceable load 8 from %ir.mflops); mainft.c:91:51
  Ready @2c
  *** Max MOps 1 at cycle 2
Cycle: 3 TopQ.A
TopQ.A @3c
  Retired: 3
  Executed: 3c
  Critical: 3c, 3 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 38 39 3 
Queue TopQ.A: 20 18 16 4 6 8 10 12 14 
  TopQ.A RemainingLatency 0 + 3c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(16) TOP-PATH                  4 cycles 
  Cand SU(4) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(4) renamable $w6 = LDURWi $fp, -68, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
  Ready @3c
  TopQ.A BotLatency SU(4) 4c
  *** Max MOps 1 at cycle 3
Cycle: 4 TopQ.A
TopQ.A @4c
  Retired: 4
  Executed: 4c
  Critical: 4c, 4 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 39 3 25 
Queue TopQ.A: 20 18 16 14 6 8 10 12 38 
  TopQ.A RemainingLatency 0 + 4c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(16) TOP-PATH                  4 cycles 
  Cand SU(14) ORDER                              
  Cand SU(6) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(6) $x8 = ADRP target-flags(aarch64-page) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
  Ready @4c
  TopQ.A BotLatency SU(6) 4c
  *** Max MOps 1 at cycle 4
Cycle: 5 TopQ.A
TopQ.A @5c
  Retired: 5
  Executed: 5c
  Critical: 5c, 5 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 25 3 
Queue TopQ.A: 20 18 16 14 38 8 10 12 7 39 
  TopQ.A RemainingLatency 0 + 5c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(16) TOP-PATH                  4 cycles 
  Cand SU(14) ORDER                              
  Cand SU(8) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(8) $x16 = ADRP target-flags(aarch64-page) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
  Ready @5c
  TopQ.A BotLatency SU(8) 4c
  *** Max MOps 1 at cycle 5
Cycle: 6 TopQ.A
TopQ.A @6c
  Retired: 6
  Executed: 6c
  Critical: 6c, 6 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 5 25 
Queue TopQ.A: 20 18 16 14 38 39 10 12 7 9 3 
  TopQ.A RemainingLatency 0 + 6c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(16) TOP-PATH                  4 cycles 
  Cand SU(14) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(14) $x0 = ADRP target-flags(aarch64-page) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
  Ready @6c
  TopQ.A BotLatency SU(14) 4c
  *** Max MOps 1 at cycle 6
Cycle: 7 TopQ.A
TopQ.A @7c
  Retired: 7
  Executed: 7c
  Critical: 7c, 7 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 16 3 38 39 10 12 7 9 15 5 25 
  TopQ.A RemainingLatency 0 + 7c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(16) TOP-PATH                  4 cycles 
Pick Top TOP-PATH  
Scheduling SU(16) $x4 = ADRP target-flags(aarch64-page) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
  Ready @7c
  TopQ.A BotLatency SU(16) 4c
  *** Max MOps 1 at cycle 7
Cycle: 8 TopQ.A
TopQ.A @8c
  Retired: 8
  Executed: 8c
  Critical: 8c, 8 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 25 3 38 39 10 12 7 9 15 5 17 
  TopQ.A RemainingLatency 0 + 8c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(7) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(7) renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, 0, debug-location !96; mainft.c:91:5
  Ready @8c
  TopQ.A TopLatency SU(7) 1c
  *** Max MOps 1 at cycle 8
Cycle: 9 TopQ.A
TopQ.A @9c
  Retired: 9
  Executed: 9c
  Critical: 9c, 9 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 25 3 38 39 10 12 17 9 15 5 
  TopQ.A RemainingLatency 0 + 9c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(17) ORDER                              
  Cand SU(9) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(9) renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, 0, debug-location !96; mainft.c:91:5
  Ready @9c
  TopQ.A BotLatency SU(9) 3c
  *** Max MOps 1 at cycle 9
Cycle: 10 TopQ.A
TopQ.A @10c
  Retired: 10
  Executed: 10c
  Critical: 10c, 10 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 25 3 38 39 10 12 17 5 15 22 
  TopQ.A RemainingLatency 0 + 10c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(17) ORDER                              
  Cand SU(15) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(15) renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, 0, debug-location !96; mainft.c:91:5
  Ready @10c
  TopQ.A BotLatency SU(15) 3c
  *** Max MOps 1 at cycle 10
Cycle: 11 TopQ.A
TopQ.A @11c
  Retired: 11
  Executed: 11c
  Critical: 11c, 11 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 25 3 38 39 10 12 17 5 22 
  TopQ.A RemainingLatency 0 + 11c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
  Cand SU(17) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(17) renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, 0, debug-location !96; mainft.c:91:5
  Ready @11c
  TopQ.A BotLatency SU(17) 3c
  *** Max MOps 1 at cycle 11
Cycle: 12 TopQ.A
TopQ.A @12c
  Retired: 12
  Executed: 12c
  Critical: 12c, 12 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 18 25 3 38 39 10 12 22 5 29 
  TopQ.A RemainingLatency 0 + 12c > CritPath 5
  Cand SU(20) ORDER                              
  Cand SU(18) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(18) $x2 = ADRP target-flags(aarch64-page) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
  Ready @12c
  TopQ.A BotLatency SU(18) 3c
  *** Max MOps 1 at cycle 12
Cycle: 13 TopQ.A
TopQ.A @13c
  Retired: 13
  Executed: 13c
  Critical: 13c, 13 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 20 29 25 3 38 39 10 12 22 5 19 
  TopQ.A RemainingLatency 0 + 13c > CritPath 5
  Cand SU(20) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(20) $x3 = ADRP target-flags(aarch64-page) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
  Ready @13c
  TopQ.A BotLatency SU(20) 3c
  *** Max MOps 1 at cycle 13
Cycle: 14 TopQ.A
TopQ.A @14c
  Retired: 14
  Executed: 14c
  Critical: 14c, 14 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 19 29 25 3 38 39 10 12 22 5 21 
  TopQ.A RemainingLatency 0 + 14c > CritPath 5
  Cand SU(19) ORDER                              
  Cand SU(10) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(10) $x17 = ADRP target-flags(aarch64-page) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
  Ready @14c
  *** Max MOps 1 at cycle 14
Cycle: 15 TopQ.A
TopQ.A @15c
  Retired: 15
  Executed: 15c
  Critical: 15c, 15 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 19 29 25 3 38 39 21 12 22 5 11 
  TopQ.A RemainingLatency 0 + 15c > CritPath 5
  Cand SU(19) ORDER                              
  Cand SU(12) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(12) $x18 = ADRP target-flags(aarch64-page) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
  Ready @15c
  TopQ.A BotLatency SU(12) 2c
  *** Max MOps 1 at cycle 15
Cycle: 16 TopQ.A
TopQ.A @16c
  Retired: 16
  Executed: 16c
  Critical: 16c, 16 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 19 29 25 3 38 39 21 11 22 5 13 
  TopQ.A RemainingLatency 0 + 16c > CritPath 5
  Cand SU(19) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(19) renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, 0, debug-location !96; mainft.c:91:5
  Ready @16c
  TopQ.A BotLatency SU(19) 2c
  *** Max MOps 1 at cycle 16
Cycle: 17 TopQ.A
TopQ.A @17c
  Retired: 17
  Executed: 17c
  Critical: 17c, 17 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 29 25 3 38 39 21 11 22 5 
  TopQ.A RemainingLatency 0 + 17c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(29) TOP-PATH                  2 cycles 
  Cand SU(21) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(21) renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, 0, debug-location !96; mainft.c:91:5
  Ready @17c
  TopQ.A BotLatency SU(21) 2c
  *** Max MOps 1 at cycle 17
Cycle: 18 TopQ.A
TopQ.A @18c
  Retired: 18
  Executed: 18c
  Critical: 18c, 18 MOps
  ExpectedLatency: 1c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 29 25 3 38 39 5 11 22 32 
  TopQ.A RemainingLatency 0 + 18c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(29) TOP-PATH                  2 cycles 
  Cand SU(22) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(22) STPXi renamable $x16, renamable $x8, $sp, 9, debug-location !96 :: (store 8 into stack + 80), (store 8 into stack + 72); mainft.c:91:5
  Ready @18c
  TopQ.A TopLatency SU(22) 2c
  TopQ.A BotLatency SU(22) 2c
  *** Max MOps 1 at cycle 18
Cycle: 19 TopQ.A
TopQ.A @19c
  Retired: 19
  Executed: 19c
  Critical: 19c, 19 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 29 25 3 38 39 5 11 32 27 23 
  TopQ.A RemainingLatency 0 + 19c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(29) TOP-PATH                  2 cycles 
  Cand SU(27) ORDER                              
  Cand SU(23) ORDER                              
Pick Top ORDER     
Scheduling SU(23) $x8 = ADRP target-flags(aarch64-page) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
  Ready @19c
  TopQ.A BotLatency SU(23) 2c
  *** Max MOps 1 at cycle 19
Cycle: 20 TopQ.A
TopQ.A @20c
  Retired: 20
  Executed: 20c
  Critical: 20c, 20 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 29 25 3 38 39 5 11 32 27 24 
  TopQ.A RemainingLatency 0 + 20c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(29) TOP-PATH                  2 cycles 
  Cand SU(27) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(27) $x16 = ADRP target-flags(aarch64-page) @mainft__str_7___________, debug-location !96; mainft.c:91:5
  Ready @20c
  TopQ.A BotLatency SU(27) 2c
  *** Max MOps 1 at cycle 20
Cycle: 21 TopQ.A
TopQ.A @21c
  Retired: 21
  Executed: 21c
  Critical: 21c, 21 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 29 25 3 38 39 5 11 32 24 28 
  TopQ.A RemainingLatency 0 + 21c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(29) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(29) STPXi renamable $x4, renamable $x0, $sp, 5, debug-location !96 :: (store 8 into stack + 48), (store 8 into stack + 40); mainft.c:91:5
  Ready @21c
  TopQ.A BotLatency SU(29) 2c
  *** Max MOps 1 at cycle 21
Cycle: 22 TopQ.A
TopQ.A @22c
  Retired: 22
  Executed: 22c
  Critical: 22c, 22 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 28 25 3 38 39 5 11 32 24 36 30 
  TopQ.A RemainingLatency 0 + 22c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(11) ORDER                              
  Cand SU(30) TOP-PATH                  2 cycles 
Pick Top TOP-PATH  
Scheduling SU(30) $x0 = ADRP target-flags(aarch64-page) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
  Ready @22c
  TopQ.A BotLatency SU(30) 2c
  *** Max MOps 1 at cycle 22
Cycle: 23 TopQ.A
TopQ.A @23c
  Retired: 23
  Executed: 23c
  Critical: 23c, 23 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 28 25 3 38 39 5 11 32 24 36 31 
  TopQ.A RemainingLatency 0 + 23c > CritPath 5
  Cand SU(13) ORDER                              
  Cand SU(11) ORDER                              
Pick Top ORDER     
Scheduling SU(11) renamable $x17 = ADDXri $x17, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, 0, debug-location !96; mainft.c:91:5
  Ready @23c
  *** Max MOps 1 at cycle 23
Cycle: 24 TopQ.A
TopQ.A @24c
  Retired: 24
  Executed: 24c
  Critical: 24c, 24 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 13 28 25 3 38 39 5 31 32 24 36 
  TopQ.A RemainingLatency 0 + 24c > CritPath 5
  Cand SU(13) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(13) renamable $x18 = ADDXri $x18, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, 0, debug-location !96; mainft.c:91:5
  Ready @24c
  TopQ.A BotLatency SU(13) 1c
  *** Max MOps 1 at cycle 24
Cycle: 25 TopQ.A
TopQ.A @25c
  Retired: 25
  Executed: 25c
  Critical: 25c, 25 MOps
  ExpectedLatency: 2c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 28 25 3 38 39 5 31 32 24 26 
  TopQ.A RemainingLatency 0 + 25c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(28) ORDER                              
  Cand SU(24) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(24) renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, 0, debug-location !96; mainft.c:91:5
  Ready @25c
  TopQ.A TopLatency SU(24) 3c
  TopQ.A BotLatency SU(24) 1c
  *** Max MOps 1 at cycle 25
Cycle: 26 TopQ.A
TopQ.A @26c
  Retired: 26
  Executed: 26c
  Critical: 26c, 26 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 28 25 3 38 39 5 31 32 26 33 
  TopQ.A RemainingLatency 0 + 26c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(28) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(28) renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, 0, debug-location !96; mainft.c:91:5
  Ready @26c
  TopQ.A BotLatency SU(28) 1c
  *** Max MOps 1 at cycle 26
Cycle: 27 TopQ.A
TopQ.A @27c
  Retired: 27
  Executed: 27c
  Critical: 27c, 27 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 33 25 3 38 39 5 31 32 26 37 
  TopQ.A RemainingLatency 0 + 27c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(31) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(31) $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, 0, debug-location !96; mainft.c:91:5
  Ready @27c
  TopQ.A BotLatency SU(31) 1c
  *** Max MOps 1 at cycle 27
Cycle: 28 TopQ.A
TopQ.A @28c
  Retired: 28
  Executed: 28c
  Critical: 28c, 28 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 33 25 3 38 39 5 37 32 26 
  TopQ.A RemainingLatency 0 + 28c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(32) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(32) STPXi renamable $x3, renamable $x2, $sp, 3, debug-location !96 :: (store 8 into stack + 32), (store 8 into stack + 24); mainft.c:91:5
  Ready @28c
  TopQ.A BotLatency SU(32) 1c
  *** Max MOps 1 at cycle 28
Cycle: 29 TopQ.A
TopQ.A @29c
  Retired: 29
  Executed: 29c
  Critical: 29c, 29 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 33 25 3 38 39 5 37 26 35 34 
  TopQ.A RemainingLatency 0 + 29c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(35) ORDER                              
  Cand SU(34) ORDER                              
Pick Top ORDER     
Scheduling SU(34) $w2 = MOVZWi 512, 0, debug-location !96; mainft.c:91:5
  Ready @29c
  TopQ.A BotLatency SU(34) 1c
  *** Max MOps 1 at cycle 29
Cycle: 30 TopQ.A
TopQ.A @30c
  Retired: 30
  Executed: 30c
  Critical: 30c, 30 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 33 25 3 38 39 5 37 26 35 
  TopQ.A RemainingLatency 0 + 30c > CritPath 5
  Cand SU(36) ORDER                              
  Cand SU(35) ORDER                              
Pick Top ORDER     
Scheduling SU(35) $w3 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  Ready @30c
  TopQ.A BotLatency SU(35) 1c
  *** Max MOps 1 at cycle 30
Cycle: 31 TopQ.A
TopQ.A @31c
  Retired: 31
  Executed: 31c
  Critical: 31c, 31 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 36 33 25 3 38 39 5 37 26 
  TopQ.A RemainingLatency 0 + 31c > CritPath 5
  Cand SU(36) ORDER                              
Pick Top TOP-PATH  
Scheduling SU(36) $w4 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
  Ready @31c
  TopQ.A BotLatency SU(36) 1c
  *** Max MOps 1 at cycle 31
Cycle: 32 TopQ.A
TopQ.A @32c
  Retired: 32
  Executed: 32c
  Critical: 32c, 32 MOps
  ExpectedLatency: 3c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 25 3 38 39 5 37 
  TopQ.A RemainingLatency 0 + 32c > CritPath 5
  Cand SU(26) ORDER                              
  Cand SU(25) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(38) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(38) $w1 = ORRWrs $wzr, $w20, 0, debug-location !96; mainft.c:91:5
  Ready @32c
  TopQ.A TopLatency SU(38) 4c
  TopQ.A BotLatency SU(38) 1c
  *** Max MOps 1 at cycle 32
Cycle: 33 TopQ.A
TopQ.A @33c
  Retired: 33
  Executed: 33c
  Critical: 33c, 33 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 25 3 37 39 5 
  TopQ.A RemainingLatency 0 + 33c > CritPath 5
  Cand SU(26) ORDER                              
  Cand SU(25) ORDER                              
  Cand SU(3) ORDER                              
  Cand SU(39) TOP-PATH                  1 cycles 
Pick Top TOP-PATH  
Scheduling SU(39) $w5 = ORRWrs $wzr, $w19, 0, debug-location !96; mainft.c:91:5
  Ready @33c
  TopQ.A BotLatency SU(39) 1c
  *** Max MOps 1 at cycle 33
Cycle: 34 TopQ.A
TopQ.A @34c
  Retired: 34
  Executed: 34c
  Critical: 34c, 34 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 25 3 37 5 
  TopQ.A RemainingLatency 0 + 34c > CritPath 5
  Cand SU(26) ORDER                              
  Cand SU(25) ORDER                              
  Cand SU(3) ORDER                              
Pick Top ORDER     
Scheduling SU(3) STPDi renamable $d1, renamable $d0, $sp, 11 :: (store 8 into %stack.10), (store 8 into %stack.11)
  Ready @34c
  *** Max MOps 1 at cycle 34
Cycle: 35 TopQ.A
TopQ.A @35c
  Retired: 35
  Executed: 35c
  Critical: 35c, 35 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 25 5 37 
  TopQ.A RemainingLatency 0 + 35c > CritPath 5
  Cand SU(26) ORDER                              
  Cand SU(25) ORDER                              
  Cand SU(5) ORDER                              
Pick Top ORDER     
Scheduling SU(5) STURWi renamable $w6, $fp, -88 :: (store 4 into %stack.9)
  Ready @35c
  *** Max MOps 1 at cycle 35
Cycle: 36 TopQ.A
TopQ.A @36c
  Retired: 36
  Executed: 36c
  Critical: 36c, 36 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 25 37 
  TopQ.A RemainingLatency 0 + 36c > CritPath 5
  Cand SU(26) ORDER                              
  Cand SU(25) ORDER                              
Pick Top ORDER     
Scheduling SU(25) STRWui renamable $w6, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
  Ready @36c
  *** Max MOps 1 at cycle 36
Cycle: 37 TopQ.A
TopQ.A @37c
  Retired: 37
  Executed: 37c
  Critical: 37c, 37 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 26 33 37 
  TopQ.A RemainingLatency 0 + 37c > CritPath 5
  Cand SU(26) ORDER                              
Pick Top ORDER     
Scheduling SU(26) STPXi renamable $x18, renamable $x17, $sp, 7, debug-location !96 :: (store 8 into stack + 64), (store 8 into stack + 56); mainft.c:91:5
  Ready @37c
  *** Max MOps 1 at cycle 37
Cycle: 38 TopQ.A
TopQ.A @38c
  Retired: 38
  Executed: 38c
  Critical: 38c, 38 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 37 33 
  TopQ.A RemainingLatency 0 + 38c > CritPath 5
  Cand SU(37) ORDER                              
  Cand SU(33) ORDER                              
Pick Top ORDER     
Scheduling SU(33) STRXui renamable $x8, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
  Ready @38c
  *** Max MOps 1 at cycle 38
Cycle: 39 TopQ.A
TopQ.A @39c
  Retired: 39
  Executed: 39c
  Critical: 39c, 39 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 37 
Pick Top ONLY1     
Scheduling SU(37) STRXui renamable $x16, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5
  Ready @39c
  *** Max MOps 1 at cycle 39
Cycle: 40 TopQ.A
TopQ.A @40c
  Retired: 40
  Executed: 40c
  Critical: 40c, 40 MOps
  ExpectedLatency: 4c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.6 ***
SU(0):   renamable $w20 = LDURSBWi $fp, -48, debug-location !91 :: (dereferenceable load 1 from %ir.Class, align 4); mainft.c:91:25
SU(1):   renamable $w19 = LDURWi $fp, -44, debug-location !92 :: (dereferenceable load 4 from %ir.niter); mainft.c:91:44
SU(2):   renamable $d1, renamable $d0 = LDPDi $fp, -8, debug-location !93 :: (dereferenceable load 8 from %ir.total_time), (dereferenceable load 8 from %ir.mflops); mainft.c:91:51
SU(4):   renamable $w6 = LDURWi $fp, -68, debug-location !95 :: (dereferenceable load 4 from %ir.verified); mainft.c:92:47
SU(6):   $x8 = ADRP target-flags(aarch64-page) @mainft__str_16_randdp_, debug-location !96; mainft.c:91:5
SU(8):   $x16 = ADRP target-flags(aarch64-page) @mainft__str_15__O3__mcmod, debug-location !96; mainft.c:91:5
SU(14):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_12__lm_, debug-location !96; mainft.c:91:5
SU(16):   $x4 = ADRP target-flags(aarch64-page) @mainft__str_11___CC__, debug-location !96; mainft.c:91:5
SU(7):   renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_16_randdp_, 0, debug-location !96; mainft.c:91:5
SU(9):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_15__O3__mcmod, 0, debug-location !96; mainft.c:91:5
SU(15):   renamable $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_12__lm_, 0, debug-location !96; mainft.c:91:5
SU(17):   renamable $x4 = ADDXri $x4, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_11___CC__, 0, debug-location !96; mainft.c:91:5
SU(18):   $x2 = ADRP target-flags(aarch64-page) @mainft__str_10_gcc_, debug-location !96; mainft.c:91:5
SU(20):   $x3 = ADRP target-flags(aarch64-page) @mainft__str_9_03_Nov_201, debug-location !96; mainft.c:91:5
SU(10):   $x17 = ADRP target-flags(aarch64-page) @mainft__str_14__g__Wall__, debug-location !96; mainft.c:91:5
SU(12):   $x18 = ADRP target-flags(aarch64-page) @mainft__str_13__I___commo, debug-location !96; mainft.c:91:5
SU(19):   renamable $x2 = ADDXri $x2, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_10_gcc_, 0, debug-location !96; mainft.c:91:5
SU(21):   renamable $x3 = ADDXri $x3, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_9_03_Nov_201, 0, debug-location !96; mainft.c:91:5
SU(22):   STPXi renamable $x16, renamable $x8, $sp, 9, debug-location !96 :: (store 8 into stack + 80), (store 8 into stack + 72); mainft.c:91:5
SU(23):   $x8 = ADRP target-flags(aarch64-page) @mainft__str_8_3_3_1_, debug-location !96; mainft.c:91:5
SU(27):   $x16 = ADRP target-flags(aarch64-page) @mainft__str_7___________, debug-location !96; mainft.c:91:5
SU(29):   STPXi renamable $x4, renamable $x0, $sp, 5, debug-location !96 :: (store 8 into stack + 48), (store 8 into stack + 40); mainft.c:91:5
SU(30):   $x0 = ADRP target-flags(aarch64-page) @mainft__str_6_FT_, debug-location !96; mainft.c:91:5
SU(11):   renamable $x17 = ADDXri $x17, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_14__g__Wall__, 0, debug-location !96; mainft.c:91:5
SU(13):   renamable $x18 = ADDXri $x18, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_13__I___commo, 0, debug-location !96; mainft.c:91:5
SU(24):   renamable $x8 = ADDXri $x8, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_8_3_3_1_, 0, debug-location !96; mainft.c:91:5
SU(28):   renamable $x16 = ADDXri $x16, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_7___________, 0, debug-location !96; mainft.c:91:5
SU(31):   $x0 = ADDXri $x0, target-flags(aarch64-pageoff, aarch64-nc) @mainft__str_6_FT_, 0, debug-location !96; mainft.c:91:5
SU(32):   STPXi renamable $x3, renamable $x2, $sp, 3, debug-location !96 :: (store 8 into stack + 32), (store 8 into stack + 24); mainft.c:91:5
SU(34):   $w2 = MOVZWi 512, 0, debug-location !96; mainft.c:91:5
SU(35):   $w3 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
SU(36):   $w4 = MOVZWi 256, 0, debug-location !96; mainft.c:91:5
SU(38):   $w1 = ORRWrs $wzr, $w20, 0, debug-location !96; mainft.c:91:5
SU(39):   $w5 = ORRWrs $wzr, $w19, 0, debug-location !96; mainft.c:91:5
SU(3):   STPDi renamable $d1, renamable $d0, $sp, 11 :: (store 8 into %stack.10), (store 8 into %stack.11)
SU(5):   STURWi renamable $w6, $fp, -88 :: (store 4 into %stack.9)
SU(25):   STRWui renamable $w6, $sp, 2, debug-location !96 :: (store 4 into stack + 8); mainft.c:91:5
SU(26):   STPXi renamable $x18, renamable $x17, $sp, 7, debug-location !96 :: (store 8 into stack + 64), (store 8 into stack + 56); mainft.c:91:5
SU(33):   STRXui renamable $x8, $sp, 2, debug-location !96 :: (store 8 into stack + 16); mainft.c:91:5
SU(37):   STRXui renamable $x16, $sp, 0, debug-location !96 :: (store 8 into stack); mainft.c:91:5

Fixup kills for %bb.6
Before MISched:
# Machine code for function getclass: NoPHIs, TracksLiveness

bb.0.entry:
  $w8 = MOVi32imm 66, debug-location !102; mainft.c:115:9
  RET_ReallyLR implicit killed $w8, debug-location !102; mainft.c:115:9

# End machine code for function getclass.

********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
# Machine code for function getclass: NoPHIs, TracksLiveness

0B	bb.0.entry:
32B	  $w8 = MOVi32imm 66, debug-location !102; mainft.c:115:9
48B	  RET_ReallyLR implicit killed $w8, debug-location !102; mainft.c:115:9

# End machine code for function getclass.

Before post-MI-sched:
# Machine code for function getclass: NoPHIs, TracksLiveness, NoVRegs
Frame Objects:
  fi#0: size=8, align=8, at location [SP-24]
  fi#1: size=8, align=8, at location [SP-8]
  fi#2: size=8, align=8, at location [SP-16]

bb.0.entry:
  liveins: $lr
  $sp = frame-setup SUBXri $sp, 32, 0
  frame-setup STPXi killed $fp, killed $lr, $sp, 2 :: (store 8 into %stack.2), (store 8 into %stack.1)
  $fp = frame-setup ADDXri $sp, 16, 0
  frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  frame-setup CFI_INSTRUCTION offset $w30, -8, debug-location !102; mainft.c:115:9
  frame-setup CFI_INSTRUCTION offset $w29, -16, debug-location !102; mainft.c:115:9
  $w8 = MOVZWi 66, 0, debug-location !102; mainft.c:115:9
  $fp, $lr = frame-destroy LDPXi $sp, 2, debug-location !102 :: (load 8 from %stack.2), (load 8 from %stack.1); mainft.c:115:9
  $sp = frame-destroy ADDXri $sp, 32, 0, debug-location !102; mainft.c:115:9
  RET undef $lr, implicit killed $w8, debug-location !102; mainft.c:115:9

# End machine code for function getclass.

********** MI Scheduling **********
getclass:%bb.0 entry
  From: $w8 = MOVZWi 66, 0, debug-location !102; mainft.c:115:9
    To: $sp = frame-destroy ADDXri $sp, 32, 0, debug-location !102; mainft.c:115:9
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   $w8 = MOVZWi 66, 0, debug-location !102; mainft.c:115:9
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
SU(1):   $fp, $lr = frame-destroy LDPXi $sp, 2, debug-location !102 :: (load 8 from %stack.2), (load 8 from %stack.1); mainft.c:115:9
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 4
  Depth              : 0
  Height             : 3
  Successors:
    ExitSU: Ord  Latency=3 Artificial
ExitSU:   $sp = frame-destroy ADDXri $sp, 32, 0, debug-location !102; mainft.c:115:9
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 3
  Height             : 0
  Predecessors:
    SU(1): Ord  Latency=3 Artificial
Disabled scoreboard hazard recognizer
Critical Path: (PGS-RR) 3
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 1 
  TopQ.A RemainingLatency 0 + 0c > CritPath 3
  Cand SU(0) ORDER                              
  Cand SU(1) TOP-PATH                  3 cycles 
Pick Top TOP-PATH  
Scheduling SU(1) $fp, $lr = frame-destroy LDPXi $sp, 2, debug-location !102 :: (load 8 from %stack.2), (load 8 from %stack.1); mainft.c:115:9
  Ready @0c
  TopQ.A BotLatency SU(1) 3c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) $w8 = MOVZWi 66, 0, debug-location !102; mainft.c:115:9
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(1):   $fp, $lr = frame-destroy LDPXi $sp, 2, debug-location !102 :: (load 8 from %stack.2), (load 8 from %stack.1); mainft.c:115:9
SU(0):   $w8 = MOVZWi 66, 0, debug-location !102; mainft.c:115:9

********** MI Scheduling **********
getclass:%bb.0 entry
  From: frame-setup STPXi killed $fp, killed $lr, $sp, 2 :: (store 8 into %stack.2), (store 8 into %stack.1)
    To: frame-setup CFI_INSTRUCTION def_cfa $w29, 16
 RegionInstrs: 2
ScheduleDAGMI::schedule starting
SU(0):   frame-setup STPXi $fp, $lr, $sp, 2 :: (store 8 into %stack.2), (store 8 into %stack.1)
  # preds left       : 0
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Successors:
    SU(1): Anti Latency=0
SU(1):   $fp = frame-setup ADDXri $sp, 16, 0
  # preds left       : 1
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(0): Anti Latency=0
ExitSU:   frame-setup CFI_INSTRUCTION def_cfa $w29, 16
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
Critical Path: (PGS-RR) 0
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 0 
Pick Top ONLY1     
Scheduling SU(0) frame-setup STPXi $fp, $lr, $sp, 2 :: (store 8 into %stack.2), (store 8 into %stack.1)
  Ready @0c
  *** Max MOps 1 at cycle 0
Cycle: 1 TopQ.A
TopQ.A @1c
  Retired: 1
  Executed: 1c
  Critical: 1c, 1 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
Queue TopQ.P: 
Queue TopQ.A: 1 
Pick Top ONLY1     
Scheduling SU(1) $fp = frame-setup ADDXri $sp, 16, 0
  Ready @1c
  *** Max MOps 1 at cycle 1
Cycle: 2 TopQ.A
TopQ.A @2c
  Retired: 2
  Executed: 2c
  Critical: 2c, 2 MOps
  ExpectedLatency: 0c
  - Latency limited.
** ScheduleDAGMI::schedule picking next node
*** Final schedule for %bb.0 ***
SU(0):   frame-setup STPXi $fp, $lr, $sp, 2 :: (store 8 into %stack.2), (store 8 into %stack.1)
SU(1):   $fp = frame-setup ADDXri $sp, 16, 0

Fixup kills for %bb.0
